import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest8 {

    public static boolean debug = false;

    @Test
    public void test04001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04001");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder14.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = builder9.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLog(log27);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder33 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        log35.log("");
        log35.log("");
        retrofit.RestAdapter.Builder builder41 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder42 = builder4.setLog(log35);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        log43.log("hi!");
        retrofit.RestAdapter.Builder builder46 = builder42.setLog(log43);
        retrofit.Profiler profiler47 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder48 = builder42.setProfiler(profiler47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder46);
    }

    @Test
    public void test04002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04002");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = builder6.build();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        restAdapter7.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLog(log15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder20 = builder18.setServer("hi!");
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLog(log22);
        log22.log("");
        retrofit.RestAdapter.Builder builder26 = builder18.setLog(log22);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder37.setLog(log40);
        retrofit.RestAdapter.Builder builder42 = builder34.setLog(log40);
        retrofit.RestAdapter.Builder builder43 = builder29.setLog(log40);
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLog(log45);
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLog(log48);
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder54.setLog(log57);
        retrofit.RestAdapter.Builder builder59 = builder51.setLog(log57);
        retrofit.RestAdapter.Builder builder60 = builder44.setLog(log57);
        retrofit.RestAdapter.Builder builder61 = builder29.setLog(log57);
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder64 = builder62.setLog(log63);
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder67 = builder61.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder68 = builder18.setLogLevel(logLevel65);
        restAdapter7.setLogLevel(logLevel65);
        retrofit.RestAdapter.LogLevel logLevel70 = restAdapter7.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel71 = restAdapter7.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel72 = restAdapter7.getLogLevel();
        java.lang.Class<?> wildcardClass73 = restAdapter7.getClass();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(restAdapter7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test04003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04003");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder14.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = builder9.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLog(log27);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder33 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        log35.log("");
        log35.log("");
        retrofit.RestAdapter.Builder builder41 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder42 = builder4.setLog(log35);
        retrofit.RestAdapter restAdapter43 = builder42.build();
        retrofit.RestAdapter restAdapter44 = builder42.build();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.Builder builder48 = builder42.setLog(log46);
        retrofit.RestAdapter.Builder builder50 = builder42.setServer("hi!");
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder58 = builder56.setLogLevel(logLevel57);
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder61 = builder59.setLog(log60);
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder63 = builder61.setLogLevel(logLevel62);
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder65 = builder61.setLog(log64);
        retrofit.RestAdapter.Builder builder66 = builder58.setLog(log64);
        retrofit.RestAdapter.Builder builder67 = builder53.setLog(log64);
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder68.setLog(log69);
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log72 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder73 = builder71.setLog(log72);
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder75 = builder73.setLogLevel(logLevel74);
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log77 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder78 = builder76.setLog(log77);
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder80 = builder78.setLogLevel(logLevel79);
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder82 = builder78.setLog(log81);
        retrofit.RestAdapter.Builder builder83 = builder75.setLog(log81);
        retrofit.RestAdapter.Builder builder84 = builder68.setLog(log81);
        retrofit.RestAdapter.Builder builder85 = builder53.setLog(log81);
        retrofit.RestAdapter.Builder builder86 = builder42.setLog(log81);
        retrofit.RestAdapter.Builder builder88 = builder86.setServer("hi!");
        retrofit.client.Client client89 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder90 = builder88.setClient(client89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(restAdapter43);
        org.junit.Assert.assertNotNull(restAdapter44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(log77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder88);
    }

    @Test
    public void test04004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04004");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLog(log21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder27.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder17.setLog(log30);
        retrofit.RestAdapter.Builder builder34 = builder2.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLog(log42);
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLog(log45);
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder53 = builder51.setLogLevel(logLevel52);
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder51.setLog(log54);
        retrofit.RestAdapter.Builder builder56 = builder48.setLog(log54);
        retrofit.RestAdapter.Builder builder57 = builder43.setLog(log54);
        log54.log("");
        log54.log("");
        retrofit.RestAdapter.Builder builder62 = builder40.setLog(log54);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLog(log64);
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder67 = builder65.setLogLevel(logLevel66);
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder68.setLog(log69);
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder72 = builder70.setLogLevel(logLevel71);
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder74 = builder70.setLog(log73);
        retrofit.RestAdapter.Builder builder75 = builder67.setLog(log73);
        log73.log("hi!");
        log73.log("hi!");
        log73.log("hi!");
        retrofit.RestAdapter.Builder builder82 = builder62.setLog(log73);
        retrofit.RestAdapter.Builder builder84 = builder82.setServer("hi!");
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log86 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder87 = builder85.setLog(log86);
        retrofit.RestAdapter.LogLevel logLevel88 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder89 = builder85.setLogLevel(logLevel88);
        boolean boolean90 = logLevel88.log();
        retrofit.RestAdapter.Builder builder91 = builder82.setLogLevel(logLevel88);
        retrofit.RestAdapter restAdapter92 = builder82.build();
        java.lang.Class<?> wildcardClass93 = restAdapter92.getClass();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(log86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertTrue("'" + logLevel88 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel88.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(restAdapter92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test04005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04005");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log14 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLog(log14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder18.setLog(log19);
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder22 = builder20.setLogLevel(logLevel21);
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder20.setLog(log23);
        retrofit.RestAdapter.Builder builder25 = builder17.setLog(log23);
        retrofit.RestAdapter.Builder builder27 = builder17.setServer("hi!");
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLog(log29);
        log29.log("");
        retrofit.RestAdapter.Builder builder33 = builder17.setLog(log29);
        retrofit.RestAdapter.Builder builder35 = builder33.setServer("hi!");
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLog(log37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("hi!");
        retrofit.RestAdapter restAdapter43 = builder42.build();
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLog(log45);
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        restAdapter43.setLogLevel(logLevel47);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLog(log51);
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder54 = builder52.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder56 = builder54.setServer("hi!");
        retrofit.RestAdapter restAdapter57 = builder56.build();
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder60 = builder58.setLog(log59);
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder62 = builder60.setLogLevel(logLevel61);
        restAdapter57.setLogLevel(logLevel61);
        restAdapter43.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLog(log66);
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder69 = builder67.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder71 = builder69.setServer("hi!");
        retrofit.RestAdapter restAdapter72 = builder71.build();
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder75 = builder73.setLog(log74);
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder77 = builder75.setLogLevel(logLevel76);
        restAdapter72.setLogLevel(logLevel76);
        restAdapter43.setLogLevel(logLevel76);
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter43.setLogLevel(logLevel80);
        retrofit.RestAdapter.Builder builder82 = builder35.setLogLevel(logLevel80);
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder84 = builder82.setLogLevel(logLevel83);
        boolean boolean85 = logLevel83.log();
        retrofit.RestAdapter.Builder builder86 = builder12.setLogLevel(logLevel83);
        retrofit.Server server87 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder88 = builder86.setServer(server87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(restAdapter43);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(restAdapter57);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(restAdapter72);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(builder86);
    }

    @Test
    public void test04006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04006");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = builder6.build();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder14 = builder12.setServer("hi!");
        retrofit.RestAdapter restAdapter15 = builder14.build();
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLog(log17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        restAdapter15.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLog(log23);
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder28 = builder26.setServer("hi!");
        retrofit.RestAdapter restAdapter29 = builder28.build();
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        restAdapter29.setLogLevel(logLevel33);
        restAdapter15.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter15.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter15.getLogLevel();
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLog(log48);
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder49.setLog(log52);
        retrofit.RestAdapter.Builder builder54 = builder46.setLog(log52);
        retrofit.RestAdapter.Builder builder55 = builder41.setLog(log52);
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLog(log57);
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder60 = builder56.setLog(log59);
        retrofit.RestAdapter.Builder builder61 = builder55.setLog(log59);
        retrofit.RestAdapter.Builder builder63 = builder55.setServer("hi!");
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLog(log65);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder68 = builder66.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder71 = builder69.setLog(log70);
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder73 = builder71.setLogLevel(logLevel72);
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder75 = builder71.setLog(log74);
        retrofit.RestAdapter.Builder builder76 = builder68.setLog(log74);
        retrofit.RestAdapter.Builder builder78 = builder68.setServer("hi!");
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log80 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder81 = builder79.setLog(log80);
        retrofit.RestAdapter.LogLevel logLevel82 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder83 = builder81.setLogLevel(logLevel82);
        retrofit.RestAdapter.Log log84 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder85 = builder81.setLog(log84);
        retrofit.RestAdapter.Builder builder86 = builder68.setLog(log84);
        retrofit.RestAdapter.LogLevel logLevel87 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder88 = builder68.setLogLevel(logLevel87);
        retrofit.RestAdapter.Builder builder89 = builder55.setLogLevel(logLevel87);
        retrofit.RestAdapter restAdapter90 = builder55.build();
        retrofit.RestAdapter.LogLevel logLevel91 = restAdapter90.getLogLevel();
        restAdapter15.setLogLevel(logLevel91);
        retrofit.RestAdapter.LogLevel logLevel93 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter15.setLogLevel(logLevel93);
        retrofit.RestAdapter.LogLevel logLevel95 = restAdapter15.getLogLevel();
        retrofit.RestAdapter.Builder builder96 = builder6.setLogLevel(logLevel95);
        retrofit.RestAdapter restAdapter97 = builder6.build();
        java.lang.Class<?> wildcardClass98 = restAdapter97.getClass();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(restAdapter7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(restAdapter15);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(restAdapter29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(log80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(log84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(restAdapter90);
        org.junit.Assert.assertTrue("'" + logLevel91 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel91.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel93 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel93.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel95 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel95.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder96);
        org.junit.Assert.assertNotNull(restAdapter97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test04007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04007");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder22.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("hi!");
        retrofit.RestAdapter restAdapter32 = builder31.build();
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLog(log34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        restAdapter32.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder45 = builder43.setServer("hi!");
        retrofit.RestAdapter restAdapter46 = builder45.build();
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLog(log48);
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        restAdapter46.setLogLevel(logLevel50);
        restAdapter32.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder58 = builder56.setLogLevel(logLevel57);
        retrofit.RestAdapter.Builder builder60 = builder58.setServer("hi!");
        retrofit.RestAdapter restAdapter61 = builder60.build();
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder64 = builder62.setLog(log63);
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        restAdapter61.setLogLevel(logLevel65);
        restAdapter32.setLogLevel(logLevel65);
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter32.setLogLevel(logLevel69);
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log72 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder73 = builder71.setLog(log72);
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder75 = builder73.setLogLevel(logLevel74);
        retrofit.RestAdapter.Builder builder77 = builder75.setServer("hi!");
        retrofit.RestAdapter restAdapter78 = builder77.build();
        retrofit.RestAdapter restAdapter79 = builder77.build();
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder82 = builder80.setLog(log81);
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder84 = builder80.setLogLevel(logLevel83);
        boolean boolean85 = logLevel83.log();
        restAdapter79.setLogLevel(logLevel83);
        restAdapter32.setLogLevel(logLevel83);
        retrofit.RestAdapter.Builder builder88 = builder22.setLogLevel(logLevel83);
        retrofit.Server server89 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder90 = builder22.setServer(server89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(restAdapter32);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(restAdapter46);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(restAdapter61);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(restAdapter78);
        org.junit.Assert.assertNotNull(restAdapter79);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(builder88);
    }

    @Test
    public void test04008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04008");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Log log7 = retrofit.RestAdapter.Log.NONE;
        log7.log("hi!");
        retrofit.RestAdapter.Builder builder10 = builder4.setLog(log7);
        retrofit.RestAdapter restAdapter11 = builder10.build();
        retrofit.Profiler profiler12 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder13 = builder10.setProfiler(profiler12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log7);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(restAdapter11);
    }

    @Test
    public void test04009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04009");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        log16.log("");
        retrofit.RestAdapter.Builder builder20 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("hi!");
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = builder27.setServer("hi!");
        retrofit.RestAdapter restAdapter30 = builder29.build();
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        restAdapter30.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder43 = builder41.setServer("hi!");
        retrofit.RestAdapter restAdapter44 = builder43.build();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        restAdapter44.setLogLevel(logLevel48);
        restAdapter30.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder58 = builder56.setServer("hi!");
        retrofit.RestAdapter restAdapter59 = builder58.build();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        restAdapter59.setLogLevel(logLevel63);
        restAdapter30.setLogLevel(logLevel63);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter30.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder69 = builder22.setLogLevel(logLevel67);
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder71 = builder69.setLogLevel(logLevel70);
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder74 = builder72.setLog(log73);
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder76 = builder74.setLogLevel(logLevel75);
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log78 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder79 = builder77.setLog(log78);
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder81 = builder79.setLogLevel(logLevel80);
        retrofit.RestAdapter.Log log82 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder83 = builder79.setLog(log82);
        retrofit.RestAdapter.Builder builder84 = builder76.setLog(log82);
        retrofit.RestAdapter.Builder builder86 = builder76.setServer("hi!");
        retrofit.RestAdapter.Builder builder87 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log88 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder89 = builder87.setLog(log88);
        retrofit.RestAdapter.LogLevel logLevel90 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder91 = builder89.setLogLevel(logLevel90);
        retrofit.RestAdapter.Log log92 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder93 = builder89.setLog(log92);
        retrofit.RestAdapter.Builder builder94 = builder76.setLog(log92);
        retrofit.RestAdapter.Builder builder95 = builder71.setLog(log92);
        retrofit.RestAdapter restAdapter96 = builder71.build();
        retrofit.Profiler profiler97 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder98 = builder71.setProfiler(profiler97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(restAdapter30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(restAdapter44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(log78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(log82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(log88);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertTrue("'" + logLevel90 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel90.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(log92);
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertNotNull(builder94);
        org.junit.Assert.assertNotNull(builder95);
        org.junit.Assert.assertNotNull(restAdapter96);
    }

    @Test
    public void test04010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04010");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.lang.String str7 = request6.getMethod();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.lang.String str9 = request6.getUrl();
        java.lang.String str10 = request6.getUrl();
        java.util.List<retrofit.client.Header> headerList11 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput12 = request6.getBody();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNull(typedOutput12);
    }

    @Test
    public void test04011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04011");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        log8.log("");
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log8);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter15 = builder14.build();
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLog(log17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("hi!");
        retrofit.RestAdapter restAdapter23 = builder22.build();
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        restAdapter23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = builder34.setServer("hi!");
        retrofit.RestAdapter restAdapter37 = builder36.build();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLog(log39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder40.setLogLevel(logLevel41);
        restAdapter37.setLogLevel(logLevel41);
        restAdapter23.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder51 = builder49.setServer("hi!");
        retrofit.RestAdapter restAdapter52 = builder51.build();
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLog(log54);
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder57 = builder55.setLogLevel(logLevel56);
        restAdapter52.setLogLevel(logLevel56);
        restAdapter23.setLogLevel(logLevel56);
        retrofit.RestAdapter.Builder builder60 = builder14.setLogLevel(logLevel56);
        retrofit.RequestInterceptor requestInterceptor61 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder62 = builder60.setRequestInterceptor(requestInterceptor61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(restAdapter15);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(restAdapter23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(restAdapter37);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(restAdapter52);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder60);
    }

    @Test
    public void test04012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04012");
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        java.lang.String str13 = request12.getMethod();
        java.util.List<retrofit.client.Header> headerList14 = request12.getHeaders();
        java.util.List<retrofit.client.Header> headerList15 = request12.getHeaders();
        java.util.List<retrofit.client.Header> headerList16 = request12.getHeaders();
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("hi!", "hi!", headerList16, typedOutput17);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("", "hi!", headerList16, typedOutput19);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("hi!", "hi!", headerList16, typedOutput21);
        java.lang.String str23 = request22.getMethod();
        java.util.List<retrofit.client.Header> headerList24 = request22.getHeaders();
        java.lang.String str25 = request22.getMethod();
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(headerList16);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(headerList24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
    }

    @Test
    public void test04013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04013");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder14.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = builder9.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLog(log27);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder32.setLog(log35);
        log35.log("hi!");
        log35.log("");
        retrofit.RestAdapter.Builder builder41 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder42 = builder4.setLog(log35);
        retrofit.RequestInterceptor requestInterceptor43 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder44 = builder4.setRequestInterceptor(requestInterceptor43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
    }

    @Test
    public void test04014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04014");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder14.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = builder9.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLog(log27);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder33 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder40 = builder38.setServer("hi!");
        retrofit.RestAdapter restAdapter41 = builder40.build();
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        restAdapter41.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder54 = builder52.setServer("hi!");
        retrofit.RestAdapter restAdapter55 = builder54.build();
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLog(log57);
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder60 = builder58.setLogLevel(logLevel59);
        restAdapter55.setLogLevel(logLevel59);
        restAdapter41.setLogLevel(logLevel59);
        retrofit.RestAdapter.LogLevel logLevel63 = restAdapter41.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel64 = restAdapter41.getLogLevel();
        retrofit.RestAdapter.Builder builder65 = builder29.setLogLevel(logLevel64);
        boolean boolean66 = logLevel64.log();
        retrofit.RestAdapter.Builder builder67 = builder6.setLogLevel(logLevel64);
        retrofit.RestAdapter restAdapter68 = builder67.build();
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder71 = builder69.setLog(log70);
        retrofit.RestAdapter.Log log72 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder73 = builder69.setLog(log72);
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter.Builder builder75 = builder69.setLogLevel(logLevel74);
        retrofit.RestAdapter.Builder builder76 = builder67.setLogLevel(logLevel74);
        java.util.concurrent.Executor executor77 = null;
        java.util.concurrent.Executor executor78 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder79 = builder67.setExecutors(executor77, executor78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(restAdapter41);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(restAdapter55);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(restAdapter68);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder76);
    }

    @Test
    public void test04015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04015");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLog(log33);
        log33.log("");
        retrofit.RestAdapter.Builder builder37 = builder29.setLog(log33);
        retrofit.RestAdapter.Builder builder38 = builder24.setLog(log33);
        retrofit.RestAdapter restAdapter39 = builder24.build();
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.Builder builder46 = builder44.setServer("hi!");
        retrofit.RestAdapter restAdapter47 = builder46.build();
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter47.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel49 = restAdapter47.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel50 = restAdapter47.getLogLevel();
        retrofit.RestAdapter.Builder builder51 = builder24.setLogLevel(logLevel50);
        retrofit.RestAdapter restAdapter52 = builder51.build();
        retrofit.client.Client.Provider provider53 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder54 = builder51.setClient(provider53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(restAdapter39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(restAdapter47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(restAdapter52);
    }

    @Test
    public void test04016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04016");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        log8.log("");
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log8);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter15 = builder14.build();
        retrofit.RestAdapter restAdapter16 = builder14.build();
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder23 = builder21.setServer("hi!");
        retrofit.RestAdapter restAdapter24 = builder23.build();
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLog(log29);
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder32 = builder30.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLog(log34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder35.setLog(log38);
        retrofit.RestAdapter.Builder builder40 = builder32.setLog(log38);
        retrofit.RestAdapter.Builder builder41 = builder27.setLog(log38);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLog(log51);
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder54 = builder52.setLogLevel(logLevel53);
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder52.setLog(log55);
        retrofit.RestAdapter.Builder builder57 = builder49.setLog(log55);
        retrofit.RestAdapter.Builder builder58 = builder42.setLog(log55);
        retrofit.RestAdapter.Builder builder59 = builder27.setLog(log55);
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder65 = builder59.setLogLevel(logLevel63);
        restAdapter24.setLogLevel(logLevel63);
        boolean boolean67 = logLevel63.log();
        retrofit.RestAdapter.Builder builder68 = builder14.setLogLevel(logLevel63);
        retrofit.client.Client client69 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder70 = builder14.setClient(client69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(restAdapter15);
        org.junit.Assert.assertNotNull(restAdapter16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(restAdapter24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(builder68);
    }

    @Test
    public void test04017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04017");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder22.setServer("hi!");
        retrofit.RestAdapter.Builder builder26 = builder22.setServer("hi!");
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        log28.log("");
        log28.log("");
        retrofit.RestAdapter.Builder builder34 = builder22.setLog(log28);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLog(log39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder40.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder45.setLog(log48);
        retrofit.RestAdapter.Builder builder50 = builder42.setLog(log48);
        retrofit.RestAdapter.Builder builder51 = builder37.setLog(log48);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder57 = builder55.setLog(log56);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder59 = builder57.setLogLevel(logLevel58);
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder66 = builder62.setLog(log65);
        retrofit.RestAdapter.Builder builder67 = builder59.setLog(log65);
        retrofit.RestAdapter.Builder builder68 = builder52.setLog(log65);
        retrofit.RestAdapter.Builder builder69 = builder37.setLog(log65);
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder70.setLog(log71);
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder74 = builder72.setLogLevel(logLevel73);
        retrofit.RestAdapter.Builder builder75 = builder69.setLogLevel(logLevel73);
        boolean boolean76 = logLevel73.log();
        retrofit.RestAdapter.Builder builder77 = builder22.setLogLevel(logLevel73);
        retrofit.RequestInterceptor requestInterceptor78 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder79 = builder77.setRequestInterceptor(requestInterceptor78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(builder77);
    }

    @Test
    public void test04018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04018");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("hi!");
        retrofit.RestAdapter restAdapter32 = builder31.build();
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLog(log34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        restAdapter32.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder45 = builder43.setServer("hi!");
        retrofit.RestAdapter restAdapter46 = builder45.build();
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLog(log48);
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        restAdapter46.setLogLevel(logLevel50);
        restAdapter32.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder58 = builder56.setLogLevel(logLevel57);
        retrofit.RestAdapter.Builder builder60 = builder58.setServer("hi!");
        retrofit.RestAdapter restAdapter61 = builder60.build();
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder64 = builder62.setLog(log63);
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        restAdapter61.setLogLevel(logLevel65);
        restAdapter32.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder69 = builder16.setLogLevel(logLevel65);
        retrofit.RestAdapter restAdapter70 = builder69.build();
        retrofit.RestAdapter restAdapter71 = builder69.build();
        retrofit.RequestInterceptor requestInterceptor72 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder73 = builder69.setRequestInterceptor(requestInterceptor72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(restAdapter32);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(restAdapter46);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(restAdapter61);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(restAdapter70);
        org.junit.Assert.assertNotNull(restAdapter71);
    }

    @Test
    public void test04019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04019");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder4.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = builder27.setServer("hi!");
        retrofit.RestAdapter restAdapter30 = builder29.build();
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        restAdapter30.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder43 = builder41.setServer("hi!");
        retrofit.RestAdapter restAdapter44 = builder43.build();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        restAdapter44.setLogLevel(logLevel48);
        restAdapter30.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder58 = builder56.setServer("hi!");
        retrofit.RestAdapter restAdapter59 = builder58.build();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        restAdapter59.setLogLevel(logLevel63);
        restAdapter30.setLogLevel(logLevel63);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter30.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder69 = builder4.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder71 = builder69.setServer("hi!");
        retrofit.RestAdapter.Builder builder73 = builder69.setServer("hi!");
        retrofit.RestAdapter restAdapter74 = builder73.build();
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log76 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder77 = builder75.setLog(log76);
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log79 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder80 = builder78.setLog(log79);
        retrofit.RestAdapter.LogLevel logLevel81 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder82 = builder80.setLogLevel(logLevel81);
        retrofit.RestAdapter.Builder builder83 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log84 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder85 = builder83.setLog(log84);
        retrofit.RestAdapter.LogLevel logLevel86 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder87 = builder85.setLogLevel(logLevel86);
        retrofit.RestAdapter.Log log88 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder89 = builder85.setLog(log88);
        retrofit.RestAdapter.Builder builder90 = builder82.setLog(log88);
        retrofit.RestAdapter.Builder builder91 = builder77.setLog(log88);
        log88.log("");
        log88.log("hi!");
        retrofit.RestAdapter.Builder builder96 = builder73.setLog(log88);
        retrofit.Profiler profiler97 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder98 = builder96.setProfiler(profiler97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(restAdapter30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(restAdapter44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(restAdapter74);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(log84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(log88);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(builder96);
    }

    @Test
    public void test04020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04020");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder12.setServer("hi!");
        retrofit.RestAdapter.Builder builder16 = builder14.setServer("hi!");
        retrofit.RestAdapter.Builder builder18 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLog(log20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder21.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder25 = builder23.setServer("hi!");
        retrofit.RestAdapter restAdapter26 = builder25.build();
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        restAdapter26.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLog(log34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder39 = builder37.setServer("hi!");
        retrofit.RestAdapter restAdapter40 = builder39.build();
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLog(log42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        restAdapter40.setLogLevel(logLevel44);
        restAdapter26.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder54 = builder52.setServer("hi!");
        retrofit.RestAdapter restAdapter55 = builder54.build();
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLog(log57);
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder60 = builder58.setLogLevel(logLevel59);
        restAdapter55.setLogLevel(logLevel59);
        restAdapter26.setLogLevel(logLevel59);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter26.setLogLevel(logLevel63);
        retrofit.RestAdapter.LogLevel logLevel65 = restAdapter26.getLogLevel();
        retrofit.RestAdapter.Builder builder66 = builder16.setLogLevel(logLevel65);
        retrofit.client.Client client67 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder68 = builder66.setClient(client67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(restAdapter26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(restAdapter40);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(restAdapter55);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder66);
    }

    @Test
    public void test04021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04021");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder5.setLog(log8);
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLog(log21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder22.setLog(log25);
        retrofit.RestAdapter.Builder builder27 = builder19.setLog(log25);
        retrofit.RestAdapter.Builder builder28 = builder14.setLog(log25);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLog(log30);
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder29.setLog(log32);
        retrofit.RestAdapter.Builder builder34 = builder28.setLog(log32);
        retrofit.RestAdapter.Builder builder36 = builder28.setServer("hi!");
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder44.setLog(log47);
        retrofit.RestAdapter.Builder builder49 = builder41.setLog(log47);
        retrofit.RestAdapter.Builder builder51 = builder41.setServer("hi!");
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder54.setLog(log57);
        retrofit.RestAdapter.Builder builder59 = builder41.setLog(log57);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder61 = builder41.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder62 = builder28.setLogLevel(logLevel60);
        retrofit.RestAdapter restAdapter63 = builder28.build();
        retrofit.RestAdapter.LogLevel logLevel64 = restAdapter63.getLogLevel();
        retrofit.RestAdapter.Builder builder65 = builder11.setLogLevel(logLevel64);
        retrofit.RestAdapter.Builder builder66 = builder2.setLogLevel(logLevel64);
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log68 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder69 = builder67.setLog(log68);
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder71 = builder69.setLogLevel(logLevel70);
        retrofit.RestAdapter.Builder builder73 = builder71.setServer("hi!");
        retrofit.RestAdapter restAdapter74 = builder73.build();
        retrofit.RestAdapter.LogLevel logLevel75 = restAdapter74.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel76 = restAdapter74.getLogLevel();
        retrofit.RestAdapter.Builder builder77 = builder66.setLogLevel(logLevel76);
        retrofit.RequestInterceptor requestInterceptor78 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder79 = builder66.setRequestInterceptor(requestInterceptor78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(restAdapter63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(restAdapter74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder77);
    }

    @Test
    public void test04022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04022");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter restAdapter5 = builder2.build();
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log7 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder8 = builder6.setLog(log7);
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLog(log12);
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder13.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder10.setLog(log16);
        retrofit.RestAdapter.Builder builder20 = builder10.setServer("hi!");
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLog(log22);
        log22.log("");
        retrofit.RestAdapter.Builder builder26 = builder10.setLog(log22);
        log22.log("hi!");
        log22.log("");
        retrofit.RestAdapter.Builder builder31 = builder2.setLog(log22);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLog(log33);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder42.setLog(log45);
        retrofit.RestAdapter.Builder builder47 = builder39.setLog(log45);
        retrofit.RestAdapter.Builder builder48 = builder34.setLog(log45);
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder34.setLog(log49);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        log52.log("hi!");
        retrofit.RestAdapter.Builder builder56 = builder34.setLog(log52);
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLog(log57);
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder61 = builder59.setLog(log60);
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder63 = builder61.setLogLevel(logLevel62);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLog(log65);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder68 = builder66.setLogLevel(logLevel67);
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder66.setLog(log69);
        retrofit.RestAdapter.Builder builder71 = builder63.setLog(log69);
        log69.log("hi!");
        log69.log("hi!");
        log69.log("hi!");
        retrofit.RestAdapter.Builder builder78 = builder58.setLog(log69);
        log69.log("hi!");
        retrofit.RestAdapter.Builder builder81 = builder2.setLog(log69);
        retrofit.RestAdapter.Builder builder83 = builder81.setServer("hi!");
        retrofit.RequestInterceptor requestInterceptor84 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder85 = builder83.setRequestInterceptor(requestInterceptor84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(restAdapter5);
        org.junit.Assert.assertNotNull(log7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder83);
    }

    @Test
    public void test04023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04023");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        log10.log("");
        retrofit.RestAdapter.Builder builder14 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder19.setServer("hi!");
        retrofit.RestAdapter restAdapter22 = builder21.build();
        retrofit.RestAdapter restAdapter23 = builder21.build();
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder24.setLogLevel(logLevel27);
        boolean boolean29 = logLevel27.log();
        restAdapter23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder31 = builder14.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder33 = builder14.setServer("hi!");
        retrofit.RestAdapter.Builder builder35 = builder33.setServer("hi!");
        retrofit.RestAdapter restAdapter36 = builder33.build();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNotNull(restAdapter23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test04024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04024");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder4.setLog(log20);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder4.setLogLevel(logLevel23);
        retrofit.RestAdapter restAdapter25 = builder24.build();
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLog(log27);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLog(log30);
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder36.setLog(log39);
        retrofit.RestAdapter.Builder builder41 = builder33.setLog(log39);
        retrofit.RestAdapter.Builder builder42 = builder28.setLog(log39);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLog(log47);
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder57 = builder53.setLog(log56);
        retrofit.RestAdapter.Builder builder58 = builder50.setLog(log56);
        retrofit.RestAdapter.Builder builder59 = builder43.setLog(log56);
        retrofit.RestAdapter.Builder builder60 = builder28.setLog(log56);
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder63 = builder61.setLog(log62);
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder65 = builder63.setLogLevel(logLevel64);
        retrofit.RestAdapter.Builder builder66 = builder60.setLogLevel(logLevel64);
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log68 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder69 = builder67.setLog(log68);
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder70.setLog(log71);
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder74 = builder72.setLogLevel(logLevel73);
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log76 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder77 = builder75.setLog(log76);
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder79 = builder77.setLogLevel(logLevel78);
        retrofit.RestAdapter.Log log80 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder81 = builder77.setLog(log80);
        retrofit.RestAdapter.Builder builder82 = builder74.setLog(log80);
        retrofit.RestAdapter.Builder builder83 = builder69.setLog(log80);
        log80.log("");
        log80.log("");
        retrofit.RestAdapter.Builder builder88 = builder66.setLog(log80);
        log80.log("hi!");
        retrofit.RestAdapter.Builder builder91 = builder24.setLog(log80);
        retrofit.Profiler profiler92 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder93 = builder91.setProfiler(profiler92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(restAdapter25);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(log80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(builder91);
    }

    @Test
    public void test04025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04025");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log26);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLog(log30);
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder35 = builder33.setServer("hi!");
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLog(log37);
        log37.log("");
        retrofit.RestAdapter.Builder builder41 = builder33.setLog(log37);
        log37.log("");
        log37.log("hi!");
        retrofit.RestAdapter.Builder builder46 = builder24.setLog(log37);
        retrofit.RestAdapter restAdapter47 = builder46.build();
        retrofit.RequestInterceptor requestInterceptor48 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder49 = builder46.setRequestInterceptor(requestInterceptor48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(restAdapter47);
    }

    @Test
    public void test04026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04026");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        log10.log("");
        retrofit.RestAdapter.Builder builder14 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder19.setServer("hi!");
        retrofit.RestAdapter restAdapter22 = builder21.build();
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        restAdapter22.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLog(log30);
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder35 = builder33.setServer("hi!");
        retrofit.RestAdapter restAdapter36 = builder35.build();
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        restAdapter36.setLogLevel(logLevel40);
        restAdapter22.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLog(log45);
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.Builder builder50 = builder48.setServer("hi!");
        retrofit.RestAdapter restAdapter51 = builder50.build();
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        restAdapter51.setLogLevel(logLevel55);
        restAdapter22.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder59 = builder14.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLog(log66);
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder69 = builder67.setLogLevel(logLevel68);
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder71 = builder67.setLog(log70);
        log70.log("");
        retrofit.RestAdapter.Builder builder74 = builder64.setLog(log70);
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log76 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder77 = builder75.setLog(log76);
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder79 = builder77.setLogLevel(logLevel78);
        retrofit.RestAdapter.Builder builder81 = builder79.setServer("hi!");
        retrofit.RestAdapter restAdapter82 = builder81.build();
        retrofit.RestAdapter restAdapter83 = builder81.build();
        retrofit.RestAdapter.Builder builder84 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log85 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder86 = builder84.setLog(log85);
        retrofit.RestAdapter.LogLevel logLevel87 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder88 = builder84.setLogLevel(logLevel87);
        boolean boolean89 = logLevel87.log();
        restAdapter83.setLogLevel(logLevel87);
        retrofit.RestAdapter.Builder builder91 = builder74.setLogLevel(logLevel87);
        boolean boolean92 = logLevel87.log();
        boolean boolean93 = logLevel87.log();
        retrofit.RestAdapter.Builder builder94 = builder14.setLogLevel(logLevel87);
        boolean boolean95 = logLevel87.log();
        boolean boolean96 = logLevel87.log();
        boolean boolean97 = logLevel87.log();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(restAdapter51);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(restAdapter82);
        org.junit.Assert.assertNotNull(restAdapter83);
        org.junit.Assert.assertNotNull(log85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(builder94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
    }

    @Test
    public void test04027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04027");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        log16.log("");
        retrofit.RestAdapter.Builder builder20 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLog(log22);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder23.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder20.setLog(log26);
        retrofit.RestAdapter restAdapter29 = builder28.build();
        retrofit.Server server30 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder31 = builder28.setServer(server30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(restAdapter29);
    }

    @Test
    public void test04028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04028");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder4.setLog(log20);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder4.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        log26.log("");
        log26.log("");
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log26);
        retrofit.RestAdapter.Builder builder34 = builder24.setServer("hi!");
        java.lang.Class<?> wildcardClass35 = builder24.getClass();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test04029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04029");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.lang.String str7 = request6.getUrl();
        java.lang.String str8 = request6.getMethod();
        java.lang.String str9 = request6.getUrl();
        retrofit.mime.TypedOutput typedOutput10 = request6.getBody();
        java.lang.String str11 = request6.getUrl();
        retrofit.mime.TypedOutput typedOutput12 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList13 = request6.getHeaders();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertNotNull(headerList13);
    }

    @Test
    public void test04030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04030");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLog(log21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder27.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder17.setLog(log30);
        retrofit.RestAdapter.Builder builder34 = builder2.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("hi!");
        retrofit.RestAdapter.Builder builder44 = builder42.setServer("hi!");
        retrofit.RestAdapter restAdapter45 = builder42.build();
        retrofit.RestAdapter.Builder builder47 = builder42.setServer("hi!");
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLog(log57);
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder60 = builder58.setLogLevel(logLevel59);
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder58.setLog(log61);
        retrofit.RestAdapter.Builder builder63 = builder55.setLog(log61);
        retrofit.RestAdapter.Builder builder64 = builder50.setLog(log61);
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLog(log66);
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder68.setLog(log69);
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder72 = builder70.setLogLevel(logLevel71);
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder75 = builder73.setLog(log74);
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder77 = builder75.setLogLevel(logLevel76);
        retrofit.RestAdapter.Log log78 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder79 = builder75.setLog(log78);
        retrofit.RestAdapter.Builder builder80 = builder72.setLog(log78);
        retrofit.RestAdapter.Builder builder81 = builder65.setLog(log78);
        retrofit.RestAdapter.Builder builder82 = builder50.setLog(log78);
        retrofit.RestAdapter.Builder builder83 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log84 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder85 = builder83.setLog(log84);
        retrofit.RestAdapter.LogLevel logLevel86 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder87 = builder85.setLogLevel(logLevel86);
        retrofit.RestAdapter.Builder builder88 = builder82.setLogLevel(logLevel86);
        retrofit.RestAdapter.Builder builder89 = builder42.setLogLevel(logLevel86);
        retrofit.client.Client client90 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder91 = builder89.setClient(client90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(restAdapter45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(log78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(log84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(builder89);
    }

    @Test
    public void test04031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04031");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        log16.log("");
        retrofit.RestAdapter.Builder builder20 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLog(log22);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder23.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder20.setLog(log26);
        retrofit.RestAdapter restAdapter29 = builder28.build();
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = builder34.setServer("hi!");
        retrofit.RestAdapter restAdapter37 = builder36.build();
        retrofit.RestAdapter restAdapter38 = builder36.build();
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder45 = builder43.setServer("hi!");
        retrofit.RestAdapter restAdapter46 = builder45.build();
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLog(log48);
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        restAdapter46.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLog(log54);
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder57 = builder55.setLogLevel(logLevel56);
        retrofit.RestAdapter.Builder builder59 = builder57.setServer("hi!");
        retrofit.RestAdapter restAdapter60 = builder59.build();
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder63 = builder61.setLog(log62);
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder65 = builder63.setLogLevel(logLevel64);
        restAdapter60.setLogLevel(logLevel64);
        restAdapter46.setLogLevel(logLevel64);
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder68.setLog(log69);
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder72 = builder70.setLogLevel(logLevel71);
        retrofit.RestAdapter.Builder builder74 = builder72.setServer("hi!");
        retrofit.RestAdapter restAdapter75 = builder74.build();
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log77 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder78 = builder76.setLog(log77);
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder80 = builder78.setLogLevel(logLevel79);
        restAdapter75.setLogLevel(logLevel79);
        restAdapter46.setLogLevel(logLevel79);
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter46.setLogLevel(logLevel83);
        retrofit.RestAdapter.LogLevel logLevel85 = restAdapter46.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel86 = restAdapter46.getLogLevel();
        restAdapter38.setLogLevel(logLevel86);
        retrofit.RestAdapter.LogLevel logLevel88 = restAdapter38.getLogLevel();
        retrofit.RestAdapter.Builder builder89 = builder28.setLogLevel(logLevel88);
        retrofit.RequestInterceptor requestInterceptor90 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder91 = builder28.setRequestInterceptor(requestInterceptor90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(restAdapter29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(restAdapter37);
        org.junit.Assert.assertNotNull(restAdapter38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(restAdapter46);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(restAdapter60);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(restAdapter75);
        org.junit.Assert.assertNotNull(log77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel88 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel88.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder89);
    }

    @Test
    public void test04032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04032");
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList7, typedOutput11);
        java.util.List<retrofit.client.Header> headerList13 = request12.getHeaders();
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("hi!", "", headerList13, typedOutput14);
        java.util.List<retrofit.client.Header> headerList16 = request15.getHeaders();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertNotNull(headerList16);
    }

    @Test
    public void test04033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04033");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder12.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder19.setServer("hi!");
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLog(log23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder32.setLog(log35);
        retrofit.RestAdapter.Builder builder37 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder38 = builder24.setLog(log35);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder39.setLog(log42);
        retrofit.RestAdapter.Builder builder44 = builder38.setLog(log42);
        retrofit.RestAdapter.Builder builder46 = builder44.setServer("hi!");
        retrofit.RestAdapter.Builder builder48 = builder44.setServer("hi!");
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        log50.log("");
        log50.log("");
        retrofit.RestAdapter.Builder builder56 = builder44.setLog(log50);
        retrofit.RestAdapter.Builder builder57 = builder19.setLog(log50);
        retrofit.RestAdapter restAdapter58 = builder57.build();
        retrofit.RestAdapter restAdapter59 = builder57.build();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.Builder builder63 = builder57.setLog(log61);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLog(log65);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder68 = builder66.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder70 = builder68.setServer("hi!");
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log72 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder73 = builder71.setLog(log72);
        log72.log("");
        retrofit.RestAdapter.Builder builder76 = builder68.setLog(log72);
        log72.log("");
        retrofit.RestAdapter.Builder builder79 = builder57.setLog(log72);
        retrofit.RestAdapter.Builder builder81 = builder57.setServer("hi!");
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log83 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder84 = builder82.setLog(log83);
        log83.log("hi!");
        log83.log("");
        retrofit.RestAdapter.Builder builder89 = builder81.setLog(log83);
        log83.log("hi!");
        log83.log("hi!");
        retrofit.RestAdapter.Builder builder94 = builder12.setLog(log83);
        retrofit.Server server95 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder96 = builder12.setServer(server95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(restAdapter58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(log83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(builder94);
    }

    @Test
    public void test04034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04034");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Log log3 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder4 = builder0.setLog(log3);
        retrofit.Server server5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder6 = builder0.setServer(server5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log3);
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test04035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04035");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder4.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = builder27.setServer("hi!");
        retrofit.RestAdapter restAdapter30 = builder29.build();
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        restAdapter30.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder37 = builder4.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder39 = builder4.setServer("hi!");
        retrofit.Server server40 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder41 = builder39.setServer(server40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(restAdapter30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
    }

    @Test
    public void test04036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04036");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log26);
        retrofit.RestAdapter.Builder builder30 = builder28.setServer("hi!");
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder41.setLog(log44);
        retrofit.RestAdapter.Builder builder46 = builder38.setLog(log44);
        retrofit.RestAdapter.Builder builder47 = builder33.setLog(log44);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLog(log54);
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder57 = builder55.setLogLevel(logLevel56);
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder55.setLog(log58);
        retrofit.RestAdapter.Builder builder60 = builder52.setLog(log58);
        retrofit.RestAdapter.Builder builder62 = builder52.setServer("hi!");
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLog(log64);
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder67 = builder65.setLogLevel(logLevel66);
        retrofit.RestAdapter.Log log68 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder69 = builder65.setLog(log68);
        retrofit.RestAdapter.Builder builder70 = builder52.setLog(log68);
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log72 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder73 = builder71.setLog(log72);
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder75 = builder73.setLogLevel(logLevel74);
        retrofit.RestAdapter.Builder builder77 = builder75.setServer("hi!");
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log79 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder80 = builder78.setLog(log79);
        log79.log("");
        retrofit.RestAdapter.Builder builder83 = builder75.setLog(log79);
        log79.log("");
        retrofit.RestAdapter.Builder builder86 = builder52.setLog(log79);
        log79.log("");
        retrofit.RestAdapter.Builder builder89 = builder47.setLog(log79);
        log79.log("hi!");
        retrofit.RestAdapter.Builder builder92 = builder28.setLog(log79);
        retrofit.converter.Converter converter93 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder94 = builder28.setConverter(converter93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(builder92);
    }

    @Test
    public void test04037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04037");
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        java.lang.String str15 = request14.getMethod();
        java.util.List<retrofit.client.Header> headerList16 = request14.getHeaders();
        java.util.List<retrofit.client.Header> headerList17 = request14.getHeaders();
        java.util.List<retrofit.client.Header> headerList18 = request14.getHeaders();
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("hi!", "hi!", headerList18, typedOutput19);
        java.util.List<retrofit.client.Header> headerList21 = request20.getHeaders();
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "hi!", headerList21, typedOutput22);
        java.util.List<retrofit.client.Header> headerList24 = request23.getHeaders();
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("hi!", "hi!", headerList24, typedOutput27);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(headerList16);
        org.junit.Assert.assertNotNull(headerList17);
        org.junit.Assert.assertNotNull(headerList18);
        org.junit.Assert.assertNotNull(headerList21);
        org.junit.Assert.assertNotNull(headerList24);
    }

    @Test
    public void test04038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04038");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log26);
        retrofit.RestAdapter.Builder builder30 = builder28.setServer("hi!");
        retrofit.RestAdapter restAdapter31 = builder28.build();
        retrofit.RestAdapter.Builder builder33 = builder28.setServer("hi!");
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder44.setLog(log47);
        retrofit.RestAdapter.Builder builder49 = builder41.setLog(log47);
        retrofit.RestAdapter.Builder builder50 = builder36.setLog(log47);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder51.setLog(log54);
        retrofit.RestAdapter.Builder builder56 = builder50.setLog(log54);
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLog(log58);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder61 = builder59.setLogLevel(logLevel60);
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder63 = builder59.setLog(log62);
        log62.log("hi!");
        log62.log("");
        retrofit.RestAdapter.Builder builder68 = builder56.setLog(log62);
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder71 = builder69.setLog(log70);
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder73 = builder71.setLogLevel(logLevel72);
        retrofit.RestAdapter.Builder builder75 = builder73.setServer("hi!");
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log77 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder78 = builder76.setLog(log77);
        log77.log("");
        retrofit.RestAdapter.Builder builder81 = builder73.setLog(log77);
        retrofit.RestAdapter.Builder builder82 = builder56.setLog(log77);
        log77.log("hi!");
        retrofit.RestAdapter.Builder builder85 = builder28.setLog(log77);
        retrofit.ErrorHandler errorHandler86 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder87 = builder28.setErrorHandler(errorHandler86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(restAdapter31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(log77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder85);
    }

    @Test
    public void test04039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04039");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = builder6.build();
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean9 = logLevel8.log();
        boolean boolean10 = logLevel8.log();
        retrofit.RestAdapter.Builder builder11 = builder6.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("hi!");
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLog(log15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLog(log23);
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log27);
        retrofit.RestAdapter.Builder builder29 = builder21.setLog(log27);
        retrofit.RestAdapter.Builder builder30 = builder14.setLog(log27);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder41.setLog(log44);
        retrofit.RestAdapter.Builder builder46 = builder38.setLog(log44);
        retrofit.RestAdapter.Builder builder47 = builder31.setLog(log44);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder48.setLogLevel(logLevel51);
        boolean boolean53 = logLevel51.log();
        retrofit.RestAdapter.Builder builder54 = builder31.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder55 = builder30.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLog(log57);
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder60 = builder58.setLogLevel(logLevel59);
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder58.setLog(log61);
        log61.log("hi!");
        log61.log("hi!");
        retrofit.RestAdapter.Builder builder67 = builder30.setLog(log61);
        retrofit.RestAdapter.Builder builder68 = builder11.setLog(log61);
        retrofit.RestAdapter restAdapter69 = builder68.build();
        retrofit.client.Client.Provider provider70 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder71 = builder68.setClient(provider70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(restAdapter7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(restAdapter69);
    }

    @Test
    public void test04040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04040");
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput15);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList11, typedOutput17);
        java.util.List<retrofit.client.Header> headerList19 = request18.getHeaders();
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("", "hi!", headerList19, typedOutput20);
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("hi!", "hi!", headerList19, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
    }

    @Test
    public void test04041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04041");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder4.setLog(log20);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder4.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        log26.log("");
        log26.log("");
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log26);
        retrofit.RestAdapter.Builder builder34 = builder24.setServer("hi!");
        retrofit.RequestInterceptor requestInterceptor35 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder36 = builder34.setRequestInterceptor(requestInterceptor35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
    }

    @Test
    public void test04042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04042");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder2.setLog(log17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLog(log20);
        log20.log("hi!");
        retrofit.RestAdapter.Builder builder24 = builder2.setLog(log20);
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.Builder builder28 = builder26.setServer("hi!");
        retrofit.Profiler profiler29 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder30 = builder26.setProfiler(profiler29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
    }

    @Test
    public void test04043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04043");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder4.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = builder27.setServer("hi!");
        retrofit.RestAdapter restAdapter30 = builder29.build();
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        restAdapter30.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder43 = builder41.setServer("hi!");
        retrofit.RestAdapter restAdapter44 = builder43.build();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        restAdapter44.setLogLevel(logLevel48);
        restAdapter30.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder58 = builder56.setServer("hi!");
        retrofit.RestAdapter restAdapter59 = builder58.build();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        restAdapter59.setLogLevel(logLevel63);
        restAdapter30.setLogLevel(logLevel63);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter30.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder69 = builder4.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder71 = builder69.setServer("hi!");
        retrofit.RestAdapter restAdapter72 = builder71.build();
        retrofit.Profiler profiler73 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder74 = builder71.setProfiler(profiler73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(restAdapter30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(restAdapter44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(restAdapter72);
    }

    @Test
    public void test04044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04044");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder0.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder21 = builder17.setLogLevel(logLevel20);
        boolean boolean22 = logLevel20.log();
        retrofit.RestAdapter.Builder builder23 = builder0.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLog(log30);
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder31.setLog(log34);
        log34.log("");
        retrofit.RestAdapter.Builder builder38 = builder28.setLog(log34);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder45 = builder43.setServer("hi!");
        retrofit.RestAdapter restAdapter46 = builder45.build();
        retrofit.RestAdapter restAdapter47 = builder45.build();
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder48.setLogLevel(logLevel51);
        boolean boolean53 = logLevel51.log();
        restAdapter47.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder55 = builder38.setLogLevel(logLevel51);
        boolean boolean56 = logLevel51.log();
        boolean boolean57 = logLevel51.log();
        boolean boolean58 = logLevel51.log();
        retrofit.RestAdapter.Builder builder59 = builder23.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        boolean boolean65 = logLevel63.log();
        retrofit.RestAdapter.Builder builder66 = builder23.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder68 = builder23.setServer("hi!");
        retrofit.client.Client.Provider provider69 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder70 = builder68.setClient(provider69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(restAdapter46);
        org.junit.Assert.assertNotNull(restAdapter47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder68);
    }

    @Test
    public void test04045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04045");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder11 = builder9.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("hi!");
        retrofit.RestAdapter restAdapter14 = builder13.build();
        retrofit.RestAdapter restAdapter15 = builder13.build();
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLog(log17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLog(log20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder21.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder30 = builder26.setLog(log29);
        retrofit.RestAdapter.Builder builder31 = builder23.setLog(log29);
        retrofit.RestAdapter.Builder builder32 = builder18.setLog(log29);
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder18.setLog(log33);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder41 = builder39.setServer("hi!");
        retrofit.RestAdapter restAdapter42 = builder41.build();
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        restAdapter42.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder53 = builder51.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder55 = builder53.setServer("hi!");
        retrofit.RestAdapter restAdapter56 = builder55.build();
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLog(log58);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder61 = builder59.setLogLevel(logLevel60);
        restAdapter56.setLogLevel(logLevel60);
        restAdapter42.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLog(log65);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder68 = builder66.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder70 = builder68.setServer("hi!");
        retrofit.RestAdapter restAdapter71 = builder70.build();
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder74 = builder72.setLog(log73);
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder76 = builder74.setLogLevel(logLevel75);
        restAdapter71.setLogLevel(logLevel75);
        restAdapter42.setLogLevel(logLevel75);
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter42.setLogLevel(logLevel79);
        retrofit.RestAdapter.Builder builder81 = builder34.setLogLevel(logLevel79);
        restAdapter15.setLogLevel(logLevel79);
        retrofit.RestAdapter.LogLevel logLevel83 = restAdapter15.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel84 = restAdapter15.getLogLevel();
        retrofit.RestAdapter.Builder builder85 = builder4.setLogLevel(logLevel84);
        retrofit.client.Client client86 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder87 = builder4.setClient(client86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(restAdapter14);
        org.junit.Assert.assertNotNull(restAdapter15);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(restAdapter42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(restAdapter56);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(restAdapter71);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder85);
    }

    @Test
    public void test04046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04046");
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput13);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList9, typedOutput15);
        java.util.List<retrofit.client.Header> headerList17 = request16.getHeaders();
        java.util.List<retrofit.client.Header> headerList18 = request16.getHeaders();
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("", "", headerList18, typedOutput19);
        retrofit.mime.TypedOutput typedOutput21 = request20.getBody();
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(headerList17);
        org.junit.Assert.assertNotNull(headerList18);
        org.junit.Assert.assertNull(typedOutput21);
    }

    @Test
    public void test04047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04047");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder14.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = builder9.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLog(log27);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder33 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        log35.log("");
        log35.log("");
        retrofit.RestAdapter.Builder builder41 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder42 = builder4.setLog(log35);
        retrofit.RestAdapter restAdapter43 = builder42.build();
        retrofit.RestAdapter restAdapter44 = builder42.build();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.Builder builder48 = builder42.setLog(log46);
        retrofit.RestAdapter.Builder builder50 = builder42.setServer("hi!");
        retrofit.RestAdapter.Builder builder52 = builder50.setServer("hi!");
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder55 = builder52.setExecutors(executor53, executor54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(restAdapter43);
        org.junit.Assert.assertNotNull(restAdapter44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
    }

    @Test
    public void test04048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04048");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log26);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLog(log30);
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder35 = builder33.setServer("hi!");
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLog(log37);
        log37.log("");
        retrofit.RestAdapter.Builder builder41 = builder33.setLog(log37);
        log37.log("");
        log37.log("hi!");
        retrofit.RestAdapter.Builder builder46 = builder24.setLog(log37);
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLog(log48);
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder53 = builder51.setServer("hi!");
        retrofit.RestAdapter restAdapter54 = builder53.build();
        retrofit.RestAdapter restAdapter55 = builder53.build();
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLog(log57);
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder61 = builder59.setLog(log60);
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder63 = builder61.setLogLevel(logLevel62);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLog(log65);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder68 = builder66.setLogLevel(logLevel67);
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder66.setLog(log69);
        retrofit.RestAdapter.Builder builder71 = builder63.setLog(log69);
        retrofit.RestAdapter.Builder builder72 = builder58.setLog(log69);
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder75 = builder73.setLog(log74);
        retrofit.RestAdapter.Log log76 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder77 = builder73.setLog(log76);
        retrofit.RestAdapter.Builder builder78 = builder72.setLog(log76);
        retrofit.RestAdapter.Builder builder80 = builder72.setServer("hi!");
        retrofit.RestAdapter.Builder builder81 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log82 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder83 = builder81.setLog(log82);
        retrofit.RestAdapter.Builder builder84 = builder80.setLog(log82);
        retrofit.RestAdapter.Builder builder85 = builder53.setLog(log82);
        retrofit.RestAdapter.Builder builder86 = builder46.setLog(log82);
        retrofit.RestAdapter.Builder builder87 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log88 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder89 = builder87.setLog(log88);
        log88.log("hi!");
        log88.log("");
        log88.log("hi!");
        retrofit.RestAdapter.Builder builder96 = builder46.setLog(log88);
        retrofit.converter.Converter converter97 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder98 = builder96.setConverter(converter97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(restAdapter54);
        org.junit.Assert.assertNotNull(restAdapter55);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(log82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(log88);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(builder96);
    }

    @Test
    public void test04049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04049");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        log16.log("");
        retrofit.RestAdapter.Builder builder20 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("hi!");
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = builder27.setServer("hi!");
        retrofit.RestAdapter restAdapter30 = builder29.build();
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        restAdapter30.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder43 = builder41.setServer("hi!");
        retrofit.RestAdapter restAdapter44 = builder43.build();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        restAdapter44.setLogLevel(logLevel48);
        restAdapter30.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder58 = builder56.setServer("hi!");
        retrofit.RestAdapter restAdapter59 = builder58.build();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        restAdapter59.setLogLevel(logLevel63);
        restAdapter30.setLogLevel(logLevel63);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter30.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder69 = builder22.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder70.setLog(log71);
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder74 = builder72.setLogLevel(logLevel73);
        retrofit.RestAdapter.Builder builder76 = builder74.setServer("hi!");
        retrofit.RestAdapter restAdapter77 = builder76.build();
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log79 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder80 = builder78.setLog(log79);
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder82 = builder78.setLog(log81);
        retrofit.RestAdapter.Builder builder83 = builder76.setLog(log81);
        retrofit.RestAdapter.Builder builder84 = builder69.setLog(log81);
        retrofit.RestAdapter.Builder builder86 = builder84.setServer("hi!");
        retrofit.RestAdapter restAdapter87 = builder84.build();
        retrofit.RestAdapter restAdapter88 = builder84.build();
        retrofit.ErrorHandler errorHandler89 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder90 = builder84.setErrorHandler(errorHandler89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(restAdapter30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(restAdapter44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(restAdapter77);
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(restAdapter87);
        org.junit.Assert.assertNotNull(restAdapter88);
    }

    @Test
    public void test04050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04050");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder12.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder19.setServer("hi!");
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLog(log23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder32.setLog(log35);
        retrofit.RestAdapter.Builder builder37 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder38 = builder24.setLog(log35);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder39.setLog(log42);
        retrofit.RestAdapter.Builder builder44 = builder38.setLog(log42);
        retrofit.RestAdapter.Builder builder46 = builder44.setServer("hi!");
        retrofit.RestAdapter.Builder builder48 = builder44.setServer("hi!");
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        log50.log("");
        log50.log("");
        retrofit.RestAdapter.Builder builder56 = builder44.setLog(log50);
        retrofit.RestAdapter.Builder builder57 = builder19.setLog(log50);
        retrofit.RestAdapter restAdapter58 = builder57.build();
        retrofit.RestAdapter restAdapter59 = builder57.build();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.Builder builder63 = builder57.setLog(log61);
        retrofit.RestAdapter.Builder builder64 = builder12.setLog(log61);
        retrofit.RequestInterceptor requestInterceptor65 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder66 = builder12.setRequestInterceptor(requestInterceptor65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(restAdapter58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder64);
    }

    @Test
    public void test04051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04051");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter restAdapter5 = builder2.build();
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log7 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder8 = builder6.setLog(log7);
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLog(log12);
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder13.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder10.setLog(log16);
        retrofit.RestAdapter.Builder builder20 = builder10.setServer("hi!");
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLog(log22);
        log22.log("");
        retrofit.RestAdapter.Builder builder26 = builder10.setLog(log22);
        log22.log("hi!");
        log22.log("");
        retrofit.RestAdapter.Builder builder31 = builder2.setLog(log22);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLog(log33);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder42.setLog(log45);
        retrofit.RestAdapter.Builder builder47 = builder39.setLog(log45);
        retrofit.RestAdapter.Builder builder48 = builder34.setLog(log45);
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder34.setLog(log49);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        log52.log("hi!");
        retrofit.RestAdapter.Builder builder56 = builder34.setLog(log52);
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLog(log57);
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder61 = builder59.setLog(log60);
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder63 = builder61.setLogLevel(logLevel62);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLog(log65);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder68 = builder66.setLogLevel(logLevel67);
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder66.setLog(log69);
        retrofit.RestAdapter.Builder builder71 = builder63.setLog(log69);
        log69.log("hi!");
        log69.log("hi!");
        log69.log("hi!");
        retrofit.RestAdapter.Builder builder78 = builder58.setLog(log69);
        log69.log("hi!");
        retrofit.RestAdapter.Builder builder81 = builder2.setLog(log69);
        retrofit.converter.Converter converter82 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder83 = builder2.setConverter(converter82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(restAdapter5);
        org.junit.Assert.assertNotNull(log7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder81);
    }

    @Test
    public void test04052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04052");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder4.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = builder27.setServer("hi!");
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLog(log34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLog(log39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder40.setLogLevel(logLevel41);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder40.setLog(log43);
        retrofit.RestAdapter.Builder builder45 = builder37.setLog(log43);
        retrofit.RestAdapter.Builder builder46 = builder32.setLog(log43);
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLog(log48);
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder47.setLog(log50);
        retrofit.RestAdapter.Builder builder52 = builder46.setLog(log50);
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLog(log54);
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder57 = builder55.setLogLevel(logLevel56);
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder55.setLog(log58);
        log58.log("hi!");
        log58.log("");
        retrofit.RestAdapter.Builder builder64 = builder52.setLog(log58);
        retrofit.RestAdapter.Builder builder65 = builder27.setLog(log58);
        log58.log("");
        retrofit.RestAdapter.Builder builder68 = builder22.setLog(log58);
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder71 = builder69.setLog(log70);
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder73 = builder71.setLogLevel(logLevel72);
        retrofit.RestAdapter.Builder builder75 = builder73.setServer("hi!");
        retrofit.RestAdapter restAdapter76 = builder75.build();
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log78 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder79 = builder77.setLog(log78);
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder81 = builder79.setLogLevel(logLevel80);
        restAdapter76.setLogLevel(logLevel80);
        retrofit.RestAdapter.LogLevel logLevel83 = restAdapter76.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel84 = restAdapter76.getLogLevel();
        boolean boolean85 = logLevel84.log();
        retrofit.RestAdapter.Builder builder86 = builder68.setLogLevel(logLevel84);
        retrofit.Server server87 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder88 = builder68.setServer(server87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(restAdapter76);
        org.junit.Assert.assertNotNull(log78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(builder86);
    }

    @Test
    public void test04053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04053");
        retrofit.client.Header[] headerArray12 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList13 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList13, headerArray12);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList13, typedOutput15);
        java.lang.String str17 = request16.getMethod();
        java.util.List<retrofit.client.Header> headerList18 = request16.getHeaders();
        java.util.List<retrofit.client.Header> headerList19 = request16.getHeaders();
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("", "hi!", headerList19, typedOutput20);
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("hi!", "", headerList19, typedOutput22);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList19, typedOutput24);
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "hi!", headerList19, typedOutput26);
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("hi!", "hi!", headerList19, typedOutput28);
        org.junit.Assert.assertNotNull(headerArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(headerList18);
        org.junit.Assert.assertNotNull(headerList19);
    }

    @Test
    public void test04054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04054");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLog(log21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder27.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder17.setLog(log30);
        retrofit.RestAdapter.Builder builder34 = builder2.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder41 = builder39.setServer("hi!");
        retrofit.RestAdapter restAdapter42 = builder41.build();
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        restAdapter42.setLogLevel(logLevel46);
        retrofit.RestAdapter.LogLevel logLevel49 = restAdapter42.getLogLevel();
        boolean boolean50 = logLevel49.log();
        retrofit.RestAdapter.Builder builder51 = builder34.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder58 = builder56.setServer("hi!");
        retrofit.RestAdapter restAdapter59 = builder58.build();
        retrofit.RestAdapter restAdapter60 = builder58.build();
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder63 = builder61.setLog(log62);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLog(log65);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder68 = builder66.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder71 = builder69.setLog(log70);
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder73 = builder71.setLogLevel(logLevel72);
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder75 = builder71.setLog(log74);
        retrofit.RestAdapter.Builder builder76 = builder68.setLog(log74);
        retrofit.RestAdapter.Builder builder77 = builder63.setLog(log74);
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log79 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder80 = builder78.setLog(log79);
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder82 = builder78.setLog(log81);
        retrofit.RestAdapter.Builder builder83 = builder77.setLog(log81);
        retrofit.RestAdapter.Builder builder85 = builder77.setServer("hi!");
        retrofit.RestAdapter.Builder builder86 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log87 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder88 = builder86.setLog(log87);
        retrofit.RestAdapter.Builder builder89 = builder85.setLog(log87);
        retrofit.RestAdapter.Builder builder90 = builder58.setLog(log87);
        log87.log("hi!");
        retrofit.RestAdapter.Builder builder93 = builder51.setLog(log87);
        java.lang.Class<?> wildcardClass94 = log87.getClass();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(restAdapter42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertNotNull(restAdapter60);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(log87);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test04055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04055");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder4.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = builder27.setServer("hi!");
        retrofit.RestAdapter restAdapter30 = builder29.build();
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        restAdapter30.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder43 = builder41.setServer("hi!");
        retrofit.RestAdapter restAdapter44 = builder43.build();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        restAdapter44.setLogLevel(logLevel48);
        restAdapter30.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder58 = builder56.setServer("hi!");
        retrofit.RestAdapter restAdapter59 = builder58.build();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        restAdapter59.setLogLevel(logLevel63);
        restAdapter30.setLogLevel(logLevel63);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter30.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder69 = builder4.setLogLevel(logLevel67);
        java.lang.Class<?> wildcardClass70 = logLevel67.getClass();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(restAdapter30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(restAdapter44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test04056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04056");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder0.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLog(log21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder27.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder17.setLog(log30);
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder38 = builder34.setLogLevel(logLevel37);
        boolean boolean39 = logLevel37.log();
        retrofit.RestAdapter.Builder builder40 = builder17.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder41 = builder16.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder44.setLog(log47);
        log47.log("hi!");
        log47.log("hi!");
        retrofit.RestAdapter.Builder builder53 = builder16.setLog(log47);
        retrofit.converter.Converter converter54 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder55 = builder16.setConverter(converter54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder53);
    }

    @Test
    public void test04057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04057");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLog(log21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder27.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder19.setLog(log30);
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = builder34.setLog(log37);
        retrofit.RestAdapter.Builder builder39 = builder33.setLog(log37);
        retrofit.RestAdapter.Builder builder41 = builder33.setServer("hi!");
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        retrofit.RestAdapter.Builder builder45 = builder41.setLog(log43);
        retrofit.RestAdapter restAdapter46 = builder41.build();
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.FULL;
        boolean boolean48 = logLevel47.log();
        restAdapter46.setLogLevel(logLevel47);
        retrofit.RestAdapter.Builder builder50 = builder2.setLogLevel(logLevel47);
        retrofit.Server server51 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder52 = builder2.setServer(server51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(restAdapter46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(builder50);
    }

    @Test
    public void test04058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04058");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder14.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = builder9.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLog(log27);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder32.setLog(log35);
        log35.log("hi!");
        log35.log("");
        retrofit.RestAdapter.Builder builder41 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder42 = builder4.setLog(log35);
        retrofit.RestAdapter.Builder builder44 = builder4.setServer("hi!");
        retrofit.Server server45 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder46 = builder44.setServer(server45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
    }

    @Test
    public void test04059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04059");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder2.setLog(log17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLog(log20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder21.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder30 = builder26.setLog(log29);
        log29.log("");
        retrofit.RestAdapter.Builder builder33 = builder23.setLog(log29);
        log29.log("");
        retrofit.RestAdapter.Builder builder36 = builder18.setLog(log29);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter37 = builder18.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder36);
    }

    @Test
    public void test04060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04060");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLog(log21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder27.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder17.setLog(log30);
        retrofit.RestAdapter.Builder builder34 = builder2.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("hi!");
        retrofit.RestAdapter.Builder builder44 = builder42.setServer("hi!");
        retrofit.converter.Converter converter45 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder46 = builder42.setConverter(converter45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
    }

    @Test
    public void test04061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04061");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder4.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = builder27.setServer("hi!");
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        log31.log("");
        retrofit.RestAdapter.Builder builder35 = builder27.setLog(log31);
        log31.log("");
        retrofit.RestAdapter.Builder builder38 = builder4.setLog(log31);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.Builder builder43 = builder41.setServer("hi!");
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLog(log45);
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder53 = builder51.setLogLevel(logLevel52);
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder51.setLog(log54);
        retrofit.RestAdapter.Builder builder56 = builder48.setLog(log54);
        retrofit.RestAdapter.Builder builder57 = builder43.setLog(log54);
        retrofit.RestAdapter.Builder builder58 = builder38.setLog(log54);
        retrofit.Server server59 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder60 = builder58.setServer(server59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder58);
    }

    @Test
    public void test04062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04062");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        log16.log("");
        retrofit.RestAdapter.Builder builder20 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("hi!");
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLog(log27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder33.setLog(log36);
        retrofit.RestAdapter.Builder builder38 = builder30.setLog(log36);
        retrofit.RestAdapter.Builder builder39 = builder23.setLog(log36);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder50.setLog(log53);
        retrofit.RestAdapter.Builder builder55 = builder47.setLog(log53);
        retrofit.RestAdapter.Builder builder56 = builder40.setLog(log53);
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLog(log58);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder61 = builder57.setLogLevel(logLevel60);
        boolean boolean62 = logLevel60.log();
        retrofit.RestAdapter.Builder builder63 = builder40.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder64 = builder39.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLog(log66);
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder68.setLog(log69);
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder72 = builder70.setLogLevel(logLevel71);
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder75 = builder73.setLog(log74);
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder77 = builder75.setLogLevel(logLevel76);
        retrofit.RestAdapter.Log log78 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder79 = builder75.setLog(log78);
        retrofit.RestAdapter.Builder builder80 = builder72.setLog(log78);
        retrofit.RestAdapter.Builder builder81 = builder67.setLog(log78);
        retrofit.RestAdapter.Builder builder82 = builder39.setLog(log78);
        log78.log("hi!");
        log78.log("");
        retrofit.RestAdapter.Builder builder87 = builder22.setLog(log78);
        log78.log("");
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(log78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder87);
    }

    @Test
    public void test04063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04063");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder2.setLog(log17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLog(log20);
        log20.log("hi!");
        retrofit.RestAdapter.Builder builder24 = builder2.setLog(log20);
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLog(log33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder34.setLogLevel(logLevel35);
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = builder34.setLog(log37);
        retrofit.RestAdapter.Builder builder39 = builder31.setLog(log37);
        log37.log("hi!");
        log37.log("hi!");
        log37.log("hi!");
        retrofit.RestAdapter.Builder builder46 = builder26.setLog(log37);
        retrofit.RestAdapter.Builder builder48 = builder26.setServer("hi!");
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder53 = builder51.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder55 = builder53.setServer("hi!");
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        log56.log("hi!");
        retrofit.RestAdapter.Builder builder59 = builder53.setLog(log56);
        log56.log("hi!");
        log56.log("hi!");
        retrofit.RestAdapter.Builder builder64 = builder26.setLog(log56);
        retrofit.Server server65 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder66 = builder26.setServer(server65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder64);
    }

    @Test
    public void test04064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04064");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder14.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = builder9.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLog(log27);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder32.setLog(log35);
        log35.log("hi!");
        log35.log("");
        retrofit.RestAdapter.Builder builder41 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder42 = builder4.setLog(log35);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = builder47.setServer("hi!");
        retrofit.RestAdapter restAdapter50 = builder49.build();
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        restAdapter50.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLog(log58);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder61 = builder59.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder63 = builder61.setServer("hi!");
        retrofit.RestAdapter restAdapter64 = builder63.build();
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLog(log66);
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder69 = builder67.setLogLevel(logLevel68);
        restAdapter64.setLogLevel(logLevel68);
        restAdapter50.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder74 = builder72.setLog(log73);
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder76 = builder74.setLogLevel(logLevel75);
        retrofit.RestAdapter.Builder builder78 = builder76.setServer("hi!");
        retrofit.RestAdapter restAdapter79 = builder78.build();
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder82 = builder80.setLog(log81);
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder84 = builder82.setLogLevel(logLevel83);
        restAdapter79.setLogLevel(logLevel83);
        restAdapter50.setLogLevel(logLevel83);
        retrofit.RestAdapter.LogLevel logLevel87 = restAdapter50.getLogLevel();
        retrofit.RestAdapter.Builder builder88 = builder4.setLogLevel(logLevel87);
        retrofit.RestAdapter.Log log89 = retrofit.RestAdapter.Log.NONE;
        log89.log("hi!");
        retrofit.RestAdapter.Builder builder92 = builder88.setLog(log89);
        retrofit.RestAdapter.Builder builder94 = builder92.setServer("hi!");
        retrofit.ErrorHandler errorHandler95 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder96 = builder92.setErrorHandler(errorHandler95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(restAdapter50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(restAdapter64);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(restAdapter79);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(log89);
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertNotNull(builder94);
    }

    @Test
    public void test04065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04065");
        retrofit.client.Header[] headerArray16 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList17 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList17, headerArray16);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList17, typedOutput19);
        java.lang.String str21 = request20.getMethod();
        java.util.List<retrofit.client.Header> headerList22 = request20.getHeaders();
        java.util.List<retrofit.client.Header> headerList23 = request20.getHeaders();
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "hi!", headerList23, typedOutput24);
        java.util.List<retrofit.client.Header> headerList26 = request25.getHeaders();
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("", "", headerList26, typedOutput27);
        retrofit.mime.TypedOutput typedOutput29 = null;
        retrofit.client.Request request30 = new retrofit.client.Request("", "", headerList26, typedOutput29);
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("hi!", "", headerList26, typedOutput31);
        retrofit.mime.TypedOutput typedOutput33 = null;
        retrofit.client.Request request34 = new retrofit.client.Request("hi!", "hi!", headerList26, typedOutput33);
        retrofit.mime.TypedOutput typedOutput35 = null;
        retrofit.client.Request request36 = new retrofit.client.Request("hi!", "hi!", headerList26, typedOutput35);
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("", "hi!", headerList26, typedOutput37);
        java.lang.Class<?> wildcardClass39 = headerList26.getClass();
        org.junit.Assert.assertNotNull(headerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(headerList22);
        org.junit.Assert.assertNotNull(headerList23);
        org.junit.Assert.assertNotNull(headerList26);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test04066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04066");
        retrofit.client.Header[] headerArray16 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList17 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList17, headerArray16);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList17, typedOutput19);
        java.lang.String str21 = request20.getMethod();
        java.util.List<retrofit.client.Header> headerList22 = request20.getHeaders();
        java.util.List<retrofit.client.Header> headerList23 = request20.getHeaders();
        java.util.List<retrofit.client.Header> headerList24 = request20.getHeaders();
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "hi!", headerList24, typedOutput25);
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("", "", headerList24, typedOutput27);
        retrofit.mime.TypedOutput typedOutput29 = null;
        retrofit.client.Request request30 = new retrofit.client.Request("hi!", "", headerList24, typedOutput29);
        java.util.List<retrofit.client.Header> headerList31 = request30.getHeaders();
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "", headerList31, typedOutput32);
        java.util.List<retrofit.client.Header> headerList34 = request33.getHeaders();
        retrofit.mime.TypedOutput typedOutput35 = null;
        retrofit.client.Request request36 = new retrofit.client.Request("", "", headerList34, typedOutput35);
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("hi!", "", headerList34, typedOutput37);
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("hi!", "", headerList34, typedOutput39);
        java.util.List<retrofit.client.Header> headerList41 = request40.getHeaders();
        org.junit.Assert.assertNotNull(headerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(headerList22);
        org.junit.Assert.assertNotNull(headerList23);
        org.junit.Assert.assertNotNull(headerList24);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertNotNull(headerList34);
        org.junit.Assert.assertNotNull(headerList41);
    }

    @Test
    public void test04067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04067");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log26);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLog(log30);
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder35 = builder33.setServer("hi!");
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLog(log37);
        log37.log("");
        retrofit.RestAdapter.Builder builder41 = builder33.setLog(log37);
        log37.log("");
        log37.log("");
        retrofit.RestAdapter.Builder builder46 = builder24.setLog(log37);
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLog(log48);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLog(log51);
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder54 = builder52.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder57 = builder55.setLog(log56);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder59 = builder57.setLogLevel(logLevel58);
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder61 = builder57.setLog(log60);
        retrofit.RestAdapter.Builder builder62 = builder54.setLog(log60);
        retrofit.RestAdapter.Builder builder63 = builder49.setLog(log60);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLog(log65);
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder68 = builder64.setLog(log67);
        retrofit.RestAdapter.Builder builder69 = builder63.setLog(log67);
        retrofit.RestAdapter.Builder builder71 = builder69.setServer("hi!");
        retrofit.RestAdapter restAdapter72 = builder69.build();
        retrofit.RestAdapter.LogLevel logLevel73 = restAdapter72.getLogLevel();
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log75 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder76 = builder74.setLog(log75);
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder78 = builder74.setLogLevel(logLevel77);
        boolean boolean79 = logLevel77.log();
        boolean boolean80 = logLevel77.log();
        boolean boolean81 = logLevel77.log();
        restAdapter72.setLogLevel(logLevel77);
        retrofit.RestAdapter.Builder builder83 = builder46.setLogLevel(logLevel77);
        retrofit.RestAdapter.Builder builder85 = builder83.setServer("hi!");
        java.util.concurrent.Executor executor86 = null;
        java.util.concurrent.Executor executor87 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder88 = builder85.setExecutors(executor86, executor87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(restAdapter72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder85);
    }

    @Test
    public void test04068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04068");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = builder9.setServer("hi!");
        retrofit.RestAdapter restAdapter12 = builder11.build();
        retrofit.RestAdapter restAdapter13 = builder11.build();
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLog(log15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder18 = builder14.setLogLevel(logLevel17);
        boolean boolean19 = logLevel17.log();
        restAdapter13.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder21 = builder0.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLog(log23);
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder29.setLog(log32);
        retrofit.RestAdapter.Builder builder34 = builder26.setLog(log32);
        retrofit.RestAdapter.Builder builder36 = builder26.setServer("hi!");
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder39.setLog(log42);
        retrofit.RestAdapter.Builder builder44 = builder26.setLog(log42);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder51 = builder49.setServer("hi!");
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder57 = builder55.setLog(log56);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder59 = builder57.setLogLevel(logLevel58);
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder66 = builder62.setLog(log65);
        retrofit.RestAdapter.Builder builder67 = builder59.setLog(log65);
        retrofit.RestAdapter.Builder builder68 = builder54.setLog(log65);
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder71 = builder69.setLog(log70);
        retrofit.RestAdapter.Log log72 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder73 = builder69.setLog(log72);
        retrofit.RestAdapter.Builder builder74 = builder68.setLog(log72);
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log76 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder77 = builder75.setLog(log76);
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder79 = builder77.setLogLevel(logLevel78);
        retrofit.RestAdapter.Log log80 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder81 = builder77.setLog(log80);
        log80.log("hi!");
        log80.log("");
        retrofit.RestAdapter.Builder builder86 = builder74.setLog(log80);
        retrofit.RestAdapter.Builder builder87 = builder49.setLog(log80);
        log80.log("");
        retrofit.RestAdapter.Builder builder90 = builder44.setLog(log80);
        log80.log("");
        log80.log("");
        log80.log("hi!");
        retrofit.RestAdapter.Builder builder97 = builder21.setLog(log80);
        retrofit.Profiler profiler98 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder99 = builder97.setProfiler(profiler98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(restAdapter12);
        org.junit.Assert.assertNotNull(restAdapter13);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(log80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(builder97);
    }

    @Test
    public void test04069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04069");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        log16.log("");
        retrofit.RestAdapter.Builder builder20 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLog(log22);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLog(log27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder28.setLog(log31);
        retrofit.RestAdapter.Builder builder33 = builder25.setLog(log31);
        retrofit.RestAdapter.Builder builder34 = builder4.setLog(log31);
        retrofit.RestAdapter restAdapter35 = builder4.build();
        retrofit.RestAdapter restAdapter36 = builder4.build();
        retrofit.Profiler profiler37 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder38 = builder4.setProfiler(profiler37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(restAdapter35);
        org.junit.Assert.assertNotNull(restAdapter36);
    }

    @Test
    public void test04070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04070");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log14 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLog(log14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder15.setLog(log18);
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log18);
        retrofit.RestAdapter.Builder builder21 = builder5.setLog(log18);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLog(log23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder32.setLog(log35);
        retrofit.RestAdapter.Builder builder37 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder38 = builder22.setLog(log35);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder39.setLogLevel(logLevel42);
        boolean boolean44 = logLevel42.log();
        retrofit.RestAdapter.Builder builder45 = builder22.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder46 = builder21.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLog(log48);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLog(log51);
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder54 = builder52.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder57 = builder55.setLog(log56);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder59 = builder57.setLogLevel(logLevel58);
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder61 = builder57.setLog(log60);
        retrofit.RestAdapter.Builder builder62 = builder54.setLog(log60);
        retrofit.RestAdapter.Builder builder63 = builder49.setLog(log60);
        retrofit.RestAdapter.Builder builder64 = builder21.setLog(log60);
        log60.log("");
        retrofit.RestAdapter.Builder builder67 = builder4.setLog(log60);
        retrofit.RestAdapter.Builder builder69 = builder67.setServer("hi!");
        retrofit.RequestInterceptor requestInterceptor70 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder71 = builder67.setRequestInterceptor(requestInterceptor70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder69);
    }

    @Test
    public void test04071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04071");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = builder6.build();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder8.setLog(log11);
        retrofit.RestAdapter.Builder builder13 = builder6.setLog(log11);
        retrofit.RestAdapter restAdapter14 = builder6.build();
        retrofit.client.Client client15 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder16 = builder6.setClient(client15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(restAdapter7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(restAdapter14);
    }

    @Test
    public void test04072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04072");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder14.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = builder9.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLog(log27);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder33 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        log35.log("");
        log35.log("");
        retrofit.RestAdapter.Builder builder41 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder42 = builder4.setLog(log35);
        retrofit.RestAdapter restAdapter43 = builder42.build();
        retrofit.RestAdapter.Builder builder45 = builder42.setServer("hi!");
        retrofit.RestAdapter.Builder builder47 = builder45.setServer("hi!");
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLog(log54);
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder57 = builder55.setLogLevel(logLevel56);
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder55.setLog(log58);
        retrofit.RestAdapter.Builder builder60 = builder52.setLog(log58);
        retrofit.RestAdapter.Builder builder62 = builder52.setServer("hi!");
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLog(log64);
        log64.log("");
        retrofit.RestAdapter.Builder builder68 = builder52.setLog(log64);
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder71 = builder69.setLog(log70);
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder73 = builder71.setLogLevel(logLevel72);
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder75 = builder71.setLog(log74);
        retrofit.RestAdapter.Builder builder76 = builder68.setLog(log74);
        log74.log("");
        log74.log("hi!");
        log74.log("hi!");
        retrofit.RestAdapter.Builder builder83 = builder45.setLog(log74);
        java.util.concurrent.Executor executor84 = null;
        java.util.concurrent.Executor executor85 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder86 = builder83.setExecutors(executor84, executor85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(restAdapter43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder83);
    }

    @Test
    public void test04073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04073");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder14.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = builder9.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLog(log27);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder32.setLog(log35);
        log35.log("hi!");
        log35.log("");
        retrofit.RestAdapter.Builder builder41 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder42 = builder4.setLog(log35);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = builder47.setServer("hi!");
        retrofit.RestAdapter restAdapter50 = builder49.build();
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        restAdapter50.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLog(log58);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder61 = builder59.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder63 = builder61.setServer("hi!");
        retrofit.RestAdapter restAdapter64 = builder63.build();
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLog(log66);
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder69 = builder67.setLogLevel(logLevel68);
        restAdapter64.setLogLevel(logLevel68);
        restAdapter50.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder74 = builder72.setLog(log73);
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder76 = builder74.setLogLevel(logLevel75);
        retrofit.RestAdapter.Builder builder78 = builder76.setServer("hi!");
        retrofit.RestAdapter restAdapter79 = builder78.build();
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder82 = builder80.setLog(log81);
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder84 = builder82.setLogLevel(logLevel83);
        restAdapter79.setLogLevel(logLevel83);
        restAdapter50.setLogLevel(logLevel83);
        retrofit.RestAdapter.LogLevel logLevel87 = restAdapter50.getLogLevel();
        retrofit.RestAdapter.Builder builder88 = builder4.setLogLevel(logLevel87);
        retrofit.RestAdapter.Builder builder90 = builder88.setServer("hi!");
        retrofit.RestAdapter.Builder builder91 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log92 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder93 = builder91.setLog(log92);
        retrofit.RestAdapter.LogLevel logLevel94 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder95 = builder91.setLogLevel(logLevel94);
        retrofit.RestAdapter.Builder builder96 = builder88.setLogLevel(logLevel94);
        retrofit.RequestInterceptor requestInterceptor97 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder98 = builder88.setRequestInterceptor(requestInterceptor97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(restAdapter50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(restAdapter64);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(restAdapter79);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(log92);
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertTrue("'" + logLevel94 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel94.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder95);
        org.junit.Assert.assertNotNull(builder96);
    }

    @Test
    public void test04074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04074");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder4.setLog(log20);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder4.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        log26.log("");
        log26.log("");
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log26);
        retrofit.RestAdapter restAdapter33 = builder32.build();
        retrofit.RestAdapter.Builder builder35 = builder32.setServer("hi!");
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLog(log37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("hi!");
        retrofit.RestAdapter restAdapter43 = builder42.build();
        retrofit.RestAdapter restAdapter44 = builder42.build();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder45.setLogLevel(logLevel48);
        boolean boolean50 = logLevel48.log();
        restAdapter44.setLogLevel(logLevel48);
        retrofit.RestAdapter.LogLevel logLevel52 = restAdapter44.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter44.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter44.getLogLevel();
        retrofit.RestAdapter.Builder builder55 = builder32.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLog(log57);
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder61 = builder59.setLog(log60);
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder63 = builder61.setLogLevel(logLevel62);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLog(log65);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder68 = builder66.setLogLevel(logLevel67);
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder66.setLog(log69);
        retrofit.RestAdapter.Builder builder71 = builder63.setLog(log69);
        retrofit.RestAdapter.Builder builder72 = builder58.setLog(log69);
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder75 = builder73.setLog(log74);
        retrofit.RestAdapter.Log log76 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder77 = builder73.setLog(log76);
        retrofit.RestAdapter.Builder builder78 = builder72.setLog(log76);
        log76.log("hi!");
        retrofit.RestAdapter.Builder builder81 = builder32.setLog(log76);
        java.lang.Class<?> wildcardClass82 = builder81.getClass();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(restAdapter33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(restAdapter43);
        org.junit.Assert.assertNotNull(restAdapter44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test04075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04075");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder9 = builder7.setServer("hi!");
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        log11.log("");
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log11);
        log11.log("hi!");
        retrofit.RestAdapter.Builder builder18 = builder2.setLog(log11);
        retrofit.RestAdapter.Builder builder20 = builder2.setServer("hi!");
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLog(log22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLog(log30);
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder31.setLog(log34);
        retrofit.RestAdapter.Builder builder36 = builder28.setLog(log34);
        retrofit.RestAdapter.Builder builder37 = builder23.setLog(log34);
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLog(log39);
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder38.setLog(log41);
        retrofit.RestAdapter.Builder builder43 = builder37.setLog(log41);
        retrofit.RestAdapter.Builder builder45 = builder37.setServer("hi!");
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLog(log47);
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder57 = builder53.setLog(log56);
        retrofit.RestAdapter.Builder builder58 = builder50.setLog(log56);
        retrofit.RestAdapter.Builder builder60 = builder50.setServer("hi!");
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder63 = builder61.setLog(log62);
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder65 = builder63.setLogLevel(logLevel64);
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder67 = builder63.setLog(log66);
        retrofit.RestAdapter.Builder builder68 = builder50.setLog(log66);
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder70 = builder50.setLogLevel(logLevel69);
        retrofit.RestAdapter.Builder builder71 = builder37.setLogLevel(logLevel69);
        retrofit.RestAdapter.Builder builder72 = builder20.setLogLevel(logLevel69);
        retrofit.converter.Converter converter73 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder74 = builder20.setConverter(converter73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder72);
    }

    @Test
    public void test04076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04076");
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "hi!", headerList6, typedOutput7);
        java.util.List<retrofit.client.Header> headerList9 = request8.getHeaders();
        java.util.List<retrofit.client.Header> headerList10 = request8.getHeaders();
        java.util.List<retrofit.client.Header> headerList11 = request8.getHeaders();
        retrofit.mime.TypedOutput typedOutput12 = null;
        retrofit.client.Request request13 = new retrofit.client.Request("", "", headerList11, typedOutput12);
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("", "hi!", headerList11, typedOutput14);
        java.lang.String str16 = request15.getUrl();
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test04077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04077");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        log10.log("");
        retrofit.RestAdapter.Builder builder14 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder19.setServer("hi!");
        retrofit.RestAdapter restAdapter22 = builder21.build();
        retrofit.RestAdapter restAdapter23 = builder21.build();
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder24.setLogLevel(logLevel27);
        boolean boolean29 = logLevel27.log();
        restAdapter23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder31 = builder14.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLog(log33);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder42.setLog(log45);
        retrofit.RestAdapter.Builder builder47 = builder39.setLog(log45);
        retrofit.RestAdapter.Builder builder48 = builder34.setLog(log45);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder49.setLog(log52);
        retrofit.RestAdapter.Builder builder54 = builder48.setLog(log52);
        retrofit.RestAdapter.Builder builder56 = builder48.setServer("hi!");
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLog(log58);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder61 = builder59.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder63 = builder61.setServer("hi!");
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLog(log65);
        log65.log("");
        retrofit.RestAdapter.Builder builder69 = builder61.setLog(log65);
        retrofit.RestAdapter.Builder builder70 = builder56.setLog(log65);
        log65.log("");
        log65.log("");
        retrofit.RestAdapter.Builder builder75 = builder31.setLog(log65);
        retrofit.client.Client.Provider provider76 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder77 = builder75.setClient(provider76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNotNull(restAdapter23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder75);
    }

    @Test
    public void test04078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04078");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder2.setLog(log17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLog(log20);
        log20.log("");
        retrofit.RestAdapter.Builder builder24 = builder18.setLog(log20);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder32.setLog(log35);
        retrofit.RestAdapter.Builder builder37 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder39 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder42.setLog(log45);
        retrofit.RestAdapter.Builder builder47 = builder29.setLog(log45);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder54 = builder52.setServer("hi!");
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder57 = builder55.setLog(log56);
        log56.log("");
        retrofit.RestAdapter.Builder builder60 = builder52.setLog(log56);
        log56.log("");
        retrofit.RestAdapter.Builder builder63 = builder29.setLog(log56);
        retrofit.RestAdapter.Builder builder64 = builder24.setLog(log56);
        log56.log("hi!");
        log56.log("hi!");
        log56.log("hi!");
        java.lang.Class<?> wildcardClass71 = log56.getClass();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test04079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04079");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder11 = builder9.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("hi!");
        retrofit.RestAdapter restAdapter14 = builder13.build();
        retrofit.RestAdapter restAdapter15 = builder13.build();
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLog(log17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLog(log20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder21.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder30 = builder26.setLog(log29);
        retrofit.RestAdapter.Builder builder31 = builder23.setLog(log29);
        retrofit.RestAdapter.Builder builder32 = builder18.setLog(log29);
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder18.setLog(log33);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder41 = builder39.setServer("hi!");
        retrofit.RestAdapter restAdapter42 = builder41.build();
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        restAdapter42.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder53 = builder51.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder55 = builder53.setServer("hi!");
        retrofit.RestAdapter restAdapter56 = builder55.build();
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLog(log58);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder61 = builder59.setLogLevel(logLevel60);
        restAdapter56.setLogLevel(logLevel60);
        restAdapter42.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLog(log65);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder68 = builder66.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder70 = builder68.setServer("hi!");
        retrofit.RestAdapter restAdapter71 = builder70.build();
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder74 = builder72.setLog(log73);
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder76 = builder74.setLogLevel(logLevel75);
        restAdapter71.setLogLevel(logLevel75);
        restAdapter42.setLogLevel(logLevel75);
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter42.setLogLevel(logLevel79);
        retrofit.RestAdapter.Builder builder81 = builder34.setLogLevel(logLevel79);
        restAdapter15.setLogLevel(logLevel79);
        retrofit.RestAdapter.LogLevel logLevel83 = restAdapter15.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel84 = restAdapter15.getLogLevel();
        retrofit.RestAdapter.Builder builder85 = builder4.setLogLevel(logLevel84);
        retrofit.converter.Converter converter86 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder87 = builder85.setConverter(converter86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(restAdapter14);
        org.junit.Assert.assertNotNull(restAdapter15);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(restAdapter42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(restAdapter56);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(restAdapter71);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder85);
    }

    @Test
    public void test04080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04080");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder12.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder19.setServer("hi!");
        retrofit.RestAdapter restAdapter22 = builder21.build();
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLog(log27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder33.setLog(log36);
        retrofit.RestAdapter.Builder builder38 = builder30.setLog(log36);
        retrofit.RestAdapter.Builder builder39 = builder25.setLog(log36);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder50.setLog(log53);
        retrofit.RestAdapter.Builder builder55 = builder47.setLog(log53);
        retrofit.RestAdapter.Builder builder56 = builder40.setLog(log53);
        retrofit.RestAdapter.Builder builder57 = builder25.setLog(log53);
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder60 = builder58.setLog(log59);
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder62 = builder60.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder63 = builder57.setLogLevel(logLevel61);
        restAdapter22.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLog(log66);
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder68.setLog(log69);
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder72 = builder70.setLogLevel(logLevel71);
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder75 = builder73.setLog(log74);
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder77 = builder75.setLogLevel(logLevel76);
        retrofit.RestAdapter.Log log78 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder79 = builder75.setLog(log78);
        retrofit.RestAdapter.Builder builder80 = builder72.setLog(log78);
        retrofit.RestAdapter.Builder builder81 = builder65.setLog(log78);
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log83 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder84 = builder82.setLog(log83);
        retrofit.RestAdapter.LogLevel logLevel85 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder86 = builder82.setLogLevel(logLevel85);
        boolean boolean87 = logLevel85.log();
        retrofit.RestAdapter.Builder builder88 = builder65.setLogLevel(logLevel85);
        restAdapter22.setLogLevel(logLevel85);
        retrofit.RestAdapter.LogLevel logLevel90 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel91 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel92 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel93 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.Builder builder94 = builder14.setLogLevel(logLevel93);
        retrofit.RestAdapter restAdapter95 = builder14.build();
        retrofit.RestAdapter restAdapter96 = builder14.build();
        retrofit.ErrorHandler errorHandler97 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder98 = builder14.setErrorHandler(errorHandler97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(log78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(log83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertTrue("'" + logLevel90 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel90.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel91 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel91.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel93 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel93.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder94);
        org.junit.Assert.assertNotNull(restAdapter95);
        org.junit.Assert.assertNotNull(restAdapter96);
    }

    @Test
    public void test04081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04081");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        log16.log("");
        retrofit.RestAdapter.Builder builder20 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("hi!");
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLog(log27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder33.setLog(log36);
        retrofit.RestAdapter.Builder builder38 = builder30.setLog(log36);
        retrofit.RestAdapter.Builder builder39 = builder25.setLog(log36);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder40.setLog(log43);
        retrofit.RestAdapter.Builder builder45 = builder39.setLog(log43);
        retrofit.RestAdapter.Builder builder47 = builder39.setServer("hi!");
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder54 = builder52.setServer("hi!");
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder57 = builder55.setLog(log56);
        log56.log("");
        retrofit.RestAdapter.Builder builder60 = builder52.setLog(log56);
        retrofit.RestAdapter.Builder builder61 = builder47.setLog(log56);
        log56.log("hi!");
        retrofit.RestAdapter.Builder builder64 = builder22.setLog(log56);
        retrofit.client.Client.Provider provider65 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder66 = builder22.setClient(provider65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder64);
    }

    @Test
    public void test04082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04082");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLog(log21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder27.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder17.setLog(log30);
        retrofit.RestAdapter.Builder builder34 = builder2.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("hi!");
        retrofit.RestAdapter.Builder builder44 = builder40.setServer("hi!");
        retrofit.RestAdapter restAdapter45 = builder40.build();
        retrofit.RestAdapter restAdapter46 = builder40.build();
        retrofit.RestAdapter.Builder builder48 = builder40.setServer("hi!");
        retrofit.ErrorHandler errorHandler49 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder50 = builder40.setErrorHandler(errorHandler49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(restAdapter45);
        org.junit.Assert.assertNotNull(restAdapter46);
        org.junit.Assert.assertNotNull(builder48);
    }

    @Test
    public void test04083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04083");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder4.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = builder27.setServer("hi!");
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        log31.log("");
        retrofit.RestAdapter.Builder builder35 = builder27.setLog(log31);
        log31.log("");
        retrofit.RestAdapter.Builder builder38 = builder4.setLog(log31);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.Builder builder43 = builder41.setServer("hi!");
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLog(log45);
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder53 = builder51.setLogLevel(logLevel52);
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder51.setLog(log54);
        retrofit.RestAdapter.Builder builder56 = builder48.setLog(log54);
        retrofit.RestAdapter.Builder builder57 = builder43.setLog(log54);
        retrofit.RestAdapter.Builder builder58 = builder38.setLog(log54);
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder61 = builder59.setLog(log60);
        log60.log("");
        retrofit.RestAdapter.Builder builder64 = builder38.setLog(log60);
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLog(log66);
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder69 = builder67.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder70.setLog(log71);
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder74 = builder72.setLogLevel(logLevel73);
        retrofit.RestAdapter.Log log75 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder76 = builder72.setLog(log75);
        retrofit.RestAdapter.Builder builder77 = builder69.setLog(log75);
        retrofit.RestAdapter.Builder builder78 = builder64.setLog(log75);
        retrofit.client.Client.Provider provider79 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder80 = builder64.setClient(provider79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(log75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder78);
    }

    @Test
    public void test04084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04084");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        log10.log("");
        retrofit.RestAdapter.Builder builder14 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder18.setLog(log19);
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder22 = builder20.setLogLevel(logLevel21);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder25.setLog(log28);
        retrofit.RestAdapter.Builder builder30 = builder22.setLog(log28);
        retrofit.RestAdapter.Builder builder31 = builder17.setLog(log28);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLog(log33);
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder32.setLog(log35);
        retrofit.RestAdapter.Builder builder37 = builder31.setLog(log35);
        retrofit.RestAdapter.Builder builder39 = builder31.setServer("hi!");
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.Builder builder46 = builder44.setServer("hi!");
        retrofit.RestAdapter restAdapter47 = builder46.build();
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        restAdapter47.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder58 = builder56.setLogLevel(logLevel57);
        retrofit.RestAdapter.Builder builder60 = builder58.setServer("hi!");
        retrofit.RestAdapter restAdapter61 = builder60.build();
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder64 = builder62.setLog(log63);
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        restAdapter61.setLogLevel(logLevel65);
        restAdapter47.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder71 = builder69.setLog(log70);
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder73 = builder71.setLogLevel(logLevel72);
        retrofit.RestAdapter.Builder builder75 = builder73.setServer("hi!");
        retrofit.RestAdapter restAdapter76 = builder75.build();
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log78 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder79 = builder77.setLog(log78);
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder81 = builder79.setLogLevel(logLevel80);
        restAdapter76.setLogLevel(logLevel80);
        restAdapter47.setLogLevel(logLevel80);
        retrofit.RestAdapter.Builder builder84 = builder31.setLogLevel(logLevel80);
        retrofit.RestAdapter restAdapter85 = builder84.build();
        retrofit.RestAdapter.LogLevel logLevel86 = restAdapter85.getLogLevel();
        retrofit.RestAdapter.Builder builder87 = builder14.setLogLevel(logLevel86);
        retrofit.client.Client.Provider provider88 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder89 = builder87.setClient(provider88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(restAdapter47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(restAdapter61);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(restAdapter76);
        org.junit.Assert.assertNotNull(log78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(restAdapter85);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder87);
    }

    @Test
    public void test04085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04085");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder0.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLog(log21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder27.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder17.setLog(log30);
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder44.setLog(log47);
        retrofit.RestAdapter.Builder builder49 = builder41.setLog(log47);
        retrofit.RestAdapter.Builder builder50 = builder34.setLog(log47);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder55 = builder51.setLogLevel(logLevel54);
        boolean boolean56 = logLevel54.log();
        retrofit.RestAdapter.Builder builder57 = builder34.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder58 = builder33.setLogLevel(logLevel54);
        boolean boolean59 = logLevel54.log();
        boolean boolean60 = logLevel54.log();
        boolean boolean61 = logLevel54.log();
        retrofit.RestAdapter.Builder builder62 = builder0.setLogLevel(logLevel54);
        retrofit.ErrorHandler errorHandler63 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder64 = builder62.setErrorHandler(errorHandler63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(builder62);
    }

    @Test
    public void test04086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04086");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder4.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLog(log27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder33.setLog(log36);
        retrofit.RestAdapter.Builder builder38 = builder30.setLog(log36);
        retrofit.RestAdapter.Builder builder39 = builder25.setLog(log36);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder40.setLog(log43);
        retrofit.RestAdapter.Builder builder45 = builder39.setLog(log43);
        retrofit.RestAdapter.Builder builder47 = builder39.setServer("hi!");
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder54 = builder52.setServer("hi!");
        retrofit.RestAdapter restAdapter55 = builder54.build();
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLog(log57);
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder60 = builder58.setLogLevel(logLevel59);
        restAdapter55.setLogLevel(logLevel59);
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder64 = builder62.setLog(log63);
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder68 = builder66.setServer("hi!");
        retrofit.RestAdapter restAdapter69 = builder68.build();
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder70.setLog(log71);
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder74 = builder72.setLogLevel(logLevel73);
        restAdapter69.setLogLevel(logLevel73);
        restAdapter55.setLogLevel(logLevel73);
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log78 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder79 = builder77.setLog(log78);
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder81 = builder79.setLogLevel(logLevel80);
        retrofit.RestAdapter.Builder builder83 = builder81.setServer("hi!");
        retrofit.RestAdapter restAdapter84 = builder83.build();
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log86 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder87 = builder85.setLog(log86);
        retrofit.RestAdapter.LogLevel logLevel88 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder89 = builder87.setLogLevel(logLevel88);
        restAdapter84.setLogLevel(logLevel88);
        restAdapter55.setLogLevel(logLevel88);
        retrofit.RestAdapter.Builder builder92 = builder39.setLogLevel(logLevel88);
        boolean boolean93 = logLevel88.log();
        retrofit.RestAdapter.Builder builder94 = builder22.setLogLevel(logLevel88);
        retrofit.RestAdapter restAdapter95 = builder22.build();
        retrofit.Server server96 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder97 = builder22.setServer(server96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(restAdapter55);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(restAdapter69);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(log78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(restAdapter84);
        org.junit.Assert.assertNotNull(log86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertTrue("'" + logLevel88 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel88.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(builder94);
        org.junit.Assert.assertNotNull(restAdapter95);
    }

    @Test
    public void test04087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04087");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder0.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLog(log21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder27.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder17.setLog(log30);
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder44.setLog(log47);
        retrofit.RestAdapter.Builder builder49 = builder41.setLog(log47);
        retrofit.RestAdapter.Builder builder50 = builder34.setLog(log47);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder55 = builder51.setLogLevel(logLevel54);
        boolean boolean56 = logLevel54.log();
        retrofit.RestAdapter.Builder builder57 = builder34.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder58 = builder33.setLogLevel(logLevel54);
        boolean boolean59 = logLevel54.log();
        boolean boolean60 = logLevel54.log();
        boolean boolean61 = logLevel54.log();
        retrofit.RestAdapter.Builder builder62 = builder0.setLogLevel(logLevel54);
        retrofit.Server server63 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder64 = builder0.setServer(server63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(builder62);
    }

    @Test
    public void test04088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04088");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        log16.log("");
        retrofit.RestAdapter.Builder builder20 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLog(log22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLog(log30);
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder31.setLog(log34);
        retrofit.RestAdapter.Builder builder36 = builder28.setLog(log34);
        retrofit.RestAdapter.Builder builder37 = builder23.setLog(log34);
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLog(log39);
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder38.setLog(log41);
        retrofit.RestAdapter.Builder builder43 = builder37.setLog(log41);
        retrofit.RestAdapter.Builder builder45 = builder37.setServer("hi!");
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLog(log47);
        retrofit.RestAdapter.Builder builder49 = builder45.setLog(log47);
        retrofit.RestAdapter.Builder builder51 = builder49.setServer("hi!");
        retrofit.RestAdapter restAdapter52 = builder49.build();
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLog(log54);
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder57 = builder55.setLogLevel(logLevel56);
        retrofit.RestAdapter.Builder builder59 = builder57.setServer("hi!");
        retrofit.RestAdapter restAdapter60 = builder59.build();
        retrofit.RestAdapter restAdapter61 = builder59.build();
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder64 = builder62.setLog(log63);
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder66 = builder62.setLogLevel(logLevel65);
        boolean boolean67 = logLevel65.log();
        restAdapter61.setLogLevel(logLevel65);
        restAdapter52.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder70.setLog(log71);
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder74 = builder70.setLogLevel(logLevel73);
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log76 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder77 = builder75.setLog(log76);
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder79 = builder77.setLogLevel(logLevel78);
        retrofit.RestAdapter.Builder builder81 = builder79.setServer("hi!");
        retrofit.RestAdapter restAdapter82 = builder81.build();
        retrofit.RestAdapter restAdapter83 = builder81.build();
        retrofit.RestAdapter.Builder builder84 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log85 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder86 = builder84.setLog(log85);
        retrofit.RestAdapter.LogLevel logLevel87 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder88 = builder84.setLogLevel(logLevel87);
        boolean boolean89 = logLevel87.log();
        restAdapter83.setLogLevel(logLevel87);
        retrofit.RestAdapter.Builder builder91 = builder70.setLogLevel(logLevel87);
        boolean boolean92 = logLevel87.log();
        restAdapter52.setLogLevel(logLevel87);
        retrofit.RestAdapter.Builder builder94 = builder20.setLogLevel(logLevel87);
        retrofit.ErrorHandler errorHandler95 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder96 = builder94.setErrorHandler(errorHandler95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(restAdapter52);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(restAdapter60);
        org.junit.Assert.assertNotNull(restAdapter61);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(restAdapter82);
        org.junit.Assert.assertNotNull(restAdapter83);
        org.junit.Assert.assertNotNull(log85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(builder94);
    }

    @Test
    public void test04089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04089");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter restAdapter5 = builder2.build();
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log7 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder8 = builder6.setLog(log7);
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLog(log12);
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder13.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder10.setLog(log16);
        retrofit.RestAdapter.Builder builder20 = builder10.setServer("hi!");
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLog(log22);
        log22.log("");
        retrofit.RestAdapter.Builder builder26 = builder10.setLog(log22);
        log22.log("hi!");
        log22.log("");
        retrofit.RestAdapter.Builder builder31 = builder2.setLog(log22);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLog(log33);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder42.setLog(log45);
        retrofit.RestAdapter.Builder builder47 = builder39.setLog(log45);
        retrofit.RestAdapter.Builder builder48 = builder34.setLog(log45);
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder34.setLog(log49);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        log52.log("hi!");
        retrofit.RestAdapter.Builder builder56 = builder34.setLog(log52);
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLog(log57);
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder61 = builder59.setLog(log60);
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder63 = builder61.setLogLevel(logLevel62);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLog(log65);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder68 = builder66.setLogLevel(logLevel67);
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder66.setLog(log69);
        retrofit.RestAdapter.Builder builder71 = builder63.setLog(log69);
        log69.log("hi!");
        log69.log("hi!");
        log69.log("hi!");
        retrofit.RestAdapter.Builder builder78 = builder58.setLog(log69);
        log69.log("hi!");
        retrofit.RestAdapter.Builder builder81 = builder2.setLog(log69);
        retrofit.RestAdapter.Builder builder83 = builder81.setServer("hi!");
        java.util.concurrent.Executor executor84 = null;
        java.util.concurrent.Executor executor85 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder86 = builder81.setExecutors(executor84, executor85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(restAdapter5);
        org.junit.Assert.assertNotNull(log7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder83);
    }

    @Test
    public void test04090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04090");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder14.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = builder9.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLog(log27);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder33 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        log35.log("");
        log35.log("");
        retrofit.RestAdapter.Builder builder41 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder42 = builder4.setLog(log35);
        retrofit.RestAdapter restAdapter43 = builder42.build();
        retrofit.RestAdapter restAdapter44 = builder42.build();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.Builder builder48 = builder42.setLog(log46);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder53 = builder51.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder55 = builder53.setServer("hi!");
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLog(log57);
        log57.log("");
        retrofit.RestAdapter.Builder builder61 = builder53.setLog(log57);
        log57.log("");
        retrofit.RestAdapter.Builder builder64 = builder42.setLog(log57);
        retrofit.RestAdapter.Builder builder66 = builder42.setServer("hi!");
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log68 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder69 = builder67.setLog(log68);
        log68.log("hi!");
        log68.log("");
        retrofit.RestAdapter.Builder builder74 = builder66.setLog(log68);
        retrofit.RestAdapter restAdapter75 = builder74.build();
        retrofit.RestAdapter.LogLevel logLevel76 = restAdapter75.getLogLevel();
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log78 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder79 = builder77.setLog(log78);
        retrofit.RestAdapter.Builder builder81 = builder79.setServer("hi!");
        retrofit.RestAdapter restAdapter82 = builder81.build();
        retrofit.RestAdapter.LogLevel logLevel83 = restAdapter82.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel84 = restAdapter82.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel85 = restAdapter82.getLogLevel();
        boolean boolean86 = logLevel85.log();
        restAdapter75.setLogLevel(logLevel85);
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(restAdapter43);
        org.junit.Assert.assertNotNull(restAdapter44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(restAdapter75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(restAdapter82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test04091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04091");
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        java.lang.String str9 = request8.getMethod();
        java.util.List<retrofit.client.Header> headerList10 = request8.getHeaders();
        java.util.List<retrofit.client.Header> headerList11 = request8.getHeaders();
        java.util.List<retrofit.client.Header> headerList12 = request8.getHeaders();
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", headerList12, typedOutput13);
        java.util.List<retrofit.client.Header> headerList15 = request14.getHeaders();
        java.lang.Class<?> wildcardClass16 = headerList15.getClass();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test04092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04092");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log26);
        retrofit.RestAdapter.Builder builder30 = builder28.setServer("hi!");
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder41.setLog(log44);
        retrofit.RestAdapter.Builder builder46 = builder38.setLog(log44);
        retrofit.RestAdapter.Builder builder47 = builder33.setLog(log44);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder52 = builder48.setLog(log51);
        retrofit.RestAdapter.Builder builder53 = builder47.setLog(log51);
        retrofit.RestAdapter.Builder builder55 = builder47.setServer("hi!");
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLog(log57);
        retrofit.RestAdapter.Builder builder59 = builder55.setLog(log57);
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        boolean boolean65 = logLevel63.log();
        retrofit.RestAdapter.Builder builder66 = builder59.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder67 = builder30.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder68.setLog(log69);
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log72 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder73 = builder71.setLog(log72);
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder75 = builder73.setLogLevel(logLevel74);
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log77 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder78 = builder76.setLog(log77);
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder80 = builder78.setLogLevel(logLevel79);
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder82 = builder78.setLog(log81);
        retrofit.RestAdapter.Builder builder83 = builder75.setLog(log81);
        retrofit.RestAdapter.Builder builder84 = builder70.setLog(log81);
        log81.log("");
        log81.log("");
        retrofit.RestAdapter.Builder builder89 = builder30.setLog(log81);
        retrofit.RestAdapter.Builder builder91 = builder30.setServer("hi!");
        retrofit.RestAdapter restAdapter92 = builder30.build();
        retrofit.converter.Converter converter93 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder94 = builder30.setConverter(converter93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(log77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(restAdapter92);
    }

    @Test
    public void test04093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04093");
        retrofit.client.Header[] headerArray14 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList15 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList15, headerArray14);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList15, typedOutput17);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList15, typedOutput19);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList15, typedOutput21);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList15, typedOutput23);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList15, typedOutput25);
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList15, typedOutput27);
        retrofit.mime.TypedOutput typedOutput29 = null;
        retrofit.client.Request request30 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList15, typedOutput29);
        org.junit.Assert.assertNotNull(headerArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test04094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04094");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log26);
        retrofit.RestAdapter restAdapter29 = builder24.build();
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder37.setLog(log40);
        retrofit.RestAdapter.Builder builder42 = builder34.setLog(log40);
        retrofit.RestAdapter.Builder builder44 = builder34.setServer("hi!");
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder47.setLog(log50);
        retrofit.RestAdapter.Builder builder52 = builder34.setLog(log50);
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder54 = builder34.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder55 = builder24.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder57 = builder55.setServer("hi!");
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder60 = builder58.setLog(log59);
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder62 = builder60.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLog(log64);
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder67 = builder65.setLogLevel(logLevel66);
        retrofit.RestAdapter.Log log68 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder69 = builder65.setLog(log68);
        retrofit.RestAdapter.Builder builder70 = builder62.setLog(log68);
        retrofit.RestAdapter.Builder builder72 = builder62.setServer("hi!");
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder75 = builder73.setLog(log74);
        log74.log("");
        retrofit.RestAdapter.Builder builder78 = builder62.setLog(log74);
        log74.log("hi!");
        log74.log("");
        log74.log("");
        retrofit.RestAdapter.Builder builder85 = builder57.setLog(log74);
        retrofit.RestAdapter.LogLevel logLevel86 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder87 = builder85.setLogLevel(logLevel86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Log level may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(restAdapter29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder85);
    }

    @Test
    public void test04095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04095");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder12.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLog(log21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder22.setLog(log25);
        log25.log("");
        retrofit.RestAdapter.Builder builder29 = builder19.setLog(log25);
        log25.log("");
        retrofit.RestAdapter.Builder builder32 = builder14.setLog(log25);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLog(log34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLog(log39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder40.setLogLevel(logLevel41);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder40.setLog(log43);
        retrofit.RestAdapter.Builder builder45 = builder37.setLog(log43);
        retrofit.RestAdapter.Builder builder47 = builder37.setServer("hi!");
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder50.setLog(log53);
        retrofit.RestAdapter.Builder builder55 = builder37.setLog(log53);
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLog(log57);
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder60 = builder58.setLogLevel(logLevel59);
        retrofit.RestAdapter.Builder builder62 = builder60.setServer("hi!");
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLog(log64);
        log64.log("");
        retrofit.RestAdapter.Builder builder68 = builder60.setLog(log64);
        log64.log("");
        retrofit.RestAdapter.Builder builder71 = builder37.setLog(log64);
        log64.log("");
        retrofit.RestAdapter.Builder builder74 = builder32.setLog(log64);
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log76 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder77 = builder75.setLog(log76);
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder79 = builder77.setLogLevel(logLevel78);
        retrofit.RestAdapter.Builder builder81 = builder79.setServer("hi!");
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log83 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder84 = builder82.setLog(log83);
        log83.log("");
        retrofit.RestAdapter.Builder builder87 = builder79.setLog(log83);
        log83.log("");
        log83.log("");
        retrofit.RestAdapter.Builder builder92 = builder32.setLog(log83);
        retrofit.RestAdapter restAdapter93 = builder92.build();
        retrofit.converter.Converter converter94 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder95 = builder92.setConverter(converter94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(log83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertNotNull(restAdapter93);
    }

    @Test
    public void test04096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04096");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder0.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLog(log21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder27.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder17.setLog(log30);
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder38 = builder34.setLogLevel(logLevel37);
        boolean boolean39 = logLevel37.log();
        retrofit.RestAdapter.Builder builder40 = builder17.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder41 = builder16.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLog(log51);
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder54 = builder52.setLogLevel(logLevel53);
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder52.setLog(log55);
        retrofit.RestAdapter.Builder builder57 = builder49.setLog(log55);
        retrofit.RestAdapter.Builder builder58 = builder44.setLog(log55);
        retrofit.RestAdapter.Builder builder59 = builder16.setLog(log55);
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLog(log64);
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder67 = builder65.setLogLevel(logLevel66);
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder68.setLog(log69);
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder72 = builder70.setLogLevel(logLevel71);
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder74 = builder70.setLog(log73);
        retrofit.RestAdapter.Builder builder75 = builder67.setLog(log73);
        retrofit.RestAdapter.Builder builder76 = builder60.setLog(log73);
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log78 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder79 = builder77.setLog(log78);
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder81 = builder77.setLogLevel(logLevel80);
        boolean boolean82 = logLevel80.log();
        retrofit.RestAdapter.Builder builder83 = builder60.setLogLevel(logLevel80);
        retrofit.RestAdapter.Builder builder84 = builder16.setLogLevel(logLevel80);
        retrofit.client.Client client85 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder86 = builder16.setClient(client85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(log78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder84);
    }

    @Test
    public void test04097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04097");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log26);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLog(log30);
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        boolean boolean34 = logLevel32.log();
        retrofit.RestAdapter.Builder builder35 = builder28.setLogLevel(logLevel32);
        retrofit.RestAdapter restAdapter36 = builder35.build();
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder47.setLog(log50);
        retrofit.RestAdapter.Builder builder52 = builder44.setLog(log50);
        retrofit.RestAdapter.Builder builder53 = builder39.setLog(log50);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder54.setLog(log57);
        retrofit.RestAdapter.Builder builder59 = builder53.setLog(log57);
        retrofit.RestAdapter.Builder builder61 = builder53.setServer("hi!");
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder64 = builder62.setLog(log63);
        retrofit.RestAdapter.Builder builder65 = builder61.setLog(log63);
        retrofit.RestAdapter restAdapter66 = builder61.build();
        retrofit.RestAdapter restAdapter67 = builder61.build();
        retrofit.RestAdapter.LogLevel logLevel68 = restAdapter67.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel69 = restAdapter67.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel70 = restAdapter67.getLogLevel();
        boolean boolean71 = logLevel70.log();
        retrofit.RestAdapter.Builder builder72 = builder35.setLogLevel(logLevel70);
        retrofit.RequestInterceptor requestInterceptor73 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder74 = builder72.setRequestInterceptor(requestInterceptor73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(restAdapter66);
        org.junit.Assert.assertNotNull(restAdapter67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(builder72);
    }

    @Test
    public void test04098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04098");
        retrofit.client.Header[] headerArray12 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList13 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList13, headerArray12);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList13, typedOutput15);
        java.lang.String str17 = request16.getMethod();
        java.util.List<retrofit.client.Header> headerList18 = request16.getHeaders();
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("hi!", "hi!", headerList18, typedOutput19);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("", "hi!", headerList18, typedOutput21);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("", "", headerList18, typedOutput23);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList18, typedOutput25);
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("hi!", "hi!", headerList18, typedOutput27);
        java.lang.String str29 = request28.getMethod();
        java.lang.Class<?> wildcardClass30 = request28.getClass();
        org.junit.Assert.assertNotNull(headerArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(headerList18);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test04099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04099");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder14.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = builder9.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLog(log27);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder32.setLog(log35);
        log35.log("hi!");
        log35.log("");
        retrofit.RestAdapter.Builder builder41 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder42 = builder4.setLog(log35);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = builder47.setServer("hi!");
        retrofit.RestAdapter restAdapter50 = builder49.build();
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        restAdapter50.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLog(log58);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder61 = builder59.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder63 = builder61.setServer("hi!");
        retrofit.RestAdapter restAdapter64 = builder63.build();
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLog(log66);
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder69 = builder67.setLogLevel(logLevel68);
        restAdapter64.setLogLevel(logLevel68);
        restAdapter50.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder74 = builder72.setLog(log73);
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder76 = builder74.setLogLevel(logLevel75);
        retrofit.RestAdapter.Builder builder78 = builder76.setServer("hi!");
        retrofit.RestAdapter restAdapter79 = builder78.build();
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder82 = builder80.setLog(log81);
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder84 = builder82.setLogLevel(logLevel83);
        restAdapter79.setLogLevel(logLevel83);
        restAdapter50.setLogLevel(logLevel83);
        retrofit.RestAdapter.LogLevel logLevel87 = restAdapter50.getLogLevel();
        retrofit.RestAdapter.Builder builder88 = builder4.setLogLevel(logLevel87);
        retrofit.RestAdapter.Log log89 = retrofit.RestAdapter.Log.NONE;
        log89.log("hi!");
        retrofit.RestAdapter.Builder builder92 = builder88.setLog(log89);
        retrofit.ErrorHandler errorHandler93 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder94 = builder88.setErrorHandler(errorHandler93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(restAdapter50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(restAdapter64);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(restAdapter79);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(log89);
        org.junit.Assert.assertNotNull(builder92);
    }

    @Test
    public void test04100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04100");
        retrofit.client.Header[] headerArray16 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList17 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList17, headerArray16);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList17, typedOutput19);
        java.lang.String str21 = request20.getMethod();
        java.util.List<retrofit.client.Header> headerList22 = request20.getHeaders();
        java.util.List<retrofit.client.Header> headerList23 = request20.getHeaders();
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", headerList23, typedOutput24);
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList23, typedOutput26);
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "hi!", headerList23, typedOutput28);
        retrofit.mime.TypedOutput typedOutput30 = null;
        retrofit.client.Request request31 = new retrofit.client.Request("", "", headerList23, typedOutput30);
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "", headerList23, typedOutput32);
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("hi!", "hi!", headerList23, typedOutput34);
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("hi!", "hi!", headerList23, typedOutput36);
        org.junit.Assert.assertNotNull(headerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(headerList22);
        org.junit.Assert.assertNotNull(headerList23);
    }

    @Test
    public void test04101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04101");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        log10.log("");
        retrofit.RestAdapter.Builder builder14 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder19.setServer("hi!");
        retrofit.RestAdapter restAdapter22 = builder21.build();
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        restAdapter22.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLog(log30);
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder35 = builder33.setServer("hi!");
        retrofit.RestAdapter restAdapter36 = builder35.build();
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        restAdapter36.setLogLevel(logLevel40);
        restAdapter22.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLog(log45);
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.Builder builder50 = builder48.setServer("hi!");
        retrofit.RestAdapter restAdapter51 = builder50.build();
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        restAdapter51.setLogLevel(logLevel55);
        restAdapter22.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder59 = builder14.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLog(log66);
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder69 = builder67.setLogLevel(logLevel68);
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder71 = builder67.setLog(log70);
        log70.log("");
        retrofit.RestAdapter.Builder builder74 = builder64.setLog(log70);
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log76 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder77 = builder75.setLog(log76);
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder79 = builder77.setLogLevel(logLevel78);
        retrofit.RestAdapter.Builder builder81 = builder79.setServer("hi!");
        retrofit.RestAdapter restAdapter82 = builder81.build();
        retrofit.RestAdapter restAdapter83 = builder81.build();
        retrofit.RestAdapter.Builder builder84 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log85 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder86 = builder84.setLog(log85);
        retrofit.RestAdapter.LogLevel logLevel87 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder88 = builder84.setLogLevel(logLevel87);
        boolean boolean89 = logLevel87.log();
        restAdapter83.setLogLevel(logLevel87);
        retrofit.RestAdapter.Builder builder91 = builder74.setLogLevel(logLevel87);
        boolean boolean92 = logLevel87.log();
        boolean boolean93 = logLevel87.log();
        retrofit.RestAdapter.Builder builder94 = builder14.setLogLevel(logLevel87);
        retrofit.RestAdapter.Builder builder96 = builder14.setServer("hi!");
        retrofit.Profiler profiler97 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder98 = builder96.setProfiler(profiler97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(restAdapter51);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(restAdapter82);
        org.junit.Assert.assertNotNull(restAdapter83);
        org.junit.Assert.assertNotNull(log85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(builder94);
        org.junit.Assert.assertNotNull(builder96);
    }

    @Test
    public void test04102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04102");
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList11, typedOutput15);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList11, typedOutput17);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput19);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList11, typedOutput21);
        java.lang.String str23 = request22.getUrl();
        retrofit.mime.TypedOutput typedOutput24 = request22.getBody();
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(typedOutput24);
    }

    @Test
    public void test04103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04103");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        log10.log("");
        retrofit.RestAdapter.Builder builder14 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder19.setServer("hi!");
        retrofit.RestAdapter restAdapter22 = builder21.build();
        retrofit.RestAdapter restAdapter23 = builder21.build();
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder24.setLogLevel(logLevel27);
        boolean boolean29 = logLevel27.log();
        restAdapter23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder31 = builder14.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder33 = builder14.setServer("hi!");
        retrofit.RestAdapter.Builder builder35 = builder14.setServer("hi!");
        retrofit.RequestInterceptor requestInterceptor36 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder37 = builder14.setRequestInterceptor(requestInterceptor36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNotNull(restAdapter23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
    }

    @Test
    public void test04104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04104");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder22.setServer("hi!");
        retrofit.RestAdapter.Builder builder26 = builder22.setServer("hi!");
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder33 = builder31.setServer("hi!");
        retrofit.RestAdapter restAdapter34 = builder33.build();
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder41 = builder39.setServer("hi!");
        retrofit.RestAdapter restAdapter42 = builder41.build();
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        restAdapter42.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder53 = builder51.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder55 = builder53.setServer("hi!");
        retrofit.RestAdapter restAdapter56 = builder55.build();
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLog(log58);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder61 = builder59.setLogLevel(logLevel60);
        restAdapter56.setLogLevel(logLevel60);
        restAdapter42.setLogLevel(logLevel60);
        boolean boolean64 = logLevel60.log();
        boolean boolean65 = logLevel60.log();
        restAdapter34.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder67 = builder22.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder69 = builder22.setServer("hi!");
        retrofit.RestAdapter.Builder builder71 = builder69.setServer("hi!");
        java.lang.Class<?> wildcardClass72 = builder71.getClass();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(restAdapter34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(restAdapter42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(restAdapter56);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test04105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04105");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.lang.String str7 = request6.getUrl();
        java.lang.String str8 = request6.getMethod();
        java.lang.String str9 = request6.getMethod();
        java.lang.Class<?> wildcardClass10 = request6.getClass();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test04106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04106");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        log8.log("");
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log8);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter15 = builder14.build();
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLog(log17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("hi!");
        retrofit.RestAdapter restAdapter23 = builder22.build();
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        restAdapter23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = builder34.setServer("hi!");
        retrofit.RestAdapter restAdapter37 = builder36.build();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLog(log39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder40.setLogLevel(logLevel41);
        restAdapter37.setLogLevel(logLevel41);
        restAdapter23.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder51 = builder49.setServer("hi!");
        retrofit.RestAdapter restAdapter52 = builder51.build();
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLog(log54);
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder57 = builder55.setLogLevel(logLevel56);
        restAdapter52.setLogLevel(logLevel56);
        restAdapter23.setLogLevel(logLevel56);
        retrofit.RestAdapter.Builder builder60 = builder14.setLogLevel(logLevel56);
        retrofit.ErrorHandler errorHandler61 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder62 = builder60.setErrorHandler(errorHandler61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(restAdapter15);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(restAdapter23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(restAdapter37);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(restAdapter52);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder60);
    }

    @Test
    public void test04107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04107");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder16 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder23 = builder21.setServer("hi!");
        retrofit.RestAdapter restAdapter24 = builder23.build();
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        restAdapter24.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder37 = builder35.setServer("hi!");
        retrofit.RestAdapter restAdapter38 = builder37.build();
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        restAdapter38.setLogLevel(logLevel42);
        restAdapter24.setLogLevel(logLevel42);
        retrofit.RestAdapter.LogLevel logLevel46 = restAdapter24.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel47 = restAdapter24.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter24.getLogLevel();
        retrofit.RestAdapter.Builder builder49 = builder4.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder51 = builder49.setServer("hi!");
        retrofit.client.Client client52 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder53 = builder49.setClient(client52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(restAdapter24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(restAdapter38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
    }

    @Test
    public void test04108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04108");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Log log3 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder4 = builder0.setLog(log3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = builder9.setServer("hi!");
        retrofit.RestAdapter restAdapter12 = builder11.build();
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log14 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLog(log14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder19 = builder17.setServer("hi!");
        retrofit.RestAdapter restAdapter20 = builder19.build();
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLog(log22);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        restAdapter20.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder33 = builder31.setServer("hi!");
        retrofit.RestAdapter restAdapter34 = builder33.build();
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        restAdapter34.setLogLevel(logLevel38);
        restAdapter20.setLogLevel(logLevel38);
        boolean boolean42 = logLevel38.log();
        boolean boolean43 = logLevel38.log();
        restAdapter12.setLogLevel(logLevel38);
        retrofit.RestAdapter.LogLevel logLevel45 = restAdapter12.getLogLevel();
        boolean boolean46 = logLevel45.log();
        retrofit.RestAdapter.Builder builder47 = builder4.setLogLevel(logLevel45);
        java.lang.Class<?> wildcardClass48 = builder4.getClass();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log3);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(restAdapter12);
        org.junit.Assert.assertNotNull(log14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(restAdapter20);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(restAdapter34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test04109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04109");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder14.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = builder9.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLog(log27);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder32.setLog(log35);
        log35.log("hi!");
        log35.log("");
        retrofit.RestAdapter.Builder builder41 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder42 = builder4.setLog(log35);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = builder47.setServer("hi!");
        retrofit.RestAdapter restAdapter50 = builder49.build();
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        restAdapter50.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLog(log58);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder61 = builder59.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder63 = builder61.setServer("hi!");
        retrofit.RestAdapter restAdapter64 = builder63.build();
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLog(log66);
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder69 = builder67.setLogLevel(logLevel68);
        restAdapter64.setLogLevel(logLevel68);
        restAdapter50.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder74 = builder72.setLog(log73);
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder76 = builder74.setLogLevel(logLevel75);
        retrofit.RestAdapter.Builder builder78 = builder76.setServer("hi!");
        retrofit.RestAdapter restAdapter79 = builder78.build();
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder82 = builder80.setLog(log81);
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder84 = builder82.setLogLevel(logLevel83);
        restAdapter79.setLogLevel(logLevel83);
        restAdapter50.setLogLevel(logLevel83);
        retrofit.RestAdapter.LogLevel logLevel87 = restAdapter50.getLogLevel();
        retrofit.RestAdapter.Builder builder88 = builder4.setLogLevel(logLevel87);
        retrofit.RestAdapter.Builder builder90 = builder88.setServer("hi!");
        retrofit.RestAdapter restAdapter91 = builder88.build();
        retrofit.ErrorHandler errorHandler92 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder93 = builder88.setErrorHandler(errorHandler92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(restAdapter50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(restAdapter64);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(restAdapter79);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(restAdapter91);
    }

    @Test
    public void test04110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04110");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder12.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder19.setServer("hi!");
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLog(log23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder32.setLog(log35);
        retrofit.RestAdapter.Builder builder37 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder38 = builder24.setLog(log35);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder39.setLog(log42);
        retrofit.RestAdapter.Builder builder44 = builder38.setLog(log42);
        retrofit.RestAdapter.Builder builder46 = builder44.setServer("hi!");
        retrofit.RestAdapter.Builder builder48 = builder44.setServer("hi!");
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        log50.log("");
        log50.log("");
        retrofit.RestAdapter.Builder builder56 = builder44.setLog(log50);
        retrofit.RestAdapter.Builder builder57 = builder19.setLog(log50);
        retrofit.RestAdapter restAdapter58 = builder57.build();
        retrofit.RestAdapter restAdapter59 = builder57.build();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.Builder builder63 = builder57.setLog(log61);
        retrofit.RestAdapter.Builder builder64 = builder12.setLog(log61);
        retrofit.RestAdapter restAdapter65 = builder64.build();
        retrofit.RestAdapter restAdapter66 = builder64.build();
        retrofit.Profiler profiler67 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder68 = builder64.setProfiler(profiler67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(restAdapter58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(restAdapter65);
        org.junit.Assert.assertNotNull(restAdapter66);
    }

    @Test
    public void test04111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04111");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = builder6.build();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        restAdapter7.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLog(log15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder20 = builder18.setServer("hi!");
        retrofit.RestAdapter restAdapter21 = builder20.build();
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLog(log23);
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        restAdapter21.setLogLevel(logLevel25);
        restAdapter7.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel29 = null;
        restAdapter7.setLogLevel(logLevel29);
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter7.getLogLevel();
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLog(log33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder34.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder38 = builder36.setServer("hi!");
        retrofit.RestAdapter restAdapter39 = builder38.build();
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.Builder builder46 = builder44.setServer("hi!");
        retrofit.RestAdapter restAdapter47 = builder46.build();
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        restAdapter47.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder58 = builder56.setLogLevel(logLevel57);
        retrofit.RestAdapter.Builder builder60 = builder58.setServer("hi!");
        retrofit.RestAdapter restAdapter61 = builder60.build();
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder64 = builder62.setLog(log63);
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        restAdapter61.setLogLevel(logLevel65);
        restAdapter47.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder71 = builder69.setLog(log70);
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder73 = builder71.setLogLevel(logLevel72);
        retrofit.RestAdapter.Builder builder75 = builder73.setServer("hi!");
        retrofit.RestAdapter restAdapter76 = builder75.build();
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log78 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder79 = builder77.setLog(log78);
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder81 = builder79.setLogLevel(logLevel80);
        restAdapter76.setLogLevel(logLevel80);
        restAdapter47.setLogLevel(logLevel80);
        retrofit.RestAdapter.LogLevel logLevel84 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter47.setLogLevel(logLevel84);
        restAdapter39.setLogLevel(logLevel84);
        retrofit.RestAdapter.LogLevel logLevel87 = restAdapter39.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel88 = restAdapter39.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel89 = restAdapter39.getLogLevel();
        // The following exception was thrown during execution in test generation
        try {
            restAdapter7.setLogLevel(logLevel89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Log level may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(restAdapter7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(restAdapter21);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(logLevel31);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(restAdapter39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(restAdapter47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(restAdapter61);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(restAdapter76);
        org.junit.Assert.assertNotNull(log78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel88 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel88.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test04112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04112");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder4.setLog(log20);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder4.setLogLevel(logLevel23);
        retrofit.RestAdapter restAdapter25 = builder24.build();
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLog(log27);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLog(log30);
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder36.setLog(log39);
        retrofit.RestAdapter.Builder builder41 = builder33.setLog(log39);
        retrofit.RestAdapter.Builder builder42 = builder28.setLog(log39);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLog(log47);
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder57 = builder53.setLog(log56);
        retrofit.RestAdapter.Builder builder58 = builder50.setLog(log56);
        retrofit.RestAdapter.Builder builder59 = builder43.setLog(log56);
        retrofit.RestAdapter.Builder builder60 = builder28.setLog(log56);
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder63 = builder61.setLog(log62);
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder65 = builder63.setLogLevel(logLevel64);
        retrofit.RestAdapter.Builder builder66 = builder60.setLogLevel(logLevel64);
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log68 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder69 = builder67.setLog(log68);
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder70.setLog(log71);
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder74 = builder72.setLogLevel(logLevel73);
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log76 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder77 = builder75.setLog(log76);
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder79 = builder77.setLogLevel(logLevel78);
        retrofit.RestAdapter.Log log80 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder81 = builder77.setLog(log80);
        retrofit.RestAdapter.Builder builder82 = builder74.setLog(log80);
        retrofit.RestAdapter.Builder builder83 = builder69.setLog(log80);
        log80.log("");
        log80.log("");
        retrofit.RestAdapter.Builder builder88 = builder66.setLog(log80);
        log80.log("hi!");
        retrofit.RestAdapter.Builder builder91 = builder24.setLog(log80);
        retrofit.RestAdapter.Builder builder93 = builder91.setServer("hi!");
        retrofit.RequestInterceptor requestInterceptor94 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder95 = builder93.setRequestInterceptor(requestInterceptor94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(restAdapter25);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(log80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(builder93);
    }

    @Test
    public void test04113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04113");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder12.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder19.setServer("hi!");
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLog(log23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder32.setLog(log35);
        retrofit.RestAdapter.Builder builder37 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder38 = builder24.setLog(log35);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder39.setLog(log42);
        retrofit.RestAdapter.Builder builder44 = builder38.setLog(log42);
        retrofit.RestAdapter.Builder builder46 = builder44.setServer("hi!");
        retrofit.RestAdapter.Builder builder48 = builder44.setServer("hi!");
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        log50.log("");
        log50.log("");
        retrofit.RestAdapter.Builder builder56 = builder44.setLog(log50);
        retrofit.RestAdapter.Builder builder57 = builder19.setLog(log50);
        retrofit.RestAdapter restAdapter58 = builder57.build();
        retrofit.RestAdapter restAdapter59 = builder57.build();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.Builder builder63 = builder57.setLog(log61);
        retrofit.RestAdapter.Builder builder64 = builder12.setLog(log61);
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLog(log66);
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder69 = builder67.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder70.setLog(log71);
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder74 = builder72.setLogLevel(logLevel73);
        retrofit.RestAdapter.Log log75 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder76 = builder72.setLog(log75);
        retrofit.RestAdapter.Builder builder77 = builder69.setLog(log75);
        retrofit.RestAdapter.Builder builder79 = builder69.setServer("hi!");
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder82 = builder80.setLog(log81);
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder84 = builder82.setLogLevel(logLevel83);
        retrofit.RestAdapter.Log log85 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder86 = builder82.setLog(log85);
        retrofit.RestAdapter.Builder builder87 = builder69.setLog(log85);
        retrofit.RestAdapter.Builder builder88 = builder64.setLog(log85);
        retrofit.RestAdapter restAdapter89 = builder88.build();
        java.lang.Class<?> wildcardClass90 = restAdapter89.getClass();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(restAdapter58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(log75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(log85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(restAdapter89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test04114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04114");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder14.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = builder9.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLog(log27);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder33 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder40 = builder38.setServer("hi!");
        retrofit.RestAdapter restAdapter41 = builder40.build();
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        restAdapter41.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder54 = builder52.setServer("hi!");
        retrofit.RestAdapter restAdapter55 = builder54.build();
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLog(log57);
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder60 = builder58.setLogLevel(logLevel59);
        restAdapter55.setLogLevel(logLevel59);
        restAdapter41.setLogLevel(logLevel59);
        retrofit.RestAdapter.LogLevel logLevel63 = restAdapter41.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel64 = restAdapter41.getLogLevel();
        retrofit.RestAdapter.Builder builder65 = builder29.setLogLevel(logLevel64);
        boolean boolean66 = logLevel64.log();
        retrofit.RestAdapter.Builder builder67 = builder6.setLogLevel(logLevel64);
        retrofit.RestAdapter restAdapter68 = builder67.build();
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder71 = builder69.setLog(log70);
        retrofit.RestAdapter.Log log72 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder73 = builder69.setLog(log72);
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter.Builder builder75 = builder69.setLogLevel(logLevel74);
        retrofit.RestAdapter.Builder builder76 = builder67.setLogLevel(logLevel74);
        retrofit.RestAdapter restAdapter77 = builder76.build();
        retrofit.Server server78 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder79 = builder76.setServer(server78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(restAdapter41);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(restAdapter55);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(restAdapter68);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(restAdapter77);
    }

    @Test
    public void test04115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04115");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder4.setLog(log20);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder4.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder26 = builder4.setServer("hi!");
        retrofit.client.Client client27 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder28 = builder26.setClient(client27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
    }

    @Test
    public void test04116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04116");
        retrofit.client.Header[] headerArray12 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList13 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList13, headerArray12);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList13, typedOutput15);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList13, typedOutput17);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList13, typedOutput19);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList13, typedOutput21);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList13, typedOutput23);
        java.util.List<retrofit.client.Header> headerList25 = request24.getHeaders();
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "hi!", headerList25, typedOutput26);
        retrofit.mime.TypedOutput typedOutput28 = request27.getBody();
        org.junit.Assert.assertNotNull(headerArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(headerList25);
        org.junit.Assert.assertNull(typedOutput28);
    }

    @Test
    public void test04117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04117");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLog(log33);
        log33.log("");
        retrofit.RestAdapter.Builder builder37 = builder29.setLog(log33);
        retrofit.RestAdapter.Builder builder38 = builder24.setLog(log33);
        retrofit.RestAdapter restAdapter39 = builder24.build();
        retrofit.RestAdapter restAdapter40 = builder24.build();
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLog(log42);
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLog(log45);
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder53 = builder51.setLogLevel(logLevel52);
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder51.setLog(log54);
        retrofit.RestAdapter.Builder builder56 = builder48.setLog(log54);
        retrofit.RestAdapter.Builder builder57 = builder43.setLog(log54);
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder60 = builder58.setLog(log59);
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder58.setLog(log61);
        retrofit.RestAdapter.Builder builder63 = builder57.setLog(log61);
        retrofit.RestAdapter.Builder builder65 = builder57.setServer("hi!");
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder68 = builder66.setLog(log67);
        retrofit.RestAdapter.Builder builder69 = builder65.setLog(log67);
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder70.setLog(log71);
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder74 = builder72.setLogLevel(logLevel73);
        retrofit.RestAdapter.Builder builder76 = builder74.setServer("hi!");
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log78 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder79 = builder77.setLog(log78);
        log78.log("");
        retrofit.RestAdapter.Builder builder82 = builder74.setLog(log78);
        log78.log("");
        log78.log("");
        retrofit.RestAdapter.Builder builder87 = builder65.setLog(log78);
        retrofit.RestAdapter.Builder builder88 = builder24.setLog(log78);
        retrofit.ErrorHandler errorHandler89 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder90 = builder88.setErrorHandler(errorHandler89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(restAdapter39);
        org.junit.Assert.assertNotNull(restAdapter40);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(log78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder88);
    }

    @Test
    public void test04118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04118");
        retrofit.client.Header[] headerArray12 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList13 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList13, headerArray12);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList13, typedOutput15);
        java.lang.String str17 = request16.getMethod();
        java.util.List<retrofit.client.Header> headerList18 = request16.getHeaders();
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("hi!", "hi!", headerList18, typedOutput19);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("", "hi!", headerList18, typedOutput21);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("hi!", "", headerList18, typedOutput23);
        retrofit.mime.TypedOutput typedOutput25 = request24.getBody();
        java.lang.String str26 = request24.getUrl();
        java.util.List<retrofit.client.Header> headerList27 = request24.getHeaders();
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        retrofit.mime.TypedOutput typedOutput30 = null;
        retrofit.client.Request request31 = new retrofit.client.Request("hi!", "", headerList27, typedOutput30);
        retrofit.mime.TypedOutput typedOutput32 = request31.getBody();
        java.util.List<retrofit.client.Header> headerList33 = request31.getHeaders();
        org.junit.Assert.assertNotNull(headerArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(headerList18);
        org.junit.Assert.assertNull(typedOutput25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(headerList27);
        org.junit.Assert.assertNull(typedOutput32);
        org.junit.Assert.assertNotNull(headerList33);
    }

    @Test
    public void test04119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04119");
        retrofit.client.Header[] headerArray12 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList13 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList13, headerArray12);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList13, typedOutput15);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList13, typedOutput17);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList13, typedOutput19);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList13, typedOutput21);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList13, typedOutput23);
        java.lang.String str25 = request24.getUrl();
        java.util.List<retrofit.client.Header> headerList26 = request24.getHeaders();
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("", "", headerList26, typedOutput27);
        org.junit.Assert.assertNotNull(headerArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(headerList26);
    }

    @Test
    public void test04120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04120");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder32.setLog(log35);
        retrofit.RestAdapter.Builder builder37 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder39 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder42.setLog(log45);
        retrofit.RestAdapter.Builder builder47 = builder29.setLog(log45);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder29.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder50 = builder16.setLogLevel(logLevel48);
        retrofit.RestAdapter restAdapter51 = builder16.build();
        retrofit.RestAdapter restAdapter52 = builder16.build();
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder55 = builder16.setExecutors(executor53, executor54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(restAdapter51);
        org.junit.Assert.assertNotNull(restAdapter52);
    }

    @Test
    public void test04121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04121");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Log log5 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder6 = builder2.setLog(log5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder14.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = builder9.setLog(log20);
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder9.setLog(log24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLog(log27);
        log27.log("");
        retrofit.RestAdapter.Builder builder31 = builder25.setLog(log27);
        retrofit.RestAdapter.Builder builder32 = builder6.setLog(log27);
        retrofit.RestAdapter.Builder builder34 = builder6.setServer("hi!");
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.Builder builder39 = builder37.setServer("hi!");
        retrofit.RestAdapter restAdapter40 = builder37.build();
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLog(log42);
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLog(log45);
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder53 = builder51.setLogLevel(logLevel52);
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder51.setLog(log54);
        retrofit.RestAdapter.Builder builder56 = builder48.setLog(log54);
        retrofit.RestAdapter.Builder builder57 = builder43.setLog(log54);
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder60 = builder58.setLog(log59);
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder63 = builder61.setLog(log62);
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder65 = builder63.setLogLevel(logLevel64);
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder68 = builder66.setLog(log67);
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder70 = builder68.setLogLevel(logLevel69);
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder68.setLog(log71);
        retrofit.RestAdapter.Builder builder73 = builder65.setLog(log71);
        retrofit.RestAdapter.Builder builder74 = builder58.setLog(log71);
        retrofit.RestAdapter.Builder builder75 = builder43.setLog(log71);
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log77 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder78 = builder76.setLog(log77);
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder80 = builder78.setLogLevel(logLevel79);
        retrofit.RestAdapter.Builder builder81 = builder75.setLogLevel(logLevel79);
        retrofit.RestAdapter.Builder builder83 = builder81.setServer("hi!");
        retrofit.RestAdapter.Builder builder85 = builder83.setServer("hi!");
        retrofit.RestAdapter.Builder builder86 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log87 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder88 = builder86.setLog(log87);
        retrofit.RestAdapter.LogLevel logLevel89 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder90 = builder88.setLogLevel(logLevel89);
        boolean boolean91 = logLevel89.log();
        retrofit.RestAdapter.Builder builder92 = builder85.setLogLevel(logLevel89);
        boolean boolean93 = logLevel89.log();
        restAdapter40.setLogLevel(logLevel89);
        retrofit.RestAdapter.Builder builder95 = builder34.setLogLevel(logLevel89);
        retrofit.ErrorHandler errorHandler96 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder97 = builder34.setErrorHandler(errorHandler96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log5);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(restAdapter40);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(log77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(log87);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(builder95);
    }

    @Test
    public void test04122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04122");
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList9, typedOutput13);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput15);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList9, typedOutput17);
        java.lang.Class<?> wildcardClass19 = request18.getClass();
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test04123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04123");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLog(log33);
        log33.log("");
        retrofit.RestAdapter.Builder builder37 = builder29.setLog(log33);
        retrofit.RestAdapter.Builder builder38 = builder24.setLog(log33);
        retrofit.RestAdapter restAdapter39 = builder24.build();
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.Builder builder46 = builder44.setServer("hi!");
        retrofit.RestAdapter restAdapter47 = builder46.build();
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter47.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel49 = restAdapter47.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel50 = restAdapter47.getLogLevel();
        retrofit.RestAdapter.Builder builder51 = builder24.setLogLevel(logLevel50);
        retrofit.client.Client client52 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder53 = builder24.setClient(client52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(restAdapter39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(restAdapter47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder51);
    }

    @Test
    public void test04124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04124");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder14.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = builder9.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLog(log27);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder33 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        log35.log("");
        log35.log("");
        retrofit.RestAdapter.Builder builder41 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder42 = builder4.setLog(log35);
        retrofit.RestAdapter restAdapter43 = builder42.build();
        retrofit.RestAdapter restAdapter44 = builder42.build();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.Builder builder48 = builder42.setLog(log46);
        retrofit.RestAdapter.Builder builder50 = builder42.setServer("hi!");
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder58 = builder56.setLogLevel(logLevel57);
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder61 = builder59.setLog(log60);
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder63 = builder61.setLogLevel(logLevel62);
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder65 = builder61.setLog(log64);
        retrofit.RestAdapter.Builder builder66 = builder58.setLog(log64);
        retrofit.RestAdapter.Builder builder67 = builder53.setLog(log64);
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder68.setLog(log69);
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder68.setLog(log71);
        retrofit.RestAdapter.Builder builder73 = builder67.setLog(log71);
        retrofit.RestAdapter.Builder builder75 = builder67.setServer("hi!");
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log77 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder78 = builder76.setLog(log77);
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder80 = builder78.setLogLevel(logLevel79);
        retrofit.RestAdapter.Builder builder82 = builder80.setServer("hi!");
        retrofit.RestAdapter.Builder builder83 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log84 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder85 = builder83.setLog(log84);
        log84.log("");
        retrofit.RestAdapter.Builder builder88 = builder80.setLog(log84);
        retrofit.RestAdapter.Builder builder89 = builder75.setLog(log84);
        retrofit.RestAdapter restAdapter90 = builder89.build();
        retrofit.RestAdapter.LogLevel logLevel91 = restAdapter90.getLogLevel();
        retrofit.RestAdapter.Builder builder92 = builder50.setLogLevel(logLevel91);
        retrofit.converter.Converter converter93 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder94 = builder92.setConverter(converter93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(restAdapter43);
        org.junit.Assert.assertNotNull(restAdapter44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(log77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(log84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(restAdapter90);
        org.junit.Assert.assertTrue("'" + logLevel91 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel91.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder92);
    }

    @Test
    public void test04125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04125");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        log16.log("");
        retrofit.RestAdapter.Builder builder20 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLog(log22);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder23.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder20.setLog(log26);
        retrofit.RestAdapter restAdapter29 = builder28.build();
        retrofit.RestAdapter restAdapter30 = builder28.build();
        java.lang.Class<?> wildcardClass31 = restAdapter30.getClass();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(restAdapter29);
        org.junit.Assert.assertNotNull(restAdapter30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test04126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04126");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder4.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = builder27.setServer("hi!");
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLog(log34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLog(log39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder40.setLogLevel(logLevel41);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder40.setLog(log43);
        retrofit.RestAdapter.Builder builder45 = builder37.setLog(log43);
        retrofit.RestAdapter.Builder builder46 = builder32.setLog(log43);
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLog(log48);
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder47.setLog(log50);
        retrofit.RestAdapter.Builder builder52 = builder46.setLog(log50);
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLog(log54);
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder57 = builder55.setLogLevel(logLevel56);
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder55.setLog(log58);
        log58.log("hi!");
        log58.log("");
        retrofit.RestAdapter.Builder builder64 = builder52.setLog(log58);
        retrofit.RestAdapter.Builder builder65 = builder27.setLog(log58);
        log58.log("");
        retrofit.RestAdapter.Builder builder68 = builder22.setLog(log58);
        retrofit.RestAdapter.Builder builder70 = builder22.setServer("hi!");
        retrofit.ErrorHandler errorHandler71 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder72 = builder22.setErrorHandler(errorHandler71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder70);
    }

    @Test
    public void test04127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04127");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("hi!");
        retrofit.RestAdapter restAdapter32 = builder31.build();
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLog(log34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        restAdapter32.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder45 = builder43.setServer("hi!");
        retrofit.RestAdapter restAdapter46 = builder45.build();
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLog(log48);
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        restAdapter46.setLogLevel(logLevel50);
        restAdapter32.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder58 = builder56.setLogLevel(logLevel57);
        retrofit.RestAdapter.Builder builder60 = builder58.setServer("hi!");
        retrofit.RestAdapter restAdapter61 = builder60.build();
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder64 = builder62.setLog(log63);
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        restAdapter61.setLogLevel(logLevel65);
        restAdapter32.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder69 = builder16.setLogLevel(logLevel65);
        retrofit.RestAdapter restAdapter70 = builder69.build();
        retrofit.RestAdapter.Builder builder72 = builder69.setServer("hi!");
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder75 = builder73.setLog(log74);
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder77 = builder75.setLogLevel(logLevel76);
        retrofit.RestAdapter.Builder builder79 = builder77.setServer("hi!");
        retrofit.RestAdapter restAdapter80 = builder79.build();
        retrofit.RestAdapter.LogLevel logLevel81 = restAdapter80.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel82 = restAdapter80.getLogLevel();
        boolean boolean83 = logLevel82.log();
        boolean boolean84 = logLevel82.log();
        retrofit.RestAdapter.Builder builder85 = builder72.setLogLevel(logLevel82);
        retrofit.client.Client client86 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder87 = builder85.setClient(client86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(restAdapter32);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(restAdapter46);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(restAdapter61);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(restAdapter70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(restAdapter80);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(builder85);
    }

    @Test
    public void test04128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04128");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        log8.log("");
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log8);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter15 = builder14.build();
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLog(log17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("hi!");
        retrofit.RestAdapter restAdapter23 = builder22.build();
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        restAdapter23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = builder34.setServer("hi!");
        retrofit.RestAdapter restAdapter37 = builder36.build();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLog(log39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder40.setLogLevel(logLevel41);
        restAdapter37.setLogLevel(logLevel41);
        restAdapter23.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder51 = builder49.setServer("hi!");
        retrofit.RestAdapter restAdapter52 = builder51.build();
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLog(log54);
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder57 = builder55.setLogLevel(logLevel56);
        restAdapter52.setLogLevel(logLevel56);
        restAdapter23.setLogLevel(logLevel56);
        retrofit.RestAdapter.Builder builder60 = builder14.setLogLevel(logLevel56);
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder63 = builder61.setLog(log62);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLog(log65);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder68 = builder66.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder71 = builder69.setLog(log70);
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder73 = builder71.setLogLevel(logLevel72);
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder75 = builder71.setLog(log74);
        retrofit.RestAdapter.Builder builder76 = builder68.setLog(log74);
        retrofit.RestAdapter.Builder builder77 = builder63.setLog(log74);
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log79 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder80 = builder78.setLog(log79);
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder82 = builder78.setLog(log81);
        retrofit.RestAdapter.Builder builder83 = builder77.setLog(log81);
        retrofit.RestAdapter.Builder builder85 = builder77.setServer("hi!");
        retrofit.RestAdapter.Builder builder86 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log87 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder88 = builder86.setLog(log87);
        retrofit.RestAdapter.Builder builder89 = builder85.setLog(log87);
        retrofit.RestAdapter restAdapter90 = builder85.build();
        retrofit.RestAdapter restAdapter91 = builder85.build();
        retrofit.RestAdapter restAdapter92 = builder85.build();
        retrofit.RestAdapter.LogLevel logLevel93 = restAdapter92.getLogLevel();
        boolean boolean94 = logLevel93.log();
        retrofit.RestAdapter.Builder builder95 = builder14.setLogLevel(logLevel93);
        retrofit.converter.Converter converter96 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder97 = builder95.setConverter(converter96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(restAdapter15);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(restAdapter23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(restAdapter37);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(restAdapter52);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(log87);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(restAdapter90);
        org.junit.Assert.assertNotNull(restAdapter91);
        org.junit.Assert.assertNotNull(restAdapter92);
        org.junit.Assert.assertTrue("'" + logLevel93 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel93.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(builder95);
    }

    @Test
    public void test04129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04129");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder12.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder19.setServer("hi!");
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLog(log23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder32.setLog(log35);
        retrofit.RestAdapter.Builder builder37 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder38 = builder24.setLog(log35);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder39.setLog(log42);
        retrofit.RestAdapter.Builder builder44 = builder38.setLog(log42);
        retrofit.RestAdapter.Builder builder46 = builder44.setServer("hi!");
        retrofit.RestAdapter.Builder builder48 = builder44.setServer("hi!");
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        log50.log("");
        log50.log("");
        retrofit.RestAdapter.Builder builder56 = builder44.setLog(log50);
        retrofit.RestAdapter.Builder builder57 = builder19.setLog(log50);
        retrofit.RestAdapter restAdapter58 = builder57.build();
        retrofit.RestAdapter restAdapter59 = builder57.build();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.Builder builder63 = builder57.setLog(log61);
        retrofit.RestAdapter.Builder builder64 = builder12.setLog(log61);
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLog(log66);
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder69 = builder67.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder70.setLog(log71);
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder74 = builder72.setLogLevel(logLevel73);
        retrofit.RestAdapter.Log log75 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder76 = builder72.setLog(log75);
        retrofit.RestAdapter.Builder builder77 = builder69.setLog(log75);
        retrofit.RestAdapter.Builder builder79 = builder69.setServer("hi!");
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder82 = builder80.setLog(log81);
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder84 = builder82.setLogLevel(logLevel83);
        retrofit.RestAdapter.Log log85 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder86 = builder82.setLog(log85);
        retrofit.RestAdapter.Builder builder87 = builder69.setLog(log85);
        retrofit.RestAdapter.Builder builder88 = builder64.setLog(log85);
        retrofit.RestAdapter restAdapter89 = builder88.build();
        retrofit.Server server90 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder91 = builder88.setServer(server90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(restAdapter58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(log75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(log85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(restAdapter89);
    }

    @Test
    public void test04130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04130");
        retrofit.client.Header[] headerArray12 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList13 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList13, headerArray12);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList13, typedOutput15);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList13, typedOutput17);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList13, typedOutput19);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList13, typedOutput21);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList13, typedOutput23);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList13, typedOutput25);
        java.lang.String str27 = request26.getMethod();
        java.lang.String str28 = request26.getUrl();
        org.junit.Assert.assertNotNull(headerArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
    }

    @Test
    public void test04131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04131");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder4.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = builder27.setServer("hi!");
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        log31.log("");
        retrofit.RestAdapter.Builder builder35 = builder27.setLog(log31);
        log31.log("");
        retrofit.RestAdapter.Builder builder38 = builder4.setLog(log31);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.Builder builder43 = builder41.setServer("hi!");
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLog(log45);
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder53 = builder51.setLogLevel(logLevel52);
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder51.setLog(log54);
        retrofit.RestAdapter.Builder builder56 = builder48.setLog(log54);
        retrofit.RestAdapter.Builder builder57 = builder43.setLog(log54);
        retrofit.RestAdapter.Builder builder58 = builder38.setLog(log54);
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder61 = builder59.setLog(log60);
        log60.log("");
        retrofit.RestAdapter.Builder builder64 = builder38.setLog(log60);
        retrofit.converter.Converter converter65 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder66 = builder64.setConverter(converter65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder64);
    }

    @Test
    public void test04132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04132");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log26);
        retrofit.RestAdapter.Builder builder30 = builder28.setServer("hi!");
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder41.setLog(log44);
        retrofit.RestAdapter.Builder builder46 = builder38.setLog(log44);
        retrofit.RestAdapter.Builder builder47 = builder33.setLog(log44);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder52 = builder48.setLog(log51);
        retrofit.RestAdapter.Builder builder53 = builder47.setLog(log51);
        retrofit.RestAdapter.Builder builder55 = builder47.setServer("hi!");
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLog(log57);
        retrofit.RestAdapter.Builder builder59 = builder55.setLog(log57);
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        boolean boolean65 = logLevel63.log();
        retrofit.RestAdapter.Builder builder66 = builder59.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder67 = builder30.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder68.setLog(log69);
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log72 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder73 = builder71.setLog(log72);
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder75 = builder73.setLogLevel(logLevel74);
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log77 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder78 = builder76.setLog(log77);
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder80 = builder78.setLogLevel(logLevel79);
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder82 = builder78.setLog(log81);
        retrofit.RestAdapter.Builder builder83 = builder75.setLog(log81);
        retrofit.RestAdapter.Builder builder84 = builder70.setLog(log81);
        log81.log("");
        log81.log("");
        retrofit.RestAdapter.Builder builder89 = builder30.setLog(log81);
        retrofit.RestAdapter.Builder builder91 = builder30.setServer("hi!");
        retrofit.RestAdapter restAdapter92 = builder30.build();
        retrofit.Server server93 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder94 = builder30.setServer(server93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(log77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(restAdapter92);
    }

    @Test
    public void test04133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04133");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        log8.log("");
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log8);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log14 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLog(log14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLog(log17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLog(log22);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder23.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder20.setLog(log26);
        retrofit.RestAdapter.Builder builder29 = builder15.setLog(log26);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLog(log34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLog(log39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder40.setLogLevel(logLevel41);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder40.setLog(log43);
        retrofit.RestAdapter.Builder builder45 = builder37.setLog(log43);
        retrofit.RestAdapter.Builder builder46 = builder30.setLog(log43);
        retrofit.RestAdapter.Builder builder47 = builder15.setLog(log43);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder53 = builder47.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder54 = builder4.setLogLevel(logLevel51);
        retrofit.RestAdapter restAdapter55 = builder54.build();
        retrofit.client.Client client56 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder57 = builder54.setClient(client56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(restAdapter55);
    }

    @Test
    public void test04134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04134");
        retrofit.client.Header[] headerArray18 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList19 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList19, headerArray18);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList19, typedOutput21);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList19, typedOutput23);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList19, typedOutput25);
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList19, typedOutput27);
        retrofit.mime.TypedOutput typedOutput29 = null;
        retrofit.client.Request request30 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList19, typedOutput29);
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList19, typedOutput31);
        retrofit.mime.TypedOutput typedOutput33 = null;
        retrofit.client.Request request34 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList19, typedOutput33);
        retrofit.mime.TypedOutput typedOutput35 = null;
        retrofit.client.Request request36 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList19, typedOutput35);
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList19, typedOutput37);
        java.lang.String str39 = request38.getUrl();
        java.lang.Class<?> wildcardClass40 = request38.getClass();
        org.junit.Assert.assertNotNull(headerArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test04135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04135");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        log10.log("");
        retrofit.RestAdapter.Builder builder14 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder19.setServer("hi!");
        retrofit.RestAdapter restAdapter22 = builder21.build();
        retrofit.RestAdapter restAdapter23 = builder21.build();
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder24.setLogLevel(logLevel27);
        boolean boolean29 = logLevel27.log();
        restAdapter23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder31 = builder14.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLog(log33);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder42.setLog(log45);
        retrofit.RestAdapter.Builder builder47 = builder39.setLog(log45);
        retrofit.RestAdapter.Builder builder48 = builder34.setLog(log45);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder49.setLog(log52);
        retrofit.RestAdapter.Builder builder54 = builder48.setLog(log52);
        retrofit.RestAdapter.Builder builder56 = builder48.setServer("hi!");
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLog(log58);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder61 = builder59.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder63 = builder61.setServer("hi!");
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLog(log65);
        log65.log("");
        retrofit.RestAdapter.Builder builder69 = builder61.setLog(log65);
        retrofit.RestAdapter.Builder builder70 = builder56.setLog(log65);
        log65.log("");
        log65.log("");
        retrofit.RestAdapter.Builder builder75 = builder31.setLog(log65);
        java.util.concurrent.Executor executor76 = null;
        java.util.concurrent.Executor executor77 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder78 = builder75.setExecutors(executor76, executor77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNotNull(restAdapter23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder75);
    }

    @Test
    public void test04136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04136");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = builder6.build();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder14 = builder12.setServer("hi!");
        retrofit.RestAdapter restAdapter15 = builder14.build();
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLog(log17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        restAdapter15.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLog(log23);
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder28 = builder26.setServer("hi!");
        retrofit.RestAdapter restAdapter29 = builder28.build();
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        restAdapter29.setLogLevel(logLevel33);
        restAdapter15.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter15.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter15.getLogLevel();
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLog(log48);
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder49.setLog(log52);
        retrofit.RestAdapter.Builder builder54 = builder46.setLog(log52);
        retrofit.RestAdapter.Builder builder55 = builder41.setLog(log52);
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLog(log57);
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder60 = builder56.setLog(log59);
        retrofit.RestAdapter.Builder builder61 = builder55.setLog(log59);
        retrofit.RestAdapter.Builder builder63 = builder55.setServer("hi!");
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLog(log65);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder68 = builder66.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder71 = builder69.setLog(log70);
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder73 = builder71.setLogLevel(logLevel72);
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder75 = builder71.setLog(log74);
        retrofit.RestAdapter.Builder builder76 = builder68.setLog(log74);
        retrofit.RestAdapter.Builder builder78 = builder68.setServer("hi!");
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log80 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder81 = builder79.setLog(log80);
        retrofit.RestAdapter.LogLevel logLevel82 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder83 = builder81.setLogLevel(logLevel82);
        retrofit.RestAdapter.Log log84 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder85 = builder81.setLog(log84);
        retrofit.RestAdapter.Builder builder86 = builder68.setLog(log84);
        retrofit.RestAdapter.LogLevel logLevel87 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder88 = builder68.setLogLevel(logLevel87);
        retrofit.RestAdapter.Builder builder89 = builder55.setLogLevel(logLevel87);
        retrofit.RestAdapter restAdapter90 = builder55.build();
        retrofit.RestAdapter.LogLevel logLevel91 = restAdapter90.getLogLevel();
        restAdapter15.setLogLevel(logLevel91);
        retrofit.RestAdapter.LogLevel logLevel93 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter15.setLogLevel(logLevel93);
        retrofit.RestAdapter.LogLevel logLevel95 = restAdapter15.getLogLevel();
        retrofit.RestAdapter.Builder builder96 = builder6.setLogLevel(logLevel95);
        retrofit.RestAdapter restAdapter97 = builder6.build();
        retrofit.RequestInterceptor requestInterceptor98 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder99 = builder6.setRequestInterceptor(requestInterceptor98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(restAdapter7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(restAdapter15);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(restAdapter29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(log80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(log84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(restAdapter90);
        org.junit.Assert.assertTrue("'" + logLevel91 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel91.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel93 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel93.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel95 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel95.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder96);
        org.junit.Assert.assertNotNull(restAdapter97);
    }

    @Test
    public void test04137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04137");
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList7, typedOutput11);
        java.util.List<retrofit.client.Header> headerList13 = request12.getHeaders();
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("hi!", "hi!", headerList13, typedOutput14);
        retrofit.mime.TypedOutput typedOutput16 = request15.getBody();
        java.util.List<retrofit.client.Header> headerList17 = request15.getHeaders();
        java.lang.String str18 = request15.getMethod();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertNull(typedOutput16);
        org.junit.Assert.assertNotNull(headerList17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test04138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04138");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder12.setServer("hi!");
        retrofit.RestAdapter.Builder builder16 = builder14.setServer("hi!");
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder23 = builder21.setServer("hi!");
        retrofit.RestAdapter restAdapter24 = builder23.build();
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        restAdapter24.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder37 = builder35.setServer("hi!");
        retrofit.RestAdapter restAdapter38 = builder37.build();
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        restAdapter38.setLogLevel(logLevel42);
        restAdapter24.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLog(log47);
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder52 = builder50.setServer("hi!");
        retrofit.RestAdapter restAdapter53 = builder52.build();
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder58 = builder56.setLogLevel(logLevel57);
        restAdapter53.setLogLevel(logLevel57);
        restAdapter24.setLogLevel(logLevel57);
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter24.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLog(log64);
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder67 = builder65.setLogLevel(logLevel66);
        retrofit.RestAdapter.Builder builder69 = builder67.setServer("hi!");
        retrofit.RestAdapter restAdapter70 = builder69.build();
        retrofit.RestAdapter restAdapter71 = builder69.build();
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder74 = builder72.setLog(log73);
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder76 = builder72.setLogLevel(logLevel75);
        boolean boolean77 = logLevel75.log();
        restAdapter71.setLogLevel(logLevel75);
        restAdapter24.setLogLevel(logLevel75);
        retrofit.RestAdapter.Builder builder80 = builder16.setLogLevel(logLevel75);
        retrofit.Profiler profiler81 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder82 = builder16.setProfiler(profiler81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(restAdapter24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(restAdapter38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(restAdapter53);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(restAdapter70);
        org.junit.Assert.assertNotNull(restAdapter71);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(builder80);
    }

    @Test
    public void test04139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04139");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder14.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = builder9.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLog(log27);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder33 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        log35.log("");
        log35.log("");
        retrofit.RestAdapter.Builder builder41 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder42 = builder4.setLog(log35);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder43.setLogLevel(logLevel46);
        boolean boolean48 = logLevel46.log();
        boolean boolean49 = logLevel46.log();
        retrofit.RestAdapter.Builder builder50 = builder4.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder52 = builder4.setServer("hi!");
        retrofit.RequestInterceptor requestInterceptor53 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder54 = builder52.setRequestInterceptor(requestInterceptor53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
    }

    @Test
    public void test04140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04140");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder2.setLog(log17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLog(log20);
        log20.log("");
        retrofit.RestAdapter.Builder builder24 = builder18.setLog(log20);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLog(log29);
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder32 = builder30.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLog(log34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder35.setLog(log38);
        retrofit.RestAdapter.Builder builder40 = builder32.setLog(log38);
        retrofit.RestAdapter.Builder builder41 = builder27.setLog(log38);
        log38.log("");
        log38.log("");
        log38.log("hi!");
        retrofit.RestAdapter.Builder builder48 = builder24.setLog(log38);
        retrofit.RestAdapter.Builder builder50 = builder48.setServer("hi!");
        retrofit.converter.Converter converter51 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder52 = builder50.setConverter(converter51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
    }

    @Test
    public void test04141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04141");
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        java.lang.String str9 = request8.getMethod();
        java.util.List<retrofit.client.Header> headerList10 = request8.getHeaders();
        java.util.List<retrofit.client.Header> headerList11 = request8.getHeaders();
        java.lang.String str12 = request8.getUrl();
        java.util.List<retrofit.client.Header> headerList13 = request8.getHeaders();
        java.lang.String str14 = request8.getUrl();
        java.lang.String str15 = request8.getUrl();
        java.lang.String str16 = request8.getUrl();
        java.util.List<retrofit.client.Header> headerList17 = request8.getHeaders();
        java.util.List<retrofit.client.Header> headerList18 = request8.getHeaders();
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("hi!", "", headerList18, typedOutput19);
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(headerList17);
        org.junit.Assert.assertNotNull(headerList18);
    }

    @Test
    public void test04142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04142");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log26);
        retrofit.RestAdapter restAdapter29 = builder24.build();
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder37.setLog(log40);
        retrofit.RestAdapter.Builder builder42 = builder34.setLog(log40);
        retrofit.RestAdapter.Builder builder44 = builder34.setServer("hi!");
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder47.setLog(log50);
        retrofit.RestAdapter.Builder builder52 = builder34.setLog(log50);
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder54 = builder34.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder55 = builder24.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder57 = builder55.setServer("hi!");
        java.lang.Class<?> wildcardClass58 = builder57.getClass();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(restAdapter29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test04143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04143");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder14.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = builder9.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLog(log27);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder33 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        log35.log("");
        log35.log("");
        retrofit.RestAdapter.Builder builder41 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder42 = builder4.setLog(log35);
        retrofit.RestAdapter restAdapter43 = builder42.build();
        retrofit.RestAdapter restAdapter44 = builder42.build();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.Builder builder48 = builder42.setLog(log46);
        retrofit.RestAdapter.Builder builder50 = builder42.setServer("hi!");
        retrofit.RestAdapter.Builder builder52 = builder50.setServer("hi!");
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLog(log54);
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLog(log57);
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder60 = builder58.setLogLevel(logLevel59);
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder63 = builder61.setLog(log62);
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder65 = builder63.setLogLevel(logLevel64);
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder67 = builder63.setLog(log66);
        retrofit.RestAdapter.Builder builder68 = builder60.setLog(log66);
        retrofit.RestAdapter.Builder builder69 = builder55.setLog(log66);
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder70.setLog(log71);
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder74 = builder70.setLog(log73);
        retrofit.RestAdapter.Builder builder75 = builder69.setLog(log73);
        retrofit.RestAdapter.Builder builder77 = builder69.setServer("hi!");
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log79 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder80 = builder78.setLog(log79);
        retrofit.RestAdapter.LogLevel logLevel81 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder82 = builder80.setLogLevel(logLevel81);
        retrofit.RestAdapter.Builder builder84 = builder82.setServer("hi!");
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log86 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder87 = builder85.setLog(log86);
        log86.log("");
        retrofit.RestAdapter.Builder builder90 = builder82.setLog(log86);
        retrofit.RestAdapter.Builder builder91 = builder77.setLog(log86);
        retrofit.RestAdapter restAdapter92 = builder77.build();
        retrofit.RestAdapter.LogLevel logLevel93 = restAdapter92.getLogLevel();
        retrofit.RestAdapter.Builder builder94 = builder50.setLogLevel(logLevel93);
        retrofit.Server server95 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder96 = builder50.setServer(server95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(restAdapter43);
        org.junit.Assert.assertNotNull(restAdapter44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(log86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(restAdapter92);
        org.junit.Assert.assertTrue("'" + logLevel93 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel93.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder94);
    }

    @Test
    public void test04144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04144");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.client.Client.Provider provider3 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder4 = builder0.setClient(provider3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
    }

    @Test
    public void test04145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04145");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        log8.log("");
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log8);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter15 = builder14.build();
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLog(log17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLog(log22);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder23.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder20.setLog(log26);
        retrofit.RestAdapter.Builder builder30 = builder20.setServer("hi!");
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder33.setLog(log36);
        retrofit.RestAdapter.Builder builder38 = builder20.setLog(log36);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder45 = builder43.setServer("hi!");
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLog(log47);
        log47.log("");
        retrofit.RestAdapter.Builder builder51 = builder43.setLog(log47);
        log47.log("");
        retrofit.RestAdapter.Builder builder54 = builder20.setLog(log47);
        log47.log("");
        retrofit.RestAdapter.Builder builder57 = builder14.setLog(log47);
        retrofit.client.Client.Provider provider58 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder59 = builder57.setClient(provider58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(restAdapter15);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder57);
    }

    @Test
    public void test04146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04146");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder32.setLog(log35);
        retrofit.RestAdapter.Builder builder37 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder39 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder42.setLog(log45);
        retrofit.RestAdapter.Builder builder47 = builder29.setLog(log45);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder29.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder50 = builder16.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder57 = builder55.setServer("hi!");
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder60 = builder58.setLog(log59);
        log59.log("");
        retrofit.RestAdapter.Builder builder63 = builder55.setLog(log59);
        log59.log("hi!");
        retrofit.RestAdapter.Builder builder66 = builder50.setLog(log59);
        retrofit.converter.Converter converter67 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder68 = builder66.setConverter(converter67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder66);
    }

    @Test
    public void test04147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04147");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = builder6.build();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder8.setLog(log11);
        retrofit.RestAdapter.Builder builder13 = builder6.setLog(log11);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLog(log15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder20 = builder18.setServer("hi!");
        retrofit.RestAdapter restAdapter21 = builder20.build();
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLog(log23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder32.setLog(log35);
        retrofit.RestAdapter.Builder builder37 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder38 = builder24.setLog(log35);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLog(log48);
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder49.setLog(log52);
        retrofit.RestAdapter.Builder builder54 = builder46.setLog(log52);
        retrofit.RestAdapter.Builder builder55 = builder39.setLog(log52);
        retrofit.RestAdapter.Builder builder56 = builder24.setLog(log52);
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLog(log58);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder61 = builder59.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder62 = builder56.setLogLevel(logLevel60);
        restAdapter21.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder64 = builder13.setLogLevel(logLevel60);
        retrofit.RestAdapter restAdapter65 = builder64.build();
        retrofit.client.Client client66 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder67 = builder64.setClient(client66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(restAdapter7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(restAdapter21);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(restAdapter65);
    }

    @Test
    public void test04148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04148");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder0.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder21 = builder17.setLogLevel(logLevel20);
        boolean boolean22 = logLevel20.log();
        retrofit.RestAdapter.Builder builder23 = builder0.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLog(log30);
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder31.setLog(log34);
        log34.log("");
        retrofit.RestAdapter.Builder builder38 = builder28.setLog(log34);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder45 = builder43.setServer("hi!");
        retrofit.RestAdapter restAdapter46 = builder45.build();
        retrofit.RestAdapter restAdapter47 = builder45.build();
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder48.setLogLevel(logLevel51);
        boolean boolean53 = logLevel51.log();
        restAdapter47.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder55 = builder38.setLogLevel(logLevel51);
        boolean boolean56 = logLevel51.log();
        boolean boolean57 = logLevel51.log();
        boolean boolean58 = logLevel51.log();
        retrofit.RestAdapter.Builder builder59 = builder23.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        boolean boolean65 = logLevel63.log();
        retrofit.RestAdapter.Builder builder66 = builder23.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder68 = builder23.setServer("hi!");
        retrofit.converter.Converter converter69 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder70 = builder23.setConverter(converter69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(restAdapter46);
        org.junit.Assert.assertNotNull(restAdapter47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder68);
    }

    @Test
    public void test04149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04149");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder25.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder24.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder32 = builder24.setServer("hi!");
        retrofit.RestAdapter.Builder builder34 = builder32.setServer("hi!");
        retrofit.client.Client.Provider provider35 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder36 = builder34.setClient(provider35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
    }

    @Test
    public void test04150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04150");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder4.setLog(log20);
        retrofit.RestAdapter restAdapter23 = builder22.build();
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLog(log30);
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder31.setLog(log34);
        retrofit.RestAdapter.Builder builder36 = builder28.setLog(log34);
        retrofit.RestAdapter.Builder builder38 = builder28.setServer("hi!");
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder41.setLog(log44);
        retrofit.RestAdapter.Builder builder46 = builder28.setLog(log44);
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLog(log48);
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder53 = builder51.setServer("hi!");
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        log55.log("");
        retrofit.RestAdapter.Builder builder59 = builder51.setLog(log55);
        log55.log("");
        retrofit.RestAdapter.Builder builder62 = builder28.setLog(log55);
        retrofit.RestAdapter.Builder builder63 = builder22.setLog(log55);
        retrofit.Server server64 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder65 = builder22.setServer(server64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(restAdapter23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder63);
    }

    @Test
    public void test04151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04151");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder25.setLog(log28);
        log28.log("hi!");
        log28.log("");
        retrofit.RestAdapter.Builder builder34 = builder22.setLog(log28);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder41 = builder39.setServer("hi!");
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        log43.log("");
        retrofit.RestAdapter.Builder builder47 = builder39.setLog(log43);
        retrofit.RestAdapter.Builder builder48 = builder22.setLog(log43);
        retrofit.Profiler profiler49 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder50 = builder22.setProfiler(profiler49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
    }

    @Test
    public void test04152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04152");
        retrofit.client.Header[] headerArray14 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList15 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList15, headerArray14);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList15, typedOutput17);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList15, typedOutput19);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList15, typedOutput21);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList15, typedOutput23);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList15, typedOutput25);
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList15, typedOutput27);
        retrofit.mime.TypedOutput typedOutput29 = null;
        retrofit.client.Request request30 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList15, typedOutput29);
        java.lang.String str31 = request30.getMethod();
        retrofit.mime.TypedOutput typedOutput32 = request30.getBody();
        retrofit.mime.TypedOutput typedOutput33 = request30.getBody();
        java.lang.String str34 = request30.getMethod();
        java.lang.String str35 = request30.getMethod();
        org.junit.Assert.assertNotNull(headerArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNull(typedOutput32);
        org.junit.Assert.assertNull(typedOutput33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
    }

    @Test
    public void test04153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04153");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder11 = builder9.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("hi!");
        retrofit.RestAdapter restAdapter14 = builder13.build();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter14.getLogLevel();
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLog(log17);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder16.setLog(log19);
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter.Builder builder22 = builder16.setLogLevel(logLevel21);
        restAdapter14.setLogLevel(logLevel21);
        retrofit.RestAdapter.Builder builder24 = builder4.setLogLevel(logLevel21);
        retrofit.RequestInterceptor requestInterceptor25 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder26 = builder24.setRequestInterceptor(requestInterceptor25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(restAdapter14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
    }

    @Test
    public void test04154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04154");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder4.setLog(log20);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder4.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder26 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLog(log33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder34.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder39.setLog(log42);
        retrofit.RestAdapter.Builder builder44 = builder36.setLog(log42);
        retrofit.RestAdapter.Builder builder45 = builder31.setLog(log42);
        log42.log("hi!");
        retrofit.RestAdapter.Builder builder48 = builder4.setLog(log42);
        retrofit.RestAdapter restAdapter49 = builder4.build();
        retrofit.RestAdapter.LogLevel logLevel50 = null;
        restAdapter49.setLogLevel(logLevel50);
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(restAdapter49);
    }

    @Test
    public void test04155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04155");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        log16.log("");
        retrofit.RestAdapter.Builder builder20 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("hi!");
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLog(log27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder33.setLog(log36);
        retrofit.RestAdapter.Builder builder38 = builder30.setLog(log36);
        retrofit.RestAdapter.Builder builder39 = builder23.setLog(log36);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder50.setLog(log53);
        retrofit.RestAdapter.Builder builder55 = builder47.setLog(log53);
        retrofit.RestAdapter.Builder builder56 = builder40.setLog(log53);
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLog(log58);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder61 = builder57.setLogLevel(logLevel60);
        boolean boolean62 = logLevel60.log();
        retrofit.RestAdapter.Builder builder63 = builder40.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder64 = builder39.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLog(log66);
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder68.setLog(log69);
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder72 = builder70.setLogLevel(logLevel71);
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder75 = builder73.setLog(log74);
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder77 = builder75.setLogLevel(logLevel76);
        retrofit.RestAdapter.Log log78 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder79 = builder75.setLog(log78);
        retrofit.RestAdapter.Builder builder80 = builder72.setLog(log78);
        retrofit.RestAdapter.Builder builder81 = builder67.setLog(log78);
        retrofit.RestAdapter.Builder builder82 = builder39.setLog(log78);
        retrofit.RestAdapter.Builder builder83 = builder20.setLog(log78);
        retrofit.RestAdapter restAdapter84 = builder83.build();
        retrofit.client.Client client85 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder86 = builder83.setClient(client85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(log78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(restAdapter84);
    }

    @Test
    public void test04156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04156");
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        java.lang.String str11 = request10.getMethod();
        java.lang.String str12 = request10.getUrl();
        java.lang.String str13 = request10.getUrl();
        java.util.List<retrofit.client.Header> headerList14 = request10.getHeaders();
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("hi!", "hi!", headerList14, typedOutput15);
        java.lang.String str17 = request16.getUrl();
        java.util.List<retrofit.client.Header> headerList18 = request16.getHeaders();
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("", "", headerList18, typedOutput19);
        java.lang.Class<?> wildcardClass21 = request20.getClass();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(headerList18);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test04157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04157");
        retrofit.client.Header[] headerArray14 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList15 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList15, headerArray14);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList15, typedOutput17);
        java.lang.String str19 = request18.getMethod();
        java.util.List<retrofit.client.Header> headerList20 = request18.getHeaders();
        java.util.List<retrofit.client.Header> headerList21 = request18.getHeaders();
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("hi!", "hi!", headerList21, typedOutput22);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList21, typedOutput24);
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "hi!", headerList21, typedOutput26);
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList21, typedOutput28);
        java.util.List<retrofit.client.Header> headerList30 = request29.getHeaders();
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("hi!", "", headerList30, typedOutput31);
        retrofit.mime.TypedOutput typedOutput33 = null;
        retrofit.client.Request request34 = new retrofit.client.Request("hi!", "hi!", headerList30, typedOutput33);
        java.lang.String str35 = request34.getUrl();
        java.lang.Class<?> wildcardClass36 = request34.getClass();
        org.junit.Assert.assertNotNull(headerArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(headerList20);
        org.junit.Assert.assertNotNull(headerList21);
        org.junit.Assert.assertNotNull(headerList30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test04158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04158");
        retrofit.client.Header[] headerArray12 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList13 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList13, headerArray12);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList13, typedOutput15);
        java.lang.String str17 = request16.getMethod();
        java.util.List<retrofit.client.Header> headerList18 = request16.getHeaders();
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("hi!", "hi!", headerList18, typedOutput19);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("", "hi!", headerList18, typedOutput21);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("hi!", "", headerList18, typedOutput23);
        retrofit.mime.TypedOutput typedOutput25 = request24.getBody();
        java.lang.String str26 = request24.getUrl();
        java.util.List<retrofit.client.Header> headerList27 = request24.getHeaders();
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        retrofit.mime.TypedOutput typedOutput30 = null;
        retrofit.client.Request request31 = new retrofit.client.Request("", "", headerList27, typedOutput30);
        java.lang.String str32 = request31.getUrl();
        retrofit.mime.TypedOutput typedOutput33 = request31.getBody();
        org.junit.Assert.assertNotNull(headerArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(headerList18);
        org.junit.Assert.assertNull(typedOutput25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(headerList27);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNull(typedOutput33);
    }

    @Test
    public void test04159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04159");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        log8.log("");
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log8);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter15 = builder4.build();
        retrofit.RestAdapter.Builder builder17 = builder4.setServer("hi!");
        retrofit.Profiler profiler18 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder19 = builder4.setProfiler(profiler18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(restAdapter15);
        org.junit.Assert.assertNotNull(builder17);
    }

    @Test
    public void test04160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04160");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.LogLevel logLevel13 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Log level may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test04161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04161");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        log16.log("");
        retrofit.RestAdapter.Builder builder20 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("hi!");
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLog(log27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder33.setLog(log36);
        retrofit.RestAdapter.Builder builder38 = builder30.setLog(log36);
        retrofit.RestAdapter.Builder builder39 = builder23.setLog(log36);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder50.setLog(log53);
        retrofit.RestAdapter.Builder builder55 = builder47.setLog(log53);
        retrofit.RestAdapter.Builder builder56 = builder40.setLog(log53);
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLog(log58);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder61 = builder57.setLogLevel(logLevel60);
        boolean boolean62 = logLevel60.log();
        retrofit.RestAdapter.Builder builder63 = builder40.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder64 = builder39.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLog(log66);
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder68.setLog(log69);
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder72 = builder70.setLogLevel(logLevel71);
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder75 = builder73.setLog(log74);
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder77 = builder75.setLogLevel(logLevel76);
        retrofit.RestAdapter.Log log78 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder79 = builder75.setLog(log78);
        retrofit.RestAdapter.Builder builder80 = builder72.setLog(log78);
        retrofit.RestAdapter.Builder builder81 = builder67.setLog(log78);
        retrofit.RestAdapter.Builder builder82 = builder39.setLog(log78);
        log78.log("hi!");
        log78.log("");
        retrofit.RestAdapter.Builder builder87 = builder22.setLog(log78);
        retrofit.RestAdapter.Builder builder89 = builder87.setServer("hi!");
        retrofit.converter.Converter converter90 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder91 = builder89.setConverter(converter90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(log78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder89);
    }

    @Test
    public void test04162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04162");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder0.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder21 = builder17.setLogLevel(logLevel20);
        boolean boolean22 = logLevel20.log();
        retrofit.RestAdapter.Builder builder23 = builder0.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLog(log30);
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder31.setLog(log34);
        log34.log("");
        retrofit.RestAdapter.Builder builder38 = builder28.setLog(log34);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder45 = builder43.setServer("hi!");
        retrofit.RestAdapter restAdapter46 = builder45.build();
        retrofit.RestAdapter restAdapter47 = builder45.build();
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder48.setLogLevel(logLevel51);
        boolean boolean53 = logLevel51.log();
        restAdapter47.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder55 = builder38.setLogLevel(logLevel51);
        boolean boolean56 = logLevel51.log();
        boolean boolean57 = logLevel51.log();
        boolean boolean58 = logLevel51.log();
        retrofit.RestAdapter.Builder builder59 = builder23.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        boolean boolean65 = logLevel63.log();
        retrofit.RestAdapter.Builder builder66 = builder23.setLogLevel(logLevel63);
        retrofit.ErrorHandler errorHandler67 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder68 = builder23.setErrorHandler(errorHandler67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(restAdapter46);
        org.junit.Assert.assertNotNull(restAdapter47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(builder66);
    }

    @Test
    public void test04163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04163");
        retrofit.client.Header[] headerArray18 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList19 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList19, headerArray18);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList19, typedOutput21);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList19, typedOutput23);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList19, typedOutput25);
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList19, typedOutput27);
        retrofit.mime.TypedOutput typedOutput29 = null;
        retrofit.client.Request request30 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList19, typedOutput29);
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList19, typedOutput31);
        retrofit.mime.TypedOutput typedOutput33 = null;
        retrofit.client.Request request34 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList19, typedOutput33);
        java.util.List<retrofit.client.Header> headerList35 = request34.getHeaders();
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("hi!", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "hi!", headerList35, typedOutput38);
        java.lang.String str40 = request39.getUrl();
        org.junit.Assert.assertNotNull(headerArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(headerList35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
    }

    @Test
    public void test04164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04164");
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        java.lang.String str13 = request12.getMethod();
        java.util.List<retrofit.client.Header> headerList14 = request12.getHeaders();
        java.util.List<retrofit.client.Header> headerList15 = request12.getHeaders();
        java.util.List<retrofit.client.Header> headerList16 = request12.getHeaders();
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("hi!", "hi!", headerList16, typedOutput17);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("", "", headerList16, typedOutput19);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("", "", headerList16, typedOutput21);
        retrofit.mime.TypedOutput typedOutput23 = request22.getBody();
        java.lang.String str24 = request22.getUrl();
        java.lang.String str25 = request22.getMethod();
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(headerList16);
        org.junit.Assert.assertNull(typedOutput23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
    }

    @Test
    public void test04165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04165");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("hi!");
        retrofit.RestAdapter restAdapter32 = builder31.build();
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLog(log34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        restAdapter32.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder45 = builder43.setServer("hi!");
        retrofit.RestAdapter restAdapter46 = builder45.build();
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLog(log48);
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        restAdapter46.setLogLevel(logLevel50);
        restAdapter32.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder58 = builder56.setLogLevel(logLevel57);
        retrofit.RestAdapter.Builder builder60 = builder58.setServer("hi!");
        retrofit.RestAdapter restAdapter61 = builder60.build();
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder64 = builder62.setLog(log63);
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        restAdapter61.setLogLevel(logLevel65);
        restAdapter32.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder69 = builder16.setLogLevel(logLevel65);
        retrofit.RestAdapter restAdapter70 = builder69.build();
        retrofit.RestAdapter.Builder builder72 = builder69.setServer("hi!");
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder75 = builder73.setLog(log74);
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder77 = builder75.setLogLevel(logLevel76);
        retrofit.RestAdapter.Builder builder79 = builder77.setServer("hi!");
        retrofit.RestAdapter restAdapter80 = builder79.build();
        retrofit.RestAdapter.LogLevel logLevel81 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean82 = logLevel81.log();
        boolean boolean83 = logLevel81.log();
        retrofit.RestAdapter.Builder builder84 = builder79.setLogLevel(logLevel81);
        retrofit.RestAdapter.Builder builder85 = builder72.setLogLevel(logLevel81);
        retrofit.RestAdapter.LogLevel logLevel86 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean87 = logLevel86.log();
        boolean boolean88 = logLevel86.log();
        boolean boolean89 = logLevel86.log();
        retrofit.RestAdapter.Builder builder90 = builder72.setLogLevel(logLevel86);
        retrofit.client.Client client91 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder92 = builder90.setClient(client91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(restAdapter32);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(restAdapter46);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(restAdapter61);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(restAdapter70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(restAdapter80);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(builder90);
    }

    @Test
    public void test04166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04166");
        retrofit.client.Header[] headerArray16 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList17 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList17, headerArray16);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList17, typedOutput19);
        java.lang.String str21 = request20.getMethod();
        java.util.List<retrofit.client.Header> headerList22 = request20.getHeaders();
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("hi!", "hi!", headerList22, typedOutput23);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "hi!", headerList22, typedOutput25);
        java.util.List<retrofit.client.Header> headerList27 = request26.getHeaders();
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        retrofit.mime.TypedOutput typedOutput30 = null;
        retrofit.client.Request request31 = new retrofit.client.Request("hi!", "", headerList27, typedOutput30);
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "hi!", headerList27, typedOutput32);
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("hi!", "hi!", headerList27, typedOutput34);
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("hi!", "", headerList27, typedOutput36);
        java.lang.String str38 = request37.getMethod();
        java.lang.String str39 = request37.getMethod();
        org.junit.Assert.assertNotNull(headerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(headerList22);
        org.junit.Assert.assertNotNull(headerList27);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
    }

    @Test
    public void test04167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04167");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder4.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = builder27.setServer("hi!");
        retrofit.RestAdapter restAdapter30 = builder29.build();
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        restAdapter30.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder43 = builder41.setServer("hi!");
        retrofit.RestAdapter restAdapter44 = builder43.build();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        restAdapter44.setLogLevel(logLevel48);
        restAdapter30.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder58 = builder56.setServer("hi!");
        retrofit.RestAdapter restAdapter59 = builder58.build();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        restAdapter59.setLogLevel(logLevel63);
        restAdapter30.setLogLevel(logLevel63);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter30.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder69 = builder4.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder71 = builder69.setServer("hi!");
        retrofit.RestAdapter.Builder builder73 = builder69.setServer("hi!");
        retrofit.RestAdapter restAdapter74 = builder73.build();
        retrofit.RestAdapter.Builder builder76 = builder73.setServer("hi!");
        retrofit.ErrorHandler errorHandler77 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder78 = builder76.setErrorHandler(errorHandler77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(restAdapter30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(restAdapter44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(restAdapter74);
        org.junit.Assert.assertNotNull(builder76);
    }

    @Test
    public void test04168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04168");
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        java.lang.String str15 = request14.getMethod();
        java.util.List<retrofit.client.Header> headerList16 = request14.getHeaders();
        java.util.List<retrofit.client.Header> headerList17 = request14.getHeaders();
        java.util.List<retrofit.client.Header> headerList18 = request14.getHeaders();
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("", "", headerList18, typedOutput19);
        retrofit.mime.TypedOutput typedOutput21 = request20.getBody();
        java.util.List<retrofit.client.Header> headerList22 = request20.getHeaders();
        java.lang.String str23 = request20.getMethod();
        java.util.List<retrofit.client.Header> headerList24 = request20.getHeaders();
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "", headerList24, typedOutput25);
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("", "hi!", headerList24, typedOutput27);
        java.util.List<retrofit.client.Header> headerList29 = request28.getHeaders();
        retrofit.mime.TypedOutput typedOutput30 = null;
        retrofit.client.Request request31 = new retrofit.client.Request("", "hi!", headerList29, typedOutput30);
        java.lang.String str32 = request31.getMethod();
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(headerList16);
        org.junit.Assert.assertNotNull(headerList17);
        org.junit.Assert.assertNotNull(headerList18);
        org.junit.Assert.assertNull(typedOutput21);
        org.junit.Assert.assertNotNull(headerList22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(headerList24);
        org.junit.Assert.assertNotNull(headerList29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
    }

    @Test
    public void test04169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04169");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder2.setLog(log17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLog(log20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder21.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder25 = builder23.setServer("hi!");
        retrofit.RestAdapter restAdapter26 = builder25.build();
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        restAdapter26.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLog(log34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder39 = builder37.setServer("hi!");
        retrofit.RestAdapter restAdapter40 = builder39.build();
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLog(log42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        restAdapter40.setLogLevel(logLevel44);
        restAdapter26.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder54 = builder52.setServer("hi!");
        retrofit.RestAdapter restAdapter55 = builder54.build();
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLog(log57);
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder60 = builder58.setLogLevel(logLevel59);
        restAdapter55.setLogLevel(logLevel59);
        restAdapter26.setLogLevel(logLevel59);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter26.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder65 = builder18.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder67 = builder65.setServer("hi!");
        retrofit.RequestInterceptor requestInterceptor68 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder69 = builder65.setRequestInterceptor(requestInterceptor68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(restAdapter26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(restAdapter40);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(restAdapter55);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder67);
    }

    @Test
    public void test04170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04170");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLog(log21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder27.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder17.setLog(log30);
        retrofit.RestAdapter.Builder builder34 = builder2.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("hi!");
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder50.setLog(log53);
        log53.log("");
        retrofit.RestAdapter.Builder builder57 = builder47.setLog(log53);
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder60 = builder58.setLog(log59);
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder62 = builder60.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder64 = builder62.setServer("hi!");
        retrofit.RestAdapter restAdapter65 = builder64.build();
        retrofit.RestAdapter restAdapter66 = builder64.build();
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log68 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder69 = builder67.setLog(log68);
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder71 = builder67.setLogLevel(logLevel70);
        boolean boolean72 = logLevel70.log();
        restAdapter66.setLogLevel(logLevel70);
        retrofit.RestAdapter.Builder builder74 = builder57.setLogLevel(logLevel70);
        retrofit.RestAdapter.Builder builder75 = builder42.setLogLevel(logLevel70);
        retrofit.RestAdapter restAdapter76 = builder42.build();
        retrofit.RestAdapter restAdapter77 = builder42.build();
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log79 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder80 = builder78.setLog(log79);
        retrofit.RestAdapter.LogLevel logLevel81 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder82 = builder80.setLogLevel(logLevel81);
        retrofit.RestAdapter.Builder builder84 = builder82.setServer("hi!");
        retrofit.RestAdapter restAdapter85 = builder84.build();
        retrofit.RestAdapter restAdapter86 = builder84.build();
        retrofit.RestAdapter.Builder builder87 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log88 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder89 = builder87.setLog(log88);
        retrofit.RestAdapter.LogLevel logLevel90 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder91 = builder87.setLogLevel(logLevel90);
        boolean boolean92 = logLevel90.log();
        restAdapter86.setLogLevel(logLevel90);
        retrofit.RestAdapter.LogLevel logLevel94 = restAdapter86.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel95 = restAdapter86.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel96 = restAdapter86.getLogLevel();
        retrofit.RestAdapter.Builder builder97 = builder42.setLogLevel(logLevel96);
        retrofit.RestAdapter.LogLevel logLevel98 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder99 = builder42.setLogLevel(logLevel98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Log level may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(restAdapter65);
        org.junit.Assert.assertNotNull(restAdapter66);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(restAdapter76);
        org.junit.Assert.assertNotNull(restAdapter77);
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(restAdapter85);
        org.junit.Assert.assertNotNull(restAdapter86);
        org.junit.Assert.assertNotNull(log88);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertTrue("'" + logLevel90 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel90.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + logLevel94 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel94.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel95 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel95.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel96 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel96.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder97);
    }

    @Test
    public void test04171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04171");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = builder6.build();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLog(log12);
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLog(log17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder18.setLog(log21);
        retrofit.RestAdapter.Builder builder23 = builder15.setLog(log21);
        retrofit.RestAdapter.Builder builder24 = builder10.setLog(log21);
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder10.setLog(log25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        log28.log("");
        retrofit.RestAdapter.Builder builder32 = builder26.setLog(log28);
        log28.log("");
        retrofit.RestAdapter.Builder builder35 = builder6.setLog(log28);
        retrofit.RestAdapter restAdapter36 = builder6.build();
        retrofit.Server server37 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder38 = builder6.setServer(server37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(restAdapter7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(restAdapter36);
    }

    @Test
    public void test04172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04172");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder4.setLog(log20);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder4.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        log26.log("");
        log26.log("");
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log26);
        retrofit.RestAdapter restAdapter33 = builder24.build();
        retrofit.RestAdapter restAdapter34 = builder24.build();
        retrofit.RestAdapter.Builder builder36 = builder24.setServer("hi!");
        retrofit.RestAdapter restAdapter37 = builder36.build();
        retrofit.Server server38 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder39 = builder36.setServer(server38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(restAdapter33);
        org.junit.Assert.assertNotNull(restAdapter34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(restAdapter37);
    }

    @Test
    public void test04173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04173");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder2.setLog(log17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLog(log20);
        log20.log("hi!");
        retrofit.RestAdapter.Builder builder24 = builder2.setLog(log20);
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLog(log33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder34.setLogLevel(logLevel35);
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = builder34.setLog(log37);
        retrofit.RestAdapter.Builder builder39 = builder31.setLog(log37);
        log37.log("hi!");
        log37.log("hi!");
        log37.log("hi!");
        retrofit.RestAdapter.Builder builder46 = builder26.setLog(log37);
        retrofit.ErrorHandler errorHandler47 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder48 = builder46.setErrorHandler(errorHandler47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder46);
    }

    @Test
    public void test04174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04174");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder22.setServer("hi!");
        retrofit.RestAdapter.Builder builder26 = builder22.setServer("hi!");
        retrofit.RestAdapter.Builder builder28 = builder22.setServer("hi!");
        retrofit.RestAdapter restAdapter29 = builder28.build();
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter29.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter29.getLogLevel();
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLog(log33);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder42.setLog(log45);
        retrofit.RestAdapter.Builder builder47 = builder39.setLog(log45);
        retrofit.RestAdapter.Builder builder48 = builder34.setLog(log45);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder49.setLog(log52);
        retrofit.RestAdapter.Builder builder54 = builder48.setLog(log52);
        retrofit.RestAdapter.Builder builder56 = builder54.setServer("hi!");
        retrofit.RestAdapter.Builder builder58 = builder54.setServer("hi!");
        retrofit.RestAdapter restAdapter59 = builder58.build();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder66 = builder64.setServer("hi!");
        retrofit.RestAdapter restAdapter67 = builder66.build();
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder68.setLog(log69);
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder72 = builder70.setLogLevel(logLevel71);
        restAdapter67.setLogLevel(logLevel71);
        retrofit.RestAdapter.LogLevel logLevel74 = restAdapter67.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel75 = restAdapter67.getLogLevel();
        restAdapter59.setLogLevel(logLevel75);
        boolean boolean77 = logLevel75.log();
        restAdapter29.setLogLevel(logLevel75);
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(restAdapter29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(restAdapter67);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test04175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04175");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLog(log21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder27.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder17.setLog(log30);
        retrofit.RestAdapter.Builder builder34 = builder2.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("hi!");
        retrofit.RestAdapter.Builder builder44 = builder40.setServer("hi!");
        retrofit.RestAdapter restAdapter45 = builder40.build();
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLog(log47);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder53 = builder51.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder58 = builder56.setLogLevel(logLevel57);
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder60 = builder56.setLog(log59);
        retrofit.RestAdapter.Builder builder61 = builder53.setLog(log59);
        retrofit.RestAdapter.Builder builder62 = builder48.setLog(log59);
        log59.log("hi!");
        retrofit.RestAdapter.Builder builder65 = builder40.setLog(log59);
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder68 = builder66.setLog(log67);
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder71 = builder69.setLog(log70);
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder73 = builder71.setLogLevel(logLevel72);
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log75 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder76 = builder74.setLog(log75);
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder78 = builder76.setLogLevel(logLevel77);
        retrofit.RestAdapter.Log log79 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder80 = builder76.setLog(log79);
        retrofit.RestAdapter.Builder builder81 = builder73.setLog(log79);
        retrofit.RestAdapter.Builder builder82 = builder68.setLog(log79);
        retrofit.RestAdapter.Log log83 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder84 = builder68.setLog(log83);
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log86 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder87 = builder85.setLog(log86);
        log86.log("hi!");
        retrofit.RestAdapter.Builder builder90 = builder68.setLog(log86);
        retrofit.RestAdapter.Log log91 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder92 = builder90.setLog(log91);
        retrofit.RestAdapter.Builder builder93 = builder65.setLog(log91);
        retrofit.client.Client.Provider provider94 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder95 = builder65.setClient(provider94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(restAdapter45);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(log75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(log83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(log86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(log91);
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertNotNull(builder93);
    }

    @Test
    public void test04176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04176");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log26);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLog(log33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder34.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder39.setLog(log42);
        retrofit.RestAdapter.Builder builder44 = builder36.setLog(log42);
        retrofit.RestAdapter.Builder builder45 = builder31.setLog(log42);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLog(log47);
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder46.setLog(log49);
        retrofit.RestAdapter.Builder builder51 = builder45.setLog(log49);
        retrofit.RestAdapter.Builder builder53 = builder51.setServer("hi!");
        retrofit.RestAdapter.Builder builder55 = builder53.setServer("hi!");
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLog(log57);
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder61 = builder59.setLog(log60);
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder63 = builder61.setLogLevel(logLevel62);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLog(log65);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder68 = builder66.setLogLevel(logLevel67);
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder66.setLog(log69);
        retrofit.RestAdapter.Builder builder71 = builder63.setLog(log69);
        retrofit.RestAdapter.Builder builder72 = builder58.setLog(log69);
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder74 = builder58.setLog(log73);
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log76 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder77 = builder75.setLog(log76);
        log76.log("");
        retrofit.RestAdapter.Builder builder80 = builder74.setLog(log76);
        log76.log("");
        retrofit.RestAdapter.Builder builder83 = builder55.setLog(log76);
        retrofit.RestAdapter.Builder builder84 = builder28.setLog(log76);
        java.util.concurrent.Executor executor85 = null;
        java.util.concurrent.Executor executor86 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder87 = builder84.setExecutors(executor85, executor86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder84);
    }

    @Test
    public void test04177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04177");
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        java.lang.String str9 = request8.getMethod();
        java.util.List<retrofit.client.Header> headerList10 = request8.getHeaders();
        java.util.List<retrofit.client.Header> headerList11 = request8.getHeaders();
        java.util.List<retrofit.client.Header> headerList12 = request8.getHeaders();
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("", "", headerList12, typedOutput13);
        retrofit.mime.TypedOutput typedOutput15 = request14.getBody();
        retrofit.mime.TypedOutput typedOutput16 = request14.getBody();
        java.lang.String str17 = request14.getUrl();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNull(typedOutput15);
        org.junit.Assert.assertNull(typedOutput16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test04178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04178");
        retrofit.client.Header[] headerArray12 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList13 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList13, headerArray12);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList13, typedOutput15);
        java.lang.String str17 = request16.getMethod();
        java.util.List<retrofit.client.Header> headerList18 = request16.getHeaders();
        java.util.List<retrofit.client.Header> headerList19 = request16.getHeaders();
        java.util.List<retrofit.client.Header> headerList20 = request16.getHeaders();
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("hi!", "hi!", headerList20, typedOutput21);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("hi!", "", headerList20, typedOutput23);
        java.lang.String str25 = request24.getMethod();
        java.util.List<retrofit.client.Header> headerList26 = request24.getHeaders();
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("", "", headerList26, typedOutput27);
        retrofit.mime.TypedOutput typedOutput29 = null;
        retrofit.client.Request request30 = new retrofit.client.Request("hi!", "hi!", headerList26, typedOutput29);
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("", "", headerList26, typedOutput31);
        retrofit.mime.TypedOutput typedOutput33 = request32.getBody();
        org.junit.Assert.assertNotNull(headerArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(headerList18);
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertNotNull(headerList20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(headerList26);
        org.junit.Assert.assertNull(typedOutput33);
    }

    @Test
    public void test04179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04179");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder0.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLog(log21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder27.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder17.setLog(log30);
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder44.setLog(log47);
        retrofit.RestAdapter.Builder builder49 = builder41.setLog(log47);
        retrofit.RestAdapter.Builder builder50 = builder34.setLog(log47);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder55 = builder51.setLogLevel(logLevel54);
        boolean boolean56 = logLevel54.log();
        retrofit.RestAdapter.Builder builder57 = builder34.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder58 = builder33.setLogLevel(logLevel54);
        boolean boolean59 = logLevel54.log();
        boolean boolean60 = logLevel54.log();
        boolean boolean61 = logLevel54.log();
        retrofit.RestAdapter.Builder builder62 = builder0.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLog(log64);
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder68 = builder66.setLog(log67);
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder70 = builder68.setLogLevel(logLevel69);
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log72 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder73 = builder71.setLog(log72);
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder75 = builder73.setLogLevel(logLevel74);
        retrofit.RestAdapter.Log log76 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder77 = builder73.setLog(log76);
        retrofit.RestAdapter.Builder builder78 = builder70.setLog(log76);
        retrofit.RestAdapter.Builder builder79 = builder65.setLog(log76);
        retrofit.RestAdapter.Log log80 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder81 = builder65.setLog(log80);
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log83 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder84 = builder82.setLog(log83);
        log83.log("hi!");
        retrofit.RestAdapter.Builder builder87 = builder65.setLog(log83);
        retrofit.RestAdapter.Log log88 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder89 = builder87.setLog(log88);
        retrofit.RestAdapter.Builder builder90 = builder62.setLog(log88);
        retrofit.ErrorHandler errorHandler91 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder92 = builder90.setErrorHandler(errorHandler91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(log80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(log83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(log88);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(builder90);
    }

    @Test
    public void test04180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04180");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = builder6.build();
        retrofit.RestAdapter restAdapter8 = builder6.build();
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder9.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLog(log13);
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder16 = builder14.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = builder19.setLog(log22);
        retrofit.RestAdapter.Builder builder24 = builder16.setLog(log22);
        retrofit.RestAdapter.Builder builder25 = builder11.setLog(log22);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLog(log27);
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder30 = builder26.setLog(log29);
        retrofit.RestAdapter.Builder builder31 = builder25.setLog(log29);
        retrofit.RestAdapter.Builder builder33 = builder25.setServer("hi!");
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        retrofit.RestAdapter.Builder builder37 = builder33.setLog(log35);
        retrofit.RestAdapter.Builder builder38 = builder6.setLog(log35);
        retrofit.Server server39 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder40 = builder38.setServer(server39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(restAdapter7);
        org.junit.Assert.assertNotNull(restAdapter8);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
    }

    @Test
    public void test04181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04181");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLog(log21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder27.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder17.setLog(log30);
        retrofit.RestAdapter.Builder builder34 = builder2.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("hi!");
        retrofit.RestAdapter.Builder builder44 = builder40.setServer("hi!");
        retrofit.RestAdapter restAdapter45 = builder40.build();
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLog(log47);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder53 = builder51.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder58 = builder56.setLogLevel(logLevel57);
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder60 = builder56.setLog(log59);
        retrofit.RestAdapter.Builder builder61 = builder53.setLog(log59);
        retrofit.RestAdapter.Builder builder62 = builder48.setLog(log59);
        log59.log("hi!");
        retrofit.RestAdapter.Builder builder65 = builder40.setLog(log59);
        retrofit.converter.Converter converter66 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder67 = builder65.setConverter(converter66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(restAdapter45);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder65);
    }

    @Test
    public void test04182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04182");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = builder6.build();
        retrofit.RestAdapter restAdapter8 = builder6.build();
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder9.setLog(log10);
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder15 = builder13.setServer("hi!");
        retrofit.RestAdapter restAdapter16 = builder15.build();
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder23 = builder21.setServer("hi!");
        retrofit.RestAdapter restAdapter24 = builder23.build();
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        restAdapter24.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder37 = builder35.setServer("hi!");
        retrofit.RestAdapter restAdapter38 = builder37.build();
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        restAdapter38.setLogLevel(logLevel42);
        restAdapter24.setLogLevel(logLevel42);
        boolean boolean46 = logLevel42.log();
        boolean boolean47 = logLevel42.log();
        restAdapter16.setLogLevel(logLevel42);
        retrofit.RestAdapter.LogLevel logLevel49 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLog(log51);
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder54 = builder52.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder57 = builder55.setLog(log56);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder59 = builder57.setLogLevel(logLevel58);
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder61 = builder57.setLog(log60);
        log60.log("");
        retrofit.RestAdapter.Builder builder64 = builder54.setLog(log60);
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLog(log66);
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder69 = builder67.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder71 = builder69.setServer("hi!");
        retrofit.RestAdapter restAdapter72 = builder71.build();
        retrofit.RestAdapter restAdapter73 = builder71.build();
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log75 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder76 = builder74.setLog(log75);
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder78 = builder74.setLogLevel(logLevel77);
        boolean boolean79 = logLevel77.log();
        restAdapter73.setLogLevel(logLevel77);
        retrofit.RestAdapter.Builder builder81 = builder64.setLogLevel(logLevel77);
        restAdapter16.setLogLevel(logLevel77);
        retrofit.RestAdapter.LogLevel logLevel83 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.Builder builder84 = builder6.setLogLevel(logLevel83);
        retrofit.Server server85 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder86 = builder6.setServer(server85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(restAdapter7);
        org.junit.Assert.assertNotNull(restAdapter8);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(restAdapter16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(restAdapter24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(restAdapter38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(restAdapter72);
        org.junit.Assert.assertNotNull(restAdapter73);
        org.junit.Assert.assertNotNull(log75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder84);
    }

    @Test
    public void test04183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04183");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = builder6.build();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLog(log12);
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLog(log17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder18.setLog(log21);
        retrofit.RestAdapter.Builder builder23 = builder15.setLog(log21);
        retrofit.RestAdapter.Builder builder24 = builder10.setLog(log21);
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder10.setLog(log25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        log28.log("");
        retrofit.RestAdapter.Builder builder32 = builder26.setLog(log28);
        log28.log("");
        retrofit.RestAdapter.Builder builder35 = builder6.setLog(log28);
        retrofit.RestAdapter restAdapter36 = builder6.build();
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder44.setLog(log47);
        retrofit.RestAdapter.Builder builder49 = builder41.setLog(log47);
        retrofit.RestAdapter.Builder builder51 = builder41.setServer("hi!");
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder54.setLog(log57);
        retrofit.RestAdapter.Builder builder59 = builder41.setLog(log57);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder61 = builder41.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder64 = builder62.setLog(log63);
        log63.log("");
        log63.log("");
        retrofit.RestAdapter.Builder builder69 = builder61.setLog(log63);
        log63.log("hi!");
        retrofit.RestAdapter.Builder builder72 = builder6.setLog(log63);
        retrofit.Server server73 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder74 = builder6.setServer(server73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(restAdapter7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder72);
    }

    @Test
    public void test04184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04184");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder14.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = builder9.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLog(log27);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder33 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        log35.log("");
        log35.log("");
        retrofit.RestAdapter.Builder builder41 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder42 = builder4.setLog(log35);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        log43.log("hi!");
        retrofit.RestAdapter.Builder builder46 = builder42.setLog(log43);
        retrofit.converter.Converter converter47 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder48 = builder42.setConverter(converter47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder46);
    }

    @Test
    public void test04185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04185");
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        java.lang.String str11 = request10.getMethod();
        java.util.List<retrofit.client.Header> headerList12 = request10.getHeaders();
        java.util.List<retrofit.client.Header> headerList13 = request10.getHeaders();
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("", "hi!", headerList13, typedOutput14);
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("hi!", "hi!", headerList13, typedOutput16);
        retrofit.mime.TypedOutput typedOutput18 = request17.getBody();
        java.util.List<retrofit.client.Header> headerList19 = request17.getHeaders();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertNull(typedOutput18);
        org.junit.Assert.assertNotNull(headerList19);
    }

    @Test
    public void test04186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04186");
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        java.lang.String str9 = request8.getMethod();
        java.util.List<retrofit.client.Header> headerList10 = request8.getHeaders();
        java.util.List<retrofit.client.Header> headerList11 = request8.getHeaders();
        java.util.List<retrofit.client.Header> headerList12 = request8.getHeaders();
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("", "", headerList12, typedOutput13);
        retrofit.mime.TypedOutput typedOutput15 = request14.getBody();
        java.util.List<retrofit.client.Header> headerList16 = request14.getHeaders();
        java.lang.String str17 = request14.getUrl();
        java.lang.String str18 = request14.getMethod();
        java.util.List<retrofit.client.Header> headerList19 = request14.getHeaders();
        retrofit.mime.TypedOutput typedOutput20 = request14.getBody();
        java.lang.String str21 = request14.getMethod();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNull(typedOutput15);
        org.junit.Assert.assertNotNull(headerList16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertNull(typedOutput20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
    }

    @Test
    public void test04187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04187");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("hi!");
        retrofit.RestAdapter restAdapter32 = builder31.build();
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLog(log34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        restAdapter32.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder45 = builder43.setServer("hi!");
        retrofit.RestAdapter restAdapter46 = builder45.build();
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLog(log48);
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        restAdapter46.setLogLevel(logLevel50);
        restAdapter32.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder58 = builder56.setLogLevel(logLevel57);
        retrofit.RestAdapter.Builder builder60 = builder58.setServer("hi!");
        retrofit.RestAdapter restAdapter61 = builder60.build();
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder64 = builder62.setLog(log63);
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        restAdapter61.setLogLevel(logLevel65);
        restAdapter32.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder69 = builder16.setLogLevel(logLevel65);
        retrofit.RestAdapter restAdapter70 = builder69.build();
        retrofit.RestAdapter.Builder builder72 = builder69.setServer("hi!");
        retrofit.RequestInterceptor requestInterceptor73 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder74 = builder72.setRequestInterceptor(requestInterceptor73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(restAdapter32);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(restAdapter46);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(restAdapter61);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(restAdapter70);
        org.junit.Assert.assertNotNull(builder72);
    }

    @Test
    public void test04188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04188");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder2.setLog(log17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLog(log20);
        log20.log("hi!");
        retrofit.RestAdapter.Builder builder24 = builder2.setLog(log20);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLog(log29);
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder32 = builder30.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLog(log34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder35.setLog(log38);
        retrofit.RestAdapter.Builder builder40 = builder32.setLog(log38);
        retrofit.RestAdapter.Builder builder41 = builder27.setLog(log38);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLog(log51);
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder54 = builder52.setLogLevel(logLevel53);
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder52.setLog(log55);
        retrofit.RestAdapter.Builder builder57 = builder49.setLog(log55);
        retrofit.RestAdapter.Builder builder58 = builder42.setLog(log55);
        retrofit.RestAdapter.Builder builder59 = builder27.setLog(log55);
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder65 = builder59.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder68 = builder66.setLog(log67);
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder71 = builder69.setLog(log70);
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder73 = builder71.setLogLevel(logLevel72);
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log75 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder76 = builder74.setLog(log75);
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder78 = builder76.setLogLevel(logLevel77);
        retrofit.RestAdapter.Log log79 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder80 = builder76.setLog(log79);
        retrofit.RestAdapter.Builder builder81 = builder73.setLog(log79);
        retrofit.RestAdapter.Builder builder82 = builder68.setLog(log79);
        log79.log("");
        log79.log("");
        retrofit.RestAdapter.Builder builder87 = builder65.setLog(log79);
        log79.log("");
        retrofit.RestAdapter.Builder builder90 = builder24.setLog(log79);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter91 = builder24.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(log75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder90);
    }

    @Test
    public void test04189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04189");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder14.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = builder9.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLog(log27);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder32.setLog(log35);
        log35.log("hi!");
        log35.log("");
        retrofit.RestAdapter.Builder builder41 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder42 = builder4.setLog(log35);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = builder47.setServer("hi!");
        retrofit.RestAdapter restAdapter50 = builder49.build();
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        restAdapter50.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLog(log58);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder61 = builder59.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder63 = builder61.setServer("hi!");
        retrofit.RestAdapter restAdapter64 = builder63.build();
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLog(log66);
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder69 = builder67.setLogLevel(logLevel68);
        restAdapter64.setLogLevel(logLevel68);
        restAdapter50.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder74 = builder72.setLog(log73);
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder76 = builder74.setLogLevel(logLevel75);
        retrofit.RestAdapter.Builder builder78 = builder76.setServer("hi!");
        retrofit.RestAdapter restAdapter79 = builder78.build();
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder82 = builder80.setLog(log81);
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder84 = builder82.setLogLevel(logLevel83);
        restAdapter79.setLogLevel(logLevel83);
        restAdapter50.setLogLevel(logLevel83);
        retrofit.RestAdapter.LogLevel logLevel87 = restAdapter50.getLogLevel();
        retrofit.RestAdapter.Builder builder88 = builder4.setLogLevel(logLevel87);
        retrofit.RestAdapter.Log log89 = retrofit.RestAdapter.Log.NONE;
        log89.log("hi!");
        retrofit.RestAdapter.Builder builder92 = builder88.setLog(log89);
        retrofit.RestAdapter restAdapter93 = builder88.build();
        retrofit.RestAdapter restAdapter94 = builder88.build();
        retrofit.RestAdapter restAdapter95 = builder88.build();
        retrofit.client.Client.Provider provider96 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder97 = builder88.setClient(provider96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(restAdapter50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(restAdapter64);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(restAdapter79);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(log89);
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertNotNull(restAdapter93);
        org.junit.Assert.assertNotNull(restAdapter94);
        org.junit.Assert.assertNotNull(restAdapter95);
    }

    @Test
    public void test04190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04190");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder22.setServer("hi!");
        retrofit.RestAdapter.Builder builder26 = builder22.setServer("hi!");
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        log28.log("");
        log28.log("");
        retrofit.RestAdapter.Builder builder34 = builder22.setLog(log28);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLog(log39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder40.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder45.setLog(log48);
        retrofit.RestAdapter.Builder builder50 = builder42.setLog(log48);
        retrofit.RestAdapter.Builder builder51 = builder37.setLog(log48);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder52.setLog(log55);
        retrofit.RestAdapter.Builder builder57 = builder51.setLog(log55);
        retrofit.RestAdapter.Builder builder59 = builder51.setServer("hi!");
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.Builder builder63 = builder59.setLog(log61);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLog(log65);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder68 = builder66.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder70 = builder68.setServer("hi!");
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log72 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder73 = builder71.setLog(log72);
        log72.log("");
        retrofit.RestAdapter.Builder builder76 = builder68.setLog(log72);
        log72.log("");
        log72.log("hi!");
        retrofit.RestAdapter.Builder builder81 = builder59.setLog(log72);
        log72.log("");
        log72.log("hi!");
        retrofit.RestAdapter.Builder builder86 = builder22.setLog(log72);
        retrofit.client.Client.Provider provider87 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder88 = builder22.setClient(provider87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder86);
    }

    @Test
    public void test04191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04191");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder12.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder19.setServer("hi!");
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLog(log23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder32.setLog(log35);
        retrofit.RestAdapter.Builder builder37 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder38 = builder24.setLog(log35);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder39.setLog(log42);
        retrofit.RestAdapter.Builder builder44 = builder38.setLog(log42);
        retrofit.RestAdapter.Builder builder46 = builder44.setServer("hi!");
        retrofit.RestAdapter.Builder builder48 = builder44.setServer("hi!");
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        log50.log("");
        log50.log("");
        retrofit.RestAdapter.Builder builder56 = builder44.setLog(log50);
        retrofit.RestAdapter.Builder builder57 = builder19.setLog(log50);
        retrofit.RestAdapter restAdapter58 = builder57.build();
        retrofit.RestAdapter restAdapter59 = builder57.build();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.Builder builder63 = builder57.setLog(log61);
        retrofit.RestAdapter.Builder builder64 = builder12.setLog(log61);
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLog(log66);
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder69 = builder67.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder70.setLog(log71);
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder74 = builder72.setLogLevel(logLevel73);
        retrofit.RestAdapter.Log log75 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder76 = builder72.setLog(log75);
        retrofit.RestAdapter.Builder builder77 = builder69.setLog(log75);
        retrofit.RestAdapter.Builder builder79 = builder69.setServer("hi!");
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder82 = builder80.setLog(log81);
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder84 = builder82.setLogLevel(logLevel83);
        retrofit.RestAdapter.Log log85 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder86 = builder82.setLog(log85);
        retrofit.RestAdapter.Builder builder87 = builder69.setLog(log85);
        retrofit.RestAdapter.Builder builder88 = builder64.setLog(log85);
        log85.log("hi!");
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(restAdapter58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(log75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(log85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder88);
    }

    @Test
    public void test04192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04192");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = builder6.build();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        restAdapter7.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLog(log15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder20 = builder18.setServer("hi!");
        retrofit.RestAdapter restAdapter21 = builder20.build();
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLog(log23);
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        restAdapter21.setLogLevel(logLevel25);
        restAdapter7.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLog(log30);
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder35 = builder33.setServer("hi!");
        retrofit.RestAdapter restAdapter36 = builder35.build();
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        restAdapter36.setLogLevel(logLevel40);
        restAdapter7.setLogLevel(logLevel40);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter7.setLogLevel(logLevel44);
        retrofit.RestAdapter.LogLevel logLevel46 = restAdapter7.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel47 = restAdapter7.getLogLevel();
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLog(log57);
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder60 = builder58.setLogLevel(logLevel59);
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder58.setLog(log61);
        retrofit.RestAdapter.Builder builder63 = builder55.setLog(log61);
        retrofit.RestAdapter.Builder builder64 = builder50.setLog(log61);
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLog(log66);
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder68.setLog(log69);
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder72 = builder70.setLogLevel(logLevel71);
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder75 = builder73.setLog(log74);
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder77 = builder75.setLogLevel(logLevel76);
        retrofit.RestAdapter.Log log78 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder79 = builder75.setLog(log78);
        retrofit.RestAdapter.Builder builder80 = builder72.setLog(log78);
        retrofit.RestAdapter.Builder builder81 = builder65.setLog(log78);
        retrofit.RestAdapter.Builder builder82 = builder50.setLog(log78);
        retrofit.RestAdapter.Builder builder83 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log84 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder85 = builder83.setLog(log84);
        retrofit.RestAdapter.LogLevel logLevel86 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder87 = builder85.setLogLevel(logLevel86);
        retrofit.RestAdapter.Builder builder88 = builder82.setLogLevel(logLevel86);
        boolean boolean89 = logLevel86.log();
        restAdapter7.setLogLevel(logLevel86);
        boolean boolean91 = logLevel86.log();
        boolean boolean92 = logLevel86.log();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(restAdapter7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(restAdapter21);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(log78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(log84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test04193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04193");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder2.setLog(log17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLog(log20);
        log20.log("hi!");
        retrofit.RestAdapter.Builder builder24 = builder2.setLog(log20);
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.Builder builder28 = builder26.setServer("hi!");
        retrofit.RestAdapter.Builder builder30 = builder26.setServer("hi!");
        retrofit.client.Client client31 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder32 = builder30.setClient(client31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
    }

    @Test
    public void test04194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04194");
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        java.lang.String str15 = request14.getMethod();
        java.util.List<retrofit.client.Header> headerList16 = request14.getHeaders();
        java.util.List<retrofit.client.Header> headerList17 = request14.getHeaders();
        java.util.List<retrofit.client.Header> headerList18 = request14.getHeaders();
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("hi!", "hi!", headerList18, typedOutput19);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("", "", headerList18, typedOutput21);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("hi!", "hi!", headerList18, typedOutput23);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "", headerList18, typedOutput25);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(headerList16);
        org.junit.Assert.assertNotNull(headerList17);
        org.junit.Assert.assertNotNull(headerList18);
    }

    @Test
    public void test04195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04195");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        log16.log("");
        retrofit.RestAdapter.Builder builder20 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("hi!");
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = builder27.setServer("hi!");
        retrofit.RestAdapter restAdapter30 = builder29.build();
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        restAdapter30.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder43 = builder41.setServer("hi!");
        retrofit.RestAdapter restAdapter44 = builder43.build();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        restAdapter44.setLogLevel(logLevel48);
        restAdapter30.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder58 = builder56.setServer("hi!");
        retrofit.RestAdapter restAdapter59 = builder58.build();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        restAdapter59.setLogLevel(logLevel63);
        restAdapter30.setLogLevel(logLevel63);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter30.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder69 = builder22.setLogLevel(logLevel67);
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder71 = builder69.setLogLevel(logLevel70);
        retrofit.RestAdapter restAdapter72 = builder71.build();
        retrofit.RestAdapter.Builder builder74 = builder71.setServer("hi!");
        retrofit.client.Client.Provider provider75 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder76 = builder74.setClient(provider75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(restAdapter30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(restAdapter44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(restAdapter72);
        org.junit.Assert.assertNotNull(builder74);
    }

    @Test
    public void test04196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04196");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder2.setLog(log17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLog(log20);
        log20.log("hi!");
        retrofit.RestAdapter.Builder builder24 = builder2.setLog(log20);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLog(log29);
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder32 = builder30.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLog(log34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder35.setLog(log38);
        retrofit.RestAdapter.Builder builder40 = builder32.setLog(log38);
        retrofit.RestAdapter.Builder builder41 = builder27.setLog(log38);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder42.setLog(log45);
        retrofit.RestAdapter.Builder builder47 = builder41.setLog(log45);
        retrofit.RestAdapter.Builder builder49 = builder41.setServer("hi!");
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLog(log51);
        retrofit.RestAdapter.Builder builder53 = builder49.setLog(log51);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder58 = builder56.setLogLevel(logLevel57);
        boolean boolean59 = logLevel57.log();
        retrofit.RestAdapter.Builder builder60 = builder53.setLogLevel(logLevel57);
        boolean boolean61 = logLevel57.log();
        boolean boolean62 = logLevel57.log();
        retrofit.RestAdapter.Builder builder63 = builder2.setLogLevel(logLevel57);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLog(log65);
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log68 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder69 = builder67.setLog(log68);
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder71 = builder69.setLogLevel(logLevel70);
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder74 = builder72.setLog(log73);
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder76 = builder74.setLogLevel(logLevel75);
        retrofit.RestAdapter.Log log77 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder78 = builder74.setLog(log77);
        retrofit.RestAdapter.Builder builder79 = builder71.setLog(log77);
        retrofit.RestAdapter.Builder builder80 = builder64.setLog(log77);
        log77.log("");
        retrofit.RestAdapter.Builder builder83 = builder63.setLog(log77);
        retrofit.RequestInterceptor requestInterceptor84 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder85 = builder83.setRequestInterceptor(requestInterceptor84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(log77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder83);
    }

    @Test
    public void test04197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04197");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        log16.log("");
        retrofit.RestAdapter.Builder builder20 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("hi!");
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLog(log27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder33.setLog(log36);
        retrofit.RestAdapter.Builder builder38 = builder30.setLog(log36);
        retrofit.RestAdapter.Builder builder39 = builder23.setLog(log36);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder50.setLog(log53);
        retrofit.RestAdapter.Builder builder55 = builder47.setLog(log53);
        retrofit.RestAdapter.Builder builder56 = builder40.setLog(log53);
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLog(log58);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder61 = builder57.setLogLevel(logLevel60);
        boolean boolean62 = logLevel60.log();
        retrofit.RestAdapter.Builder builder63 = builder40.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder64 = builder39.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLog(log66);
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder68.setLog(log69);
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder72 = builder70.setLogLevel(logLevel71);
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder75 = builder73.setLog(log74);
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder77 = builder75.setLogLevel(logLevel76);
        retrofit.RestAdapter.Log log78 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder79 = builder75.setLog(log78);
        retrofit.RestAdapter.Builder builder80 = builder72.setLog(log78);
        retrofit.RestAdapter.Builder builder81 = builder67.setLog(log78);
        retrofit.RestAdapter.Builder builder82 = builder39.setLog(log78);
        retrofit.RestAdapter.Builder builder83 = builder20.setLog(log78);
        java.util.concurrent.Executor executor84 = null;
        java.util.concurrent.Executor executor85 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder86 = builder20.setExecutors(executor84, executor85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(log78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder83);
    }

    @Test
    public void test04198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04198");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder4.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = builder27.setServer("hi!");
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLog(log34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLog(log39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder40.setLogLevel(logLevel41);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder40.setLog(log43);
        retrofit.RestAdapter.Builder builder45 = builder37.setLog(log43);
        retrofit.RestAdapter.Builder builder46 = builder32.setLog(log43);
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLog(log48);
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder47.setLog(log50);
        retrofit.RestAdapter.Builder builder52 = builder46.setLog(log50);
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLog(log54);
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder57 = builder55.setLogLevel(logLevel56);
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder55.setLog(log58);
        log58.log("hi!");
        log58.log("");
        retrofit.RestAdapter.Builder builder64 = builder52.setLog(log58);
        retrofit.RestAdapter.Builder builder65 = builder27.setLog(log58);
        log58.log("");
        retrofit.RestAdapter.Builder builder68 = builder22.setLog(log58);
        log58.log("");
        log58.log("");
        log58.log("hi!");
        log58.log("");
        log58.log("");
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder68);
    }

    @Test
    public void test04199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04199");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log26);
        retrofit.RestAdapter restAdapter29 = builder24.build();
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter29.getLogLevel();
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLog(log37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder38.setLog(log41);
        retrofit.RestAdapter.Builder builder43 = builder35.setLog(log41);
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLog(log45);
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLog(log48);
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder54.setLog(log57);
        retrofit.RestAdapter.Builder builder59 = builder51.setLog(log57);
        retrofit.RestAdapter.Builder builder60 = builder44.setLog(log57);
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder63 = builder61.setLog(log62);
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder65 = builder61.setLogLevel(logLevel64);
        boolean boolean66 = logLevel64.log();
        retrofit.RestAdapter.Builder builder67 = builder44.setLogLevel(logLevel64);
        retrofit.RestAdapter.Builder builder68 = builder35.setLogLevel(logLevel64);
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder71 = builder69.setLog(log70);
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder73 = builder71.setLogLevel(logLevel72);
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log75 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder76 = builder74.setLog(log75);
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder78 = builder76.setLogLevel(logLevel77);
        retrofit.RestAdapter.Log log79 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder80 = builder76.setLog(log79);
        retrofit.RestAdapter.Builder builder81 = builder73.setLog(log79);
        retrofit.RestAdapter.Builder builder83 = builder73.setServer("hi!");
        retrofit.RestAdapter.Builder builder84 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log85 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder86 = builder84.setLog(log85);
        retrofit.RestAdapter.LogLevel logLevel87 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder88 = builder86.setLogLevel(logLevel87);
        retrofit.RestAdapter.Log log89 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder90 = builder86.setLog(log89);
        retrofit.RestAdapter.Builder builder91 = builder73.setLog(log89);
        retrofit.RestAdapter.LogLevel logLevel92 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder93 = builder73.setLogLevel(logLevel92);
        retrofit.RestAdapter restAdapter94 = builder93.build();
        retrofit.RestAdapter.LogLevel logLevel95 = restAdapter94.getLogLevel();
        retrofit.RestAdapter.Builder builder96 = builder68.setLogLevel(logLevel95);
        restAdapter29.setLogLevel(logLevel95);
        boolean boolean98 = logLevel95.log();
        boolean boolean99 = logLevel95.log();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(restAdapter29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(log75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(log85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(log89);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertNotNull(restAdapter94);
        org.junit.Assert.assertTrue("'" + logLevel95 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel95.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder96);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test04200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04200");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RequestInterceptor requestInterceptor7 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder8 = builder4.setRequestInterceptor(requestInterceptor7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
    }

    @Test
    public void test04201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04201");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log26);
        retrofit.RestAdapter.Builder builder30 = builder28.setServer("hi!");
        retrofit.RestAdapter restAdapter31 = builder28.build();
        retrofit.RestAdapter.Builder builder33 = builder28.setServer("hi!");
        retrofit.RestAdapter.Builder builder35 = builder28.setServer("hi!");
        retrofit.client.Client client36 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder37 = builder35.setClient(client36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(restAdapter31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
    }

    @Test
    public void test04202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04202");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = builder6.build();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        restAdapter7.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLog(log15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder20 = builder18.setServer("hi!");
        retrofit.RestAdapter restAdapter21 = builder20.build();
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLog(log23);
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        restAdapter21.setLogLevel(logLevel25);
        restAdapter7.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLog(log30);
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder35 = builder33.setServer("hi!");
        retrofit.RestAdapter restAdapter36 = builder35.build();
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        restAdapter36.setLogLevel(logLevel40);
        restAdapter7.setLogLevel(logLevel40);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter7.setLogLevel(logLevel44);
        retrofit.RestAdapter.LogLevel logLevel46 = restAdapter7.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel47 = restAdapter7.getLogLevel();
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder48.setLogLevel(logLevel51);
        restAdapter7.setLogLevel(logLevel51);
        java.lang.Class<?> wildcardClass54 = logLevel51.getClass();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(restAdapter7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(restAdapter21);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test04203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04203");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("hi!");
        retrofit.RestAdapter restAdapter32 = builder31.build();
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLog(log34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        restAdapter32.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder45 = builder43.setServer("hi!");
        retrofit.RestAdapter restAdapter46 = builder45.build();
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLog(log48);
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        restAdapter46.setLogLevel(logLevel50);
        restAdapter32.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder58 = builder56.setLogLevel(logLevel57);
        retrofit.RestAdapter.Builder builder60 = builder58.setServer("hi!");
        retrofit.RestAdapter restAdapter61 = builder60.build();
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder64 = builder62.setLog(log63);
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        restAdapter61.setLogLevel(logLevel65);
        restAdapter32.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder69 = builder16.setLogLevel(logLevel65);
        retrofit.RestAdapter restAdapter70 = builder69.build();
        retrofit.RestAdapter.Builder builder72 = builder69.setServer("hi!");
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder75 = builder73.setLog(log74);
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder77 = builder75.setLogLevel(logLevel76);
        retrofit.RestAdapter.Builder builder79 = builder77.setServer("hi!");
        retrofit.RestAdapter restAdapter80 = builder79.build();
        retrofit.RestAdapter.LogLevel logLevel81 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean82 = logLevel81.log();
        boolean boolean83 = logLevel81.log();
        retrofit.RestAdapter.Builder builder84 = builder79.setLogLevel(logLevel81);
        retrofit.RestAdapter.Builder builder85 = builder72.setLogLevel(logLevel81);
        retrofit.RestAdapter.LogLevel logLevel86 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean87 = logLevel86.log();
        boolean boolean88 = logLevel86.log();
        boolean boolean89 = logLevel86.log();
        retrofit.RestAdapter.Builder builder90 = builder72.setLogLevel(logLevel86);
        boolean boolean91 = logLevel86.log();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(restAdapter32);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(restAdapter46);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(restAdapter61);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(restAdapter70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(restAdapter80);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test04204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04204");
        retrofit.client.Header[] headerArray18 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList19 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList19, headerArray18);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList19, typedOutput21);
        java.lang.String str23 = request22.getMethod();
        retrofit.mime.TypedOutput typedOutput24 = request22.getBody();
        java.util.List<retrofit.client.Header> headerList25 = request22.getHeaders();
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("hi!", "hi!", headerList25, typedOutput26);
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "hi!", headerList25, typedOutput28);
        java.util.List<retrofit.client.Header> headerList30 = request29.getHeaders();
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("", "", headerList30, typedOutput31);
        retrofit.mime.TypedOutput typedOutput33 = null;
        retrofit.client.Request request34 = new retrofit.client.Request("", "", headerList30, typedOutput33);
        retrofit.mime.TypedOutput typedOutput35 = null;
        retrofit.client.Request request36 = new retrofit.client.Request("", "hi!", headerList30, typedOutput35);
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("", "", headerList30, typedOutput37);
        java.util.List<retrofit.client.Header> headerList39 = request38.getHeaders();
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("hi!", "hi!", headerList39, typedOutput40);
        retrofit.mime.TypedOutput typedOutput42 = null;
        retrofit.client.Request request43 = new retrofit.client.Request("", "", headerList39, typedOutput42);
        org.junit.Assert.assertNotNull(headerArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(typedOutput24);
        org.junit.Assert.assertNotNull(headerList25);
        org.junit.Assert.assertNotNull(headerList30);
        org.junit.Assert.assertNotNull(headerList39);
    }

    @Test
    public void test04205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04205");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        log16.log("");
        retrofit.RestAdapter.Builder builder20 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLog(log22);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLog(log27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder28.setLog(log31);
        retrofit.RestAdapter.Builder builder33 = builder25.setLog(log31);
        retrofit.RestAdapter.Builder builder34 = builder4.setLog(log31);
        retrofit.RestAdapter restAdapter35 = builder4.build();
        retrofit.RestAdapter restAdapter36 = builder4.build();
        retrofit.RestAdapter.Builder builder38 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder40 = builder38.setServer("hi!");
        retrofit.converter.Converter converter41 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder42 = builder40.setConverter(converter41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(restAdapter35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
    }

    @Test
    public void test04206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04206");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder16 = builder12.setLog(log15);
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log15);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log15);
        retrofit.RestAdapter restAdapter19 = builder18.build();
        retrofit.RestAdapter.LogLevel logLevel20 = restAdapter19.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel21 = restAdapter19.getLogLevel();
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLog(log23);
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder28 = builder26.setServer("hi!");
        retrofit.RestAdapter restAdapter29 = builder28.build();
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        restAdapter29.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLog(log37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("hi!");
        retrofit.RestAdapter restAdapter43 = builder42.build();
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLog(log45);
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        restAdapter43.setLogLevel(logLevel47);
        restAdapter29.setLogLevel(logLevel47);
        retrofit.RestAdapter.LogLevel logLevel51 = restAdapter29.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel52 = restAdapter29.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter29.getLogLevel();
        restAdapter19.setLogLevel(logLevel53);
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(restAdapter19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(restAdapter29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(restAdapter43);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test04207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04207");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        log10.log("");
        retrofit.RestAdapter.Builder builder14 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder19.setServer("hi!");
        retrofit.RestAdapter restAdapter22 = builder21.build();
        retrofit.RestAdapter restAdapter23 = builder21.build();
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder24.setLogLevel(logLevel27);
        boolean boolean29 = logLevel27.log();
        restAdapter23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder31 = builder14.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder33 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter34 = builder14.build();
        retrofit.client.Client client35 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder36 = builder14.setClient(client35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNotNull(restAdapter23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(restAdapter34);
    }

    @Test
    public void test04208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04208");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder14.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = builder9.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLog(log27);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder33 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        log35.log("");
        log35.log("");
        retrofit.RestAdapter.Builder builder41 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder42 = builder4.setLog(log35);
        retrofit.RestAdapter restAdapter43 = builder42.build();
        retrofit.RestAdapter restAdapter44 = builder42.build();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.Builder builder48 = builder42.setLog(log46);
        retrofit.RestAdapter.Builder builder50 = builder42.setServer("hi!");
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder58 = builder56.setLogLevel(logLevel57);
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder61 = builder59.setLog(log60);
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder63 = builder61.setLogLevel(logLevel62);
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder65 = builder61.setLog(log64);
        retrofit.RestAdapter.Builder builder66 = builder58.setLog(log64);
        retrofit.RestAdapter.Builder builder67 = builder53.setLog(log64);
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder68.setLog(log69);
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log72 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder73 = builder71.setLog(log72);
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder75 = builder73.setLogLevel(logLevel74);
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log77 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder78 = builder76.setLog(log77);
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder80 = builder78.setLogLevel(logLevel79);
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder82 = builder78.setLog(log81);
        retrofit.RestAdapter.Builder builder83 = builder75.setLog(log81);
        retrofit.RestAdapter.Builder builder84 = builder68.setLog(log81);
        retrofit.RestAdapter.Builder builder85 = builder53.setLog(log81);
        retrofit.RestAdapter.Builder builder86 = builder42.setLog(log81);
        retrofit.RestAdapter.Builder builder88 = builder86.setServer("hi!");
        retrofit.RestAdapter restAdapter89 = builder86.build();
        retrofit.client.Client.Provider provider90 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder91 = builder86.setClient(provider90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(restAdapter43);
        org.junit.Assert.assertNotNull(restAdapter44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(log77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(restAdapter89);
    }

    @Test
    public void test04209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04209");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = builder6.build();
        retrofit.RestAdapter restAdapter8 = builder6.build();
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder9.setLog(log10);
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder13 = builder9.setLogLevel(logLevel12);
        boolean boolean14 = logLevel12.log();
        restAdapter8.setLogLevel(logLevel12);
        retrofit.RestAdapter.LogLevel logLevel16 = null;
        restAdapter8.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder18.setLog(log19);
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder22 = builder20.setLogLevel(logLevel21);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder25.setLog(log28);
        retrofit.RestAdapter.Builder builder30 = builder22.setLog(log28);
        retrofit.RestAdapter.Builder builder32 = builder22.setServer("hi!");
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLog(log34);
        log34.log("");
        retrofit.RestAdapter.Builder builder38 = builder22.setLog(log34);
        retrofit.RestAdapter.Builder builder40 = builder38.setServer("hi!");
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLog(log42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder47 = builder45.setServer("hi!");
        retrofit.RestAdapter restAdapter48 = builder47.build();
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder53 = builder51.setLogLevel(logLevel52);
        restAdapter48.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder57 = builder55.setLog(log56);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder59 = builder57.setLogLevel(logLevel58);
        retrofit.RestAdapter.Builder builder61 = builder59.setServer("hi!");
        retrofit.RestAdapter restAdapter62 = builder61.build();
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLog(log64);
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder67 = builder65.setLogLevel(logLevel66);
        restAdapter62.setLogLevel(logLevel66);
        restAdapter48.setLogLevel(logLevel66);
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder70.setLog(log71);
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder74 = builder72.setLogLevel(logLevel73);
        retrofit.RestAdapter.Builder builder76 = builder74.setServer("hi!");
        retrofit.RestAdapter restAdapter77 = builder76.build();
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log79 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder80 = builder78.setLog(log79);
        retrofit.RestAdapter.LogLevel logLevel81 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder82 = builder80.setLogLevel(logLevel81);
        restAdapter77.setLogLevel(logLevel81);
        restAdapter48.setLogLevel(logLevel81);
        retrofit.RestAdapter.LogLevel logLevel85 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter48.setLogLevel(logLevel85);
        retrofit.RestAdapter.Builder builder87 = builder40.setLogLevel(logLevel85);
        retrofit.RestAdapter.LogLevel logLevel88 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder89 = builder87.setLogLevel(logLevel88);
        retrofit.RestAdapter restAdapter90 = builder89.build();
        retrofit.RestAdapter.LogLevel logLevel91 = restAdapter90.getLogLevel();
        // The following exception was thrown during execution in test generation
        try {
            restAdapter8.setLogLevel(logLevel91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Log level may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(restAdapter7);
        org.junit.Assert.assertNotNull(restAdapter8);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(restAdapter48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(restAdapter62);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(restAdapter77);
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertTrue("'" + logLevel88 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel88.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(restAdapter90);
        org.junit.Assert.assertTrue("'" + logLevel91 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel91.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test04210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04210");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log26);
        retrofit.RestAdapter restAdapter29 = builder24.build();
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        boolean boolean35 = logLevel33.log();
        retrofit.RestAdapter.Builder builder36 = builder24.setLogLevel(logLevel33);
        retrofit.client.Client client37 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder38 = builder24.setClient(client37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(restAdapter29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(builder36);
    }

    @Test
    public void test04211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04211");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder25.setLog(log28);
        log28.log("hi!");
        log28.log("");
        retrofit.RestAdapter.Builder builder34 = builder22.setLog(log28);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder41 = builder39.setServer("hi!");
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        log43.log("");
        retrofit.RestAdapter.Builder builder47 = builder39.setLog(log43);
        retrofit.RestAdapter.Builder builder48 = builder22.setLog(log43);
        retrofit.Server server49 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder50 = builder22.setServer(server49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
    }

    @Test
    public void test04212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04212");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder4.setLog(log20);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder4.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        log26.log("");
        log26.log("");
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log26);
        retrofit.RestAdapter restAdapter33 = builder32.build();
        retrofit.RestAdapter restAdapter34 = builder32.build();
        retrofit.client.Client.Provider provider35 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder36 = builder32.setClient(provider35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(restAdapter33);
        org.junit.Assert.assertNotNull(restAdapter34);
    }

    @Test
    public void test04213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04213");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log26);
        retrofit.RestAdapter.Builder builder30 = builder28.setServer("hi!");
        retrofit.RestAdapter restAdapter31 = builder28.build();
        retrofit.RestAdapter restAdapter32 = builder28.build();
        retrofit.RestAdapter restAdapter33 = builder28.build();
        retrofit.Profiler profiler34 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder35 = builder28.setProfiler(profiler34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(restAdapter31);
        org.junit.Assert.assertNotNull(restAdapter32);
        org.junit.Assert.assertNotNull(restAdapter33);
    }

    @Test
    public void test04214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04214");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder4.setLog(log20);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder4.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        log26.log("");
        log26.log("");
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log26);
        retrofit.RestAdapter restAdapter33 = builder32.build();
        retrofit.RestAdapter.Builder builder35 = builder32.setServer("hi!");
        retrofit.RestAdapter restAdapter36 = builder35.build();
        retrofit.ErrorHandler errorHandler37 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder38 = builder35.setErrorHandler(errorHandler37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(restAdapter33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(restAdapter36);
    }

    @Test
    public void test04215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04215");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = builder6.build();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder14 = builder12.setServer("hi!");
        retrofit.RestAdapter restAdapter15 = builder14.build();
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLog(log17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        restAdapter15.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLog(log23);
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder28 = builder26.setServer("hi!");
        retrofit.RestAdapter restAdapter29 = builder28.build();
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        restAdapter29.setLogLevel(logLevel33);
        restAdapter15.setLogLevel(logLevel33);
        boolean boolean37 = logLevel33.log();
        boolean boolean38 = logLevel33.log();
        restAdapter7.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel40 = restAdapter7.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel41 = null;
        restAdapter7.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = builder47.setServer("hi!");
        retrofit.RestAdapter restAdapter50 = builder49.build();
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder57 = builder55.setServer("hi!");
        retrofit.RestAdapter restAdapter58 = builder57.build();
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder61 = builder59.setLog(log60);
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder63 = builder61.setLogLevel(logLevel62);
        restAdapter58.setLogLevel(logLevel62);
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLog(log66);
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder69 = builder67.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder71 = builder69.setServer("hi!");
        retrofit.RestAdapter restAdapter72 = builder71.build();
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder75 = builder73.setLog(log74);
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder77 = builder75.setLogLevel(logLevel76);
        restAdapter72.setLogLevel(logLevel76);
        restAdapter58.setLogLevel(logLevel76);
        boolean boolean80 = logLevel76.log();
        boolean boolean81 = logLevel76.log();
        restAdapter50.setLogLevel(logLevel76);
        boolean boolean83 = logLevel76.log();
        // The following exception was thrown during execution in test generation
        try {
            restAdapter7.setLogLevel(logLevel76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Log level may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(restAdapter7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(restAdapter15);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(restAdapter29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(restAdapter50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(restAdapter58);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(restAdapter72);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test04216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04216");
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        java.lang.String str11 = request10.getMethod();
        java.lang.String str12 = request10.getUrl();
        java.lang.String str13 = request10.getUrl();
        java.lang.String str14 = request10.getMethod();
        java.lang.String str15 = request10.getUrl();
        retrofit.mime.TypedOutput typedOutput16 = request10.getBody();
        java.util.List<retrofit.client.Header> headerList17 = request10.getHeaders();
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("", "hi!", headerList17, typedOutput18);
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("", "", headerList17, typedOutput20);
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNull(typedOutput16);
        org.junit.Assert.assertNotNull(headerList17);
    }

    @Test
    public void test04217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04217");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = builder6.build();
        retrofit.RestAdapter restAdapter8 = builder6.build();
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder9.setLog(log10);
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder15 = builder13.setServer("hi!");
        retrofit.RestAdapter restAdapter16 = builder15.build();
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        restAdapter16.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = builder27.setServer("hi!");
        retrofit.RestAdapter restAdapter30 = builder29.build();
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        restAdapter30.setLogLevel(logLevel34);
        restAdapter16.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLog(log39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder40.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder44 = builder42.setServer("hi!");
        retrofit.RestAdapter restAdapter45 = builder44.build();
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLog(log47);
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        restAdapter45.setLogLevel(logLevel49);
        restAdapter16.setLogLevel(logLevel49);
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter16.setLogLevel(logLevel53);
        retrofit.RestAdapter.LogLevel logLevel55 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel56 = restAdapter16.getLogLevel();
        restAdapter8.setLogLevel(logLevel56);
        retrofit.RestAdapter.LogLevel logLevel58 = restAdapter8.getLogLevel();
        boolean boolean59 = logLevel58.log();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(restAdapter7);
        org.junit.Assert.assertNotNull(restAdapter8);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(restAdapter16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(restAdapter30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(restAdapter45);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test04218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04218");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter restAdapter5 = builder2.build();
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log7 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder8 = builder6.setLog(log7);
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("hi!");
        retrofit.RestAdapter restAdapter13 = builder12.build();
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLog(log15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        restAdapter13.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLog(log21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder26 = builder24.setServer("hi!");
        retrofit.RestAdapter restAdapter27 = builder26.build();
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLog(log29);
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder32 = builder30.setLogLevel(logLevel31);
        restAdapter27.setLogLevel(logLevel31);
        restAdapter13.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder41 = builder39.setServer("hi!");
        retrofit.RestAdapter restAdapter42 = builder41.build();
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        restAdapter42.setLogLevel(logLevel46);
        restAdapter13.setLogLevel(logLevel46);
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter13.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder58 = builder56.setServer("hi!");
        retrofit.RestAdapter restAdapter59 = builder58.build();
        retrofit.RestAdapter restAdapter60 = builder58.build();
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder63 = builder61.setLog(log62);
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder65 = builder61.setLogLevel(logLevel64);
        boolean boolean66 = logLevel64.log();
        restAdapter60.setLogLevel(logLevel64);
        restAdapter13.setLogLevel(logLevel64);
        retrofit.RestAdapter.Builder builder69 = builder2.setLogLevel(logLevel64);
        retrofit.RestAdapter.Builder builder71 = builder2.setServer("hi!");
        retrofit.ErrorHandler errorHandler72 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder73 = builder2.setErrorHandler(errorHandler72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(restAdapter5);
        org.junit.Assert.assertNotNull(log7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(restAdapter13);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(restAdapter27);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(restAdapter42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertNotNull(restAdapter60);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder71);
    }

    @Test
    public void test04219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04219");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder14.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = builder9.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLog(log27);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder32.setLog(log35);
        log35.log("hi!");
        log35.log("");
        retrofit.RestAdapter.Builder builder41 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder42 = builder4.setLog(log35);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = builder47.setServer("hi!");
        retrofit.RestAdapter restAdapter50 = builder49.build();
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        restAdapter50.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLog(log58);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder61 = builder59.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder63 = builder61.setServer("hi!");
        retrofit.RestAdapter restAdapter64 = builder63.build();
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLog(log66);
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder69 = builder67.setLogLevel(logLevel68);
        restAdapter64.setLogLevel(logLevel68);
        restAdapter50.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder74 = builder72.setLog(log73);
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder76 = builder74.setLogLevel(logLevel75);
        retrofit.RestAdapter.Builder builder78 = builder76.setServer("hi!");
        retrofit.RestAdapter restAdapter79 = builder78.build();
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder82 = builder80.setLog(log81);
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder84 = builder82.setLogLevel(logLevel83);
        restAdapter79.setLogLevel(logLevel83);
        restAdapter50.setLogLevel(logLevel83);
        retrofit.RestAdapter.LogLevel logLevel87 = restAdapter50.getLogLevel();
        retrofit.RestAdapter.Builder builder88 = builder4.setLogLevel(logLevel87);
        retrofit.RestAdapter.Builder builder90 = builder88.setServer("hi!");
        retrofit.ErrorHandler errorHandler91 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder92 = builder88.setErrorHandler(errorHandler91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(restAdapter50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(restAdapter64);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(restAdapter79);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(builder90);
    }

    @Test
    public void test04220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04220");
        retrofit.client.Header[] headerArray12 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList13 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList13, headerArray12);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList13, typedOutput15);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList13, typedOutput17);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList13, typedOutput19);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList13, typedOutput21);
        java.lang.String str23 = request22.getUrl();
        java.util.List<retrofit.client.Header> headerList24 = request22.getHeaders();
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("hi!", "hi!", headerList24, typedOutput27);
        java.util.List<retrofit.client.Header> headerList29 = request28.getHeaders();
        retrofit.mime.TypedOutput typedOutput30 = request28.getBody();
        org.junit.Assert.assertNotNull(headerArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(headerList24);
        org.junit.Assert.assertNotNull(headerList29);
        org.junit.Assert.assertNull(typedOutput30);
    }

    @Test
    public void test04221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04221");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        log16.log("");
        retrofit.RestAdapter.Builder builder20 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("hi!");
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder25 = builder22.setExecutors(executor23, executor24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
    }

    @Test
    public void test04222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04222");
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        java.lang.String str15 = request14.getMethod();
        retrofit.mime.TypedOutput typedOutput16 = request14.getBody();
        java.util.List<retrofit.client.Header> headerList17 = request14.getHeaders();
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("hi!", "hi!", headerList17, typedOutput18);
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("", "hi!", headerList17, typedOutput20);
        java.util.List<retrofit.client.Header> headerList22 = request21.getHeaders();
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("", "", headerList22, typedOutput23);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList22, typedOutput25);
        java.util.List<retrofit.client.Header> headerList27 = request26.getHeaders();
        java.lang.String str28 = request26.getMethod();
        java.lang.String str29 = request26.getMethod();
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(typedOutput16);
        org.junit.Assert.assertNotNull(headerList17);
        org.junit.Assert.assertNotNull(headerList22);
        org.junit.Assert.assertNotNull(headerList27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
    }

    @Test
    public void test04223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04223");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder14.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = builder9.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLog(log27);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder33 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder40 = builder38.setServer("hi!");
        retrofit.RestAdapter restAdapter41 = builder40.build();
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        restAdapter41.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder54 = builder52.setServer("hi!");
        retrofit.RestAdapter restAdapter55 = builder54.build();
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLog(log57);
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder60 = builder58.setLogLevel(logLevel59);
        restAdapter55.setLogLevel(logLevel59);
        restAdapter41.setLogLevel(logLevel59);
        retrofit.RestAdapter.LogLevel logLevel63 = restAdapter41.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel64 = restAdapter41.getLogLevel();
        retrofit.RestAdapter.Builder builder65 = builder29.setLogLevel(logLevel64);
        boolean boolean66 = logLevel64.log();
        retrofit.RestAdapter.Builder builder67 = builder6.setLogLevel(logLevel64);
        retrofit.RestAdapter.Builder builder69 = builder67.setServer("hi!");
        retrofit.RestAdapter restAdapter70 = builder69.build();
        retrofit.client.Client client71 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder72 = builder69.setClient(client71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(restAdapter41);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(restAdapter55);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(restAdapter70);
    }

    @Test
    public void test04224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04224");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        log16.log("");
        retrofit.RestAdapter.Builder builder20 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("hi!");
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = builder27.setServer("hi!");
        retrofit.RestAdapter restAdapter30 = builder29.build();
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        restAdapter30.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder43 = builder41.setServer("hi!");
        retrofit.RestAdapter restAdapter44 = builder43.build();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        restAdapter44.setLogLevel(logLevel48);
        restAdapter30.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder58 = builder56.setServer("hi!");
        retrofit.RestAdapter restAdapter59 = builder58.build();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        restAdapter59.setLogLevel(logLevel63);
        restAdapter30.setLogLevel(logLevel63);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter30.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder69 = builder22.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder70.setLog(log71);
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder74 = builder72.setLogLevel(logLevel73);
        retrofit.RestAdapter.Builder builder76 = builder74.setServer("hi!");
        retrofit.RestAdapter restAdapter77 = builder76.build();
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log79 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder80 = builder78.setLog(log79);
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder82 = builder78.setLog(log81);
        retrofit.RestAdapter.Builder builder83 = builder76.setLog(log81);
        retrofit.RestAdapter.Builder builder84 = builder69.setLog(log81);
        retrofit.RestAdapter.Builder builder86 = builder84.setServer("hi!");
        retrofit.RestAdapter restAdapter87 = builder86.build();
        retrofit.client.Client.Provider provider88 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder89 = builder86.setClient(provider88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(restAdapter30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(restAdapter44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(restAdapter77);
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(restAdapter87);
    }

    @Test
    public void test04225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04225");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder0.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder21 = builder17.setLogLevel(logLevel20);
        boolean boolean22 = logLevel20.log();
        retrofit.RestAdapter.Builder builder23 = builder0.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLog(log33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder34.setLogLevel(logLevel35);
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = builder34.setLog(log37);
        retrofit.RestAdapter.Builder builder39 = builder31.setLog(log37);
        retrofit.RestAdapter.Builder builder40 = builder26.setLog(log37);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLog(log42);
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder41.setLog(log44);
        retrofit.RestAdapter.Builder builder46 = builder40.setLog(log44);
        retrofit.RestAdapter.Builder builder48 = builder40.setServer("hi!");
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder53 = builder51.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder55 = builder53.setServer("hi!");
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLog(log57);
        log57.log("");
        retrofit.RestAdapter.Builder builder61 = builder53.setLog(log57);
        retrofit.RestAdapter.Builder builder62 = builder48.setLog(log57);
        retrofit.RestAdapter.Builder builder63 = builder23.setLog(log57);
        log57.log("hi!");
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder63);
    }

    @Test
    public void test04226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04226");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = builder9.setServer("hi!");
        retrofit.RestAdapter restAdapter12 = builder11.build();
        retrofit.RestAdapter restAdapter13 = builder11.build();
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLog(log15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder18 = builder14.setLogLevel(logLevel17);
        boolean boolean19 = logLevel17.log();
        restAdapter13.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder21 = builder0.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLog(log23);
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder29.setLog(log32);
        retrofit.RestAdapter.Builder builder34 = builder26.setLog(log32);
        retrofit.RestAdapter.Builder builder36 = builder26.setServer("hi!");
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder39.setLog(log42);
        retrofit.RestAdapter.Builder builder44 = builder26.setLog(log42);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder51 = builder49.setServer("hi!");
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder57 = builder55.setLog(log56);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder59 = builder57.setLogLevel(logLevel58);
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder66 = builder62.setLog(log65);
        retrofit.RestAdapter.Builder builder67 = builder59.setLog(log65);
        retrofit.RestAdapter.Builder builder68 = builder54.setLog(log65);
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder71 = builder69.setLog(log70);
        retrofit.RestAdapter.Log log72 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder73 = builder69.setLog(log72);
        retrofit.RestAdapter.Builder builder74 = builder68.setLog(log72);
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log76 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder77 = builder75.setLog(log76);
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder79 = builder77.setLogLevel(logLevel78);
        retrofit.RestAdapter.Log log80 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder81 = builder77.setLog(log80);
        log80.log("hi!");
        log80.log("");
        retrofit.RestAdapter.Builder builder86 = builder74.setLog(log80);
        retrofit.RestAdapter.Builder builder87 = builder49.setLog(log80);
        log80.log("");
        retrofit.RestAdapter.Builder builder90 = builder44.setLog(log80);
        log80.log("");
        log80.log("");
        log80.log("hi!");
        retrofit.RestAdapter.Builder builder97 = builder21.setLog(log80);
        java.lang.Class<?> wildcardClass98 = log80.getClass();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(restAdapter12);
        org.junit.Assert.assertNotNull(restAdapter13);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(log80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(builder97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test04227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04227");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log26);
        retrofit.RestAdapter.Builder builder30 = builder28.setServer("hi!");
        retrofit.RestAdapter.Builder builder32 = builder28.setServer("hi!");
        retrofit.RestAdapter restAdapter33 = builder32.build();
        retrofit.RequestInterceptor requestInterceptor34 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder35 = builder32.setRequestInterceptor(requestInterceptor34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(restAdapter33);
    }

    @Test
    public void test04228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04228");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder25.setLog(log28);
        log28.log("hi!");
        log28.log("");
        retrofit.RestAdapter.Builder builder34 = builder22.setLog(log28);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder42.setLog(log45);
        retrofit.RestAdapter.Builder builder47 = builder39.setLog(log45);
        retrofit.RestAdapter.Builder builder49 = builder39.setServer("hi!");
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLog(log51);
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder54 = builder52.setLogLevel(logLevel53);
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder52.setLog(log55);
        retrofit.RestAdapter.Builder builder57 = builder39.setLog(log55);
        retrofit.RestAdapter.Builder builder58 = builder34.setLog(log55);
        retrofit.RestAdapter.Builder builder60 = builder34.setServer("hi!");
        retrofit.client.Client client61 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder62 = builder34.setClient(client61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
    }

    @Test
    public void test04229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04229");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        log16.log("");
        retrofit.RestAdapter.Builder builder20 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLog(log22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLog(log30);
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder31.setLog(log34);
        retrofit.RestAdapter.Builder builder36 = builder28.setLog(log34);
        retrofit.RestAdapter.Builder builder37 = builder23.setLog(log34);
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLog(log39);
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder38.setLog(log41);
        retrofit.RestAdapter.Builder builder43 = builder37.setLog(log41);
        retrofit.RestAdapter.Builder builder45 = builder37.setServer("hi!");
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLog(log47);
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder52 = builder50.setServer("hi!");
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLog(log54);
        log54.log("");
        retrofit.RestAdapter.Builder builder58 = builder50.setLog(log54);
        retrofit.RestAdapter.Builder builder59 = builder45.setLog(log54);
        retrofit.RestAdapter restAdapter60 = builder59.build();
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean62 = logLevel61.log();
        restAdapter60.setLogLevel(logLevel61);
        retrofit.RestAdapter.LogLevel logLevel64 = restAdapter60.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel65 = restAdapter60.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel66 = restAdapter60.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel67 = restAdapter60.getLogLevel();
        retrofit.RestAdapter.Builder builder68 = builder4.setLogLevel(logLevel67);
        retrofit.RestAdapter restAdapter69 = builder4.build();
        retrofit.Profiler profiler70 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder71 = builder4.setProfiler(profiler70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(restAdapter60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(restAdapter69);
    }

    @Test
    public void test04230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04230");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        log16.log("");
        retrofit.RestAdapter.Builder builder20 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("hi!");
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = builder27.setServer("hi!");
        retrofit.RestAdapter restAdapter30 = builder29.build();
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        restAdapter30.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder43 = builder41.setServer("hi!");
        retrofit.RestAdapter restAdapter44 = builder43.build();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        restAdapter44.setLogLevel(logLevel48);
        restAdapter30.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder58 = builder56.setServer("hi!");
        retrofit.RestAdapter restAdapter59 = builder58.build();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        restAdapter59.setLogLevel(logLevel63);
        restAdapter30.setLogLevel(logLevel63);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter30.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder69 = builder22.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder70.setLog(log71);
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder74 = builder72.setLogLevel(logLevel73);
        retrofit.RestAdapter.Builder builder76 = builder74.setServer("hi!");
        retrofit.RestAdapter restAdapter77 = builder76.build();
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log79 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder80 = builder78.setLog(log79);
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder82 = builder78.setLog(log81);
        retrofit.RestAdapter.Builder builder83 = builder76.setLog(log81);
        retrofit.RestAdapter.Builder builder84 = builder69.setLog(log81);
        retrofit.RestAdapter restAdapter85 = builder69.build();
        retrofit.RestAdapter.Builder builder87 = builder69.setServer("hi!");
        retrofit.RestAdapter restAdapter88 = builder87.build();
        retrofit.ErrorHandler errorHandler89 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder90 = builder87.setErrorHandler(errorHandler89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(restAdapter30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(restAdapter44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(restAdapter77);
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(restAdapter85);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(restAdapter88);
    }

    @Test
    public void test04231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04231");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder16 = builder12.setLog(log15);
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log15);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log15);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLog(log23);
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder29.setLog(log32);
        retrofit.RestAdapter.Builder builder34 = builder26.setLog(log32);
        retrofit.RestAdapter.Builder builder35 = builder21.setLog(log32);
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder21.setLog(log36);
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLog(log39);
        log39.log("hi!");
        retrofit.RestAdapter.Builder builder43 = builder21.setLog(log39);
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLog(log45);
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLog(log48);
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder54.setLog(log57);
        retrofit.RestAdapter.Builder builder59 = builder51.setLog(log57);
        retrofit.RestAdapter.Builder builder60 = builder46.setLog(log57);
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder63 = builder61.setLog(log62);
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder65 = builder61.setLog(log64);
        retrofit.RestAdapter.Builder builder66 = builder60.setLog(log64);
        retrofit.RestAdapter.Builder builder68 = builder60.setServer("hi!");
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder71 = builder69.setLog(log70);
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder73 = builder71.setLogLevel(logLevel72);
        retrofit.RestAdapter.Builder builder75 = builder73.setServer("hi!");
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log77 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder78 = builder76.setLog(log77);
        log77.log("");
        retrofit.RestAdapter.Builder builder81 = builder73.setLog(log77);
        retrofit.RestAdapter.Builder builder82 = builder68.setLog(log77);
        retrofit.RestAdapter.Builder builder83 = builder43.setLog(log77);
        log77.log("hi!");
        retrofit.RestAdapter.Builder builder86 = builder4.setLog(log77);
        retrofit.RestAdapter.Builder builder88 = builder86.setServer("hi!");
        retrofit.converter.Converter converter89 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder90 = builder86.setConverter(converter89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(log77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder88);
    }

    @Test
    public void test04232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04232");
        retrofit.client.Header[] headerArray12 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList13 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList13, headerArray12);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList13, typedOutput15);
        java.lang.String str17 = request16.getMethod();
        java.util.List<retrofit.client.Header> headerList18 = request16.getHeaders();
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("hi!", "hi!", headerList18, typedOutput19);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("", "hi!", headerList18, typedOutput21);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("hi!", "", headerList18, typedOutput23);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "", headerList18, typedOutput25);
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("hi!", "", headerList18, typedOutput27);
        java.util.List<retrofit.client.Header> headerList29 = request28.getHeaders();
        java.util.List<retrofit.client.Header> headerList30 = request28.getHeaders();
        org.junit.Assert.assertNotNull(headerArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(headerList18);
        org.junit.Assert.assertNotNull(headerList29);
        org.junit.Assert.assertNotNull(headerList30);
    }

    @Test
    public void test04233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04233");
        retrofit.client.Header[] headerArray18 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList19 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList19, headerArray18);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList19, typedOutput21);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList19, typedOutput23);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList19, typedOutput25);
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList19, typedOutput27);
        retrofit.mime.TypedOutput typedOutput29 = null;
        retrofit.client.Request request30 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList19, typedOutput29);
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList19, typedOutput31);
        retrofit.mime.TypedOutput typedOutput33 = null;
        retrofit.client.Request request34 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList19, typedOutput33);
        retrofit.mime.TypedOutput typedOutput35 = null;
        retrofit.client.Request request36 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList19, typedOutput35);
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList19, typedOutput37);
        java.util.List<retrofit.client.Header> headerList39 = request38.getHeaders();
        java.lang.Class<?> wildcardClass40 = request38.getClass();
        org.junit.Assert.assertNotNull(headerArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(headerList39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test04234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04234");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLog(log21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder27.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder17.setLog(log30);
        retrofit.RestAdapter.Builder builder34 = builder2.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("hi!");
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder50.setLog(log53);
        log53.log("");
        retrofit.RestAdapter.Builder builder57 = builder47.setLog(log53);
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder60 = builder58.setLog(log59);
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder62 = builder60.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder64 = builder62.setServer("hi!");
        retrofit.RestAdapter restAdapter65 = builder64.build();
        retrofit.RestAdapter restAdapter66 = builder64.build();
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log68 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder69 = builder67.setLog(log68);
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder71 = builder67.setLogLevel(logLevel70);
        boolean boolean72 = logLevel70.log();
        restAdapter66.setLogLevel(logLevel70);
        retrofit.RestAdapter.Builder builder74 = builder57.setLogLevel(logLevel70);
        retrofit.RestAdapter.Builder builder75 = builder42.setLogLevel(logLevel70);
        retrofit.RestAdapter restAdapter76 = builder42.build();
        retrofit.RestAdapter restAdapter77 = builder42.build();
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log79 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder80 = builder78.setLog(log79);
        retrofit.RestAdapter.LogLevel logLevel81 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder82 = builder80.setLogLevel(logLevel81);
        retrofit.RestAdapter.Builder builder84 = builder82.setServer("hi!");
        retrofit.RestAdapter restAdapter85 = builder84.build();
        retrofit.RestAdapter restAdapter86 = builder84.build();
        retrofit.RestAdapter.Builder builder87 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log88 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder89 = builder87.setLog(log88);
        retrofit.RestAdapter.LogLevel logLevel90 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder91 = builder87.setLogLevel(logLevel90);
        boolean boolean92 = logLevel90.log();
        restAdapter86.setLogLevel(logLevel90);
        retrofit.RestAdapter.LogLevel logLevel94 = restAdapter86.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel95 = restAdapter86.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel96 = restAdapter86.getLogLevel();
        retrofit.RestAdapter.Builder builder97 = builder42.setLogLevel(logLevel96);
        retrofit.RequestInterceptor requestInterceptor98 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder99 = builder42.setRequestInterceptor(requestInterceptor98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(restAdapter65);
        org.junit.Assert.assertNotNull(restAdapter66);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(restAdapter76);
        org.junit.Assert.assertNotNull(restAdapter77);
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(restAdapter85);
        org.junit.Assert.assertNotNull(restAdapter86);
        org.junit.Assert.assertNotNull(log88);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertTrue("'" + logLevel90 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel90.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + logLevel94 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel94.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel95 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel95.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel96 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel96.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder97);
    }

    @Test
    public void test04235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04235");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLog(log33);
        log33.log("");
        retrofit.RestAdapter.Builder builder37 = builder29.setLog(log33);
        retrofit.RestAdapter.Builder builder38 = builder24.setLog(log33);
        retrofit.RestAdapter restAdapter39 = builder24.build();
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.Builder builder46 = builder44.setServer("hi!");
        retrofit.RestAdapter restAdapter47 = builder46.build();
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter47.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel49 = restAdapter47.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel50 = restAdapter47.getLogLevel();
        retrofit.RestAdapter.Builder builder51 = builder24.setLogLevel(logLevel50);
        retrofit.RequestInterceptor requestInterceptor52 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder53 = builder24.setRequestInterceptor(requestInterceptor52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(restAdapter39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(restAdapter47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder51);
    }

    @Test
    public void test04236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04236");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log26);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLog(log33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder34.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder39.setLog(log42);
        retrofit.RestAdapter.Builder builder44 = builder36.setLog(log42);
        retrofit.RestAdapter.Builder builder45 = builder31.setLog(log42);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLog(log47);
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder46.setLog(log49);
        retrofit.RestAdapter.Builder builder51 = builder45.setLog(log49);
        retrofit.RestAdapter.Builder builder53 = builder51.setServer("hi!");
        retrofit.RestAdapter.Builder builder55 = builder53.setServer("hi!");
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLog(log57);
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder61 = builder59.setLog(log60);
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder63 = builder61.setLogLevel(logLevel62);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLog(log65);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder68 = builder66.setLogLevel(logLevel67);
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder66.setLog(log69);
        retrofit.RestAdapter.Builder builder71 = builder63.setLog(log69);
        retrofit.RestAdapter.Builder builder72 = builder58.setLog(log69);
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder74 = builder58.setLog(log73);
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log76 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder77 = builder75.setLog(log76);
        log76.log("");
        retrofit.RestAdapter.Builder builder80 = builder74.setLog(log76);
        log76.log("");
        retrofit.RestAdapter.Builder builder83 = builder55.setLog(log76);
        retrofit.RestAdapter.Builder builder84 = builder28.setLog(log76);
        retrofit.Profiler profiler85 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder86 = builder28.setProfiler(profiler85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder84);
    }

    @Test
    public void test04237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04237");
        retrofit.client.Header[] headerArray14 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList15 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList15, headerArray14);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList15, typedOutput17);
        java.lang.String str19 = request18.getMethod();
        java.util.List<retrofit.client.Header> headerList20 = request18.getHeaders();
        java.util.List<retrofit.client.Header> headerList21 = request18.getHeaders();
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "hi!", headerList21, typedOutput22);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "", headerList21, typedOutput24);
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("hi!", "", headerList21, typedOutput26);
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "hi!", headerList21, typedOutput28);
        retrofit.mime.TypedOutput typedOutput30 = null;
        retrofit.client.Request request31 = new retrofit.client.Request("", "hi!", headerList21, typedOutput30);
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "hi!", headerList21, typedOutput32);
        java.lang.String str34 = request33.getUrl();
        org.junit.Assert.assertNotNull(headerArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(headerList20);
        org.junit.Assert.assertNotNull(headerList21);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
    }

    @Test
    public void test04238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04238");
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        java.lang.String str15 = request14.getMethod();
        java.util.List<retrofit.client.Header> headerList16 = request14.getHeaders();
        java.util.List<retrofit.client.Header> headerList17 = request14.getHeaders();
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("", "hi!", headerList17, typedOutput18);
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("hi!", "", headerList17, typedOutput20);
        java.lang.String str22 = request21.getUrl();
        java.util.List<retrofit.client.Header> headerList23 = request21.getHeaders();
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.util.List<retrofit.client.Header> headerList26 = request25.getHeaders();
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("", "", headerList26, typedOutput27);
        retrofit.mime.TypedOutput typedOutput29 = request28.getBody();
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(headerList16);
        org.junit.Assert.assertNotNull(headerList17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(headerList23);
        org.junit.Assert.assertNotNull(headerList26);
        org.junit.Assert.assertNull(typedOutput29);
    }

    @Test
    public void test04239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04239");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder2.setLog(log17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLog(log20);
        log20.log("");
        retrofit.RestAdapter.Builder builder24 = builder18.setLog(log20);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLog(log29);
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder32 = builder30.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLog(log34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder35.setLog(log38);
        retrofit.RestAdapter.Builder builder40 = builder32.setLog(log38);
        retrofit.RestAdapter.Builder builder41 = builder27.setLog(log38);
        log38.log("");
        log38.log("");
        log38.log("hi!");
        retrofit.RestAdapter.Builder builder48 = builder24.setLog(log38);
        retrofit.RestAdapter.Builder builder50 = builder48.setServer("hi!");
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.Builder builder55 = builder53.setServer("hi!");
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLog(log57);
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder60 = builder58.setLogLevel(logLevel59);
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder63 = builder61.setLog(log62);
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder65 = builder63.setLogLevel(logLevel64);
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder67 = builder63.setLog(log66);
        retrofit.RestAdapter.Builder builder68 = builder60.setLog(log66);
        retrofit.RestAdapter.Builder builder69 = builder55.setLog(log66);
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder70.setLog(log71);
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder75 = builder73.setLog(log74);
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder77 = builder75.setLogLevel(logLevel76);
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log79 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder80 = builder78.setLog(log79);
        retrofit.RestAdapter.LogLevel logLevel81 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder82 = builder80.setLogLevel(logLevel81);
        retrofit.RestAdapter.Log log83 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder84 = builder80.setLog(log83);
        retrofit.RestAdapter.Builder builder85 = builder77.setLog(log83);
        retrofit.RestAdapter.Builder builder86 = builder72.setLog(log83);
        retrofit.RestAdapter.Builder builder87 = builder69.setLog(log83);
        retrofit.RestAdapter.Builder builder88 = builder48.setLog(log83);
        retrofit.RequestInterceptor requestInterceptor89 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder90 = builder48.setRequestInterceptor(requestInterceptor89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(log83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder88);
    }

    @Test
    public void test04240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04240");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder22.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("hi!");
        retrofit.RestAdapter restAdapter32 = builder31.build();
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLog(log34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        restAdapter32.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder45 = builder43.setServer("hi!");
        retrofit.RestAdapter restAdapter46 = builder45.build();
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLog(log48);
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        restAdapter46.setLogLevel(logLevel50);
        restAdapter32.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder58 = builder56.setLogLevel(logLevel57);
        retrofit.RestAdapter.Builder builder60 = builder58.setServer("hi!");
        retrofit.RestAdapter restAdapter61 = builder60.build();
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder64 = builder62.setLog(log63);
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        restAdapter61.setLogLevel(logLevel65);
        restAdapter32.setLogLevel(logLevel65);
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter32.setLogLevel(logLevel69);
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log72 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder73 = builder71.setLog(log72);
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder75 = builder73.setLogLevel(logLevel74);
        retrofit.RestAdapter.Builder builder77 = builder75.setServer("hi!");
        retrofit.RestAdapter restAdapter78 = builder77.build();
        retrofit.RestAdapter restAdapter79 = builder77.build();
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder82 = builder80.setLog(log81);
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder84 = builder80.setLogLevel(logLevel83);
        boolean boolean85 = logLevel83.log();
        restAdapter79.setLogLevel(logLevel83);
        restAdapter32.setLogLevel(logLevel83);
        retrofit.RestAdapter.Builder builder88 = builder22.setLogLevel(logLevel83);
        retrofit.RestAdapter.Builder builder90 = builder22.setServer("hi!");
        retrofit.RestAdapter restAdapter91 = builder22.build();
        retrofit.Profiler profiler92 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder93 = builder22.setProfiler(profiler92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(restAdapter32);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(restAdapter46);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(restAdapter61);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(restAdapter78);
        org.junit.Assert.assertNotNull(restAdapter79);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(restAdapter91);
    }

    @Test
    public void test04241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04241");
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        java.lang.String str11 = request10.getMethod();
        java.lang.String str12 = request10.getMethod();
        java.util.List<retrofit.client.Header> headerList13 = request10.getHeaders();
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("", "", headerList13, typedOutput14);
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("", "hi!", headerList13, typedOutput16);
        java.lang.String str18 = request17.getUrl();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test04242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04242");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log26);
        retrofit.RestAdapter restAdapter29 = builder24.build();
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        boolean boolean35 = logLevel33.log();
        retrofit.RestAdapter.Builder builder36 = builder24.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder47.setLog(log50);
        retrofit.RestAdapter.Builder builder52 = builder44.setLog(log50);
        retrofit.RestAdapter.Builder builder53 = builder37.setLog(log50);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder58 = builder54.setLogLevel(logLevel57);
        boolean boolean59 = logLevel57.log();
        retrofit.RestAdapter.Builder builder60 = builder37.setLogLevel(logLevel57);
        boolean boolean61 = logLevel57.log();
        retrofit.RestAdapter.Builder builder62 = builder24.setLogLevel(logLevel57);
        retrofit.client.Client client63 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder64 = builder24.setClient(client63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(restAdapter29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(builder62);
    }

    @Test
    public void test04243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04243");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = builder6.build();
        retrofit.RestAdapter restAdapter8 = builder6.build();
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder9.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLog(log13);
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder16 = builder14.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = builder19.setLog(log22);
        retrofit.RestAdapter.Builder builder24 = builder16.setLog(log22);
        retrofit.RestAdapter.Builder builder25 = builder11.setLog(log22);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLog(log27);
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder30 = builder26.setLog(log29);
        retrofit.RestAdapter.Builder builder31 = builder25.setLog(log29);
        retrofit.RestAdapter.Builder builder33 = builder25.setServer("hi!");
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        retrofit.RestAdapter.Builder builder37 = builder33.setLog(log35);
        retrofit.RestAdapter.Builder builder38 = builder6.setLog(log35);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder41.setLog(log44);
        log44.log("hi!");
        log44.log("");
        log44.log("hi!");
        retrofit.RestAdapter.Builder builder52 = builder6.setLog(log44);
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLog(log54);
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder57 = builder55.setLogLevel(logLevel56);
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder60 = builder58.setLog(log59);
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder62 = builder60.setLogLevel(logLevel61);
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder64 = builder60.setLog(log63);
        retrofit.RestAdapter.Builder builder65 = builder57.setLog(log63);
        retrofit.RestAdapter.Builder builder67 = builder57.setServer("hi!");
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder68.setLog(log69);
        log69.log("");
        retrofit.RestAdapter.Builder builder73 = builder57.setLog(log69);
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log75 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder76 = builder74.setLog(log75);
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder78 = builder76.setLogLevel(logLevel77);
        retrofit.RestAdapter.Log log79 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder80 = builder76.setLog(log79);
        retrofit.RestAdapter.Builder builder81 = builder73.setLog(log79);
        log79.log("");
        retrofit.RestAdapter.Builder builder84 = builder52.setLog(log79);
        java.util.concurrent.Executor executor85 = null;
        java.util.concurrent.Executor executor86 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder87 = builder52.setExecutors(executor85, executor86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(restAdapter7);
        org.junit.Assert.assertNotNull(restAdapter8);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(log75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder84);
    }

    @Test
    public void test04244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04244");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder16 = builder12.setLog(log15);
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log15);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log15);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLog(log23);
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder29.setLog(log32);
        retrofit.RestAdapter.Builder builder34 = builder26.setLog(log32);
        retrofit.RestAdapter.Builder builder35 = builder21.setLog(log32);
        retrofit.RestAdapter.Builder builder36 = builder18.setLog(log32);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder47.setLog(log50);
        retrofit.RestAdapter.Builder builder52 = builder44.setLog(log50);
        retrofit.RestAdapter.Builder builder53 = builder39.setLog(log50);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder54.setLog(log57);
        retrofit.RestAdapter.Builder builder59 = builder53.setLog(log57);
        retrofit.RestAdapter.Builder builder61 = builder53.setServer("hi!");
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder64 = builder62.setLog(log63);
        retrofit.RestAdapter.Builder builder65 = builder61.setLog(log63);
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder68 = builder66.setLog(log67);
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder70 = builder68.setLogLevel(logLevel69);
        boolean boolean71 = logLevel69.log();
        retrofit.RestAdapter.Builder builder72 = builder65.setLogLevel(logLevel69);
        boolean boolean73 = logLevel69.log();
        boolean boolean74 = logLevel69.log();
        retrofit.RestAdapter.Builder builder75 = builder18.setLogLevel(logLevel69);
        retrofit.ErrorHandler errorHandler76 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder77 = builder75.setErrorHandler(errorHandler76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(builder75);
    }

    @Test
    public void test04245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04245");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder12.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder19.setServer("hi!");
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLog(log23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder32.setLog(log35);
        retrofit.RestAdapter.Builder builder37 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder38 = builder24.setLog(log35);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder39.setLog(log42);
        retrofit.RestAdapter.Builder builder44 = builder38.setLog(log42);
        retrofit.RestAdapter.Builder builder46 = builder44.setServer("hi!");
        retrofit.RestAdapter.Builder builder48 = builder44.setServer("hi!");
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        log50.log("");
        log50.log("");
        retrofit.RestAdapter.Builder builder56 = builder44.setLog(log50);
        retrofit.RestAdapter.Builder builder57 = builder19.setLog(log50);
        retrofit.RestAdapter restAdapter58 = builder57.build();
        retrofit.RestAdapter restAdapter59 = builder57.build();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.Builder builder63 = builder57.setLog(log61);
        retrofit.RestAdapter.Builder builder64 = builder12.setLog(log61);
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLog(log66);
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder69 = builder67.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder71 = builder69.setServer("hi!");
        retrofit.RestAdapter restAdapter72 = builder71.build();
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder75 = builder73.setLog(log74);
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder77 = builder75.setLogLevel(logLevel76);
        restAdapter72.setLogLevel(logLevel76);
        retrofit.RestAdapter.Builder builder79 = builder12.setLogLevel(logLevel76);
        retrofit.ErrorHandler errorHandler80 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder81 = builder79.setErrorHandler(errorHandler80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(restAdapter58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(restAdapter72);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder79);
    }

    @Test
    public void test04246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04246");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder32.setLog(log35);
        retrofit.RestAdapter.Builder builder37 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder39 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder42.setLog(log45);
        retrofit.RestAdapter.Builder builder47 = builder29.setLog(log45);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder29.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder50 = builder16.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder57 = builder55.setServer("hi!");
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder60 = builder58.setLog(log59);
        log59.log("");
        retrofit.RestAdapter.Builder builder63 = builder55.setLog(log59);
        log59.log("hi!");
        retrofit.RestAdapter.Builder builder66 = builder50.setLog(log59);
        retrofit.RestAdapter.Builder builder68 = builder50.setServer("hi!");
        retrofit.converter.Converter converter69 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder70 = builder50.setConverter(converter69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder68);
    }

    @Test
    public void test04247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04247");
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList7, typedOutput11);
        java.util.List<retrofit.client.Header> headerList13 = request12.getHeaders();
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("hi!", "", headerList13, typedOutput14);
        java.lang.String str16 = request15.getUrl();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test04248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04248");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder32.setLog(log35);
        retrofit.RestAdapter.Builder builder37 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder39 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder42.setLog(log45);
        retrofit.RestAdapter.Builder builder47 = builder29.setLog(log45);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder29.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder50 = builder16.setLogLevel(logLevel48);
        retrofit.RestAdapter restAdapter51 = builder16.build();
        retrofit.RestAdapter restAdapter52 = builder16.build();
        retrofit.RequestInterceptor requestInterceptor53 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder54 = builder16.setRequestInterceptor(requestInterceptor53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(restAdapter51);
        org.junit.Assert.assertNotNull(restAdapter52);
    }

    @Test
    public void test04249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04249");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        log16.log("");
        retrofit.RestAdapter.Builder builder20 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("hi!");
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = builder27.setServer("hi!");
        retrofit.RestAdapter restAdapter30 = builder29.build();
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        restAdapter30.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder43 = builder41.setServer("hi!");
        retrofit.RestAdapter restAdapter44 = builder43.build();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        restAdapter44.setLogLevel(logLevel48);
        restAdapter30.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder58 = builder56.setServer("hi!");
        retrofit.RestAdapter restAdapter59 = builder58.build();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        restAdapter59.setLogLevel(logLevel63);
        restAdapter30.setLogLevel(logLevel63);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter30.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder69 = builder22.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder70.setLog(log71);
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder74 = builder72.setLogLevel(logLevel73);
        retrofit.RestAdapter.Builder builder76 = builder74.setServer("hi!");
        retrofit.RestAdapter restAdapter77 = builder76.build();
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log79 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder80 = builder78.setLog(log79);
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder82 = builder78.setLog(log81);
        retrofit.RestAdapter.Builder builder83 = builder76.setLog(log81);
        retrofit.RestAdapter.Builder builder84 = builder69.setLog(log81);
        retrofit.RestAdapter restAdapter85 = builder69.build();
        retrofit.RestAdapter.Builder builder87 = builder69.setServer("hi!");
        retrofit.RestAdapter.Builder builder89 = builder69.setServer("hi!");
        java.util.concurrent.Executor executor90 = null;
        java.util.concurrent.Executor executor91 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder92 = builder89.setExecutors(executor90, executor91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(restAdapter30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(restAdapter44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(restAdapter77);
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(restAdapter85);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder89);
    }

    @Test
    public void test04250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04250");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Log log3 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder4 = builder0.setLog(log3);
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder14.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = builder9.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLog(log33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder34.setLogLevel(logLevel35);
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = builder34.setLog(log37);
        retrofit.RestAdapter.Builder builder39 = builder31.setLog(log37);
        retrofit.RestAdapter.Builder builder40 = builder24.setLog(log37);
        retrofit.RestAdapter.Builder builder41 = builder9.setLog(log37);
        log37.log("hi!");
        retrofit.RestAdapter.Builder builder44 = builder6.setLog(log37);
        java.util.concurrent.Executor executor45 = null;
        java.util.concurrent.Executor executor46 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder47 = builder6.setExecutors(executor45, executor46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log3);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder44);
    }

    @Test
    public void test04251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04251");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log26);
        retrofit.RestAdapter.Builder builder30 = builder28.setServer("hi!");
        retrofit.RestAdapter restAdapter31 = builder28.build();
        retrofit.RestAdapter.Builder builder33 = builder28.setServer("hi!");
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder40 = builder38.setServer("hi!");
        retrofit.RestAdapter restAdapter41 = builder40.build();
        retrofit.RestAdapter restAdapter42 = builder40.build();
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder43.setLogLevel(logLevel46);
        boolean boolean48 = logLevel46.log();
        restAdapter42.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder50 = builder28.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder58 = builder56.setLogLevel(logLevel57);
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder61 = builder59.setLog(log60);
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder63 = builder61.setLogLevel(logLevel62);
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder65 = builder61.setLog(log64);
        retrofit.RestAdapter.Builder builder66 = builder58.setLog(log64);
        retrofit.RestAdapter.Builder builder67 = builder51.setLog(log64);
        retrofit.RestAdapter.Builder builder68 = builder50.setLog(log64);
        retrofit.ErrorHandler errorHandler69 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder70 = builder68.setErrorHandler(errorHandler69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(restAdapter31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(restAdapter41);
        org.junit.Assert.assertNotNull(restAdapter42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder68);
    }

    @Test
    public void test04252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04252");
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        java.lang.String str13 = request12.getMethod();
        java.util.List<retrofit.client.Header> headerList14 = request12.getHeaders();
        java.util.List<retrofit.client.Header> headerList15 = request12.getHeaders();
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("", "hi!", headerList15, typedOutput16);
        java.util.List<retrofit.client.Header> headerList18 = request17.getHeaders();
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("", "hi!", headerList18, typedOutput19);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("hi!", "hi!", headerList18, typedOutput21);
        java.lang.String str23 = request22.getMethod();
        retrofit.mime.TypedOutput typedOutput24 = request22.getBody();
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(headerList18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNull(typedOutput24);
    }

    @Test
    public void test04253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04253");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        log10.log("");
        retrofit.RestAdapter.Builder builder14 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder19.setServer("hi!");
        retrofit.RestAdapter restAdapter22 = builder21.build();
        retrofit.RestAdapter restAdapter23 = builder21.build();
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder24.setLogLevel(logLevel27);
        boolean boolean29 = logLevel27.log();
        restAdapter23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder31 = builder14.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder33 = builder14.setServer("hi!");
        retrofit.RestAdapter.Builder builder35 = builder14.setServer("hi!");
        retrofit.converter.Converter converter36 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder37 = builder14.setConverter(converter36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNotNull(restAdapter23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
    }

    @Test
    public void test04254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04254");
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        java.lang.String str15 = request14.getMethod();
        java.util.List<retrofit.client.Header> headerList16 = request14.getHeaders();
        java.util.List<retrofit.client.Header> headerList17 = request14.getHeaders();
        java.lang.String str18 = request14.getUrl();
        java.util.List<retrofit.client.Header> headerList19 = request14.getHeaders();
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("", "hi!", headerList19, typedOutput20);
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("hi!", "", headerList19, typedOutput22);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList19, typedOutput24);
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("hi!", "hi!", headerList19, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(headerList16);
        org.junit.Assert.assertNotNull(headerList17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
    }

    @Test
    public void test04255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04255");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = builder6.build();
        retrofit.RestAdapter restAdapter8 = builder6.build();
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder9.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLog(log13);
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder16 = builder14.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = builder19.setLog(log22);
        retrofit.RestAdapter.Builder builder24 = builder16.setLog(log22);
        retrofit.RestAdapter.Builder builder25 = builder11.setLog(log22);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLog(log27);
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder30 = builder26.setLog(log29);
        retrofit.RestAdapter.Builder builder31 = builder25.setLog(log29);
        retrofit.RestAdapter.Builder builder33 = builder25.setServer("hi!");
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        retrofit.RestAdapter.Builder builder37 = builder33.setLog(log35);
        retrofit.RestAdapter.Builder builder38 = builder6.setLog(log35);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder41.setLog(log44);
        log44.log("hi!");
        log44.log("");
        log44.log("hi!");
        retrofit.RestAdapter.Builder builder52 = builder6.setLog(log44);
        log44.log("");
        log44.log("");
        log44.log("hi!");
        log44.log("");
        log44.log("");
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(restAdapter7);
        org.junit.Assert.assertNotNull(restAdapter8);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder52);
    }

    @Test
    public void test04256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04256");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder14.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = builder9.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLog(log27);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder33 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        log35.log("");
        log35.log("");
        retrofit.RestAdapter.Builder builder41 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder42 = builder4.setLog(log35);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder43.setLogLevel(logLevel46);
        boolean boolean48 = logLevel46.log();
        boolean boolean49 = logLevel46.log();
        retrofit.RestAdapter.Builder builder50 = builder4.setLogLevel(logLevel46);
        retrofit.RestAdapter restAdapter51 = builder4.build();
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder57 = builder55.setLog(log56);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder59 = builder57.setLogLevel(logLevel58);
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder66 = builder62.setLog(log65);
        retrofit.RestAdapter.Builder builder67 = builder59.setLog(log65);
        retrofit.RestAdapter.Builder builder68 = builder54.setLog(log65);
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder71 = builder69.setLog(log70);
        retrofit.RestAdapter.Log log72 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder73 = builder69.setLog(log72);
        retrofit.RestAdapter.Builder builder74 = builder68.setLog(log72);
        retrofit.RestAdapter.Builder builder76 = builder68.setServer("hi!");
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log78 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder79 = builder77.setLog(log78);
        retrofit.RestAdapter.Builder builder80 = builder76.setLog(log78);
        retrofit.RestAdapter restAdapter81 = builder76.build();
        retrofit.RestAdapter restAdapter82 = builder76.build();
        retrofit.RestAdapter.LogLevel logLevel83 = restAdapter82.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel84 = restAdapter82.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel85 = restAdapter82.getLogLevel();
        restAdapter51.setLogLevel(logLevel85);
        boolean boolean87 = logLevel85.log();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(restAdapter51);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(log78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(restAdapter81);
        org.junit.Assert.assertNotNull(restAdapter82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test04257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04257");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = builder6.build();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        restAdapter7.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLog(log15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder20 = builder18.setServer("hi!");
        retrofit.RestAdapter restAdapter21 = builder20.build();
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLog(log23);
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        restAdapter21.setLogLevel(logLevel25);
        restAdapter7.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLog(log30);
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder35 = builder33.setServer("hi!");
        retrofit.RestAdapter restAdapter36 = builder35.build();
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        restAdapter36.setLogLevel(logLevel40);
        restAdapter7.setLogLevel(logLevel40);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter7.setLogLevel(logLevel44);
        boolean boolean46 = logLevel44.log();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(restAdapter7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(restAdapter21);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test04258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04258");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder22.setServer("hi!");
        retrofit.RestAdapter.Builder builder26 = builder22.setServer("hi!");
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        log28.log("");
        log28.log("");
        retrofit.RestAdapter.Builder builder34 = builder22.setLog(log28);
        retrofit.RestAdapter.Builder builder36 = builder22.setServer("hi!");
        retrofit.RequestInterceptor requestInterceptor37 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder38 = builder22.setRequestInterceptor(requestInterceptor37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
    }

    @Test
    public void test04259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04259");
        retrofit.client.Header[] headerArray12 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList13 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList13, headerArray12);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList13, typedOutput15);
        java.lang.String str17 = request16.getMethod();
        java.util.List<retrofit.client.Header> headerList18 = request16.getHeaders();
        java.util.List<retrofit.client.Header> headerList19 = request16.getHeaders();
        java.util.List<retrofit.client.Header> headerList20 = request16.getHeaders();
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("hi!", "hi!", headerList20, typedOutput21);
        java.util.List<retrofit.client.Header> headerList23 = request22.getHeaders();
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "hi!", headerList23, typedOutput24);
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("hi!", "", headerList23, typedOutput26);
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList23, typedOutput28);
        retrofit.mime.TypedOutput typedOutput30 = null;
        retrofit.client.Request request31 = new retrofit.client.Request("hi!", "hi!", headerList23, typedOutput30);
        java.util.List<retrofit.client.Header> headerList32 = request31.getHeaders();
        org.junit.Assert.assertNotNull(headerArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(headerList18);
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertNotNull(headerList20);
        org.junit.Assert.assertNotNull(headerList23);
        org.junit.Assert.assertNotNull(headerList32);
    }

    @Test
    public void test04260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04260");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder0.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLog(log21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder27.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder17.setLog(log30);
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder44.setLog(log47);
        retrofit.RestAdapter.Builder builder49 = builder41.setLog(log47);
        retrofit.RestAdapter.Builder builder50 = builder34.setLog(log47);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder55 = builder51.setLogLevel(logLevel54);
        boolean boolean56 = logLevel54.log();
        retrofit.RestAdapter.Builder builder57 = builder34.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder58 = builder33.setLogLevel(logLevel54);
        boolean boolean59 = logLevel54.log();
        boolean boolean60 = logLevel54.log();
        boolean boolean61 = logLevel54.log();
        retrofit.RestAdapter.Builder builder62 = builder0.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLog(log64);
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder68 = builder66.setLog(log67);
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder70 = builder68.setLogLevel(logLevel69);
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log72 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder73 = builder71.setLog(log72);
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder75 = builder73.setLogLevel(logLevel74);
        retrofit.RestAdapter.Log log76 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder77 = builder73.setLog(log76);
        retrofit.RestAdapter.Builder builder78 = builder70.setLog(log76);
        retrofit.RestAdapter.Builder builder79 = builder65.setLog(log76);
        retrofit.RestAdapter.Log log80 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder81 = builder65.setLog(log80);
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log83 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder84 = builder82.setLog(log83);
        log83.log("hi!");
        retrofit.RestAdapter.Builder builder87 = builder65.setLog(log83);
        retrofit.RestAdapter.Log log88 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder89 = builder87.setLog(log88);
        retrofit.RestAdapter.Builder builder90 = builder62.setLog(log88);
        retrofit.client.Client client91 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder92 = builder90.setClient(client91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(log80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(log83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(log88);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(builder90);
    }

    @Test
    public void test04261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04261");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLog(log21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder27.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder17.setLog(log30);
        retrofit.RestAdapter.Builder builder34 = builder2.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLog(log42);
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLog(log45);
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder53 = builder51.setLogLevel(logLevel52);
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder51.setLog(log54);
        retrofit.RestAdapter.Builder builder56 = builder48.setLog(log54);
        retrofit.RestAdapter.Builder builder57 = builder43.setLog(log54);
        log54.log("");
        log54.log("");
        retrofit.RestAdapter.Builder builder62 = builder40.setLog(log54);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLog(log64);
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder67 = builder65.setLogLevel(logLevel66);
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder68.setLog(log69);
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder72 = builder70.setLogLevel(logLevel71);
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder74 = builder70.setLog(log73);
        retrofit.RestAdapter.Builder builder75 = builder67.setLog(log73);
        log73.log("hi!");
        log73.log("hi!");
        log73.log("hi!");
        retrofit.RestAdapter.Builder builder82 = builder62.setLog(log73);
        retrofit.RestAdapter.Builder builder84 = builder82.setServer("hi!");
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log86 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder87 = builder85.setLog(log86);
        log86.log("");
        retrofit.RestAdapter.Builder builder90 = builder82.setLog(log86);
        retrofit.client.Client client91 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder92 = builder82.setClient(client91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(log86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder90);
    }

    @Test
    public void test04262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04262");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log14 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLog(log14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder15.setLog(log18);
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log18);
        retrofit.RestAdapter.Builder builder21 = builder5.setLog(log18);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLog(log23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder32.setLog(log35);
        retrofit.RestAdapter.Builder builder37 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder38 = builder22.setLog(log35);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder39.setLogLevel(logLevel42);
        boolean boolean44 = logLevel42.log();
        retrofit.RestAdapter.Builder builder45 = builder22.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder46 = builder21.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLog(log48);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLog(log51);
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder54 = builder52.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder57 = builder55.setLog(log56);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder59 = builder57.setLogLevel(logLevel58);
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder61 = builder57.setLog(log60);
        retrofit.RestAdapter.Builder builder62 = builder54.setLog(log60);
        retrofit.RestAdapter.Builder builder63 = builder49.setLog(log60);
        retrofit.RestAdapter.Builder builder64 = builder21.setLog(log60);
        log60.log("");
        retrofit.RestAdapter.Builder builder67 = builder4.setLog(log60);
        retrofit.RestAdapter.Builder builder69 = builder4.setServer("hi!");
        retrofit.client.Client.Provider provider70 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder71 = builder69.setClient(provider70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder69);
    }

    @Test
    public void test04263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04263");
        retrofit.client.Header[] headerArray12 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList13 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList13, headerArray12);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList13, typedOutput15);
        java.lang.String str17 = request16.getMethod();
        java.util.List<retrofit.client.Header> headerList18 = request16.getHeaders();
        java.util.List<retrofit.client.Header> headerList19 = request16.getHeaders();
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("hi!", "hi!", headerList19, typedOutput20);
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList19, typedOutput22);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "hi!", headerList19, typedOutput24);
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList19, typedOutput26);
        java.util.List<retrofit.client.Header> headerList28 = request27.getHeaders();
        retrofit.mime.TypedOutput typedOutput29 = null;
        retrofit.client.Request request30 = new retrofit.client.Request("", "", headerList28, typedOutput29);
        org.junit.Assert.assertNotNull(headerArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(headerList18);
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertNotNull(headerList28);
    }

    @Test
    public void test04264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04264");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log26);
        retrofit.RestAdapter.Builder builder30 = builder28.setServer("hi!");
        retrofit.RestAdapter restAdapter31 = builder28.build();
        retrofit.RestAdapter.Builder builder33 = builder28.setServer("hi!");
        retrofit.RestAdapter.Builder builder35 = builder28.setServer("hi!");
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLog(log37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder38.setLog(log41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLog(log47);
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder57 = builder53.setLog(log56);
        retrofit.RestAdapter.Builder builder58 = builder50.setLog(log56);
        retrofit.RestAdapter.Builder builder59 = builder45.setLog(log56);
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder61 = builder45.setLog(log60);
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder64 = builder62.setLog(log63);
        log63.log("");
        retrofit.RestAdapter.Builder builder67 = builder61.setLog(log63);
        retrofit.RestAdapter.Builder builder68 = builder42.setLog(log63);
        retrofit.RestAdapter.Builder builder69 = builder35.setLog(log63);
        retrofit.client.Client client70 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder71 = builder69.setClient(client70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(restAdapter31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder69);
    }

    @Test
    public void test04265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04265");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = builder6.build();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLog(log12);
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLog(log17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder18.setLog(log21);
        retrofit.RestAdapter.Builder builder23 = builder15.setLog(log21);
        retrofit.RestAdapter.Builder builder24 = builder10.setLog(log21);
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder10.setLog(log25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        log28.log("");
        retrofit.RestAdapter.Builder builder32 = builder26.setLog(log28);
        log28.log("");
        retrofit.RestAdapter.Builder builder35 = builder6.setLog(log28);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLog(log37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder38.setLog(log41);
        log41.log("hi!");
        log41.log("hi!");
        retrofit.RestAdapter.Builder builder47 = builder35.setLog(log41);
        retrofit.RestAdapter.Builder builder49 = builder35.setServer("hi!");
        retrofit.Server server50 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder51 = builder49.setServer(server50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(restAdapter7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
    }

    @Test
    public void test04266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04266");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        log8.log("");
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log8);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter15 = builder4.build();
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLog(log17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLog(log22);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder23.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder20.setLog(log26);
        retrofit.RestAdapter.Builder builder30 = builder20.setServer("hi!");
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder33.setLog(log36);
        retrofit.RestAdapter.Builder builder38 = builder20.setLog(log36);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder45 = builder43.setServer("hi!");
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLog(log47);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder53 = builder51.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder58 = builder56.setLogLevel(logLevel57);
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder60 = builder56.setLog(log59);
        retrofit.RestAdapter.Builder builder61 = builder53.setLog(log59);
        retrofit.RestAdapter.Builder builder62 = builder48.setLog(log59);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLog(log64);
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder67 = builder63.setLog(log66);
        retrofit.RestAdapter.Builder builder68 = builder62.setLog(log66);
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder71 = builder69.setLog(log70);
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder73 = builder71.setLogLevel(logLevel72);
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder75 = builder71.setLog(log74);
        log74.log("hi!");
        log74.log("");
        retrofit.RestAdapter.Builder builder80 = builder68.setLog(log74);
        retrofit.RestAdapter.Builder builder81 = builder43.setLog(log74);
        log74.log("");
        retrofit.RestAdapter.Builder builder84 = builder38.setLog(log74);
        retrofit.RestAdapter.Builder builder85 = builder4.setLog(log74);
        retrofit.RestAdapter.Builder builder87 = builder85.setServer("hi!");
        retrofit.RestAdapter restAdapter88 = builder85.build();
        retrofit.RestAdapter.LogLevel logLevel89 = restAdapter88.getLogLevel();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(restAdapter15);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(restAdapter88);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test04267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04267");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.lang.String str7 = request6.getMethod();
        java.util.List<retrofit.client.Header> headerList8 = request6.getHeaders();
        java.util.List<retrofit.client.Header> headerList9 = request6.getHeaders();
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        java.lang.String str11 = request6.getUrl();
        java.lang.String str12 = request6.getUrl();
        java.lang.String str13 = request6.getUrl();
        java.lang.String str14 = request6.getMethod();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test04268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04268");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder4.setLog(log20);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder4.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        log26.log("");
        log26.log("");
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log26);
        retrofit.RestAdapter restAdapter33 = builder32.build();
        retrofit.RestAdapter.Builder builder35 = builder32.setServer("hi!");
        retrofit.converter.Converter converter36 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder37 = builder35.setConverter(converter36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(restAdapter33);
        org.junit.Assert.assertNotNull(builder35);
    }

    @Test
    public void test04269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04269");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.Profiler profiler17 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder18 = builder2.setProfiler(profiler17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
    }

    @Test
    public void test04270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04270");
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        java.lang.String str11 = request10.getMethod();
        java.lang.String str12 = request10.getMethod();
        java.util.List<retrofit.client.Header> headerList13 = request10.getHeaders();
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("", "", headerList13, typedOutput14);
        java.util.List<retrofit.client.Header> headerList16 = request15.getHeaders();
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("", "hi!", headerList16, typedOutput17);
        java.lang.String str19 = request18.getMethod();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertNotNull(headerList16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test04271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04271");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder16 = builder12.setLog(log15);
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log15);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log15);
        retrofit.RestAdapter restAdapter19 = builder18.build();
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLog(log21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder26 = builder24.setServer("hi!");
        retrofit.RestAdapter restAdapter27 = builder26.build();
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLog(log29);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLog(log37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder38.setLog(log41);
        retrofit.RestAdapter.Builder builder43 = builder35.setLog(log41);
        retrofit.RestAdapter.Builder builder44 = builder30.setLog(log41);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLog(log54);
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder57 = builder55.setLogLevel(logLevel56);
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder55.setLog(log58);
        retrofit.RestAdapter.Builder builder60 = builder52.setLog(log58);
        retrofit.RestAdapter.Builder builder61 = builder45.setLog(log58);
        retrofit.RestAdapter.Builder builder62 = builder30.setLog(log58);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLog(log64);
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder67 = builder65.setLogLevel(logLevel66);
        retrofit.RestAdapter.Builder builder68 = builder62.setLogLevel(logLevel66);
        restAdapter27.setLogLevel(logLevel66);
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder70.setLog(log71);
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder75 = builder73.setLog(log74);
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder77 = builder75.setLogLevel(logLevel76);
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log79 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder80 = builder78.setLog(log79);
        retrofit.RestAdapter.LogLevel logLevel81 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder82 = builder80.setLogLevel(logLevel81);
        retrofit.RestAdapter.Log log83 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder84 = builder80.setLog(log83);
        retrofit.RestAdapter.Builder builder85 = builder77.setLog(log83);
        retrofit.RestAdapter.Builder builder86 = builder70.setLog(log83);
        retrofit.RestAdapter.Builder builder87 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log88 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder89 = builder87.setLog(log88);
        retrofit.RestAdapter.LogLevel logLevel90 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder91 = builder87.setLogLevel(logLevel90);
        boolean boolean92 = logLevel90.log();
        retrofit.RestAdapter.Builder builder93 = builder70.setLogLevel(logLevel90);
        restAdapter27.setLogLevel(logLevel90);
        retrofit.RestAdapter.LogLevel logLevel95 = restAdapter27.getLogLevel();
        restAdapter19.setLogLevel(logLevel95);
        retrofit.RestAdapter.LogLevel logLevel97 = restAdapter19.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel98 = restAdapter19.getLogLevel();
        boolean boolean99 = logLevel98.log();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(restAdapter19);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(restAdapter27);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(log83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(log88);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertTrue("'" + logLevel90 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel90.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertTrue("'" + logLevel95 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel95.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel97 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel97.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel98 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel98.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test04272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04272");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder9 = builder7.setServer("hi!");
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        log11.log("");
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log11);
        log11.log("hi!");
        retrofit.RestAdapter.Builder builder18 = builder2.setLog(log11);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLog(log23);
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder29.setLog(log32);
        retrofit.RestAdapter.Builder builder34 = builder26.setLog(log32);
        retrofit.RestAdapter.Builder builder35 = builder21.setLog(log32);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLog(log37);
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder36.setLog(log39);
        retrofit.RestAdapter.Builder builder41 = builder35.setLog(log39);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder44.setLog(log47);
        log47.log("hi!");
        log47.log("");
        retrofit.RestAdapter.Builder builder53 = builder41.setLog(log47);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder58 = builder56.setLogLevel(logLevel57);
        retrofit.RestAdapter.Builder builder60 = builder58.setServer("hi!");
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder63 = builder61.setLog(log62);
        log62.log("");
        retrofit.RestAdapter.Builder builder66 = builder58.setLog(log62);
        retrofit.RestAdapter.Builder builder67 = builder41.setLog(log62);
        log62.log("hi!");
        retrofit.RestAdapter.Builder builder70 = builder18.setLog(log62);
        retrofit.client.Client.Provider provider71 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder72 = builder70.setClient(provider71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder70);
    }

    @Test
    public void test04273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04273");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLog(log21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder27.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder17.setLog(log30);
        retrofit.RestAdapter.Builder builder34 = builder2.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("hi!");
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder50.setLog(log53);
        log53.log("");
        retrofit.RestAdapter.Builder builder57 = builder47.setLog(log53);
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder60 = builder58.setLog(log59);
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder62 = builder60.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder64 = builder62.setServer("hi!");
        retrofit.RestAdapter restAdapter65 = builder64.build();
        retrofit.RestAdapter restAdapter66 = builder64.build();
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log68 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder69 = builder67.setLog(log68);
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder71 = builder67.setLogLevel(logLevel70);
        boolean boolean72 = logLevel70.log();
        restAdapter66.setLogLevel(logLevel70);
        retrofit.RestAdapter.Builder builder74 = builder57.setLogLevel(logLevel70);
        retrofit.RestAdapter.Builder builder75 = builder42.setLogLevel(logLevel70);
        retrofit.RestAdapter.Builder builder77 = builder75.setServer("hi!");
        retrofit.Profiler profiler78 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder79 = builder77.setProfiler(profiler78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(restAdapter65);
        org.junit.Assert.assertNotNull(restAdapter66);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder77);
    }

    @Test
    public void test04274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04274");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log26);
        retrofit.RestAdapter.Builder builder30 = builder28.setServer("hi!");
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder41.setLog(log44);
        retrofit.RestAdapter.Builder builder46 = builder38.setLog(log44);
        retrofit.RestAdapter.Builder builder47 = builder33.setLog(log44);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder52 = builder48.setLog(log51);
        retrofit.RestAdapter.Builder builder53 = builder47.setLog(log51);
        retrofit.RestAdapter.Builder builder55 = builder47.setServer("hi!");
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLog(log57);
        retrofit.RestAdapter.Builder builder59 = builder55.setLog(log57);
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        boolean boolean65 = logLevel63.log();
        retrofit.RestAdapter.Builder builder66 = builder59.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder67 = builder30.setLogLevel(logLevel63);
        retrofit.RestAdapter.Log log68 = retrofit.RestAdapter.Log.NONE;
        log68.log("hi!");
        retrofit.RestAdapter.Builder builder71 = builder67.setLog(log68);
        retrofit.RequestInterceptor requestInterceptor72 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder73 = builder67.setRequestInterceptor(requestInterceptor72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertNotNull(builder71);
    }

    @Test
    public void test04275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04275");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder14.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = builder9.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLog(log27);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder33 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        log35.log("");
        log35.log("");
        retrofit.RestAdapter.Builder builder41 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder42 = builder4.setLog(log35);
        retrofit.RestAdapter restAdapter43 = builder42.build();
        retrofit.RestAdapter restAdapter44 = builder42.build();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.Builder builder48 = builder42.setLog(log46);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder53 = builder51.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder55 = builder53.setServer("hi!");
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLog(log57);
        log57.log("");
        retrofit.RestAdapter.Builder builder61 = builder53.setLog(log57);
        log57.log("");
        retrofit.RestAdapter.Builder builder64 = builder42.setLog(log57);
        retrofit.client.Client.Provider provider65 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder66 = builder64.setClient(provider65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(restAdapter43);
        org.junit.Assert.assertNotNull(restAdapter44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder64);
    }

    @Test
    public void test04276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04276");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder4.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = builder27.setServer("hi!");
        retrofit.RestAdapter restAdapter30 = builder29.build();
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        restAdapter30.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder43 = builder41.setServer("hi!");
        retrofit.RestAdapter restAdapter44 = builder43.build();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        restAdapter44.setLogLevel(logLevel48);
        restAdapter30.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder58 = builder56.setServer("hi!");
        retrofit.RestAdapter restAdapter59 = builder58.build();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        restAdapter59.setLogLevel(logLevel63);
        restAdapter30.setLogLevel(logLevel63);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter30.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder69 = builder4.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder71 = builder69.setServer("hi!");
        retrofit.RestAdapter.Builder builder73 = builder69.setServer("hi!");
        retrofit.RestAdapter restAdapter74 = builder69.build();
        retrofit.RestAdapter restAdapter75 = builder69.build();
        retrofit.RestAdapter.LogLevel logLevel76 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder77 = builder69.setLogLevel(logLevel76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Log level may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(restAdapter30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(restAdapter44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(restAdapter74);
        org.junit.Assert.assertNotNull(restAdapter75);
    }

    @Test
    public void test04277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04277");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder22.setServer("hi!");
        retrofit.RestAdapter.Builder builder26 = builder24.setServer("hi!");
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder33 = builder31.setServer("hi!");
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder44.setLog(log47);
        retrofit.RestAdapter.Builder builder49 = builder41.setLog(log47);
        retrofit.RestAdapter.Builder builder50 = builder36.setLog(log47);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder51.setLog(log54);
        retrofit.RestAdapter.Builder builder56 = builder50.setLog(log54);
        retrofit.RestAdapter.Builder builder58 = builder56.setServer("hi!");
        retrofit.RestAdapter.Builder builder60 = builder56.setServer("hi!");
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder63 = builder61.setLog(log62);
        log62.log("");
        log62.log("");
        retrofit.RestAdapter.Builder builder68 = builder56.setLog(log62);
        retrofit.RestAdapter.Builder builder69 = builder31.setLog(log62);
        retrofit.RestAdapter restAdapter70 = builder69.build();
        retrofit.RestAdapter restAdapter71 = builder69.build();
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder74 = builder72.setLog(log73);
        retrofit.RestAdapter.Builder builder75 = builder69.setLog(log73);
        retrofit.RestAdapter.Builder builder76 = builder24.setLog(log73);
        retrofit.RestAdapter restAdapter77 = builder76.build();
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log79 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder80 = builder78.setLog(log79);
        retrofit.RestAdapter.LogLevel logLevel81 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder82 = builder80.setLogLevel(logLevel81);
        retrofit.RestAdapter.Builder builder84 = builder82.setServer("hi!");
        retrofit.RestAdapter restAdapter85 = builder84.build();
        retrofit.RestAdapter restAdapter86 = builder84.build();
        retrofit.RestAdapter.Builder builder87 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log88 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder89 = builder87.setLog(log88);
        retrofit.RestAdapter.LogLevel logLevel90 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder91 = builder87.setLogLevel(logLevel90);
        boolean boolean92 = logLevel90.log();
        restAdapter86.setLogLevel(logLevel90);
        retrofit.RestAdapter.LogLevel logLevel94 = restAdapter86.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel95 = restAdapter86.getLogLevel();
        restAdapter77.setLogLevel(logLevel95);
        boolean boolean97 = logLevel95.log();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(restAdapter70);
        org.junit.Assert.assertNotNull(restAdapter71);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(restAdapter77);
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(restAdapter85);
        org.junit.Assert.assertNotNull(restAdapter86);
        org.junit.Assert.assertNotNull(log88);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertTrue("'" + logLevel90 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel90.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + logLevel94 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel94.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel95 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel95.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
    }

    @Test
    public void test04278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04278");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter restAdapter5 = builder2.build();
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log7 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder8 = builder6.setLog(log7);
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder9.setLog(log10);
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLog(log15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder16.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder13.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder8.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLog(log27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder33.setLog(log36);
        retrofit.RestAdapter.Builder builder38 = builder30.setLog(log36);
        retrofit.RestAdapter.Builder builder39 = builder23.setLog(log36);
        retrofit.RestAdapter.Builder builder40 = builder8.setLog(log36);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLog(log42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder46 = builder40.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLog(log48);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLog(log51);
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder54 = builder52.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder57 = builder55.setLog(log56);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder59 = builder57.setLogLevel(logLevel58);
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder61 = builder57.setLog(log60);
        retrofit.RestAdapter.Builder builder62 = builder54.setLog(log60);
        retrofit.RestAdapter.Builder builder63 = builder49.setLog(log60);
        log60.log("");
        log60.log("");
        retrofit.RestAdapter.Builder builder68 = builder46.setLog(log60);
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder71 = builder69.setLog(log70);
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder73 = builder71.setLogLevel(logLevel72);
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log75 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder76 = builder74.setLog(log75);
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder78 = builder76.setLogLevel(logLevel77);
        retrofit.RestAdapter.Log log79 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder80 = builder76.setLog(log79);
        retrofit.RestAdapter.Builder builder81 = builder73.setLog(log79);
        log79.log("hi!");
        log79.log("hi!");
        log79.log("hi!");
        retrofit.RestAdapter.Builder builder88 = builder68.setLog(log79);
        retrofit.RestAdapter.Log log89 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder90 = builder68.setLog(log89);
        log89.log("hi!");
        retrofit.RestAdapter.Builder builder93 = builder2.setLog(log89);
        retrofit.client.Client client94 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder95 = builder93.setClient(client94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(restAdapter5);
        org.junit.Assert.assertNotNull(log7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(log75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(log89);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(builder93);
    }

    @Test
    public void test04279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04279");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder2.setLog(log17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLog(log20);
        log20.log("hi!");
        retrofit.RestAdapter.Builder builder24 = builder2.setLog(log20);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLog(log29);
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder32 = builder30.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLog(log34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder35.setLog(log38);
        retrofit.RestAdapter.Builder builder40 = builder32.setLog(log38);
        retrofit.RestAdapter.Builder builder41 = builder27.setLog(log38);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder42.setLog(log45);
        retrofit.RestAdapter.Builder builder47 = builder41.setLog(log45);
        retrofit.RestAdapter.Builder builder49 = builder41.setServer("hi!");
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLog(log51);
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder54 = builder52.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder56 = builder54.setServer("hi!");
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLog(log58);
        log58.log("");
        retrofit.RestAdapter.Builder builder62 = builder54.setLog(log58);
        retrofit.RestAdapter.Builder builder63 = builder49.setLog(log58);
        retrofit.RestAdapter.Builder builder64 = builder24.setLog(log58);
        retrofit.Server server65 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder66 = builder64.setServer(server65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder64);
    }

    @Test
    public void test04280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04280");
        retrofit.client.Header[] headerArray14 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList15 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList15, headerArray14);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList15, typedOutput17);
        java.lang.String str19 = request18.getMethod();
        java.util.List<retrofit.client.Header> headerList20 = request18.getHeaders();
        java.util.List<retrofit.client.Header> headerList21 = request18.getHeaders();
        java.util.List<retrofit.client.Header> headerList22 = request18.getHeaders();
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("hi!", "hi!", headerList22, typedOutput23);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "", headerList22, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.util.List<retrofit.client.Header> headerList28 = request26.getHeaders();
        retrofit.mime.TypedOutput typedOutput29 = null;
        retrofit.client.Request request30 = new retrofit.client.Request("hi!", "", headerList28, typedOutput29);
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("hi!", "", headerList28, typedOutput31);
        retrofit.mime.TypedOutput typedOutput33 = null;
        retrofit.client.Request request34 = new retrofit.client.Request("hi!", "hi!", headerList28, typedOutput33);
        retrofit.mime.TypedOutput typedOutput35 = null;
        retrofit.client.Request request36 = new retrofit.client.Request("", "", headerList28, typedOutput35);
        java.lang.String str37 = request36.getUrl();
        org.junit.Assert.assertNotNull(headerArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(headerList20);
        org.junit.Assert.assertNotNull(headerList21);
        org.junit.Assert.assertNotNull(headerList22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(headerList28);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
    }

    @Test
    public void test04281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04281");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLog(log27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder33.setLog(log36);
        retrofit.RestAdapter.Builder builder38 = builder30.setLog(log36);
        retrofit.RestAdapter.Builder builder39 = builder25.setLog(log36);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder40.setLog(log43);
        retrofit.RestAdapter.Builder builder45 = builder39.setLog(log43);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLog(log47);
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder52 = builder48.setLog(log51);
        log51.log("hi!");
        log51.log("");
        retrofit.RestAdapter.Builder builder57 = builder45.setLog(log51);
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder60 = builder58.setLog(log59);
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder62 = builder60.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder64 = builder62.setServer("hi!");
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLog(log66);
        log66.log("");
        retrofit.RestAdapter.Builder builder70 = builder62.setLog(log66);
        retrofit.RestAdapter.Builder builder71 = builder45.setLog(log66);
        log66.log("");
        retrofit.RestAdapter.Builder builder74 = builder22.setLog(log66);
        retrofit.Profiler profiler75 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder76 = builder74.setProfiler(profiler75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder74);
    }

    @Test
    public void test04282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04282");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Log log3 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder4 = builder0.setLog(log3);
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder14.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = builder9.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder6.setLog(log20);
        java.util.concurrent.Executor executor25 = null;
        java.util.concurrent.Executor executor26 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder27 = builder24.setExecutors(executor25, executor26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log3);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder24);
    }

    @Test
    public void test04283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04283");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder14.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = builder9.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLog(log27);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder32.setLog(log35);
        log35.log("hi!");
        log35.log("");
        retrofit.RestAdapter.Builder builder41 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder42 = builder4.setLog(log35);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = builder47.setServer("hi!");
        retrofit.RestAdapter restAdapter50 = builder49.build();
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        restAdapter50.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLog(log58);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder61 = builder59.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder63 = builder61.setServer("hi!");
        retrofit.RestAdapter restAdapter64 = builder63.build();
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLog(log66);
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder69 = builder67.setLogLevel(logLevel68);
        restAdapter64.setLogLevel(logLevel68);
        restAdapter50.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder74 = builder72.setLog(log73);
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder76 = builder74.setLogLevel(logLevel75);
        retrofit.RestAdapter.Builder builder78 = builder76.setServer("hi!");
        retrofit.RestAdapter restAdapter79 = builder78.build();
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder82 = builder80.setLog(log81);
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder84 = builder82.setLogLevel(logLevel83);
        restAdapter79.setLogLevel(logLevel83);
        restAdapter50.setLogLevel(logLevel83);
        retrofit.RestAdapter.LogLevel logLevel87 = restAdapter50.getLogLevel();
        retrofit.RestAdapter.Builder builder88 = builder4.setLogLevel(logLevel87);
        retrofit.RestAdapter.Log log89 = retrofit.RestAdapter.Log.NONE;
        log89.log("hi!");
        retrofit.RestAdapter.Builder builder92 = builder88.setLog(log89);
        log89.log("hi!");
        java.lang.Class<?> wildcardClass95 = log89.getClass();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(restAdapter50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(restAdapter64);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(restAdapter79);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(log89);
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test04284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04284");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder4.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = builder27.setServer("hi!");
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        log31.log("");
        retrofit.RestAdapter.Builder builder35 = builder27.setLog(log31);
        log31.log("");
        retrofit.RestAdapter.Builder builder38 = builder4.setLog(log31);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.Builder builder43 = builder41.setServer("hi!");
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLog(log45);
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder53 = builder51.setLogLevel(logLevel52);
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder51.setLog(log54);
        retrofit.RestAdapter.Builder builder56 = builder48.setLog(log54);
        retrofit.RestAdapter.Builder builder57 = builder43.setLog(log54);
        retrofit.RestAdapter.Builder builder58 = builder38.setLog(log54);
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder61 = builder59.setLog(log60);
        log60.log("");
        retrofit.RestAdapter.Builder builder64 = builder38.setLog(log60);
        retrofit.RestAdapter restAdapter65 = builder64.build();
        retrofit.Server server66 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder67 = builder64.setServer(server66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(restAdapter65);
    }

    @Test
    public void test04285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04285");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder22.setServer("hi!");
        retrofit.RestAdapter.Builder builder26 = builder24.setServer("hi!");
        retrofit.RestAdapter restAdapter27 = builder24.build();
        retrofit.RestAdapter restAdapter28 = builder24.build();
        retrofit.Profiler profiler29 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder30 = builder24.setProfiler(profiler29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(restAdapter27);
        org.junit.Assert.assertNotNull(restAdapter28);
    }

    @Test
    public void test04286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04286");
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        java.lang.String str11 = request10.getMethod();
        java.lang.String str12 = request10.getMethod();
        retrofit.mime.TypedOutput typedOutput13 = request10.getBody();
        retrofit.mime.TypedOutput typedOutput14 = request10.getBody();
        java.lang.String str15 = request10.getUrl();
        java.util.List<retrofit.client.Header> headerList16 = request10.getHeaders();
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("", "", headerList16, typedOutput17);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("", "", headerList16, typedOutput19);
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertNull(typedOutput14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(headerList16);
    }

    @Test
    public void test04287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04287");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter restAdapter5 = builder2.build();
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log7 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder8 = builder6.setLog(log7);
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLog(log12);
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder13.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder10.setLog(log16);
        retrofit.RestAdapter.Builder builder20 = builder10.setServer("hi!");
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLog(log22);
        log22.log("");
        retrofit.RestAdapter.Builder builder26 = builder10.setLog(log22);
        log22.log("hi!");
        log22.log("");
        retrofit.RestAdapter.Builder builder31 = builder2.setLog(log22);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLog(log33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder34.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder39.setLog(log42);
        retrofit.RestAdapter.Builder builder44 = builder36.setLog(log42);
        retrofit.RestAdapter.Builder builder46 = builder36.setServer("hi!");
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLog(log48);
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder49.setLog(log52);
        retrofit.RestAdapter.Builder builder54 = builder36.setLog(log52);
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder57 = builder55.setLog(log56);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder59 = builder57.setLogLevel(logLevel58);
        retrofit.RestAdapter.Builder builder61 = builder59.setServer("hi!");
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder64 = builder62.setLog(log63);
        log63.log("");
        retrofit.RestAdapter.Builder builder67 = builder59.setLog(log63);
        log63.log("");
        retrofit.RestAdapter.Builder builder70 = builder36.setLog(log63);
        log63.log("");
        log63.log("");
        retrofit.RestAdapter.Builder builder75 = builder2.setLog(log63);
        java.util.concurrent.Executor executor76 = null;
        java.util.concurrent.Executor executor77 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder78 = builder2.setExecutors(executor76, executor77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(restAdapter5);
        org.junit.Assert.assertNotNull(log7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder75);
    }

    @Test
    public void test04288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04288");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Log log3 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder4 = builder0.setLog(log3);
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder14.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = builder9.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLog(log27);
        retrofit.RestAdapter.Builder builder31 = builder23.setServer("hi!");
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLog(log33);
        retrofit.RestAdapter.Builder builder35 = builder31.setLog(log33);
        retrofit.RestAdapter restAdapter36 = builder31.build();
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        boolean boolean42 = logLevel40.log();
        retrofit.RestAdapter.Builder builder43 = builder31.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLog(log45);
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.Builder builder50 = builder48.setServer("hi!");
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder58 = builder56.setLogLevel(logLevel57);
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder61 = builder59.setLog(log60);
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder63 = builder61.setLogLevel(logLevel62);
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder65 = builder61.setLog(log64);
        retrofit.RestAdapter.Builder builder66 = builder58.setLog(log64);
        retrofit.RestAdapter.Builder builder67 = builder53.setLog(log64);
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder68.setLog(log69);
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder68.setLog(log71);
        retrofit.RestAdapter.Builder builder73 = builder67.setLog(log71);
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log75 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder76 = builder74.setLog(log75);
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder78 = builder76.setLogLevel(logLevel77);
        retrofit.RestAdapter.Log log79 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder80 = builder76.setLog(log79);
        log79.log("hi!");
        log79.log("");
        retrofit.RestAdapter.Builder builder85 = builder73.setLog(log79);
        retrofit.RestAdapter.Builder builder86 = builder48.setLog(log79);
        retrofit.RestAdapter.Builder builder87 = builder43.setLog(log79);
        retrofit.RestAdapter.Builder builder88 = builder0.setLog(log79);
        retrofit.converter.Converter converter89 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder90 = builder88.setConverter(converter89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log3);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(log75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder88);
    }

    @Test
    public void test04289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04289");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        log16.log("");
        retrofit.RestAdapter.Builder builder20 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLog(log22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLog(log30);
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder31.setLog(log34);
        retrofit.RestAdapter.Builder builder36 = builder28.setLog(log34);
        retrofit.RestAdapter.Builder builder37 = builder23.setLog(log34);
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLog(log39);
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder38.setLog(log41);
        retrofit.RestAdapter.Builder builder43 = builder37.setLog(log41);
        retrofit.RestAdapter.Builder builder45 = builder37.setServer("hi!");
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLog(log47);
        retrofit.RestAdapter.Builder builder49 = builder45.setLog(log47);
        retrofit.RestAdapter.Builder builder50 = builder20.setLog(log47);
        retrofit.RestAdapter.Builder builder52 = builder20.setServer("hi!");
        retrofit.RestAdapter.Builder builder54 = builder52.setServer("hi!");
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder57 = builder55.setLog(log56);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder59 = builder57.setLogLevel(logLevel58);
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder66 = builder62.setLog(log65);
        retrofit.RestAdapter.Builder builder67 = builder59.setLog(log65);
        retrofit.RestAdapter.Builder builder69 = builder59.setServer("hi!");
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder70.setLog(log71);
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder74 = builder72.setLogLevel(logLevel73);
        retrofit.RestAdapter.Log log75 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder76 = builder72.setLog(log75);
        retrofit.RestAdapter.Builder builder77 = builder59.setLog(log75);
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder79 = builder59.setLogLevel(logLevel78);
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder82 = builder80.setLog(log81);
        log81.log("");
        log81.log("");
        retrofit.RestAdapter.Builder builder87 = builder79.setLog(log81);
        retrofit.RestAdapter restAdapter88 = builder79.build();
        retrofit.RestAdapter.LogLevel logLevel89 = restAdapter88.getLogLevel();
        retrofit.RestAdapter.Builder builder90 = builder52.setLogLevel(logLevel89);
        retrofit.client.Client client91 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder92 = builder90.setClient(client91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(log75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(restAdapter88);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder90);
    }

    @Test
    public void test04290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04290");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLog(log21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder27.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder17.setLog(log30);
        retrofit.RestAdapter.Builder builder34 = builder2.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("hi!");
        retrofit.RestAdapter.Builder builder44 = builder42.setServer("hi!");
        retrofit.RestAdapter restAdapter45 = builder44.build();
        java.util.concurrent.Executor executor46 = null;
        java.util.concurrent.Executor executor47 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder48 = builder44.setExecutors(executor46, executor47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(restAdapter45);
    }

    @Test
    public void test04291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04291");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder2.setLog(log17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLog(log20);
        log20.log("hi!");
        retrofit.RestAdapter.Builder builder24 = builder2.setLog(log20);
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.Builder builder28 = builder26.setServer("hi!");
        retrofit.RestAdapter.Builder builder30 = builder26.setServer("hi!");
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLog(log37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder38.setLog(log41);
        retrofit.RestAdapter.Builder builder43 = builder35.setLog(log41);
        log41.log("hi!");
        log41.log("hi!");
        log41.log("");
        log41.log("");
        retrofit.RestAdapter.Builder builder52 = builder30.setLog(log41);
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder55 = builder30.setExecutors(executor53, executor54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder52);
    }

    @Test
    public void test04292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04292");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder22.setServer("hi!");
        retrofit.RestAdapter.Builder builder26 = builder22.setServer("hi!");
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder33 = builder31.setServer("hi!");
        retrofit.RestAdapter restAdapter34 = builder33.build();
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder41 = builder39.setServer("hi!");
        retrofit.RestAdapter restAdapter42 = builder41.build();
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        restAdapter42.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder53 = builder51.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder55 = builder53.setServer("hi!");
        retrofit.RestAdapter restAdapter56 = builder55.build();
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLog(log58);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder61 = builder59.setLogLevel(logLevel60);
        restAdapter56.setLogLevel(logLevel60);
        restAdapter42.setLogLevel(logLevel60);
        boolean boolean64 = logLevel60.log();
        boolean boolean65 = logLevel60.log();
        restAdapter34.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder67 = builder22.setLogLevel(logLevel60);
        retrofit.RestAdapter restAdapter68 = builder22.build();
        retrofit.RestAdapter.Builder builder70 = builder22.setServer("hi!");
        retrofit.RequestInterceptor requestInterceptor71 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder72 = builder70.setRequestInterceptor(requestInterceptor71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(restAdapter34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(restAdapter42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(restAdapter56);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(restAdapter68);
        org.junit.Assert.assertNotNull(builder70);
    }

    @Test
    public void test04293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04293");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log26);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLog(log30);
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        boolean boolean34 = logLevel32.log();
        retrofit.RestAdapter.Builder builder35 = builder28.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder37 = builder28.setServer("hi!");
        retrofit.RestAdapter restAdapter38 = builder37.build();
        retrofit.RestAdapter restAdapter39 = builder37.build();
        retrofit.Server server40 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder41 = builder37.setServer(server40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(restAdapter38);
        org.junit.Assert.assertNotNull(restAdapter39);
    }

    @Test
    public void test04294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04294");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder12.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder19.setServer("hi!");
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLog(log23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder32.setLog(log35);
        retrofit.RestAdapter.Builder builder37 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder38 = builder24.setLog(log35);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder39.setLog(log42);
        retrofit.RestAdapter.Builder builder44 = builder38.setLog(log42);
        retrofit.RestAdapter.Builder builder46 = builder44.setServer("hi!");
        retrofit.RestAdapter.Builder builder48 = builder44.setServer("hi!");
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        log50.log("");
        log50.log("");
        retrofit.RestAdapter.Builder builder56 = builder44.setLog(log50);
        retrofit.RestAdapter.Builder builder57 = builder19.setLog(log50);
        retrofit.RestAdapter restAdapter58 = builder57.build();
        retrofit.RestAdapter restAdapter59 = builder57.build();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.Builder builder63 = builder57.setLog(log61);
        retrofit.RestAdapter.Builder builder64 = builder12.setLog(log61);
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLog(log66);
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder69 = builder67.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder71 = builder69.setServer("hi!");
        retrofit.RestAdapter restAdapter72 = builder71.build();
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder75 = builder73.setLog(log74);
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder77 = builder75.setLogLevel(logLevel76);
        restAdapter72.setLogLevel(logLevel76);
        retrofit.RestAdapter.Builder builder79 = builder12.setLogLevel(logLevel76);
        retrofit.Profiler profiler80 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder81 = builder12.setProfiler(profiler80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(restAdapter58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(restAdapter72);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder79);
    }

    @Test
    public void test04295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04295");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Log log3 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder4 = builder0.setLog(log3);
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder14.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = builder7.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLog(log33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder34.setLogLevel(logLevel35);
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = builder34.setLog(log37);
        retrofit.RestAdapter.Builder builder39 = builder31.setLog(log37);
        retrofit.RestAdapter.Builder builder40 = builder24.setLog(log37);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLog(log42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder45 = builder41.setLogLevel(logLevel44);
        boolean boolean46 = logLevel44.log();
        retrofit.RestAdapter.Builder builder47 = builder24.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder48 = builder23.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLog(log58);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder61 = builder59.setLogLevel(logLevel60);
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder63 = builder59.setLog(log62);
        retrofit.RestAdapter.Builder builder64 = builder56.setLog(log62);
        retrofit.RestAdapter.Builder builder65 = builder51.setLog(log62);
        retrofit.RestAdapter.Builder builder66 = builder23.setLog(log62);
        log62.log("hi!");
        retrofit.RestAdapter.Builder builder69 = builder0.setLog(log62);
        java.lang.Class<?> wildcardClass70 = log62.getClass();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log3);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test04296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04296");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log26);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLog(log30);
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        boolean boolean34 = logLevel32.log();
        retrofit.RestAdapter.Builder builder35 = builder28.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLog(log37);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLog(log45);
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder46.setLog(log49);
        retrofit.RestAdapter.Builder builder51 = builder43.setLog(log49);
        retrofit.RestAdapter.Builder builder52 = builder38.setLog(log49);
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLog(log54);
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder57 = builder53.setLog(log56);
        retrofit.RestAdapter.Builder builder58 = builder52.setLog(log56);
        retrofit.RestAdapter.Builder builder60 = builder52.setServer("hi!");
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder63 = builder61.setLog(log62);
        retrofit.RestAdapter.Builder builder64 = builder60.setLog(log62);
        log62.log("hi!");
        retrofit.RestAdapter.Builder builder67 = builder28.setLog(log62);
        log62.log("");
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder67);
    }

    @Test
    public void test04297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04297");
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList9, typedOutput13);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList9, typedOutput15);
        java.util.List<retrofit.client.Header> headerList17 = request16.getHeaders();
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("hi!", "", headerList17, typedOutput18);
        java.lang.String str20 = request19.getUrl();
        java.lang.Class<?> wildcardClass21 = request19.getClass();
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(headerList17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test04298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04298");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder4.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = builder27.setServer("hi!");
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLog(log34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLog(log39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder40.setLogLevel(logLevel41);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder40.setLog(log43);
        retrofit.RestAdapter.Builder builder45 = builder37.setLog(log43);
        retrofit.RestAdapter.Builder builder46 = builder32.setLog(log43);
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLog(log48);
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder47.setLog(log50);
        retrofit.RestAdapter.Builder builder52 = builder46.setLog(log50);
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLog(log54);
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder57 = builder55.setLogLevel(logLevel56);
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder55.setLog(log58);
        log58.log("hi!");
        log58.log("");
        retrofit.RestAdapter.Builder builder64 = builder52.setLog(log58);
        retrofit.RestAdapter.Builder builder65 = builder27.setLog(log58);
        log58.log("");
        retrofit.RestAdapter.Builder builder68 = builder22.setLog(log58);
        retrofit.Profiler profiler69 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder70 = builder68.setProfiler(profiler69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder68);
    }

    @Test
    public void test04299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04299");
        retrofit.client.Header[] headerArray16 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList17 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList17, headerArray16);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList17, typedOutput19);
        java.lang.String str21 = request20.getMethod();
        java.util.List<retrofit.client.Header> headerList22 = request20.getHeaders();
        java.util.List<retrofit.client.Header> headerList23 = request20.getHeaders();
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "hi!", headerList23, typedOutput24);
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("hi!", "", headerList23, typedOutput26);
        java.util.List<retrofit.client.Header> headerList28 = request27.getHeaders();
        retrofit.mime.TypedOutput typedOutput29 = null;
        retrofit.client.Request request30 = new retrofit.client.Request("", "hi!", headerList28, typedOutput29);
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("hi!", "hi!", headerList28, typedOutput31);
        retrofit.mime.TypedOutput typedOutput33 = null;
        retrofit.client.Request request34 = new retrofit.client.Request("", "", headerList28, typedOutput33);
        retrofit.mime.TypedOutput typedOutput35 = null;
        retrofit.client.Request request36 = new retrofit.client.Request("hi!", "hi!", headerList28, typedOutput35);
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("hi!", "", headerList28, typedOutput37);
        retrofit.mime.TypedOutput typedOutput39 = request38.getBody();
        org.junit.Assert.assertNotNull(headerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(headerList22);
        org.junit.Assert.assertNotNull(headerList23);
        org.junit.Assert.assertNotNull(headerList28);
        org.junit.Assert.assertNull(typedOutput39);
    }

    @Test
    public void test04300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04300");
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList5, typedOutput9);
        java.lang.String str11 = request10.getUrl();
        java.lang.String str12 = request10.getMethod();
        java.lang.String str13 = request10.getMethod();
        java.util.List<retrofit.client.Header> headerList14 = request10.getHeaders();
        java.lang.Class<?> wildcardClass15 = headerList14.getClass();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test04301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04301");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder14.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = builder9.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLog(log27);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder32.setLog(log35);
        log35.log("hi!");
        log35.log("");
        retrofit.RestAdapter.Builder builder41 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder42 = builder4.setLog(log35);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = builder47.setServer("hi!");
        retrofit.RestAdapter restAdapter50 = builder49.build();
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        restAdapter50.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLog(log58);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder61 = builder59.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder63 = builder61.setServer("hi!");
        retrofit.RestAdapter restAdapter64 = builder63.build();
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLog(log66);
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder69 = builder67.setLogLevel(logLevel68);
        restAdapter64.setLogLevel(logLevel68);
        restAdapter50.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder74 = builder72.setLog(log73);
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder76 = builder74.setLogLevel(logLevel75);
        retrofit.RestAdapter.Builder builder78 = builder76.setServer("hi!");
        retrofit.RestAdapter restAdapter79 = builder78.build();
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder82 = builder80.setLog(log81);
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder84 = builder82.setLogLevel(logLevel83);
        restAdapter79.setLogLevel(logLevel83);
        restAdapter50.setLogLevel(logLevel83);
        retrofit.RestAdapter.LogLevel logLevel87 = restAdapter50.getLogLevel();
        retrofit.RestAdapter.Builder builder88 = builder4.setLogLevel(logLevel87);
        retrofit.RestAdapter.LogLevel logLevel89 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder90 = builder4.setLogLevel(logLevel89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Log level may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(restAdapter50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(restAdapter64);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(restAdapter79);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder88);
    }

    @Test
    public void test04302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04302");
        retrofit.client.Header[] headerArray12 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList13 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList13, headerArray12);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList13, typedOutput15);
        java.lang.String str17 = request16.getMethod();
        java.util.List<retrofit.client.Header> headerList18 = request16.getHeaders();
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("hi!", "hi!", headerList18, typedOutput19);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("", "hi!", headerList18, typedOutput21);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("", "", headerList18, typedOutput23);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList18, typedOutput25);
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("hi!", "hi!", headerList18, typedOutput27);
        java.lang.String str29 = request28.getUrl();
        org.junit.Assert.assertNotNull(headerArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(headerList18);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
    }

    @Test
    public void test04303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04303");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = builder6.build();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLog(log12);
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLog(log17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder18.setLog(log21);
        retrofit.RestAdapter.Builder builder23 = builder15.setLog(log21);
        retrofit.RestAdapter.Builder builder24 = builder10.setLog(log21);
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder10.setLog(log25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        log28.log("");
        retrofit.RestAdapter.Builder builder32 = builder26.setLog(log28);
        log28.log("");
        retrofit.RestAdapter.Builder builder35 = builder6.setLog(log28);
        retrofit.RestAdapter restAdapter36 = builder6.build();
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder47.setLog(log50);
        retrofit.RestAdapter.Builder builder52 = builder44.setLog(log50);
        retrofit.RestAdapter.Builder builder53 = builder39.setLog(log50);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder54.setLog(log57);
        retrofit.RestAdapter.Builder builder59 = builder53.setLog(log57);
        retrofit.RestAdapter.Builder builder61 = builder53.setServer("hi!");
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder64 = builder62.setLog(log63);
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder68 = builder66.setServer("hi!");
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder71 = builder69.setLog(log70);
        log70.log("");
        retrofit.RestAdapter.Builder builder74 = builder66.setLog(log70);
        retrofit.RestAdapter.Builder builder75 = builder61.setLog(log70);
        retrofit.RestAdapter restAdapter76 = builder75.build();
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean78 = logLevel77.log();
        restAdapter76.setLogLevel(logLevel77);
        retrofit.RestAdapter.LogLevel logLevel80 = restAdapter76.getLogLevel();
        boolean boolean81 = logLevel80.log();
        restAdapter36.setLogLevel(logLevel80);
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(restAdapter7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(restAdapter76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test04304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04304");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder22.setServer("hi!");
        retrofit.RestAdapter.Builder builder26 = builder22.setServer("hi!");
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder37.setLog(log40);
        retrofit.RestAdapter.Builder builder42 = builder34.setLog(log40);
        retrofit.RestAdapter.Builder builder43 = builder29.setLog(log40);
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder29.setLog(log44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLog(log47);
        log47.log("");
        retrofit.RestAdapter.Builder builder51 = builder45.setLog(log47);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLog(log58);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder61 = builder59.setLogLevel(logLevel60);
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder63 = builder59.setLog(log62);
        retrofit.RestAdapter.Builder builder64 = builder56.setLog(log62);
        retrofit.RestAdapter.Builder builder66 = builder56.setServer("hi!");
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log68 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder69 = builder67.setLog(log68);
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder71 = builder69.setLogLevel(logLevel70);
        retrofit.RestAdapter.Log log72 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder73 = builder69.setLog(log72);
        retrofit.RestAdapter.Builder builder74 = builder56.setLog(log72);
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log76 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder77 = builder75.setLog(log76);
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder79 = builder77.setLogLevel(logLevel78);
        retrofit.RestAdapter.Builder builder81 = builder79.setServer("hi!");
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log83 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder84 = builder82.setLog(log83);
        log83.log("");
        retrofit.RestAdapter.Builder builder87 = builder79.setLog(log83);
        log83.log("");
        retrofit.RestAdapter.Builder builder90 = builder56.setLog(log83);
        retrofit.RestAdapter.Builder builder91 = builder51.setLog(log83);
        log83.log("hi!");
        log83.log("hi!");
        log83.log("hi!");
        retrofit.RestAdapter.Builder builder98 = builder22.setLog(log83);
        java.lang.Class<?> wildcardClass99 = builder22.getClass();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(log83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(builder98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test04305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04305");
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        java.lang.String str9 = request8.getMethod();
        java.util.List<retrofit.client.Header> headerList10 = request8.getHeaders();
        java.util.List<retrofit.client.Header> headerList11 = request8.getHeaders();
        retrofit.mime.TypedOutput typedOutput12 = request8.getBody();
        java.lang.String str13 = request8.getUrl();
        java.lang.String str14 = request8.getUrl();
        java.util.List<retrofit.client.Header> headerList15 = request8.getHeaders();
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("", "hi!", headerList15, typedOutput16);
        java.lang.String str18 = request17.getUrl();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test04306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04306");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log26);
        retrofit.RestAdapter.Builder builder30 = builder28.setServer("hi!");
        retrofit.RestAdapter.Builder builder32 = builder28.setServer("hi!");
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLog(log34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLog(log37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("hi!");
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        log44.log("");
        retrofit.RestAdapter.Builder builder48 = builder40.setLog(log44);
        log44.log("hi!");
        retrofit.RestAdapter.Builder builder51 = builder35.setLog(log44);
        log44.log("hi!");
        log44.log("");
        retrofit.RestAdapter.Builder builder56 = builder28.setLog(log44);
        retrofit.client.Client.Provider provider57 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder58 = builder56.setClient(provider57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder56);
    }

    @Test
    public void test04307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04307");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLog(log21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder27.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder17.setLog(log30);
        retrofit.RestAdapter.Builder builder34 = builder2.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder37.setLog(log40);
        log40.log("hi!");
        log40.log("hi!");
        retrofit.RestAdapter.Builder builder46 = builder2.setLog(log40);
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLog(log48);
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder53 = builder51.setServer("hi!");
        retrofit.RestAdapter restAdapter54 = builder53.build();
        retrofit.RestAdapter restAdapter55 = builder53.build();
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLog(log57);
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder61 = builder59.setLog(log60);
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder63 = builder61.setLogLevel(logLevel62);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLog(log65);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder68 = builder66.setLogLevel(logLevel67);
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder66.setLog(log69);
        retrofit.RestAdapter.Builder builder71 = builder63.setLog(log69);
        retrofit.RestAdapter.Builder builder72 = builder58.setLog(log69);
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder75 = builder73.setLog(log74);
        retrofit.RestAdapter.Log log76 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder77 = builder73.setLog(log76);
        retrofit.RestAdapter.Builder builder78 = builder72.setLog(log76);
        retrofit.RestAdapter.Builder builder80 = builder72.setServer("hi!");
        retrofit.RestAdapter.Builder builder81 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log82 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder83 = builder81.setLog(log82);
        retrofit.RestAdapter.Builder builder84 = builder80.setLog(log82);
        retrofit.RestAdapter.Builder builder85 = builder53.setLog(log82);
        log82.log("");
        retrofit.RestAdapter.Builder builder88 = builder46.setLog(log82);
        java.util.concurrent.Executor executor89 = null;
        java.util.concurrent.Executor executor90 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder91 = builder46.setExecutors(executor89, executor90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(restAdapter54);
        org.junit.Assert.assertNotNull(restAdapter55);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(log82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder88);
    }

    @Test
    public void test04308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04308");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder14.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = builder9.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLog(log27);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder32.setLog(log35);
        log35.log("hi!");
        log35.log("");
        retrofit.RestAdapter.Builder builder41 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder42 = builder4.setLog(log35);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = builder47.setServer("hi!");
        retrofit.RestAdapter restAdapter50 = builder49.build();
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        restAdapter50.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLog(log58);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder61 = builder59.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder63 = builder61.setServer("hi!");
        retrofit.RestAdapter restAdapter64 = builder63.build();
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLog(log66);
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder69 = builder67.setLogLevel(logLevel68);
        restAdapter64.setLogLevel(logLevel68);
        restAdapter50.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder74 = builder72.setLog(log73);
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder76 = builder74.setLogLevel(logLevel75);
        retrofit.RestAdapter.Builder builder78 = builder76.setServer("hi!");
        retrofit.RestAdapter restAdapter79 = builder78.build();
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder82 = builder80.setLog(log81);
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder84 = builder82.setLogLevel(logLevel83);
        restAdapter79.setLogLevel(logLevel83);
        restAdapter50.setLogLevel(logLevel83);
        retrofit.RestAdapter.LogLevel logLevel87 = restAdapter50.getLogLevel();
        retrofit.RestAdapter.Builder builder88 = builder4.setLogLevel(logLevel87);
        retrofit.RestAdapter.Builder builder90 = builder88.setServer("hi!");
        retrofit.RestAdapter.Builder builder91 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log92 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder93 = builder91.setLog(log92);
        retrofit.RestAdapter.LogLevel logLevel94 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder95 = builder91.setLogLevel(logLevel94);
        retrofit.RestAdapter.Builder builder96 = builder88.setLogLevel(logLevel94);
        retrofit.converter.Converter converter97 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder98 = builder88.setConverter(converter97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(restAdapter50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(restAdapter64);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(restAdapter79);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(log92);
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertTrue("'" + logLevel94 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel94.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder95);
        org.junit.Assert.assertNotNull(builder96);
    }

    @Test
    public void test04309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04309");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLog(log21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder27.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder17.setLog(log30);
        retrofit.RestAdapter.Builder builder34 = builder2.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("hi!");
        retrofit.RestAdapter.Builder builder44 = builder42.setServer("hi!");
        retrofit.RestAdapter restAdapter45 = builder42.build();
        retrofit.RestAdapter.Builder builder47 = builder42.setServer("hi!");
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder54 = builder52.setServer("hi!");
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder57 = builder55.setLog(log56);
        log56.log("");
        retrofit.RestAdapter.Builder builder60 = builder52.setLog(log56);
        retrofit.RestAdapter.Builder builder61 = builder42.setLog(log56);
        retrofit.RestAdapter.Builder builder63 = builder61.setServer("hi!");
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLog(log65);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder68 = builder66.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder71 = builder69.setLog(log70);
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder73 = builder71.setLogLevel(logLevel72);
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder75 = builder71.setLog(log74);
        retrofit.RestAdapter.Builder builder76 = builder68.setLog(log74);
        retrofit.RestAdapter.Builder builder78 = builder68.setServer("hi!");
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log80 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder81 = builder79.setLog(log80);
        log80.log("");
        retrofit.RestAdapter.Builder builder84 = builder68.setLog(log80);
        log80.log("hi!");
        log80.log("hi!");
        retrofit.RestAdapter.Builder builder89 = builder63.setLog(log80);
        retrofit.RestAdapter restAdapter90 = builder89.build();
        retrofit.RestAdapter.LogLevel logLevel91 = restAdapter90.getLogLevel();
        boolean boolean92 = logLevel91.log();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(restAdapter45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(log80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(restAdapter90);
        org.junit.Assert.assertTrue("'" + logLevel91 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel91.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test04310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04310");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder4.setLog(log20);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder4.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        log26.log("");
        log26.log("");
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log26);
        retrofit.RestAdapter restAdapter33 = builder24.build();
        retrofit.RestAdapter restAdapter34 = builder24.build();
        retrofit.RestAdapter.Builder builder36 = builder24.setServer("hi!");
        retrofit.client.Client client37 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder38 = builder24.setClient(client37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(restAdapter33);
        org.junit.Assert.assertNotNull(restAdapter34);
        org.junit.Assert.assertNotNull(builder36);
    }

    @Test
    public void test04311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04311");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder0.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder21 = builder17.setLogLevel(logLevel20);
        boolean boolean22 = logLevel20.log();
        retrofit.RestAdapter.Builder builder23 = builder0.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLog(log33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder34.setLogLevel(logLevel35);
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = builder34.setLog(log37);
        retrofit.RestAdapter.Builder builder39 = builder31.setLog(log37);
        retrofit.RestAdapter.Builder builder40 = builder26.setLog(log37);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLog(log42);
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder41.setLog(log44);
        retrofit.RestAdapter.Builder builder46 = builder40.setLog(log44);
        retrofit.RestAdapter.Builder builder48 = builder40.setServer("hi!");
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder53 = builder51.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder55 = builder53.setServer("hi!");
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLog(log57);
        log57.log("");
        retrofit.RestAdapter.Builder builder61 = builder53.setLog(log57);
        retrofit.RestAdapter.Builder builder62 = builder48.setLog(log57);
        retrofit.RestAdapter.Builder builder63 = builder23.setLog(log57);
        retrofit.RequestInterceptor requestInterceptor64 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder65 = builder63.setRequestInterceptor(requestInterceptor64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder63);
    }

    @Test
    public void test04312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04312");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder2.setLog(log17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLog(log20);
        log20.log("");
        retrofit.RestAdapter.Builder builder24 = builder18.setLog(log20);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLog(log29);
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder32 = builder30.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLog(log34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder35.setLog(log38);
        retrofit.RestAdapter.Builder builder40 = builder32.setLog(log38);
        retrofit.RestAdapter.Builder builder41 = builder27.setLog(log38);
        log38.log("");
        log38.log("");
        log38.log("hi!");
        retrofit.RestAdapter.Builder builder48 = builder24.setLog(log38);
        retrofit.RestAdapter.Builder builder50 = builder48.setServer("hi!");
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.Builder builder55 = builder53.setServer("hi!");
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLog(log57);
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder60 = builder58.setLogLevel(logLevel59);
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder63 = builder61.setLog(log62);
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder65 = builder63.setLogLevel(logLevel64);
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder67 = builder63.setLog(log66);
        retrofit.RestAdapter.Builder builder68 = builder60.setLog(log66);
        retrofit.RestAdapter.Builder builder69 = builder55.setLog(log66);
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder70.setLog(log71);
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder75 = builder73.setLog(log74);
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder77 = builder75.setLogLevel(logLevel76);
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log79 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder80 = builder78.setLog(log79);
        retrofit.RestAdapter.LogLevel logLevel81 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder82 = builder80.setLogLevel(logLevel81);
        retrofit.RestAdapter.Log log83 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder84 = builder80.setLog(log83);
        retrofit.RestAdapter.Builder builder85 = builder77.setLog(log83);
        retrofit.RestAdapter.Builder builder86 = builder72.setLog(log83);
        retrofit.RestAdapter.Builder builder87 = builder69.setLog(log83);
        retrofit.RestAdapter.Builder builder88 = builder48.setLog(log83);
        java.util.concurrent.Executor executor89 = null;
        java.util.concurrent.Executor executor90 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder91 = builder48.setExecutors(executor89, executor90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(log83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder88);
    }

    @Test
    public void test04313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04313");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLog(log21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder27.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder17.setLog(log30);
        retrofit.RestAdapter.Builder builder34 = builder2.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("hi!");
        retrofit.RestAdapter.Builder builder44 = builder40.setServer("hi!");
        retrofit.RestAdapter restAdapter45 = builder40.build();
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLog(log47);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder53 = builder51.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder58 = builder56.setLogLevel(logLevel57);
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder60 = builder56.setLog(log59);
        retrofit.RestAdapter.Builder builder61 = builder53.setLog(log59);
        retrofit.RestAdapter.Builder builder62 = builder48.setLog(log59);
        log59.log("hi!");
        retrofit.RestAdapter.Builder builder65 = builder40.setLog(log59);
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder68 = builder66.setLog(log67);
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder71 = builder69.setLog(log70);
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder73 = builder71.setLogLevel(logLevel72);
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log75 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder76 = builder74.setLog(log75);
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder78 = builder76.setLogLevel(logLevel77);
        retrofit.RestAdapter.Log log79 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder80 = builder76.setLog(log79);
        retrofit.RestAdapter.Builder builder81 = builder73.setLog(log79);
        retrofit.RestAdapter.Builder builder82 = builder68.setLog(log79);
        retrofit.RestAdapter.Log log83 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder84 = builder68.setLog(log83);
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log86 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder87 = builder85.setLog(log86);
        log86.log("hi!");
        retrofit.RestAdapter.Builder builder90 = builder68.setLog(log86);
        retrofit.RestAdapter.Log log91 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder92 = builder90.setLog(log91);
        retrofit.RestAdapter.Builder builder93 = builder65.setLog(log91);
        retrofit.RequestInterceptor requestInterceptor94 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder95 = builder93.setRequestInterceptor(requestInterceptor94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(restAdapter45);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(log75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(log83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(log86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(log91);
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertNotNull(builder93);
    }

    @Test
    public void test04314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04314");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLog(log21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder27.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder17.setLog(log30);
        retrofit.RestAdapter.Builder builder34 = builder2.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("hi!");
        retrofit.RestAdapter restAdapter43 = builder42.build();
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLog(log45);
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLog(log48);
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder54.setLog(log57);
        retrofit.RestAdapter.Builder builder59 = builder51.setLog(log57);
        retrofit.RestAdapter.Builder builder60 = builder46.setLog(log57);
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder46.setLog(log61);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLog(log64);
        log64.log("hi!");
        retrofit.RestAdapter.Builder builder68 = builder46.setLog(log64);
        log64.log("");
        log64.log("");
        retrofit.RestAdapter.Builder builder73 = builder42.setLog(log64);
        retrofit.converter.Converter converter74 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder75 = builder73.setConverter(converter74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(restAdapter43);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder73);
    }

    @Test
    public void test04315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04315");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder22.setServer("hi!");
        retrofit.RestAdapter.Builder builder26 = builder22.setServer("hi!");
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder33 = builder31.setServer("hi!");
        retrofit.RestAdapter restAdapter34 = builder33.build();
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        restAdapter34.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLog(log42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder47 = builder45.setServer("hi!");
        retrofit.RestAdapter restAdapter48 = builder47.build();
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder53 = builder51.setLogLevel(logLevel52);
        restAdapter48.setLogLevel(logLevel52);
        restAdapter34.setLogLevel(logLevel52);
        retrofit.RestAdapter.LogLevel logLevel56 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel57 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.Builder builder58 = builder22.setLogLevel(logLevel57);
        retrofit.RestAdapter restAdapter59 = builder22.build();
        retrofit.RestAdapter.Builder builder61 = builder22.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder63 = builder61.setLogLevel(logLevel62);
        boolean boolean64 = logLevel62.log();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(restAdapter34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(restAdapter48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test04316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04316");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder25.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder24.setLogLevel(logLevel28);
        retrofit.RestAdapter restAdapter31 = builder24.build();
        retrofit.client.Client.Provider provider32 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder33 = builder24.setClient(provider32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(restAdapter31);
    }

    @Test
    public void test04317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04317");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = builder6.build();
        retrofit.RestAdapter restAdapter8 = builder6.build();
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder9.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLog(log13);
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder16 = builder14.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = builder19.setLog(log22);
        retrofit.RestAdapter.Builder builder24 = builder16.setLog(log22);
        retrofit.RestAdapter.Builder builder25 = builder11.setLog(log22);
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder11.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLog(log29);
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder32 = builder30.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder34 = builder32.setServer("hi!");
        retrofit.RestAdapter restAdapter35 = builder34.build();
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLog(log37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        restAdapter35.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder48 = builder46.setServer("hi!");
        retrofit.RestAdapter restAdapter49 = builder48.build();
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLog(log51);
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder54 = builder52.setLogLevel(logLevel53);
        restAdapter49.setLogLevel(logLevel53);
        restAdapter35.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLog(log58);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder61 = builder59.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder63 = builder61.setServer("hi!");
        retrofit.RestAdapter restAdapter64 = builder63.build();
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLog(log66);
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder69 = builder67.setLogLevel(logLevel68);
        restAdapter64.setLogLevel(logLevel68);
        restAdapter35.setLogLevel(logLevel68);
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter35.setLogLevel(logLevel72);
        retrofit.RestAdapter.Builder builder74 = builder27.setLogLevel(logLevel72);
        restAdapter8.setLogLevel(logLevel72);
        retrofit.RestAdapter.LogLevel logLevel76 = restAdapter8.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel77 = restAdapter8.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel78 = restAdapter8.getLogLevel();
        java.lang.Class<?> wildcardClass79 = logLevel78.getClass();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(restAdapter7);
        org.junit.Assert.assertNotNull(restAdapter8);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(restAdapter35);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(restAdapter49);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(restAdapter64);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test04318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04318");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log26);
        retrofit.RestAdapter restAdapter29 = builder24.build();
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        boolean boolean35 = logLevel33.log();
        retrofit.RestAdapter.Builder builder36 = builder24.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder47.setLog(log50);
        retrofit.RestAdapter.Builder builder52 = builder44.setLog(log50);
        retrofit.RestAdapter.Builder builder53 = builder37.setLog(log50);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder58 = builder54.setLogLevel(logLevel57);
        boolean boolean59 = logLevel57.log();
        retrofit.RestAdapter.Builder builder60 = builder37.setLogLevel(logLevel57);
        boolean boolean61 = logLevel57.log();
        retrofit.RestAdapter.Builder builder62 = builder24.setLogLevel(logLevel57);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLog(log64);
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder68 = builder66.setLog(log67);
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder70 = builder68.setLogLevel(logLevel69);
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log72 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder73 = builder71.setLog(log72);
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder75 = builder73.setLogLevel(logLevel74);
        retrofit.RestAdapter.Log log76 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder77 = builder73.setLog(log76);
        retrofit.RestAdapter.Builder builder78 = builder70.setLog(log76);
        retrofit.RestAdapter.Builder builder79 = builder65.setLog(log76);
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder82 = builder80.setLog(log81);
        retrofit.RestAdapter.Log log83 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder84 = builder80.setLog(log83);
        retrofit.RestAdapter.Builder builder85 = builder79.setLog(log83);
        retrofit.RestAdapter.Builder builder87 = builder79.setServer("hi!");
        retrofit.RestAdapter.Builder builder88 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log89 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder90 = builder88.setLog(log89);
        retrofit.RestAdapter.Builder builder91 = builder87.setLog(log89);
        retrofit.RestAdapter restAdapter92 = builder87.build();
        retrofit.RestAdapter.LogLevel logLevel93 = retrofit.RestAdapter.LogLevel.FULL;
        boolean boolean94 = logLevel93.log();
        restAdapter92.setLogLevel(logLevel93);
        retrofit.RestAdapter.LogLevel logLevel96 = restAdapter92.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel97 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter92.setLogLevel(logLevel97);
        retrofit.RestAdapter.Builder builder99 = builder24.setLogLevel(logLevel97);
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(restAdapter29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(log83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(log89);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(restAdapter92);
        org.junit.Assert.assertTrue("'" + logLevel93 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel93.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + logLevel96 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel96.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel97 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel97.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder99);
    }

    @Test
    public void test04319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04319");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder4.setLog(log20);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder4.setLogLevel(logLevel23);
        retrofit.RestAdapter restAdapter25 = builder24.build();
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLog(log27);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLog(log30);
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder36.setLog(log39);
        retrofit.RestAdapter.Builder builder41 = builder33.setLog(log39);
        retrofit.RestAdapter.Builder builder42 = builder28.setLog(log39);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLog(log47);
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder57 = builder53.setLog(log56);
        retrofit.RestAdapter.Builder builder58 = builder50.setLog(log56);
        retrofit.RestAdapter.Builder builder59 = builder43.setLog(log56);
        retrofit.RestAdapter.Builder builder60 = builder28.setLog(log56);
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder63 = builder61.setLog(log62);
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder65 = builder63.setLogLevel(logLevel64);
        retrofit.RestAdapter.Builder builder66 = builder60.setLogLevel(logLevel64);
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log68 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder69 = builder67.setLog(log68);
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder70.setLog(log71);
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder74 = builder72.setLogLevel(logLevel73);
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log76 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder77 = builder75.setLog(log76);
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder79 = builder77.setLogLevel(logLevel78);
        retrofit.RestAdapter.Log log80 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder81 = builder77.setLog(log80);
        retrofit.RestAdapter.Builder builder82 = builder74.setLog(log80);
        retrofit.RestAdapter.Builder builder83 = builder69.setLog(log80);
        log80.log("");
        log80.log("");
        retrofit.RestAdapter.Builder builder88 = builder66.setLog(log80);
        log80.log("hi!");
        retrofit.RestAdapter.Builder builder91 = builder24.setLog(log80);
        retrofit.RestAdapter.Builder builder93 = builder91.setServer("hi!");
        retrofit.converter.Converter converter94 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder95 = builder93.setConverter(converter94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(restAdapter25);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(log80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(builder93);
    }

    @Test
    public void test04320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04320");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter restAdapter5 = builder2.build();
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log7 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder8 = builder6.setLog(log7);
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("hi!");
        retrofit.RestAdapter restAdapter13 = builder12.build();
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLog(log15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        restAdapter13.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLog(log21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder26 = builder24.setServer("hi!");
        retrofit.RestAdapter restAdapter27 = builder26.build();
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLog(log29);
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder32 = builder30.setLogLevel(logLevel31);
        restAdapter27.setLogLevel(logLevel31);
        restAdapter13.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder41 = builder39.setServer("hi!");
        retrofit.RestAdapter restAdapter42 = builder41.build();
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        restAdapter42.setLogLevel(logLevel46);
        restAdapter13.setLogLevel(logLevel46);
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter13.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder58 = builder56.setServer("hi!");
        retrofit.RestAdapter restAdapter59 = builder58.build();
        retrofit.RestAdapter restAdapter60 = builder58.build();
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder63 = builder61.setLog(log62);
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder65 = builder61.setLogLevel(logLevel64);
        boolean boolean66 = logLevel64.log();
        restAdapter60.setLogLevel(logLevel64);
        restAdapter13.setLogLevel(logLevel64);
        retrofit.RestAdapter.Builder builder69 = builder2.setLogLevel(logLevel64);
        retrofit.RestAdapter restAdapter70 = builder69.build();
        retrofit.Server server71 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder72 = builder69.setServer(server71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(restAdapter5);
        org.junit.Assert.assertNotNull(log7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(restAdapter13);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(restAdapter27);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(restAdapter42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertNotNull(restAdapter60);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(restAdapter70);
    }

    @Test
    public void test04321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04321");
        retrofit.client.Header[] headerArray12 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList13 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList13, headerArray12);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList13, typedOutput15);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList13, typedOutput17);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList13, typedOutput19);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList13, typedOutput21);
        java.util.List<retrofit.client.Header> headerList23 = request22.getHeaders();
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", headerList23, typedOutput24);
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("hi!", "hi!", headerList23, typedOutput26);
        java.util.List<retrofit.client.Header> headerList28 = request27.getHeaders();
        java.lang.String str29 = request27.getUrl();
        org.junit.Assert.assertNotNull(headerArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(headerList23);
        org.junit.Assert.assertNotNull(headerList28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
    }

    @Test
    public void test04322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04322");
        retrofit.client.Header[] headerArray16 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList17 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList17, headerArray16);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList17, typedOutput19);
        java.lang.String str21 = request20.getMethod();
        java.util.List<retrofit.client.Header> headerList22 = request20.getHeaders();
        java.util.List<retrofit.client.Header> headerList23 = request20.getHeaders();
        java.util.List<retrofit.client.Header> headerList24 = request20.getHeaders();
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "hi!", headerList24, typedOutput25);
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("hi!", "hi!", headerList24, typedOutput27);
        retrofit.mime.TypedOutput typedOutput29 = null;
        retrofit.client.Request request30 = new retrofit.client.Request("hi!", "", headerList24, typedOutput29);
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("hi!", "", headerList24, typedOutput31);
        retrofit.mime.TypedOutput typedOutput33 = null;
        retrofit.client.Request request34 = new retrofit.client.Request("hi!", "", headerList24, typedOutput33);
        retrofit.mime.TypedOutput typedOutput35 = null;
        retrofit.client.Request request36 = new retrofit.client.Request("", "", headerList24, typedOutput35);
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("", "", headerList24, typedOutput37);
        org.junit.Assert.assertNotNull(headerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(headerList22);
        org.junit.Assert.assertNotNull(headerList23);
        org.junit.Assert.assertNotNull(headerList24);
    }

    @Test
    public void test04323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04323");
        retrofit.client.Header[] headerArray14 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList15 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList15, headerArray14);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList15, typedOutput17);
        java.lang.String str19 = request18.getMethod();
        java.util.List<retrofit.client.Header> headerList20 = request18.getHeaders();
        java.util.List<retrofit.client.Header> headerList21 = request18.getHeaders();
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("hi!", "hi!", headerList21, typedOutput22);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList21, typedOutput24);
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "hi!", headerList21, typedOutput26);
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList21, typedOutput28);
        retrofit.mime.TypedOutput typedOutput30 = null;
        retrofit.client.Request request31 = new retrofit.client.Request("", "", headerList21, typedOutput30);
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("hi!", "", headerList21, typedOutput32);
        java.lang.String str34 = request33.getMethod();
        org.junit.Assert.assertNotNull(headerArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(headerList20);
        org.junit.Assert.assertNotNull(headerList21);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
    }

    @Test
    public void test04324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04324");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = builder6.build();
        retrofit.RestAdapter restAdapter8 = builder6.build();
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder9.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLog(log13);
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder16 = builder14.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = builder19.setLog(log22);
        retrofit.RestAdapter.Builder builder24 = builder16.setLog(log22);
        retrofit.RestAdapter.Builder builder25 = builder11.setLog(log22);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLog(log27);
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder30 = builder26.setLog(log29);
        retrofit.RestAdapter.Builder builder31 = builder25.setLog(log29);
        retrofit.RestAdapter.Builder builder33 = builder25.setServer("hi!");
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        retrofit.RestAdapter.Builder builder37 = builder33.setLog(log35);
        retrofit.RestAdapter.Builder builder38 = builder6.setLog(log35);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder41.setLog(log44);
        log44.log("hi!");
        log44.log("");
        log44.log("hi!");
        retrofit.RestAdapter.Builder builder52 = builder6.setLog(log44);
        retrofit.RestAdapter restAdapter53 = builder6.build();
        retrofit.RestAdapter.Builder builder55 = builder6.setServer("hi!");
        retrofit.converter.Converter converter56 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder57 = builder55.setConverter(converter56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(restAdapter7);
        org.junit.Assert.assertNotNull(restAdapter8);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(restAdapter53);
        org.junit.Assert.assertNotNull(builder55);
    }

    @Test
    public void test04325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04325");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder4.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = builder27.setServer("hi!");
        retrofit.RestAdapter restAdapter30 = builder29.build();
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        restAdapter30.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder43 = builder41.setServer("hi!");
        retrofit.RestAdapter restAdapter44 = builder43.build();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        restAdapter44.setLogLevel(logLevel48);
        restAdapter30.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder58 = builder56.setServer("hi!");
        retrofit.RestAdapter restAdapter59 = builder58.build();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        restAdapter59.setLogLevel(logLevel63);
        restAdapter30.setLogLevel(logLevel63);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter30.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder69 = builder4.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder71 = builder69.setServer("hi!");
        retrofit.RestAdapter.Builder builder73 = builder69.setServer("hi!");
        retrofit.RestAdapter restAdapter74 = builder73.build();
        retrofit.RestAdapter restAdapter75 = builder73.build();
        java.util.concurrent.Executor executor76 = null;
        java.util.concurrent.Executor executor77 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder78 = builder73.setExecutors(executor76, executor77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(restAdapter30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(restAdapter44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(restAdapter74);
        org.junit.Assert.assertNotNull(restAdapter75);
    }

    @Test
    public void test04326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04326");
        retrofit.client.Header[] headerArray14 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList15 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList15, headerArray14);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList15, typedOutput17);
        java.lang.String str19 = request18.getMethod();
        retrofit.mime.TypedOutput typedOutput20 = request18.getBody();
        java.util.List<retrofit.client.Header> headerList21 = request18.getHeaders();
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("hi!", "hi!", headerList21, typedOutput22);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "hi!", headerList21, typedOutput24);
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("hi!", "", headerList21, typedOutput26);
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("hi!", "", headerList21, typedOutput28);
        retrofit.mime.TypedOutput typedOutput30 = null;
        retrofit.client.Request request31 = new retrofit.client.Request("hi!", "hi!", headerList21, typedOutput30);
        java.util.List<retrofit.client.Header> headerList32 = request31.getHeaders();
        java.util.List<retrofit.client.Header> headerList33 = request31.getHeaders();
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "hi!", headerList33, typedOutput34);
        retrofit.mime.TypedOutput typedOutput36 = request35.getBody();
        org.junit.Assert.assertNotNull(headerArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNull(typedOutput20);
        org.junit.Assert.assertNotNull(headerList21);
        org.junit.Assert.assertNotNull(headerList32);
        org.junit.Assert.assertNotNull(headerList33);
        org.junit.Assert.assertNull(typedOutput36);
    }

    @Test
    public void test04327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04327");
        retrofit.client.Header[] headerArray16 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList17 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList17, headerArray16);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList17, typedOutput19);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList17, typedOutput21);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList17, typedOutput23);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList17, typedOutput25);
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList17, typedOutput27);
        retrofit.mime.TypedOutput typedOutput29 = null;
        retrofit.client.Request request30 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList17, typedOutput29);
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList17, typedOutput31);
        retrofit.mime.TypedOutput typedOutput33 = null;
        retrofit.client.Request request34 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList17, typedOutput33);
        org.junit.Assert.assertNotNull(headerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test04328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04328");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("hi!");
        retrofit.RestAdapter restAdapter32 = builder31.build();
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLog(log34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        restAdapter32.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder45 = builder43.setServer("hi!");
        retrofit.RestAdapter restAdapter46 = builder45.build();
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLog(log48);
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        restAdapter46.setLogLevel(logLevel50);
        restAdapter32.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder58 = builder56.setLogLevel(logLevel57);
        retrofit.RestAdapter.Builder builder60 = builder58.setServer("hi!");
        retrofit.RestAdapter restAdapter61 = builder60.build();
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder64 = builder62.setLog(log63);
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        restAdapter61.setLogLevel(logLevel65);
        restAdapter32.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder69 = builder16.setLogLevel(logLevel65);
        retrofit.RestAdapter restAdapter70 = builder69.build();
        retrofit.RestAdapter.LogLevel logLevel71 = restAdapter70.getLogLevel();
        java.lang.Class<?> wildcardClass72 = restAdapter70.getClass();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(restAdapter32);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(restAdapter46);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(restAdapter61);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(restAdapter70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test04329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04329");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("hi!");
        retrofit.RestAdapter restAdapter32 = builder31.build();
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLog(log34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        restAdapter32.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder45 = builder43.setServer("hi!");
        retrofit.RestAdapter restAdapter46 = builder45.build();
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLog(log48);
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        restAdapter46.setLogLevel(logLevel50);
        restAdapter32.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder58 = builder56.setLogLevel(logLevel57);
        retrofit.RestAdapter.Builder builder60 = builder58.setServer("hi!");
        retrofit.RestAdapter restAdapter61 = builder60.build();
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder64 = builder62.setLog(log63);
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        restAdapter61.setLogLevel(logLevel65);
        restAdapter32.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder69 = builder16.setLogLevel(logLevel65);
        retrofit.RestAdapter restAdapter70 = builder69.build();
        retrofit.RestAdapter.Builder builder72 = builder69.setServer("hi!");
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder75 = builder73.setLog(log74);
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder77 = builder75.setLogLevel(logLevel76);
        retrofit.RestAdapter.Builder builder79 = builder77.setServer("hi!");
        retrofit.RestAdapter restAdapter80 = builder79.build();
        retrofit.RestAdapter.LogLevel logLevel81 = restAdapter80.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel82 = restAdapter80.getLogLevel();
        boolean boolean83 = logLevel82.log();
        boolean boolean84 = logLevel82.log();
        retrofit.RestAdapter.Builder builder85 = builder72.setLogLevel(logLevel82);
        retrofit.RestAdapter restAdapter86 = builder72.build();
        retrofit.converter.Converter converter87 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder88 = builder72.setConverter(converter87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(restAdapter32);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(restAdapter46);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(restAdapter61);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(restAdapter70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(restAdapter80);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(restAdapter86);
    }

    @Test
    public void test04330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04330");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder2.setLog(log17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLog(log20);
        log20.log("");
        retrofit.RestAdapter.Builder builder24 = builder18.setLog(log20);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLog(log29);
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder32 = builder30.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLog(log34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder35.setLog(log38);
        retrofit.RestAdapter.Builder builder40 = builder32.setLog(log38);
        retrofit.RestAdapter.Builder builder41 = builder27.setLog(log38);
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder27.setLog(log42);
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLog(log45);
        log45.log("hi!");
        retrofit.RestAdapter.Builder builder49 = builder27.setLog(log45);
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.RestAdapter.Builder builder52 = builder24.setLog(log50);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter53 = builder52.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
    }

    @Test
    public void test04331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04331");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder5.setLog(log8);
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLog(log21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder22.setLog(log25);
        retrofit.RestAdapter.Builder builder27 = builder19.setLog(log25);
        retrofit.RestAdapter.Builder builder28 = builder14.setLog(log25);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLog(log30);
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder29.setLog(log32);
        retrofit.RestAdapter.Builder builder34 = builder28.setLog(log32);
        retrofit.RestAdapter.Builder builder36 = builder28.setServer("hi!");
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder44.setLog(log47);
        retrofit.RestAdapter.Builder builder49 = builder41.setLog(log47);
        retrofit.RestAdapter.Builder builder51 = builder41.setServer("hi!");
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder54.setLog(log57);
        retrofit.RestAdapter.Builder builder59 = builder41.setLog(log57);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder61 = builder41.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder62 = builder28.setLogLevel(logLevel60);
        retrofit.RestAdapter restAdapter63 = builder28.build();
        retrofit.RestAdapter.LogLevel logLevel64 = restAdapter63.getLogLevel();
        retrofit.RestAdapter.Builder builder65 = builder11.setLogLevel(logLevel64);
        retrofit.RestAdapter.Builder builder66 = builder2.setLogLevel(logLevel64);
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log68 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder69 = builder67.setLog(log68);
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder71 = builder69.setLogLevel(logLevel70);
        retrofit.RestAdapter.Builder builder73 = builder71.setServer("hi!");
        retrofit.RestAdapter restAdapter74 = builder73.build();
        retrofit.RestAdapter.LogLevel logLevel75 = restAdapter74.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel76 = restAdapter74.getLogLevel();
        retrofit.RestAdapter.Builder builder77 = builder66.setLogLevel(logLevel76);
        boolean boolean78 = logLevel76.log();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(restAdapter63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(restAdapter74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }

    @Test
    public void test04332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04332");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder12.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder19.setServer("hi!");
        retrofit.RestAdapter restAdapter22 = builder21.build();
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLog(log27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder33.setLog(log36);
        retrofit.RestAdapter.Builder builder38 = builder30.setLog(log36);
        retrofit.RestAdapter.Builder builder39 = builder25.setLog(log36);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder50.setLog(log53);
        retrofit.RestAdapter.Builder builder55 = builder47.setLog(log53);
        retrofit.RestAdapter.Builder builder56 = builder40.setLog(log53);
        retrofit.RestAdapter.Builder builder57 = builder25.setLog(log53);
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder60 = builder58.setLog(log59);
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder62 = builder60.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder63 = builder57.setLogLevel(logLevel61);
        restAdapter22.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLog(log66);
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder68.setLog(log69);
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder72 = builder70.setLogLevel(logLevel71);
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder75 = builder73.setLog(log74);
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder77 = builder75.setLogLevel(logLevel76);
        retrofit.RestAdapter.Log log78 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder79 = builder75.setLog(log78);
        retrofit.RestAdapter.Builder builder80 = builder72.setLog(log78);
        retrofit.RestAdapter.Builder builder81 = builder65.setLog(log78);
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log83 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder84 = builder82.setLog(log83);
        retrofit.RestAdapter.LogLevel logLevel85 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder86 = builder82.setLogLevel(logLevel85);
        boolean boolean87 = logLevel85.log();
        retrofit.RestAdapter.Builder builder88 = builder65.setLogLevel(logLevel85);
        restAdapter22.setLogLevel(logLevel85);
        retrofit.RestAdapter.LogLevel logLevel90 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel91 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel92 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel93 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.Builder builder94 = builder14.setLogLevel(logLevel93);
        retrofit.client.Client client95 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder96 = builder94.setClient(client95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(log78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(log83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertTrue("'" + logLevel90 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel90.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel91 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel91.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel93 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel93.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder94);
    }

    @Test
    public void test04333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04333");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder5.setLog(log8);
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLog(log21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder22.setLog(log25);
        retrofit.RestAdapter.Builder builder27 = builder19.setLog(log25);
        retrofit.RestAdapter.Builder builder28 = builder14.setLog(log25);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLog(log30);
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder29.setLog(log32);
        retrofit.RestAdapter.Builder builder34 = builder28.setLog(log32);
        retrofit.RestAdapter.Builder builder36 = builder28.setServer("hi!");
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder44.setLog(log47);
        retrofit.RestAdapter.Builder builder49 = builder41.setLog(log47);
        retrofit.RestAdapter.Builder builder51 = builder41.setServer("hi!");
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder54.setLog(log57);
        retrofit.RestAdapter.Builder builder59 = builder41.setLog(log57);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder61 = builder41.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder62 = builder28.setLogLevel(logLevel60);
        retrofit.RestAdapter restAdapter63 = builder28.build();
        retrofit.RestAdapter.LogLevel logLevel64 = restAdapter63.getLogLevel();
        retrofit.RestAdapter.Builder builder65 = builder11.setLogLevel(logLevel64);
        retrofit.RestAdapter.Builder builder66 = builder2.setLogLevel(logLevel64);
        java.util.concurrent.Executor executor67 = null;
        java.util.concurrent.Executor executor68 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder69 = builder66.setExecutors(executor67, executor68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(restAdapter63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder66);
    }

    @Test
    public void test04334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04334");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder16 = builder12.setLog(log15);
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log15);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log15);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLog(log23);
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder29.setLog(log32);
        retrofit.RestAdapter.Builder builder34 = builder26.setLog(log32);
        retrofit.RestAdapter.Builder builder35 = builder21.setLog(log32);
        retrofit.RestAdapter.Builder builder36 = builder18.setLog(log32);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder47.setLog(log50);
        retrofit.RestAdapter.Builder builder52 = builder44.setLog(log50);
        retrofit.RestAdapter.Builder builder53 = builder39.setLog(log50);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder54.setLog(log57);
        retrofit.RestAdapter.Builder builder59 = builder53.setLog(log57);
        retrofit.RestAdapter.Builder builder61 = builder53.setServer("hi!");
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder64 = builder62.setLog(log63);
        retrofit.RestAdapter.Builder builder65 = builder61.setLog(log63);
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder68 = builder66.setLog(log67);
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder70 = builder68.setLogLevel(logLevel69);
        boolean boolean71 = logLevel69.log();
        retrofit.RestAdapter.Builder builder72 = builder65.setLogLevel(logLevel69);
        boolean boolean73 = logLevel69.log();
        boolean boolean74 = logLevel69.log();
        retrofit.RestAdapter.Builder builder75 = builder18.setLogLevel(logLevel69);
        retrofit.RestAdapter.Builder builder77 = builder18.setServer("hi!");
        retrofit.RestAdapter restAdapter78 = builder77.build();
        retrofit.client.Client.Provider provider79 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder80 = builder77.setClient(provider79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(restAdapter78);
    }

    @Test
    public void test04335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04335");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder2.setLog(log17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLog(log20);
        log20.log("hi!");
        retrofit.RestAdapter.Builder builder24 = builder2.setLog(log20);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLog(log29);
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder32 = builder30.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLog(log34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder35.setLog(log38);
        retrofit.RestAdapter.Builder builder40 = builder32.setLog(log38);
        retrofit.RestAdapter.Builder builder41 = builder27.setLog(log38);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder42.setLog(log45);
        retrofit.RestAdapter.Builder builder47 = builder41.setLog(log45);
        retrofit.RestAdapter.Builder builder49 = builder41.setServer("hi!");
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLog(log51);
        retrofit.RestAdapter.Builder builder53 = builder49.setLog(log51);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder58 = builder56.setLogLevel(logLevel57);
        boolean boolean59 = logLevel57.log();
        retrofit.RestAdapter.Builder builder60 = builder53.setLogLevel(logLevel57);
        boolean boolean61 = logLevel57.log();
        boolean boolean62 = logLevel57.log();
        retrofit.RestAdapter.Builder builder63 = builder2.setLogLevel(logLevel57);
        retrofit.RequestInterceptor requestInterceptor64 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder65 = builder63.setRequestInterceptor(requestInterceptor64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(builder63);
    }

    @Test
    public void test04336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04336");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder4.setLog(log20);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder4.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder26 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter27 = builder26.build();
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLog(log29);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLog(log37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder38.setLog(log41);
        retrofit.RestAdapter.Builder builder43 = builder35.setLog(log41);
        retrofit.RestAdapter.Builder builder44 = builder30.setLog(log41);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLog(log54);
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder57 = builder55.setLogLevel(logLevel56);
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder55.setLog(log58);
        retrofit.RestAdapter.Builder builder60 = builder52.setLog(log58);
        retrofit.RestAdapter.Builder builder61 = builder45.setLog(log58);
        retrofit.RestAdapter.Builder builder62 = builder30.setLog(log58);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLog(log64);
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder67 = builder65.setLogLevel(logLevel66);
        retrofit.RestAdapter.Builder builder68 = builder62.setLogLevel(logLevel66);
        boolean boolean69 = logLevel66.log();
        boolean boolean70 = logLevel66.log();
        boolean boolean71 = logLevel66.log();
        boolean boolean72 = logLevel66.log();
        restAdapter27.setLogLevel(logLevel66);
        boolean boolean74 = logLevel66.log();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(restAdapter27);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test04337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04337");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder12.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder19.setServer("hi!");
        retrofit.RestAdapter restAdapter22 = builder21.build();
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLog(log27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder33.setLog(log36);
        retrofit.RestAdapter.Builder builder38 = builder30.setLog(log36);
        retrofit.RestAdapter.Builder builder39 = builder25.setLog(log36);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder50.setLog(log53);
        retrofit.RestAdapter.Builder builder55 = builder47.setLog(log53);
        retrofit.RestAdapter.Builder builder56 = builder40.setLog(log53);
        retrofit.RestAdapter.Builder builder57 = builder25.setLog(log53);
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder60 = builder58.setLog(log59);
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder62 = builder60.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder63 = builder57.setLogLevel(logLevel61);
        restAdapter22.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLog(log66);
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder68.setLog(log69);
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder72 = builder70.setLogLevel(logLevel71);
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder75 = builder73.setLog(log74);
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder77 = builder75.setLogLevel(logLevel76);
        retrofit.RestAdapter.Log log78 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder79 = builder75.setLog(log78);
        retrofit.RestAdapter.Builder builder80 = builder72.setLog(log78);
        retrofit.RestAdapter.Builder builder81 = builder65.setLog(log78);
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log83 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder84 = builder82.setLog(log83);
        retrofit.RestAdapter.LogLevel logLevel85 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder86 = builder82.setLogLevel(logLevel85);
        boolean boolean87 = logLevel85.log();
        retrofit.RestAdapter.Builder builder88 = builder65.setLogLevel(logLevel85);
        restAdapter22.setLogLevel(logLevel85);
        retrofit.RestAdapter.LogLevel logLevel90 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel91 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel92 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel93 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.Builder builder94 = builder14.setLogLevel(logLevel93);
        retrofit.RequestInterceptor requestInterceptor95 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder96 = builder94.setRequestInterceptor(requestInterceptor95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(log78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(log83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertTrue("'" + logLevel90 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel90.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel91 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel91.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel93 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel93.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder94);
    }

    @Test
    public void test04338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04338");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("hi!");
        retrofit.RestAdapter restAdapter32 = builder31.build();
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLog(log34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        restAdapter32.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder45 = builder43.setServer("hi!");
        retrofit.RestAdapter restAdapter46 = builder45.build();
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLog(log48);
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        restAdapter46.setLogLevel(logLevel50);
        restAdapter32.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder58 = builder56.setLogLevel(logLevel57);
        retrofit.RestAdapter.Builder builder60 = builder58.setServer("hi!");
        retrofit.RestAdapter restAdapter61 = builder60.build();
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder64 = builder62.setLog(log63);
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        restAdapter61.setLogLevel(logLevel65);
        restAdapter32.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder69 = builder16.setLogLevel(logLevel65);
        retrofit.RestAdapter restAdapter70 = builder69.build();
        retrofit.RestAdapter.Builder builder72 = builder69.setServer("hi!");
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder75 = builder73.setLog(log74);
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder77 = builder75.setLogLevel(logLevel76);
        retrofit.RestAdapter.Builder builder79 = builder77.setServer("hi!");
        retrofit.RestAdapter restAdapter80 = builder79.build();
        retrofit.RestAdapter.LogLevel logLevel81 = restAdapter80.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel82 = restAdapter80.getLogLevel();
        boolean boolean83 = logLevel82.log();
        boolean boolean84 = logLevel82.log();
        retrofit.RestAdapter.Builder builder85 = builder72.setLogLevel(logLevel82);
        java.util.concurrent.Executor executor86 = null;
        java.util.concurrent.Executor executor87 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder88 = builder72.setExecutors(executor86, executor87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(restAdapter32);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(restAdapter46);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(restAdapter61);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(restAdapter70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(restAdapter80);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(builder85);
    }

    @Test
    public void test04339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04339");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = builder9.setServer("hi!");
        retrofit.RestAdapter restAdapter12 = builder11.build();
        retrofit.RestAdapter restAdapter13 = builder11.build();
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLog(log15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder18 = builder14.setLogLevel(logLevel17);
        boolean boolean19 = logLevel17.log();
        restAdapter13.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder21 = builder0.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLog(log23);
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder29.setLog(log32);
        retrofit.RestAdapter.Builder builder34 = builder26.setLog(log32);
        retrofit.RestAdapter.Builder builder36 = builder26.setServer("hi!");
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder39.setLog(log42);
        retrofit.RestAdapter.Builder builder44 = builder26.setLog(log42);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder51 = builder49.setServer("hi!");
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder57 = builder55.setLog(log56);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder59 = builder57.setLogLevel(logLevel58);
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder66 = builder62.setLog(log65);
        retrofit.RestAdapter.Builder builder67 = builder59.setLog(log65);
        retrofit.RestAdapter.Builder builder68 = builder54.setLog(log65);
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder71 = builder69.setLog(log70);
        retrofit.RestAdapter.Log log72 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder73 = builder69.setLog(log72);
        retrofit.RestAdapter.Builder builder74 = builder68.setLog(log72);
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log76 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder77 = builder75.setLog(log76);
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder79 = builder77.setLogLevel(logLevel78);
        retrofit.RestAdapter.Log log80 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder81 = builder77.setLog(log80);
        log80.log("hi!");
        log80.log("");
        retrofit.RestAdapter.Builder builder86 = builder74.setLog(log80);
        retrofit.RestAdapter.Builder builder87 = builder49.setLog(log80);
        log80.log("");
        retrofit.RestAdapter.Builder builder90 = builder44.setLog(log80);
        log80.log("");
        log80.log("");
        log80.log("hi!");
        retrofit.RestAdapter.Builder builder97 = builder21.setLog(log80);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter98 = builder21.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(restAdapter12);
        org.junit.Assert.assertNotNull(restAdapter13);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(log80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(builder97);
    }

    @Test
    public void test04340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04340");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLog(log29);
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder32 = builder30.setLogLevel(logLevel31);
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder30.setLog(log33);
        log33.log("");
        retrofit.RestAdapter.Builder builder37 = builder27.setLog(log33);
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLog(log39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder40.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder44 = builder42.setServer("hi!");
        retrofit.RestAdapter restAdapter45 = builder44.build();
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLog(log47);
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        restAdapter45.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder58 = builder56.setServer("hi!");
        retrofit.RestAdapter restAdapter59 = builder58.build();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        restAdapter59.setLogLevel(logLevel63);
        restAdapter45.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log68 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder69 = builder67.setLog(log68);
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder71 = builder69.setLogLevel(logLevel70);
        retrofit.RestAdapter.Builder builder73 = builder71.setServer("hi!");
        retrofit.RestAdapter restAdapter74 = builder73.build();
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log76 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder77 = builder75.setLog(log76);
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder79 = builder77.setLogLevel(logLevel78);
        restAdapter74.setLogLevel(logLevel78);
        restAdapter45.setLogLevel(logLevel78);
        retrofit.RestAdapter.Builder builder82 = builder37.setLogLevel(logLevel78);
        retrofit.RestAdapter.Builder builder83 = builder22.setLogLevel(logLevel78);
        java.lang.Class<?> wildcardClass84 = logLevel78.getClass();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(restAdapter45);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(restAdapter74);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test04341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04341");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder22.setServer("hi!");
        retrofit.RestAdapter.Builder builder26 = builder24.setServer("hi!");
        retrofit.RestAdapter restAdapter27 = builder24.build();
        retrofit.Server server28 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder29 = builder24.setServer(server28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(restAdapter27);
    }

    @Test
    public void test04342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04342");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder4.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = builder27.setServer("hi!");
        retrofit.RestAdapter restAdapter30 = builder29.build();
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        restAdapter30.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder43 = builder41.setServer("hi!");
        retrofit.RestAdapter restAdapter44 = builder43.build();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        restAdapter44.setLogLevel(logLevel48);
        restAdapter30.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder58 = builder56.setServer("hi!");
        retrofit.RestAdapter restAdapter59 = builder58.build();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        restAdapter59.setLogLevel(logLevel63);
        restAdapter30.setLogLevel(logLevel63);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter30.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder69 = builder4.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder71 = builder69.setServer("hi!");
        retrofit.RestAdapter.Builder builder73 = builder69.setServer("hi!");
        retrofit.RestAdapter restAdapter74 = builder73.build();
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log76 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder77 = builder75.setLog(log76);
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log79 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder80 = builder78.setLog(log79);
        retrofit.RestAdapter.LogLevel logLevel81 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder82 = builder80.setLogLevel(logLevel81);
        retrofit.RestAdapter.Builder builder83 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log84 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder85 = builder83.setLog(log84);
        retrofit.RestAdapter.LogLevel logLevel86 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder87 = builder85.setLogLevel(logLevel86);
        retrofit.RestAdapter.Log log88 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder89 = builder85.setLog(log88);
        retrofit.RestAdapter.Builder builder90 = builder82.setLog(log88);
        retrofit.RestAdapter.Builder builder91 = builder77.setLog(log88);
        log88.log("");
        log88.log("hi!");
        retrofit.RestAdapter.Builder builder96 = builder73.setLog(log88);
        retrofit.RestAdapter restAdapter97 = builder96.build();
        retrofit.RestAdapter.LogLevel logLevel98 = null;
        restAdapter97.setLogLevel(logLevel98);
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(restAdapter30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(restAdapter44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(restAdapter74);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(log84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(log88);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(builder96);
        org.junit.Assert.assertNotNull(restAdapter97);
    }

    @Test
    public void test04343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04343");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        log8.log("");
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log8);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter15 = builder14.build();
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLog(log17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLog(log22);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder23.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder20.setLog(log26);
        retrofit.RestAdapter.Builder builder30 = builder20.setServer("hi!");
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder33.setLog(log36);
        retrofit.RestAdapter.Builder builder38 = builder20.setLog(log36);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder45 = builder43.setServer("hi!");
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLog(log47);
        log47.log("");
        retrofit.RestAdapter.Builder builder51 = builder43.setLog(log47);
        log47.log("");
        retrofit.RestAdapter.Builder builder54 = builder20.setLog(log47);
        log47.log("");
        retrofit.RestAdapter.Builder builder57 = builder14.setLog(log47);
        retrofit.client.Client client58 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder59 = builder57.setClient(client58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(restAdapter15);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder57);
    }

    @Test
    public void test04344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04344");
        retrofit.client.Header[] headerArray12 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList13 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList13, headerArray12);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList13, typedOutput15);
        java.lang.String str17 = request16.getMethod();
        java.util.List<retrofit.client.Header> headerList18 = request16.getHeaders();
        java.util.List<retrofit.client.Header> headerList19 = request16.getHeaders();
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("", "hi!", headerList19, typedOutput20);
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("hi!", "hi!", headerList19, typedOutput22);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", headerList19, typedOutput24);
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "hi!", headerList19, typedOutput26);
        java.util.List<retrofit.client.Header> headerList28 = request27.getHeaders();
        retrofit.mime.TypedOutput typedOutput29 = null;
        retrofit.client.Request request30 = new retrofit.client.Request("", "hi!", headerList28, typedOutput29);
        java.lang.Class<?> wildcardClass31 = request30.getClass();
        org.junit.Assert.assertNotNull(headerArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(headerList18);
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertNotNull(headerList28);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test04345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04345");
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        java.lang.String str13 = request12.getMethod();
        java.util.List<retrofit.client.Header> headerList14 = request12.getHeaders();
        java.util.List<retrofit.client.Header> headerList15 = request12.getHeaders();
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("", "hi!", headerList15, typedOutput16);
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("hi!", "hi!", headerList15, typedOutput18);
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("", "", headerList15, typedOutput20);
        java.lang.String str22 = request21.getMethod();
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
    }

    @Test
    public void test04346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04346");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLog(log21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder27.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder17.setLog(log30);
        retrofit.RestAdapter.Builder builder34 = builder2.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLog(log42);
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLog(log45);
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder53 = builder51.setLogLevel(logLevel52);
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder51.setLog(log54);
        retrofit.RestAdapter.Builder builder56 = builder48.setLog(log54);
        retrofit.RestAdapter.Builder builder57 = builder43.setLog(log54);
        log54.log("");
        log54.log("");
        retrofit.RestAdapter.Builder builder62 = builder40.setLog(log54);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLog(log64);
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder67 = builder65.setLogLevel(logLevel66);
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder68.setLog(log69);
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder72 = builder70.setLogLevel(logLevel71);
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder74 = builder70.setLog(log73);
        retrofit.RestAdapter.Builder builder75 = builder67.setLog(log73);
        log73.log("hi!");
        log73.log("hi!");
        log73.log("hi!");
        retrofit.RestAdapter.Builder builder82 = builder62.setLog(log73);
        retrofit.RestAdapter.Builder builder84 = builder82.setServer("hi!");
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log86 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder87 = builder85.setLog(log86);
        retrofit.RestAdapter.LogLevel logLevel88 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder89 = builder85.setLogLevel(logLevel88);
        boolean boolean90 = logLevel88.log();
        retrofit.RestAdapter.Builder builder91 = builder82.setLogLevel(logLevel88);
        retrofit.ErrorHandler errorHandler92 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder93 = builder82.setErrorHandler(errorHandler92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(log86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertTrue("'" + logLevel88 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel88.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(builder91);
    }

    @Test
    public void test04347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04347");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("hi!");
        retrofit.RestAdapter restAdapter32 = builder31.build();
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLog(log34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        restAdapter32.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder45 = builder43.setServer("hi!");
        retrofit.RestAdapter restAdapter46 = builder45.build();
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLog(log48);
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        restAdapter46.setLogLevel(logLevel50);
        restAdapter32.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder58 = builder56.setLogLevel(logLevel57);
        retrofit.RestAdapter.Builder builder60 = builder58.setServer("hi!");
        retrofit.RestAdapter restAdapter61 = builder60.build();
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder64 = builder62.setLog(log63);
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        restAdapter61.setLogLevel(logLevel65);
        restAdapter32.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder69 = builder16.setLogLevel(logLevel65);
        retrofit.RestAdapter restAdapter70 = builder69.build();
        retrofit.RestAdapter.LogLevel logLevel71 = restAdapter70.getLogLevel();
        boolean boolean72 = logLevel71.log();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(restAdapter32);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(restAdapter46);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(restAdapter61);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(restAdapter70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test04348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04348");
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        java.lang.String str13 = request12.getMethod();
        java.util.List<retrofit.client.Header> headerList14 = request12.getHeaders();
        java.util.List<retrofit.client.Header> headerList15 = request12.getHeaders();
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("", "hi!", headerList15, typedOutput16);
        java.lang.String str18 = request17.getUrl();
        java.lang.String str19 = request17.getMethod();
        java.util.List<retrofit.client.Header> headerList20 = request17.getHeaders();
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("hi!", "hi!", headerList20, typedOutput21);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("", "hi!", headerList20, typedOutput23);
        java.lang.Class<?> wildcardClass25 = request24.getClass();
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(headerList20);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test04349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04349");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = builder6.build();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        restAdapter7.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLog(log15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder20 = builder18.setServer("hi!");
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLog(log22);
        log22.log("");
        retrofit.RestAdapter.Builder builder26 = builder18.setLog(log22);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder37.setLog(log40);
        retrofit.RestAdapter.Builder builder42 = builder34.setLog(log40);
        retrofit.RestAdapter.Builder builder43 = builder29.setLog(log40);
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLog(log45);
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLog(log48);
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder54.setLog(log57);
        retrofit.RestAdapter.Builder builder59 = builder51.setLog(log57);
        retrofit.RestAdapter.Builder builder60 = builder44.setLog(log57);
        retrofit.RestAdapter.Builder builder61 = builder29.setLog(log57);
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder64 = builder62.setLog(log63);
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder67 = builder61.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder68 = builder18.setLogLevel(logLevel65);
        restAdapter7.setLogLevel(logLevel65);
        boolean boolean70 = logLevel65.log();
        boolean boolean71 = logLevel65.log();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(restAdapter7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test04350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04350");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder22.setServer("hi!");
        retrofit.RestAdapter.Builder builder26 = builder22.setServer("hi!");
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder33 = builder31.setServer("hi!");
        retrofit.RestAdapter restAdapter34 = builder33.build();
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        restAdapter34.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLog(log42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder47 = builder45.setServer("hi!");
        retrofit.RestAdapter restAdapter48 = builder47.build();
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder53 = builder51.setLogLevel(logLevel52);
        restAdapter48.setLogLevel(logLevel52);
        restAdapter34.setLogLevel(logLevel52);
        retrofit.RestAdapter.LogLevel logLevel56 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel57 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.Builder builder58 = builder22.setLogLevel(logLevel57);
        retrofit.RestAdapter restAdapter59 = builder22.build();
        retrofit.RestAdapter.Builder builder61 = builder22.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder63 = builder61.setLogLevel(logLevel62);
        retrofit.RequestInterceptor requestInterceptor64 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder65 = builder61.setRequestInterceptor(requestInterceptor64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(restAdapter34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(restAdapter48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder63);
    }

    @Test
    public void test04351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04351");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.lang.String str7 = request6.getMethod();
        java.lang.String str8 = request6.getMethod();
        retrofit.mime.TypedOutput typedOutput9 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput11 = request6.getBody();
        java.lang.String str12 = request6.getMethod();
        retrofit.mime.TypedOutput typedOutput13 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput14 = request6.getBody();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertNull(typedOutput14);
    }

    @Test
    public void test04352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04352");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLog(log21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder27.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder17.setLog(log30);
        retrofit.RestAdapter.Builder builder34 = builder2.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("hi!");
        retrofit.RestAdapter.Builder builder44 = builder40.setServer("hi!");
        retrofit.RestAdapter restAdapter45 = builder40.build();
        retrofit.RestAdapter restAdapter46 = builder40.build();
        retrofit.RestAdapter.Builder builder48 = builder40.setServer("hi!");
        retrofit.ErrorHandler errorHandler49 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder50 = builder48.setErrorHandler(errorHandler49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(restAdapter45);
        org.junit.Assert.assertNotNull(restAdapter46);
        org.junit.Assert.assertNotNull(builder48);
    }

    @Test
    public void test04353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04353");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder22.setServer("hi!");
        retrofit.RestAdapter.Builder builder26 = builder22.setServer("hi!");
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder33 = builder31.setServer("hi!");
        retrofit.RestAdapter restAdapter34 = builder33.build();
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder41 = builder39.setServer("hi!");
        retrofit.RestAdapter restAdapter42 = builder41.build();
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        restAdapter42.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder53 = builder51.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder55 = builder53.setServer("hi!");
        retrofit.RestAdapter restAdapter56 = builder55.build();
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLog(log58);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder61 = builder59.setLogLevel(logLevel60);
        restAdapter56.setLogLevel(logLevel60);
        restAdapter42.setLogLevel(logLevel60);
        boolean boolean64 = logLevel60.log();
        boolean boolean65 = logLevel60.log();
        restAdapter34.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder67 = builder22.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder69 = builder22.setServer("hi!");
        retrofit.RestAdapter.Builder builder71 = builder69.setServer("hi!");
        retrofit.converter.Converter converter72 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder73 = builder69.setConverter(converter72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(restAdapter34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(restAdapter42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(restAdapter56);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder71);
    }

    @Test
    public void test04354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04354");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        log10.log("");
        retrofit.RestAdapter.Builder builder14 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder19.setServer("hi!");
        retrofit.RestAdapter restAdapter22 = builder21.build();
        retrofit.RestAdapter restAdapter23 = builder21.build();
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder24.setLogLevel(logLevel27);
        boolean boolean29 = logLevel27.log();
        restAdapter23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder31 = builder14.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder33 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter34 = builder14.build();
        retrofit.RestAdapter restAdapter35 = builder14.build();
        retrofit.client.Client client36 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder37 = builder14.setClient(client36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNotNull(restAdapter23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(restAdapter34);
        org.junit.Assert.assertNotNull(restAdapter35);
    }

    @Test
    public void test04355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04355");
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        java.lang.String str11 = request10.getMethod();
        java.lang.String str12 = request10.getMethod();
        java.util.List<retrofit.client.Header> headerList13 = request10.getHeaders();
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("", "hi!", headerList13, typedOutput14);
        java.util.List<retrofit.client.Header> headerList16 = request15.getHeaders();
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("", "", headerList16, typedOutput17);
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertNotNull(headerList16);
    }

    @Test
    public void test04356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04356");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("hi!");
        retrofit.RestAdapter restAdapter32 = builder31.build();
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLog(log34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        restAdapter32.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder45 = builder43.setServer("hi!");
        retrofit.RestAdapter restAdapter46 = builder45.build();
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLog(log48);
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        restAdapter46.setLogLevel(logLevel50);
        restAdapter32.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder58 = builder56.setLogLevel(logLevel57);
        retrofit.RestAdapter.Builder builder60 = builder58.setServer("hi!");
        retrofit.RestAdapter restAdapter61 = builder60.build();
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder64 = builder62.setLog(log63);
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        restAdapter61.setLogLevel(logLevel65);
        restAdapter32.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder69 = builder16.setLogLevel(logLevel65);
        retrofit.RestAdapter restAdapter70 = builder69.build();
        retrofit.RestAdapter.Builder builder72 = builder69.setServer("hi!");
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder75 = builder73.setLog(log74);
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder77 = builder75.setLogLevel(logLevel76);
        retrofit.RestAdapter.Builder builder79 = builder77.setServer("hi!");
        retrofit.RestAdapter restAdapter80 = builder79.build();
        retrofit.RestAdapter.LogLevel logLevel81 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean82 = logLevel81.log();
        boolean boolean83 = logLevel81.log();
        retrofit.RestAdapter.Builder builder84 = builder79.setLogLevel(logLevel81);
        retrofit.RestAdapter.Builder builder85 = builder72.setLogLevel(logLevel81);
        retrofit.RestAdapter.LogLevel logLevel86 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean87 = logLevel86.log();
        boolean boolean88 = logLevel86.log();
        boolean boolean89 = logLevel86.log();
        retrofit.RestAdapter.Builder builder90 = builder72.setLogLevel(logLevel86);
        retrofit.Profiler profiler91 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder92 = builder90.setProfiler(profiler91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(restAdapter32);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(restAdapter46);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(restAdapter61);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(restAdapter70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(restAdapter80);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(builder90);
    }

    @Test
    public void test04357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04357");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLog(log21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder27.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder17.setLog(log30);
        retrofit.RestAdapter.Builder builder34 = builder2.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLog(log42);
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLog(log45);
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder53 = builder51.setLogLevel(logLevel52);
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder51.setLog(log54);
        retrofit.RestAdapter.Builder builder56 = builder48.setLog(log54);
        retrofit.RestAdapter.Builder builder57 = builder43.setLog(log54);
        log54.log("");
        log54.log("");
        retrofit.RestAdapter.Builder builder62 = builder40.setLog(log54);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLog(log64);
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder67 = builder65.setLogLevel(logLevel66);
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder68.setLog(log69);
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder72 = builder70.setLogLevel(logLevel71);
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder74 = builder70.setLog(log73);
        retrofit.RestAdapter.Builder builder75 = builder67.setLog(log73);
        log73.log("hi!");
        log73.log("hi!");
        log73.log("hi!");
        retrofit.RestAdapter.Builder builder82 = builder62.setLog(log73);
        retrofit.RestAdapter.Log log83 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder84 = builder62.setLog(log83);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter85 = builder62.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(log83);
        org.junit.Assert.assertNotNull(builder84);
    }

    @Test
    public void test04358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04358");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = builder6.build();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLog(log12);
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLog(log17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder18.setLog(log21);
        retrofit.RestAdapter.Builder builder23 = builder15.setLog(log21);
        retrofit.RestAdapter.Builder builder24 = builder10.setLog(log21);
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder10.setLog(log25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        log28.log("");
        retrofit.RestAdapter.Builder builder32 = builder26.setLog(log28);
        log28.log("");
        retrofit.RestAdapter.Builder builder35 = builder6.setLog(log28);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLog(log37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder38.setLog(log41);
        log41.log("hi!");
        log41.log("hi!");
        retrofit.RestAdapter.Builder builder47 = builder35.setLog(log41);
        retrofit.RestAdapter.Builder builder49 = builder35.setServer("hi!");
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLog(log51);
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLog(log54);
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder57 = builder55.setLogLevel(logLevel56);
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder60 = builder58.setLog(log59);
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder62 = builder60.setLogLevel(logLevel61);
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder64 = builder60.setLog(log63);
        retrofit.RestAdapter.Builder builder65 = builder57.setLog(log63);
        retrofit.RestAdapter.Builder builder66 = builder52.setLog(log63);
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log68 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder69 = builder67.setLog(log68);
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder71 = builder67.setLog(log70);
        retrofit.RestAdapter.Builder builder72 = builder66.setLog(log70);
        retrofit.RestAdapter.Builder builder74 = builder66.setServer("hi!");
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log76 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder77 = builder75.setLog(log76);
        retrofit.RestAdapter.Builder builder78 = builder74.setLog(log76);
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log80 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder81 = builder79.setLog(log80);
        retrofit.RestAdapter.LogLevel logLevel82 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder83 = builder81.setLogLevel(logLevel82);
        retrofit.RestAdapter.Builder builder85 = builder83.setServer("hi!");
        retrofit.RestAdapter.Builder builder86 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log87 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder88 = builder86.setLog(log87);
        log87.log("");
        retrofit.RestAdapter.Builder builder91 = builder83.setLog(log87);
        log87.log("");
        log87.log("hi!");
        retrofit.RestAdapter.Builder builder96 = builder74.setLog(log87);
        retrofit.RestAdapter.Builder builder97 = builder49.setLog(log87);
        retrofit.ErrorHandler errorHandler98 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder99 = builder49.setErrorHandler(errorHandler98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(restAdapter7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(log80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(log87);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(builder96);
        org.junit.Assert.assertNotNull(builder97);
    }

    @Test
    public void test04359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04359");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder2.setLog(log17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLog(log20);
        log20.log("hi!");
        retrofit.RestAdapter.Builder builder24 = builder2.setLog(log20);
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLog(log33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder34.setLogLevel(logLevel35);
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = builder34.setLog(log37);
        retrofit.RestAdapter.Builder builder39 = builder31.setLog(log37);
        log37.log("hi!");
        log37.log("hi!");
        log37.log("hi!");
        retrofit.RestAdapter.Builder builder46 = builder26.setLog(log37);
        retrofit.RestAdapter.Builder builder48 = builder26.setServer("hi!");
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder53 = builder51.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder58 = builder56.setLogLevel(logLevel57);
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder60 = builder56.setLog(log59);
        retrofit.RestAdapter.Builder builder61 = builder53.setLog(log59);
        retrofit.RestAdapter.Builder builder63 = builder53.setServer("hi!");
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLog(log65);
        log65.log("");
        retrofit.RestAdapter.Builder builder69 = builder53.setLog(log65);
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder70.setLog(log71);
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder74 = builder72.setLogLevel(logLevel73);
        retrofit.RestAdapter.Log log75 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder76 = builder72.setLog(log75);
        retrofit.RestAdapter.Builder builder77 = builder69.setLog(log75);
        log75.log("");
        retrofit.RestAdapter.Builder builder80 = builder26.setLog(log75);
        java.lang.Class<?> wildcardClass81 = builder26.getClass();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(log75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test04360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04360");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.lang.String str7 = request6.getMethod();
        java.util.List<retrofit.client.Header> headerList8 = request6.getHeaders();
        java.lang.String str9 = request6.getUrl();
        java.lang.String str10 = request6.getUrl();
        java.lang.String str11 = request6.getUrl();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test04361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04361");
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList5, typedOutput9);
        java.lang.String str11 = request10.getUrl();
        java.util.List<retrofit.client.Header> headerList12 = request10.getHeaders();
        java.util.List<retrofit.client.Header> headerList13 = request10.getHeaders();
        java.lang.String str14 = request10.getMethod();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test04362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04362");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log26);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLog(log30);
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder35 = builder33.setServer("hi!");
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLog(log37);
        log37.log("");
        retrofit.RestAdapter.Builder builder41 = builder33.setLog(log37);
        log37.log("");
        log37.log("");
        retrofit.RestAdapter.Builder builder46 = builder24.setLog(log37);
        retrofit.RestAdapter.Builder builder48 = builder46.setServer("hi!");
        retrofit.RequestInterceptor requestInterceptor49 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder50 = builder48.setRequestInterceptor(requestInterceptor49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
    }

    @Test
    public void test04363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04363");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log26);
        retrofit.RestAdapter.Builder builder30 = builder28.setServer("hi!");
        retrofit.RestAdapter restAdapter31 = builder28.build();
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLog(log33);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder42.setLog(log45);
        retrofit.RestAdapter.Builder builder47 = builder39.setLog(log45);
        retrofit.RestAdapter.Builder builder48 = builder34.setLog(log45);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder49.setLog(log52);
        retrofit.RestAdapter.Builder builder54 = builder48.setLog(log52);
        retrofit.RestAdapter.Builder builder56 = builder48.setServer("hi!");
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLog(log58);
        retrofit.RestAdapter.Builder builder60 = builder56.setLog(log58);
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder63 = builder61.setLog(log62);
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder65 = builder63.setLogLevel(logLevel64);
        boolean boolean66 = logLevel64.log();
        retrofit.RestAdapter.Builder builder67 = builder60.setLogLevel(logLevel64);
        boolean boolean68 = logLevel64.log();
        retrofit.RestAdapter.Builder builder69 = builder28.setLogLevel(logLevel64);
        retrofit.converter.Converter converter70 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder71 = builder28.setConverter(converter70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(restAdapter31);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(builder69);
    }

    @Test
    public void test04364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04364");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log26);
        retrofit.RestAdapter.Builder builder30 = builder28.setServer("hi!");
        retrofit.RestAdapter restAdapter31 = builder28.build();
        retrofit.RestAdapter.Builder builder33 = builder28.setServer("hi!");
        retrofit.RestAdapter.Builder builder35 = builder28.setServer("hi!");
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLog(log37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder38.setLog(log41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLog(log47);
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder57 = builder53.setLog(log56);
        retrofit.RestAdapter.Builder builder58 = builder50.setLog(log56);
        retrofit.RestAdapter.Builder builder59 = builder45.setLog(log56);
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder61 = builder45.setLog(log60);
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder64 = builder62.setLog(log63);
        log63.log("");
        retrofit.RestAdapter.Builder builder67 = builder61.setLog(log63);
        retrofit.RestAdapter.Builder builder68 = builder42.setLog(log63);
        retrofit.RestAdapter.Builder builder69 = builder35.setLog(log63);
        log63.log("");
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(restAdapter31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder69);
    }

    @Test
    public void test04365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04365");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLog(log27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder33.setLog(log36);
        retrofit.RestAdapter.Builder builder38 = builder30.setLog(log36);
        retrofit.RestAdapter.Builder builder39 = builder25.setLog(log36);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder40.setLog(log43);
        retrofit.RestAdapter.Builder builder45 = builder39.setLog(log43);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLog(log47);
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder52 = builder48.setLog(log51);
        log51.log("hi!");
        log51.log("");
        retrofit.RestAdapter.Builder builder57 = builder45.setLog(log51);
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder60 = builder58.setLog(log59);
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder62 = builder60.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder64 = builder62.setServer("hi!");
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLog(log66);
        log66.log("");
        retrofit.RestAdapter.Builder builder70 = builder62.setLog(log66);
        retrofit.RestAdapter.Builder builder71 = builder45.setLog(log66);
        log66.log("");
        retrofit.RestAdapter.Builder builder74 = builder22.setLog(log66);
        retrofit.RequestInterceptor requestInterceptor75 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder76 = builder74.setRequestInterceptor(requestInterceptor75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder74);
    }

    @Test
    public void test04366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04366");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log14 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLog(log14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder15.setLog(log18);
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log18);
        retrofit.RestAdapter.Builder builder21 = builder5.setLog(log18);
        retrofit.RestAdapter.Builder builder22 = builder2.setLog(log18);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = builder27.setServer("hi!");
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.Builder builder33 = builder27.setLog(log30);
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder40 = builder38.setServer("hi!");
        retrofit.RestAdapter restAdapter41 = builder40.build();
        retrofit.RestAdapter restAdapter42 = builder40.build();
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLog(log47);
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder57 = builder53.setLog(log56);
        retrofit.RestAdapter.Builder builder58 = builder50.setLog(log56);
        retrofit.RestAdapter.Builder builder59 = builder45.setLog(log56);
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder64 = builder60.setLog(log63);
        retrofit.RestAdapter.Builder builder65 = builder59.setLog(log63);
        retrofit.RestAdapter.Builder builder67 = builder59.setServer("hi!");
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder68.setLog(log69);
        retrofit.RestAdapter.Builder builder71 = builder67.setLog(log69);
        retrofit.RestAdapter.Builder builder72 = builder40.setLog(log69);
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder75 = builder73.setLog(log74);
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder77 = builder75.setLogLevel(logLevel76);
        retrofit.RestAdapter.Log log78 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder79 = builder75.setLog(log78);
        log78.log("hi!");
        log78.log("");
        log78.log("hi!");
        retrofit.RestAdapter.Builder builder86 = builder40.setLog(log78);
        log78.log("hi!");
        log78.log("hi!");
        retrofit.RestAdapter.Builder builder91 = builder33.setLog(log78);
        retrofit.RestAdapter.Builder builder92 = builder2.setLog(log78);
        retrofit.client.Client.Provider provider93 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder94 = builder2.setClient(provider93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(restAdapter41);
        org.junit.Assert.assertNotNull(restAdapter42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(log78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(builder92);
    }

    @Test
    public void test04367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04367");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log26);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLog(log30);
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        boolean boolean34 = logLevel32.log();
        retrofit.RestAdapter.Builder builder35 = builder28.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder37 = builder28.setServer("hi!");
        retrofit.RestAdapter.Builder builder39 = builder37.setServer("hi!");
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder50.setLog(log53);
        retrofit.RestAdapter.Builder builder55 = builder47.setLog(log53);
        retrofit.RestAdapter.Builder builder56 = builder42.setLog(log53);
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder42.setLog(log57);
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder61 = builder59.setLog(log60);
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder63 = builder61.setLogLevel(logLevel62);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLog(log65);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder68 = builder66.setLogLevel(logLevel67);
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder66.setLog(log69);
        log69.log("");
        retrofit.RestAdapter.Builder builder73 = builder63.setLog(log69);
        log69.log("");
        retrofit.RestAdapter.Builder builder76 = builder58.setLog(log69);
        retrofit.RestAdapter.Builder builder77 = builder37.setLog(log69);
        retrofit.RestAdapter.Builder builder79 = builder37.setServer("hi!");
        retrofit.Server server80 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder81 = builder79.setServer(server80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder79);
    }

    @Test
    public void test04368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04368");
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList11, typedOutput15);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput17);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList11, typedOutput19);
        java.util.List<retrofit.client.Header> headerList21 = request20.getHeaders();
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "hi!", headerList21, typedOutput22);
        retrofit.mime.TypedOutput typedOutput24 = request23.getBody();
        java.lang.String str25 = request23.getUrl();
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(headerList21);
        org.junit.Assert.assertNull(typedOutput24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
    }

    @Test
    public void test04369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04369");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = builder9.setServer("hi!");
        retrofit.RestAdapter restAdapter12 = builder11.build();
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log14 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLog(log14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        restAdapter12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLog(log20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder21.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder25 = builder23.setServer("hi!");
        retrofit.RestAdapter restAdapter26 = builder25.build();
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        restAdapter26.setLogLevel(logLevel30);
        restAdapter12.setLogLevel(logLevel30);
        retrofit.RestAdapter.LogLevel logLevel34 = restAdapter12.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter12.getLogLevel();
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLog(log37);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLog(log45);
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder46.setLog(log49);
        retrofit.RestAdapter.Builder builder51 = builder43.setLog(log49);
        retrofit.RestAdapter.Builder builder52 = builder38.setLog(log49);
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLog(log54);
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder57 = builder53.setLog(log56);
        retrofit.RestAdapter.Builder builder58 = builder52.setLog(log56);
        retrofit.RestAdapter.Builder builder60 = builder52.setServer("hi!");
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder63 = builder61.setLog(log62);
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder65 = builder63.setLogLevel(logLevel64);
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder68 = builder66.setLog(log67);
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder70 = builder68.setLogLevel(logLevel69);
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder68.setLog(log71);
        retrofit.RestAdapter.Builder builder73 = builder65.setLog(log71);
        retrofit.RestAdapter.Builder builder75 = builder65.setServer("hi!");
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log77 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder78 = builder76.setLog(log77);
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder80 = builder78.setLogLevel(logLevel79);
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder82 = builder78.setLog(log81);
        retrofit.RestAdapter.Builder builder83 = builder65.setLog(log81);
        retrofit.RestAdapter.LogLevel logLevel84 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder85 = builder65.setLogLevel(logLevel84);
        retrofit.RestAdapter.Builder builder86 = builder52.setLogLevel(logLevel84);
        retrofit.RestAdapter restAdapter87 = builder52.build();
        retrofit.RestAdapter.LogLevel logLevel88 = restAdapter87.getLogLevel();
        restAdapter12.setLogLevel(logLevel88);
        retrofit.RestAdapter.LogLevel logLevel90 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter12.setLogLevel(logLevel90);
        retrofit.RestAdapter.LogLevel logLevel92 = restAdapter12.getLogLevel();
        boolean boolean93 = logLevel92.log();
        retrofit.RestAdapter.Builder builder94 = builder2.setLogLevel(logLevel92);
        retrofit.RequestInterceptor requestInterceptor95 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder96 = builder2.setRequestInterceptor(requestInterceptor95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(restAdapter12);
        org.junit.Assert.assertNotNull(log14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(restAdapter26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(log77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(restAdapter87);
        org.junit.Assert.assertTrue("'" + logLevel88 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel88.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel90 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel90.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(builder94);
    }

    @Test
    public void test04370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04370");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        log10.log("");
        retrofit.RestAdapter.Builder builder14 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder19.setServer("hi!");
        retrofit.RestAdapter restAdapter22 = builder21.build();
        retrofit.RestAdapter restAdapter23 = builder21.build();
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder24.setLogLevel(logLevel27);
        boolean boolean29 = logLevel27.log();
        restAdapter23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder31 = builder14.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder33 = builder14.setServer("hi!");
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder44.setLog(log47);
        retrofit.RestAdapter.Builder builder49 = builder41.setLog(log47);
        retrofit.RestAdapter.Builder builder50 = builder36.setLog(log47);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder51.setLog(log54);
        retrofit.RestAdapter.Builder builder56 = builder50.setLog(log54);
        retrofit.RestAdapter.Builder builder58 = builder50.setServer("hi!");
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder61 = builder59.setLog(log60);
        retrofit.RestAdapter.Builder builder62 = builder58.setLog(log60);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLog(log64);
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder67 = builder65.setLogLevel(logLevel66);
        boolean boolean68 = logLevel66.log();
        retrofit.RestAdapter.Builder builder69 = builder62.setLogLevel(logLevel66);
        retrofit.RestAdapter.Builder builder71 = builder62.setServer("hi!");
        retrofit.RestAdapter restAdapter72 = builder71.build();
        retrofit.RestAdapter.LogLevel logLevel73 = restAdapter72.getLogLevel();
        retrofit.RestAdapter.Builder builder74 = builder33.setLogLevel(logLevel73);
        retrofit.Server server75 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder76 = builder33.setServer(server75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNotNull(restAdapter23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(restAdapter72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
    }

    @Test
    public void test04371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04371");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder4.setLog(log20);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder4.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        log26.log("");
        log26.log("");
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log26);
        retrofit.RestAdapter.Builder builder34 = builder24.setServer("hi!");
        retrofit.RestAdapter restAdapter35 = builder24.build();
        retrofit.converter.Converter converter36 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder37 = builder24.setConverter(converter36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(restAdapter35);
    }

    @Test
    public void test04372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04372");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Log log3 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder4 = builder0.setLog(log3);
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder14.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = builder9.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder6.setLog(log20);
        retrofit.ErrorHandler errorHandler25 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder26 = builder24.setErrorHandler(errorHandler25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log3);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder24);
    }

    @Test
    public void test04373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04373");
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        java.lang.String str15 = request14.getMethod();
        java.util.List<retrofit.client.Header> headerList16 = request14.getHeaders();
        java.util.List<retrofit.client.Header> headerList17 = request14.getHeaders();
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("hi!", "hi!", headerList17, typedOutput18);
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("hi!", "", headerList17, typedOutput20);
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("hi!", "hi!", headerList17, typedOutput22);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "hi!", headerList17, typedOutput24);
        java.util.List<retrofit.client.Header> headerList26 = request25.getHeaders();
        java.lang.String str27 = request25.getMethod();
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(headerList16);
        org.junit.Assert.assertNotNull(headerList17);
        org.junit.Assert.assertNotNull(headerList26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
    }

    @Test
    public void test04374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04374");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = builder6.build();
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean9 = logLevel8.log();
        boolean boolean10 = logLevel8.log();
        retrofit.RestAdapter.Builder builder11 = builder6.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = builder11.setServer("hi!");
        retrofit.RestAdapter restAdapter16 = builder11.build();
        java.util.concurrent.Executor executor17 = null;
        java.util.concurrent.Executor executor18 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder19 = builder11.setExecutors(executor17, executor18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(restAdapter7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(restAdapter16);
    }

    @Test
    public void test04375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04375");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder0.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLog(log21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder27.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder17.setLog(log30);
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder44.setLog(log47);
        retrofit.RestAdapter.Builder builder49 = builder41.setLog(log47);
        retrofit.RestAdapter.Builder builder50 = builder34.setLog(log47);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder55 = builder51.setLogLevel(logLevel54);
        boolean boolean56 = logLevel54.log();
        retrofit.RestAdapter.Builder builder57 = builder34.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder58 = builder33.setLogLevel(logLevel54);
        boolean boolean59 = logLevel54.log();
        boolean boolean60 = logLevel54.log();
        boolean boolean61 = logLevel54.log();
        retrofit.RestAdapter.Builder builder62 = builder0.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLog(log64);
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder68 = builder66.setLog(log67);
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder70 = builder68.setLogLevel(logLevel69);
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log72 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder73 = builder71.setLog(log72);
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder75 = builder73.setLogLevel(logLevel74);
        retrofit.RestAdapter.Log log76 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder77 = builder73.setLog(log76);
        retrofit.RestAdapter.Builder builder78 = builder70.setLog(log76);
        retrofit.RestAdapter.Builder builder79 = builder65.setLog(log76);
        retrofit.RestAdapter.Log log80 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder81 = builder65.setLog(log80);
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log83 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder84 = builder82.setLog(log83);
        log83.log("hi!");
        retrofit.RestAdapter.Builder builder87 = builder65.setLog(log83);
        retrofit.RestAdapter.Log log88 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder89 = builder87.setLog(log88);
        retrofit.RestAdapter.Builder builder90 = builder62.setLog(log88);
        retrofit.RequestInterceptor requestInterceptor91 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder92 = builder62.setRequestInterceptor(requestInterceptor91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(log80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(log83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(log88);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(builder90);
    }

    @Test
    public void test04376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04376");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = builder6.build();
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean9 = logLevel8.log();
        boolean boolean10 = logLevel8.log();
        retrofit.RestAdapter.Builder builder11 = builder6.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("hi!");
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLog(log15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLog(log23);
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log27);
        retrofit.RestAdapter.Builder builder29 = builder21.setLog(log27);
        retrofit.RestAdapter.Builder builder30 = builder14.setLog(log27);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder41.setLog(log44);
        retrofit.RestAdapter.Builder builder46 = builder38.setLog(log44);
        retrofit.RestAdapter.Builder builder47 = builder31.setLog(log44);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder48.setLogLevel(logLevel51);
        boolean boolean53 = logLevel51.log();
        retrofit.RestAdapter.Builder builder54 = builder31.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder55 = builder30.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLog(log57);
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder60 = builder58.setLogLevel(logLevel59);
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder58.setLog(log61);
        log61.log("hi!");
        log61.log("hi!");
        retrofit.RestAdapter.Builder builder67 = builder30.setLog(log61);
        retrofit.RestAdapter.Builder builder68 = builder11.setLog(log61);
        retrofit.RestAdapter restAdapter69 = builder68.build();
        retrofit.ErrorHandler errorHandler70 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder71 = builder68.setErrorHandler(errorHandler70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(restAdapter7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(restAdapter69);
    }

    @Test
    public void test04377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04377");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Log log3 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder4 = builder0.setLog(log3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = builder9.setServer("hi!");
        retrofit.RestAdapter restAdapter12 = builder11.build();
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log14 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLog(log14);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder13.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder11.setLog(log16);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLog(log20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder21.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder25 = builder23.setServer("hi!");
        retrofit.RestAdapter restAdapter26 = builder25.build();
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder37.setLog(log40);
        retrofit.RestAdapter.Builder builder42 = builder34.setLog(log40);
        retrofit.RestAdapter.Builder builder43 = builder29.setLog(log40);
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLog(log45);
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLog(log48);
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder54.setLog(log57);
        retrofit.RestAdapter.Builder builder59 = builder51.setLog(log57);
        retrofit.RestAdapter.Builder builder60 = builder44.setLog(log57);
        retrofit.RestAdapter.Builder builder61 = builder29.setLog(log57);
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder64 = builder62.setLog(log63);
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder67 = builder61.setLogLevel(logLevel65);
        restAdapter26.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder69 = builder18.setLogLevel(logLevel65);
        boolean boolean70 = logLevel65.log();
        retrofit.RestAdapter.Builder builder71 = builder0.setLogLevel(logLevel65);
        retrofit.RequestInterceptor requestInterceptor72 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder73 = builder71.setRequestInterceptor(requestInterceptor72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log3);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(restAdapter12);
        org.junit.Assert.assertNotNull(log14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(restAdapter26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(builder71);
    }

    @Test
    public void test04378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04378");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLog(log21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder27.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder17.setLog(log30);
        retrofit.RestAdapter.Builder builder34 = builder2.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("hi!");
        retrofit.RestAdapter.Builder builder44 = builder42.setServer("hi!");
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        boolean boolean50 = logLevel48.log();
        retrofit.RestAdapter.Builder builder51 = builder44.setLogLevel(logLevel48);
        retrofit.RestAdapter restAdapter52 = builder51.build();
        retrofit.RestAdapter restAdapter53 = builder51.build();
        retrofit.converter.Converter converter54 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder55 = builder51.setConverter(converter54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(restAdapter52);
        org.junit.Assert.assertNotNull(restAdapter53);
    }

    @Test
    public void test04379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04379");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log14 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLog(log14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLog(log17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLog(log22);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder23.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder20.setLog(log26);
        retrofit.RestAdapter.Builder builder29 = builder13.setLog(log26);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder30.setLogLevel(logLevel33);
        boolean boolean35 = logLevel33.log();
        retrofit.RestAdapter.Builder builder36 = builder13.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder37 = builder4.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLog(log39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder40.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder45.setLog(log48);
        retrofit.RestAdapter.Builder builder50 = builder42.setLog(log48);
        retrofit.RestAdapter.Builder builder52 = builder42.setServer("hi!");
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLog(log54);
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder57 = builder55.setLogLevel(logLevel56);
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder55.setLog(log58);
        retrofit.RestAdapter.Builder builder60 = builder42.setLog(log58);
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder62 = builder42.setLogLevel(logLevel61);
        retrofit.RestAdapter restAdapter63 = builder62.build();
        retrofit.RestAdapter.LogLevel logLevel64 = restAdapter63.getLogLevel();
        retrofit.RestAdapter.Builder builder65 = builder37.setLogLevel(logLevel64);
        retrofit.Profiler profiler66 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder67 = builder65.setProfiler(profiler66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(restAdapter63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder65);
    }

    @Test
    public void test04380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04380");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Log log3 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder4 = builder0.setLog(log3);
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder11 = builder9.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLog(log13);
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder16 = builder14.setLogLevel(logLevel15);
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder14.setLog(log17);
        retrofit.RestAdapter.Builder builder19 = builder11.setLog(log17);
        retrofit.RestAdapter.Builder builder21 = builder11.setServer("hi!");
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLog(log23);
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log27);
        retrofit.RestAdapter.Builder builder29 = builder11.setLog(log27);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = builder34.setServer("hi!");
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        log38.log("");
        retrofit.RestAdapter.Builder builder42 = builder34.setLog(log38);
        log38.log("");
        retrofit.RestAdapter.Builder builder45 = builder11.setLog(log38);
        log38.log("");
        retrofit.RestAdapter.Builder builder48 = builder0.setLog(log38);
        retrofit.Profiler profiler49 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder50 = builder0.setProfiler(profiler49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log3);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder48);
    }

    @Test
    public void test04381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04381");
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        java.lang.String str15 = request14.getMethod();
        java.util.List<retrofit.client.Header> headerList16 = request14.getHeaders();
        java.util.List<retrofit.client.Header> headerList17 = request14.getHeaders();
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("hi!", "hi!", headerList17, typedOutput18);
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("", "", headerList17, typedOutput20);
        java.util.List<retrofit.client.Header> headerList22 = request21.getHeaders();
        java.util.List<retrofit.client.Header> headerList23 = request21.getHeaders();
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", headerList23, typedOutput24);
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList23, typedOutput26);
        retrofit.mime.TypedOutput typedOutput28 = request27.getBody();
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(headerList16);
        org.junit.Assert.assertNotNull(headerList17);
        org.junit.Assert.assertNotNull(headerList22);
        org.junit.Assert.assertNotNull(headerList23);
        org.junit.Assert.assertNull(typedOutput28);
    }

    @Test
    public void test04382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04382");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLog(log21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder27.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder17.setLog(log30);
        retrofit.RestAdapter.Builder builder34 = builder2.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLog(log42);
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLog(log45);
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder53 = builder51.setLogLevel(logLevel52);
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder51.setLog(log54);
        retrofit.RestAdapter.Builder builder56 = builder48.setLog(log54);
        retrofit.RestAdapter.Builder builder57 = builder43.setLog(log54);
        log54.log("");
        log54.log("");
        retrofit.RestAdapter.Builder builder62 = builder40.setLog(log54);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLog(log64);
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder67 = builder65.setLogLevel(logLevel66);
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder68.setLog(log69);
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder72 = builder70.setLogLevel(logLevel71);
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder74 = builder70.setLog(log73);
        retrofit.RestAdapter.Builder builder75 = builder67.setLog(log73);
        log73.log("hi!");
        log73.log("hi!");
        log73.log("hi!");
        retrofit.RestAdapter.Builder builder82 = builder62.setLog(log73);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter83 = builder62.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder82);
    }

    @Test
    public void test04383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04383");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLog(log23);
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log27);
        retrofit.RestAdapter.Builder builder29 = builder21.setLog(log27);
        retrofit.RestAdapter.Builder builder31 = builder21.setServer("hi!");
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLog(log33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder34.setLogLevel(logLevel35);
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = builder34.setLog(log37);
        retrofit.RestAdapter.Builder builder39 = builder21.setLog(log37);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.Builder builder46 = builder44.setServer("hi!");
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLog(log48);
        log48.log("");
        retrofit.RestAdapter.Builder builder52 = builder44.setLog(log48);
        log48.log("");
        retrofit.RestAdapter.Builder builder55 = builder21.setLog(log48);
        log48.log("");
        retrofit.RestAdapter.Builder builder58 = builder16.setLog(log48);
        retrofit.client.Client.Provider provider59 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder60 = builder58.setClient(provider59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder58);
    }

    @Test
    public void test04384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04384");
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        java.lang.String str11 = request10.getMethod();
        java.util.List<retrofit.client.Header> headerList12 = request10.getHeaders();
        java.util.List<retrofit.client.Header> headerList13 = request10.getHeaders();
        java.util.List<retrofit.client.Header> headerList14 = request10.getHeaders();
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("hi!", "hi!", headerList14, typedOutput15);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("hi!", "", headerList14, typedOutput17);
        java.util.List<retrofit.client.Header> headerList19 = request18.getHeaders();
        retrofit.mime.TypedOutput typedOutput20 = request18.getBody();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertNull(typedOutput20);
    }

    @Test
    public void test04385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04385");
        retrofit.client.Header[] headerArray14 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList15 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList15, headerArray14);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList15, typedOutput17);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList15, typedOutput19);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList15, typedOutput21);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList15, typedOutput23);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList15, typedOutput25);
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList15, typedOutput27);
        retrofit.mime.TypedOutput typedOutput29 = null;
        retrofit.client.Request request30 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList15, typedOutput29);
        java.lang.Class<?> wildcardClass31 = headerList15.getClass();
        org.junit.Assert.assertNotNull(headerArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test04386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04386");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = builder6.build();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLog(log12);
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLog(log17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder18.setLog(log21);
        retrofit.RestAdapter.Builder builder23 = builder15.setLog(log21);
        retrofit.RestAdapter.Builder builder24 = builder10.setLog(log21);
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder10.setLog(log25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        log28.log("");
        retrofit.RestAdapter.Builder builder32 = builder26.setLog(log28);
        log28.log("");
        retrofit.RestAdapter.Builder builder35 = builder6.setLog(log28);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLog(log37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder38.setLog(log41);
        log41.log("hi!");
        log41.log("hi!");
        retrofit.RestAdapter.Builder builder47 = builder35.setLog(log41);
        retrofit.converter.Converter converter48 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder49 = builder47.setConverter(converter48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(restAdapter7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder47);
    }

    @Test
    public void test04387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04387");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder4.setLog(log20);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder4.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        log26.log("");
        log26.log("");
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log26);
        retrofit.RestAdapter restAdapter33 = builder32.build();
        retrofit.Profiler profiler34 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder35 = builder32.setProfiler(profiler34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(restAdapter33);
    }

    @Test
    public void test04388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04388");
        retrofit.client.Header[] headerArray12 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList13 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList13, headerArray12);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList13, typedOutput15);
        java.lang.String str17 = request16.getMethod();
        retrofit.mime.TypedOutput typedOutput18 = request16.getBody();
        java.util.List<retrofit.client.Header> headerList19 = request16.getHeaders();
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("hi!", "hi!", headerList19, typedOutput20);
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "hi!", headerList19, typedOutput22);
        java.util.List<retrofit.client.Header> headerList24 = request23.getHeaders();
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "hi!", headerList24, typedOutput25);
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("hi!", "", headerList24, typedOutput27);
        retrofit.mime.TypedOutput typedOutput29 = null;
        retrofit.client.Request request30 = new retrofit.client.Request("hi!", "", headerList24, typedOutput29);
        org.junit.Assert.assertNotNull(headerArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(typedOutput18);
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertNotNull(headerList24);
    }

    @Test
    public void test04389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04389");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log26);
        retrofit.RestAdapter.Builder builder30 = builder28.setServer("hi!");
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder41.setLog(log44);
        retrofit.RestAdapter.Builder builder46 = builder38.setLog(log44);
        retrofit.RestAdapter.Builder builder47 = builder33.setLog(log44);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder52 = builder48.setLog(log51);
        retrofit.RestAdapter.Builder builder53 = builder47.setLog(log51);
        retrofit.RestAdapter.Builder builder55 = builder47.setServer("hi!");
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLog(log57);
        retrofit.RestAdapter.Builder builder59 = builder55.setLog(log57);
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        boolean boolean65 = logLevel63.log();
        retrofit.RestAdapter.Builder builder66 = builder59.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder67 = builder30.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder68.setLog(log69);
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log72 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder73 = builder71.setLog(log72);
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder75 = builder73.setLogLevel(logLevel74);
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log77 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder78 = builder76.setLog(log77);
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder80 = builder78.setLogLevel(logLevel79);
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder82 = builder78.setLog(log81);
        retrofit.RestAdapter.Builder builder83 = builder75.setLog(log81);
        retrofit.RestAdapter.Builder builder84 = builder70.setLog(log81);
        log81.log("");
        log81.log("");
        retrofit.RestAdapter.Builder builder89 = builder30.setLog(log81);
        retrofit.Profiler profiler90 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder91 = builder89.setProfiler(profiler90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(log77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder89);
    }

    @Test
    public void test04390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04390");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLog(log21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder27.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder17.setLog(log30);
        retrofit.RestAdapter.Builder builder34 = builder2.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("hi!");
        retrofit.RestAdapter.Builder builder44 = builder40.setServer("hi!");
        retrofit.RestAdapter restAdapter45 = builder40.build();
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLog(log47);
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder52 = builder50.setServer("hi!");
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLog(log54);
        log54.log("");
        retrofit.RestAdapter.Builder builder58 = builder50.setLog(log54);
        log54.log("");
        retrofit.RestAdapter.Builder builder61 = builder40.setLog(log54);
        retrofit.RequestInterceptor requestInterceptor62 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder63 = builder40.setRequestInterceptor(requestInterceptor62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(restAdapter45);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder61);
    }

    @Test
    public void test04391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04391");
        retrofit.client.Header[] headerArray14 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList15 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList15, headerArray14);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList15, typedOutput17);
        java.lang.String str19 = request18.getMethod();
        java.util.List<retrofit.client.Header> headerList20 = request18.getHeaders();
        java.util.List<retrofit.client.Header> headerList21 = request18.getHeaders();
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("hi!", "hi!", headerList21, typedOutput22);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList21, typedOutput24);
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "hi!", headerList21, typedOutput26);
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList21, typedOutput28);
        retrofit.mime.TypedOutput typedOutput30 = null;
        retrofit.client.Request request31 = new retrofit.client.Request("", "", headerList21, typedOutput30);
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("hi!", "hi!", headerList21, typedOutput32);
        java.lang.String str34 = request33.getMethod();
        java.lang.String str35 = request33.getMethod();
        retrofit.mime.TypedOutput typedOutput36 = request33.getBody();
        org.junit.Assert.assertNotNull(headerArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(headerList20);
        org.junit.Assert.assertNotNull(headerList21);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNull(typedOutput36);
    }

    @Test
    public void test04392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04392");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder4.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = builder27.setServer("hi!");
        retrofit.RestAdapter restAdapter30 = builder29.build();
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        restAdapter30.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder43 = builder41.setServer("hi!");
        retrofit.RestAdapter restAdapter44 = builder43.build();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        restAdapter44.setLogLevel(logLevel48);
        restAdapter30.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder58 = builder56.setServer("hi!");
        retrofit.RestAdapter restAdapter59 = builder58.build();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        restAdapter59.setLogLevel(logLevel63);
        restAdapter30.setLogLevel(logLevel63);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter30.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder69 = builder4.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder71 = builder69.setServer("hi!");
        retrofit.RestAdapter.Builder builder73 = builder69.setServer("hi!");
        retrofit.RestAdapter restAdapter74 = builder69.build();
        retrofit.RestAdapter restAdapter75 = builder69.build();
        retrofit.client.Client.Provider provider76 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder77 = builder69.setClient(provider76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(restAdapter30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(restAdapter44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(restAdapter74);
        org.junit.Assert.assertNotNull(restAdapter75);
    }

    @Test
    public void test04393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04393");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = builder6.build();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        restAdapter7.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLog(log15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder20 = builder18.setServer("hi!");
        retrofit.RestAdapter restAdapter21 = builder20.build();
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLog(log23);
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        restAdapter21.setLogLevel(logLevel25);
        restAdapter7.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLog(log30);
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder35 = builder33.setServer("hi!");
        retrofit.RestAdapter restAdapter36 = builder35.build();
        retrofit.RestAdapter restAdapter37 = builder35.build();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLog(log39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder38.setLogLevel(logLevel41);
        boolean boolean43 = logLevel41.log();
        restAdapter37.setLogLevel(logLevel41);
        restAdapter7.setLogLevel(logLevel41);
        retrofit.RestAdapter.LogLevel logLevel46 = null;
        restAdapter7.setLogLevel(logLevel46);
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter7.getLogLevel();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(restAdapter7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(restAdapter21);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertNotNull(restAdapter37);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(logLevel48);
    }

    @Test
    public void test04394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04394");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log26);
        retrofit.RestAdapter.Builder builder30 = builder28.setServer("hi!");
        retrofit.RestAdapter restAdapter31 = builder28.build();
        retrofit.RestAdapter.Builder builder33 = builder28.setServer("hi!");
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder40 = builder38.setServer("hi!");
        retrofit.RestAdapter restAdapter41 = builder40.build();
        retrofit.RestAdapter restAdapter42 = builder40.build();
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLog(log47);
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder57 = builder53.setLog(log56);
        retrofit.RestAdapter.Builder builder58 = builder50.setLog(log56);
        retrofit.RestAdapter.Builder builder59 = builder45.setLog(log56);
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder64 = builder60.setLog(log63);
        retrofit.RestAdapter.Builder builder65 = builder59.setLog(log63);
        retrofit.RestAdapter.Builder builder67 = builder59.setServer("hi!");
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder68.setLog(log69);
        retrofit.RestAdapter.Builder builder71 = builder67.setLog(log69);
        retrofit.RestAdapter.Builder builder72 = builder40.setLog(log69);
        log69.log("hi!");
        log69.log("");
        retrofit.RestAdapter.Builder builder77 = builder28.setLog(log69);
        retrofit.RestAdapter.Builder builder79 = builder28.setServer("hi!");
        retrofit.RestAdapter restAdapter80 = builder28.build();
        retrofit.Server server81 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder82 = builder28.setServer(server81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(restAdapter31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(restAdapter41);
        org.junit.Assert.assertNotNull(restAdapter42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(restAdapter80);
    }

    @Test
    public void test04395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04395");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        log16.log("");
        retrofit.RestAdapter.Builder builder20 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("hi!");
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = builder27.setServer("hi!");
        retrofit.RestAdapter restAdapter30 = builder29.build();
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        restAdapter30.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder43 = builder41.setServer("hi!");
        retrofit.RestAdapter restAdapter44 = builder43.build();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        restAdapter44.setLogLevel(logLevel48);
        restAdapter30.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder58 = builder56.setServer("hi!");
        retrofit.RestAdapter restAdapter59 = builder58.build();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        restAdapter59.setLogLevel(logLevel63);
        restAdapter30.setLogLevel(logLevel63);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter30.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder69 = builder22.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder70.setLog(log71);
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder74 = builder72.setLogLevel(logLevel73);
        retrofit.RestAdapter.Builder builder76 = builder74.setServer("hi!");
        retrofit.RestAdapter restAdapter77 = builder76.build();
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log79 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder80 = builder78.setLog(log79);
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder82 = builder78.setLog(log81);
        retrofit.RestAdapter.Builder builder83 = builder76.setLog(log81);
        retrofit.RestAdapter.Builder builder84 = builder69.setLog(log81);
        retrofit.RestAdapter restAdapter85 = builder69.build();
        retrofit.RestAdapter.Builder builder87 = builder69.setServer("hi!");
        retrofit.RestAdapter.Builder builder89 = builder69.setServer("hi!");
        retrofit.RestAdapter restAdapter90 = builder89.build();
        retrofit.client.Client client91 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder92 = builder89.setClient(client91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(restAdapter30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(restAdapter44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(restAdapter77);
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(restAdapter85);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(restAdapter90);
    }

    @Test
    public void test04396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04396");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        log10.log("");
        retrofit.RestAdapter.Builder builder14 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder19.setServer("hi!");
        retrofit.RestAdapter restAdapter22 = builder21.build();
        retrofit.RestAdapter restAdapter23 = builder21.build();
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder24.setLogLevel(logLevel27);
        boolean boolean29 = logLevel27.log();
        restAdapter23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder31 = builder14.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder33 = builder14.setServer("hi!");
        retrofit.RestAdapter.Builder builder35 = builder33.setServer("hi!");
        retrofit.RestAdapter.Builder builder37 = builder35.setServer("hi!");
        retrofit.client.Client.Provider provider38 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder39 = builder37.setClient(provider38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNotNull(restAdapter23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
    }

    @Test
    public void test04397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04397");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        log16.log("");
        retrofit.RestAdapter.Builder builder20 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLog(log22);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder23.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder20.setLog(log26);
        retrofit.Profiler profiler29 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder30 = builder20.setProfiler(profiler29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
    }

    @Test
    public void test04398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04398");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log26);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLog(log30);
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder35 = builder33.setServer("hi!");
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLog(log37);
        log37.log("");
        retrofit.RestAdapter.Builder builder41 = builder33.setLog(log37);
        log37.log("");
        log37.log("");
        retrofit.RestAdapter.Builder builder46 = builder24.setLog(log37);
        java.util.concurrent.Executor executor47 = null;
        java.util.concurrent.Executor executor48 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder49 = builder24.setExecutors(executor47, executor48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder46);
    }

    @Test
    public void test04399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04399");
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        java.lang.String str9 = request8.getMethod();
        java.util.List<retrofit.client.Header> headerList10 = request8.getHeaders();
        java.util.List<retrofit.client.Header> headerList11 = request8.getHeaders();
        retrofit.mime.TypedOutput typedOutput12 = request8.getBody();
        java.lang.String str13 = request8.getUrl();
        java.lang.String str14 = request8.getUrl();
        java.util.List<retrofit.client.Header> headerList15 = request8.getHeaders();
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("", "", headerList15, typedOutput16);
        java.lang.Class<?> wildcardClass18 = request17.getClass();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test04400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04400");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log26);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLog(log30);
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder35 = builder33.setServer("hi!");
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLog(log37);
        log37.log("");
        retrofit.RestAdapter.Builder builder41 = builder33.setLog(log37);
        log37.log("");
        log37.log("");
        retrofit.RestAdapter.Builder builder46 = builder24.setLog(log37);
        retrofit.client.Client.Provider provider47 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder48 = builder24.setClient(provider47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder46);
    }

    @Test
    public void test04401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04401");
        retrofit.client.Header[] headerArray18 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList19 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList19, headerArray18);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList19, typedOutput21);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList19, typedOutput23);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList19, typedOutput25);
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList19, typedOutput27);
        retrofit.mime.TypedOutput typedOutput29 = null;
        retrofit.client.Request request30 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList19, typedOutput29);
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList19, typedOutput31);
        retrofit.mime.TypedOutput typedOutput33 = null;
        retrofit.client.Request request34 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList19, typedOutput33);
        retrofit.mime.TypedOutput typedOutput35 = null;
        retrofit.client.Request request36 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList19, typedOutput35);
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList19, typedOutput37);
        java.lang.Class<?> wildcardClass39 = request38.getClass();
        org.junit.Assert.assertNotNull(headerArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test04402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04402");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = builder6.build();
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean9 = logLevel8.log();
        boolean boolean10 = logLevel8.log();
        retrofit.RestAdapter.Builder builder11 = builder6.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLog(log21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder22.setLog(log25);
        retrofit.RestAdapter.Builder builder27 = builder19.setLog(log25);
        retrofit.RestAdapter.Builder builder28 = builder14.setLog(log25);
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder30 = builder14.setLog(log29);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        log32.log("");
        retrofit.RestAdapter.Builder builder36 = builder30.setLog(log32);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder44.setLog(log47);
        retrofit.RestAdapter.Builder builder49 = builder41.setLog(log47);
        retrofit.RestAdapter.Builder builder51 = builder41.setServer("hi!");
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder54.setLog(log57);
        retrofit.RestAdapter.Builder builder59 = builder41.setLog(log57);
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder66 = builder64.setServer("hi!");
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log68 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder69 = builder67.setLog(log68);
        log68.log("");
        retrofit.RestAdapter.Builder builder72 = builder64.setLog(log68);
        log68.log("");
        retrofit.RestAdapter.Builder builder75 = builder41.setLog(log68);
        retrofit.RestAdapter.Builder builder76 = builder36.setLog(log68);
        log68.log("hi!");
        retrofit.RestAdapter.Builder builder79 = builder11.setLog(log68);
        retrofit.Profiler profiler80 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder81 = builder79.setProfiler(profiler80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(restAdapter7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder79);
    }

    @Test
    public void test04403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04403");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log14 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLog(log14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder15.setLog(log18);
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log18);
        retrofit.RestAdapter.Builder builder21 = builder5.setLog(log18);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLog(log23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder32.setLog(log35);
        retrofit.RestAdapter.Builder builder37 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder38 = builder22.setLog(log35);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder39.setLogLevel(logLevel42);
        boolean boolean44 = logLevel42.log();
        retrofit.RestAdapter.Builder builder45 = builder22.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder46 = builder21.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLog(log48);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLog(log51);
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder54 = builder52.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder57 = builder55.setLog(log56);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder59 = builder57.setLogLevel(logLevel58);
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder61 = builder57.setLog(log60);
        retrofit.RestAdapter.Builder builder62 = builder54.setLog(log60);
        retrofit.RestAdapter.Builder builder63 = builder49.setLog(log60);
        retrofit.RestAdapter.Builder builder64 = builder21.setLog(log60);
        log60.log("");
        retrofit.RestAdapter.Builder builder67 = builder4.setLog(log60);
        retrofit.ErrorHandler errorHandler68 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder69 = builder67.setErrorHandler(errorHandler68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder67);
    }

    @Test
    public void test04404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04404");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = builder6.build();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLog(log12);
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLog(log17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder18.setLog(log21);
        retrofit.RestAdapter.Builder builder23 = builder15.setLog(log21);
        retrofit.RestAdapter.Builder builder24 = builder10.setLog(log21);
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder10.setLog(log25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        log28.log("");
        retrofit.RestAdapter.Builder builder32 = builder26.setLog(log28);
        log28.log("");
        retrofit.RestAdapter.Builder builder35 = builder6.setLog(log28);
        java.util.concurrent.Executor executor36 = null;
        java.util.concurrent.Executor executor37 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder38 = builder6.setExecutors(executor36, executor37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(restAdapter7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder35);
    }

    @Test
    public void test04405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04405");
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput13);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput15);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList9, typedOutput17);
        retrofit.mime.TypedOutput typedOutput19 = request18.getBody();
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(typedOutput19);
    }

    @Test
    public void test04406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04406");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLog(log21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder27.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder17.setLog(log30);
        retrofit.RestAdapter.Builder builder34 = builder2.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("hi!");
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder50.setLog(log53);
        log53.log("");
        retrofit.RestAdapter.Builder builder57 = builder47.setLog(log53);
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder60 = builder58.setLog(log59);
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder62 = builder60.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder64 = builder62.setServer("hi!");
        retrofit.RestAdapter restAdapter65 = builder64.build();
        retrofit.RestAdapter restAdapter66 = builder64.build();
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log68 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder69 = builder67.setLog(log68);
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder71 = builder67.setLogLevel(logLevel70);
        boolean boolean72 = logLevel70.log();
        restAdapter66.setLogLevel(logLevel70);
        retrofit.RestAdapter.Builder builder74 = builder57.setLogLevel(logLevel70);
        retrofit.RestAdapter.Builder builder75 = builder42.setLogLevel(logLevel70);
        retrofit.RestAdapter.Builder builder77 = builder75.setServer("hi!");
        retrofit.client.Client.Provider provider78 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder79 = builder75.setClient(provider78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(restAdapter65);
        org.junit.Assert.assertNotNull(restAdapter66);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder77);
    }

    @Test
    public void test04407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04407");
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput13);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput15);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList9, typedOutput17);
        java.util.List<retrofit.client.Header> headerList19 = request18.getHeaders();
        retrofit.mime.TypedOutput typedOutput20 = request18.getBody();
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertNull(typedOutput20);
    }

    @Test
    public void test04408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04408");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        log8.log("");
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log8);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter15 = builder14.build();
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLog(log17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("hi!");
        retrofit.RestAdapter restAdapter23 = builder22.build();
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        restAdapter23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = builder34.setServer("hi!");
        retrofit.RestAdapter restAdapter37 = builder36.build();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLog(log39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder40.setLogLevel(logLevel41);
        restAdapter37.setLogLevel(logLevel41);
        restAdapter23.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder51 = builder49.setServer("hi!");
        retrofit.RestAdapter restAdapter52 = builder51.build();
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLog(log54);
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder57 = builder55.setLogLevel(logLevel56);
        restAdapter52.setLogLevel(logLevel56);
        restAdapter23.setLogLevel(logLevel56);
        retrofit.RestAdapter.Builder builder60 = builder14.setLogLevel(logLevel56);
        retrofit.RestAdapter restAdapter61 = builder60.build();
        retrofit.RequestInterceptor requestInterceptor62 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder63 = builder60.setRequestInterceptor(requestInterceptor62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(restAdapter15);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(restAdapter23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(restAdapter37);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(restAdapter52);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(restAdapter61);
    }

    @Test
    public void test04409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04409");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log26);
        retrofit.RestAdapter.Builder builder30 = builder28.setServer("hi!");
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder41.setLog(log44);
        retrofit.RestAdapter.Builder builder46 = builder38.setLog(log44);
        retrofit.RestAdapter.Builder builder47 = builder33.setLog(log44);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder52 = builder48.setLog(log51);
        retrofit.RestAdapter.Builder builder53 = builder47.setLog(log51);
        retrofit.RestAdapter.Builder builder55 = builder47.setServer("hi!");
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLog(log57);
        retrofit.RestAdapter.Builder builder59 = builder55.setLog(log57);
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        boolean boolean65 = logLevel63.log();
        retrofit.RestAdapter.Builder builder66 = builder59.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder67 = builder30.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder69 = builder67.setServer("hi!");
        retrofit.ErrorHandler errorHandler70 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder71 = builder67.setErrorHandler(errorHandler70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder69);
    }

    @Test
    public void test04410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04410");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder4.setLog(log20);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder4.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder26 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLog(log33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder34.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder39.setLog(log42);
        retrofit.RestAdapter.Builder builder44 = builder36.setLog(log42);
        retrofit.RestAdapter.Builder builder45 = builder31.setLog(log42);
        log42.log("hi!");
        retrofit.RestAdapter.Builder builder48 = builder4.setLog(log42);
        retrofit.RestAdapter restAdapter49 = builder4.build();
        retrofit.Server server50 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder51 = builder4.setServer(server50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(restAdapter49);
    }

    @Test
    public void test04411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04411");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Log log3 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder4 = builder0.setLog(log3);
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder14.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = builder7.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLog(log33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder34.setLogLevel(logLevel35);
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = builder34.setLog(log37);
        retrofit.RestAdapter.Builder builder39 = builder31.setLog(log37);
        retrofit.RestAdapter.Builder builder40 = builder24.setLog(log37);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLog(log42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder45 = builder41.setLogLevel(logLevel44);
        boolean boolean46 = logLevel44.log();
        retrofit.RestAdapter.Builder builder47 = builder24.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder48 = builder23.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLog(log58);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder61 = builder59.setLogLevel(logLevel60);
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder63 = builder59.setLog(log62);
        retrofit.RestAdapter.Builder builder64 = builder56.setLog(log62);
        retrofit.RestAdapter.Builder builder65 = builder51.setLog(log62);
        retrofit.RestAdapter.Builder builder66 = builder23.setLog(log62);
        log62.log("hi!");
        retrofit.RestAdapter.Builder builder69 = builder0.setLog(log62);
        retrofit.Profiler profiler70 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder71 = builder0.setProfiler(profiler70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log3);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder69);
    }

    @Test
    public void test04412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04412");
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        java.lang.String str11 = request10.getMethod();
        java.util.List<retrofit.client.Header> headerList12 = request10.getHeaders();
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("", "hi!", headerList12, typedOutput13);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "", headerList12, typedOutput15);
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
    }

    @Test
    public void test04413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04413");
        retrofit.client.Header[] headerArray12 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList13 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList13, headerArray12);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList13, typedOutput15);
        java.lang.String str17 = request16.getMethod();
        java.util.List<retrofit.client.Header> headerList18 = request16.getHeaders();
        java.util.List<retrofit.client.Header> headerList19 = request16.getHeaders();
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("", "hi!", headerList19, typedOutput20);
        java.lang.String str22 = request21.getUrl();
        java.lang.String str23 = request21.getMethod();
        java.util.List<retrofit.client.Header> headerList24 = request21.getHeaders();
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "hi!", headerList24, typedOutput25);
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("hi!", "hi!", headerList24, typedOutput27);
        retrofit.mime.TypedOutput typedOutput29 = null;
        retrofit.client.Request request30 = new retrofit.client.Request("hi!", "", headerList24, typedOutput29);
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("hi!", "", headerList24, typedOutput31);
        org.junit.Assert.assertNotNull(headerArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(headerList18);
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(headerList24);
    }

    @Test
    public void test04414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04414");
        retrofit.client.Header[] headerArray16 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList17 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList17, headerArray16);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList17, typedOutput19);
        java.lang.String str21 = request20.getMethod();
        java.util.List<retrofit.client.Header> headerList22 = request20.getHeaders();
        java.util.List<retrofit.client.Header> headerList23 = request20.getHeaders();
        java.util.List<retrofit.client.Header> headerList24 = request20.getHeaders();
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "hi!", headerList24, typedOutput25);
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("", "", headerList24, typedOutput27);
        retrofit.mime.TypedOutput typedOutput29 = null;
        retrofit.client.Request request30 = new retrofit.client.Request("", "", headerList24, typedOutput29);
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("hi!", "", headerList24, typedOutput31);
        retrofit.mime.TypedOutput typedOutput33 = null;
        retrofit.client.Request request34 = new retrofit.client.Request("hi!", "hi!", headerList24, typedOutput33);
        java.util.List<retrofit.client.Header> headerList35 = request34.getHeaders();
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "hi!", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList35, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        org.junit.Assert.assertNotNull(headerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(headerList22);
        org.junit.Assert.assertNotNull(headerList23);
        org.junit.Assert.assertNotNull(headerList24);
        org.junit.Assert.assertNotNull(headerList35);
        org.junit.Assert.assertNull(typedOutput40);
    }

    @Test
    public void test04415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04415");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder2.setLog(log17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLog(log20);
        log20.log("hi!");
        retrofit.RestAdapter.Builder builder24 = builder2.setLog(log20);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLog(log29);
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder32 = builder30.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLog(log34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder35.setLog(log38);
        retrofit.RestAdapter.Builder builder40 = builder32.setLog(log38);
        retrofit.RestAdapter.Builder builder41 = builder27.setLog(log38);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder42.setLog(log45);
        retrofit.RestAdapter.Builder builder47 = builder41.setLog(log45);
        retrofit.RestAdapter.Builder builder49 = builder41.setServer("hi!");
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLog(log51);
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder54 = builder52.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder56 = builder54.setServer("hi!");
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLog(log58);
        log58.log("");
        retrofit.RestAdapter.Builder builder62 = builder54.setLog(log58);
        retrofit.RestAdapter.Builder builder63 = builder49.setLog(log58);
        retrofit.RestAdapter.Builder builder64 = builder24.setLog(log58);
        retrofit.RestAdapter.Builder builder66 = builder24.setServer("hi!");
        retrofit.RestAdapter.Builder builder68 = builder66.setServer("hi!");
        retrofit.RestAdapter restAdapter69 = builder68.build();
        java.util.concurrent.Executor executor70 = null;
        java.util.concurrent.Executor executor71 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder72 = builder68.setExecutors(executor70, executor71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(restAdapter69);
    }

    @Test
    public void test04416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04416");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        log10.log("");
        retrofit.RestAdapter.Builder builder14 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder19.setServer("hi!");
        retrofit.RestAdapter restAdapter22 = builder21.build();
        retrofit.RestAdapter restAdapter23 = builder21.build();
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder24.setLogLevel(logLevel27);
        boolean boolean29 = logLevel27.log();
        restAdapter23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder31 = builder14.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLog(log33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder34.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder38 = builder36.setServer("hi!");
        retrofit.RestAdapter restAdapter39 = builder38.build();
        retrofit.RestAdapter restAdapter40 = builder38.build();
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLog(log42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder47 = builder45.setServer("hi!");
        retrofit.RestAdapter restAdapter48 = builder47.build();
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder53 = builder51.setLogLevel(logLevel52);
        restAdapter48.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder57 = builder55.setLog(log56);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder59 = builder57.setLogLevel(logLevel58);
        retrofit.RestAdapter.Builder builder61 = builder59.setServer("hi!");
        retrofit.RestAdapter restAdapter62 = builder61.build();
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLog(log64);
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder67 = builder65.setLogLevel(logLevel66);
        restAdapter62.setLogLevel(logLevel66);
        restAdapter48.setLogLevel(logLevel66);
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder70.setLog(log71);
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder74 = builder72.setLogLevel(logLevel73);
        retrofit.RestAdapter.Builder builder76 = builder74.setServer("hi!");
        retrofit.RestAdapter restAdapter77 = builder76.build();
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log79 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder80 = builder78.setLog(log79);
        retrofit.RestAdapter.LogLevel logLevel81 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder82 = builder80.setLogLevel(logLevel81);
        restAdapter77.setLogLevel(logLevel81);
        restAdapter48.setLogLevel(logLevel81);
        retrofit.RestAdapter.LogLevel logLevel85 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter48.setLogLevel(logLevel85);
        retrofit.RestAdapter.LogLevel logLevel87 = restAdapter48.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel88 = restAdapter48.getLogLevel();
        restAdapter40.setLogLevel(logLevel88);
        retrofit.RestAdapter.LogLevel logLevel90 = restAdapter40.getLogLevel();
        retrofit.RestAdapter.Builder builder91 = builder14.setLogLevel(logLevel90);
        retrofit.converter.Converter converter92 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder93 = builder14.setConverter(converter92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNotNull(restAdapter23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(restAdapter39);
        org.junit.Assert.assertNotNull(restAdapter40);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(restAdapter48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(restAdapter62);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(restAdapter77);
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel88 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel88.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel90 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel90.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder91);
    }

    @Test
    public void test04417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04417");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder0.setLog(log13);
        retrofit.RequestInterceptor requestInterceptor17 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder18 = builder16.setRequestInterceptor(requestInterceptor17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
    }

    @Test
    public void test04418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04418");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder4.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = builder27.setServer("hi!");
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        log31.log("");
        retrofit.RestAdapter.Builder builder35 = builder27.setLog(log31);
        log31.log("");
        retrofit.RestAdapter.Builder builder38 = builder4.setLog(log31);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLog(log45);
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder46.setLog(log49);
        retrofit.RestAdapter.Builder builder51 = builder43.setLog(log49);
        retrofit.RestAdapter.Builder builder53 = builder43.setServer("hi!");
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        log55.log("");
        retrofit.RestAdapter.Builder builder59 = builder43.setLog(log55);
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder66 = builder62.setLog(log65);
        retrofit.RestAdapter.Builder builder67 = builder59.setLog(log65);
        retrofit.RestAdapter.Builder builder68 = builder38.setLog(log65);
        retrofit.client.Client.Provider provider69 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder70 = builder38.setClient(provider69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder68);
    }

    @Test
    public void test04419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04419");
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        java.lang.String str13 = request12.getMethod();
        java.util.List<retrofit.client.Header> headerList14 = request12.getHeaders();
        java.util.List<retrofit.client.Header> headerList15 = request12.getHeaders();
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("", "hi!", headerList15, typedOutput16);
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("hi!", "", headerList15, typedOutput18);
        java.util.List<retrofit.client.Header> headerList20 = request19.getHeaders();
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("hi!", "hi!", headerList20, typedOutput21);
        java.lang.String str23 = request22.getMethod();
        java.util.List<retrofit.client.Header> headerList24 = request22.getHeaders();
        java.lang.String str25 = request22.getMethod();
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(headerList20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(headerList24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
    }

    @Test
    public void test04420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04420");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        log10.log("");
        retrofit.RestAdapter.Builder builder14 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder19.setServer("hi!");
        retrofit.RestAdapter restAdapter22 = builder21.build();
        retrofit.RestAdapter restAdapter23 = builder21.build();
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder24.setLogLevel(logLevel27);
        boolean boolean29 = logLevel27.log();
        restAdapter23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder31 = builder14.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder33 = builder14.setServer("hi!");
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder44.setLog(log47);
        retrofit.RestAdapter.Builder builder49 = builder41.setLog(log47);
        retrofit.RestAdapter.Builder builder50 = builder36.setLog(log47);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder51.setLog(log54);
        retrofit.RestAdapter.Builder builder56 = builder50.setLog(log54);
        retrofit.RestAdapter.Builder builder58 = builder50.setServer("hi!");
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder61 = builder59.setLog(log60);
        retrofit.RestAdapter.Builder builder62 = builder58.setLog(log60);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLog(log64);
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder67 = builder65.setLogLevel(logLevel66);
        boolean boolean68 = logLevel66.log();
        retrofit.RestAdapter.Builder builder69 = builder62.setLogLevel(logLevel66);
        retrofit.RestAdapter.Builder builder71 = builder62.setServer("hi!");
        retrofit.RestAdapter restAdapter72 = builder71.build();
        retrofit.RestAdapter.LogLevel logLevel73 = restAdapter72.getLogLevel();
        retrofit.RestAdapter.Builder builder74 = builder33.setLogLevel(logLevel73);
        java.lang.Class<?> wildcardClass75 = logLevel73.getClass();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNotNull(restAdapter23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(restAdapter72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test04421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04421");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        log8.log("");
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log8);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter15 = builder14.build();
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLog(log17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("hi!");
        retrofit.RestAdapter restAdapter23 = builder22.build();
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        restAdapter23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = builder34.setServer("hi!");
        retrofit.RestAdapter restAdapter37 = builder36.build();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLog(log39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder40.setLogLevel(logLevel41);
        restAdapter37.setLogLevel(logLevel41);
        restAdapter23.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder51 = builder49.setServer("hi!");
        retrofit.RestAdapter restAdapter52 = builder51.build();
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLog(log54);
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder57 = builder55.setLogLevel(logLevel56);
        restAdapter52.setLogLevel(logLevel56);
        restAdapter23.setLogLevel(logLevel56);
        retrofit.RestAdapter.Builder builder60 = builder14.setLogLevel(logLevel56);
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder63 = builder61.setLog(log62);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLog(log65);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder68 = builder66.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder71 = builder69.setLog(log70);
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder73 = builder71.setLogLevel(logLevel72);
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder75 = builder71.setLog(log74);
        retrofit.RestAdapter.Builder builder76 = builder68.setLog(log74);
        retrofit.RestAdapter.Builder builder77 = builder63.setLog(log74);
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log79 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder80 = builder78.setLog(log79);
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder82 = builder78.setLog(log81);
        retrofit.RestAdapter.Builder builder83 = builder77.setLog(log81);
        retrofit.RestAdapter.Builder builder85 = builder77.setServer("hi!");
        retrofit.RestAdapter.Builder builder86 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log87 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder88 = builder86.setLog(log87);
        retrofit.RestAdapter.Builder builder89 = builder85.setLog(log87);
        retrofit.RestAdapter restAdapter90 = builder85.build();
        retrofit.RestAdapter restAdapter91 = builder85.build();
        retrofit.RestAdapter restAdapter92 = builder85.build();
        retrofit.RestAdapter.LogLevel logLevel93 = restAdapter92.getLogLevel();
        boolean boolean94 = logLevel93.log();
        retrofit.RestAdapter.Builder builder95 = builder14.setLogLevel(logLevel93);
        retrofit.ErrorHandler errorHandler96 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder97 = builder95.setErrorHandler(errorHandler96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(restAdapter15);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(restAdapter23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(restAdapter37);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(restAdapter52);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(log87);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(restAdapter90);
        org.junit.Assert.assertNotNull(restAdapter91);
        org.junit.Assert.assertNotNull(restAdapter92);
        org.junit.Assert.assertTrue("'" + logLevel93 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel93.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(builder95);
    }

    @Test
    public void test04422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04422");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder16 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder23 = builder21.setServer("hi!");
        retrofit.RestAdapter restAdapter24 = builder23.build();
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        restAdapter24.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder37 = builder35.setServer("hi!");
        retrofit.RestAdapter restAdapter38 = builder37.build();
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        restAdapter38.setLogLevel(logLevel42);
        restAdapter24.setLogLevel(logLevel42);
        retrofit.RestAdapter.LogLevel logLevel46 = restAdapter24.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel47 = restAdapter24.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter24.getLogLevel();
        retrofit.RestAdapter.Builder builder49 = builder4.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLog(log51);
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder54 = builder52.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder57 = builder55.setLog(log56);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder59 = builder57.setLogLevel(logLevel58);
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder61 = builder57.setLog(log60);
        log60.log("");
        retrofit.RestAdapter.Builder builder64 = builder54.setLog(log60);
        retrofit.RestAdapter.Builder builder65 = builder4.setLog(log60);
        log60.log("hi!");
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(restAdapter24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(restAdapter38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder65);
    }

    @Test
    public void test04423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04423");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder4.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = builder27.setServer("hi!");
        retrofit.RestAdapter restAdapter30 = builder29.build();
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        restAdapter30.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder43 = builder41.setServer("hi!");
        retrofit.RestAdapter restAdapter44 = builder43.build();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        restAdapter44.setLogLevel(logLevel48);
        restAdapter30.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder58 = builder56.setServer("hi!");
        retrofit.RestAdapter restAdapter59 = builder58.build();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        restAdapter59.setLogLevel(logLevel63);
        restAdapter30.setLogLevel(logLevel63);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter30.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder69 = builder4.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder71 = builder69.setServer("hi!");
        retrofit.RestAdapter.Builder builder73 = builder69.setServer("hi!");
        retrofit.RestAdapter restAdapter74 = builder73.build();
        retrofit.RestAdapter restAdapter75 = builder73.build();
        retrofit.client.Client client76 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder77 = builder73.setClient(client76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(restAdapter30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(restAdapter44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(restAdapter74);
        org.junit.Assert.assertNotNull(restAdapter75);
    }

    @Test
    public void test04424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04424");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Log log5 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder6 = builder2.setLog(log5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder14.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = builder9.setLog(log20);
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder9.setLog(log24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLog(log27);
        log27.log("");
        retrofit.RestAdapter.Builder builder31 = builder25.setLog(log27);
        retrofit.RestAdapter.Builder builder32 = builder6.setLog(log27);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLog(log34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder39 = builder37.setServer("hi!");
        retrofit.RestAdapter restAdapter40 = builder39.build();
        retrofit.RestAdapter restAdapter41 = builder39.build();
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder46 = builder42.setLogLevel(logLevel45);
        boolean boolean47 = logLevel45.log();
        restAdapter41.setLogLevel(logLevel45);
        retrofit.RestAdapter.LogLevel logLevel49 = restAdapter41.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel50 = restAdapter41.getLogLevel();
        retrofit.RestAdapter.Builder builder51 = builder6.setLogLevel(logLevel50);
        retrofit.Server server52 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder53 = builder6.setServer(server52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log5);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(restAdapter40);
        org.junit.Assert.assertNotNull(restAdapter41);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder51);
    }

    @Test
    public void test04425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04425");
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "hi!", headerList6, typedOutput7);
        java.util.List<retrofit.client.Header> headerList9 = request8.getHeaders();
        java.util.List<retrofit.client.Header> headerList10 = request8.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", headerList10, typedOutput11);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "", headerList10, typedOutput13);
        retrofit.mime.TypedOutput typedOutput15 = request14.getBody();
        java.util.List<retrofit.client.Header> headerList16 = request14.getHeaders();
        retrofit.mime.TypedOutput typedOutput17 = request14.getBody();
        java.lang.String str18 = request14.getUrl();
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(typedOutput15);
        org.junit.Assert.assertNotNull(headerList16);
        org.junit.Assert.assertNull(typedOutput17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test04426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04426");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder32.setLog(log35);
        retrofit.RestAdapter.Builder builder37 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder39 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder42.setLog(log45);
        retrofit.RestAdapter.Builder builder47 = builder29.setLog(log45);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder29.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder50 = builder16.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder57 = builder55.setServer("hi!");
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder60 = builder58.setLog(log59);
        log59.log("");
        retrofit.RestAdapter.Builder builder63 = builder55.setLog(log59);
        log59.log("hi!");
        retrofit.RestAdapter.Builder builder66 = builder50.setLog(log59);
        retrofit.Profiler profiler67 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder68 = builder66.setProfiler(profiler67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder66);
    }

    @Test
    public void test04427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04427");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        log10.log("");
        retrofit.RestAdapter.Builder builder14 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder19.setServer("hi!");
        retrofit.RestAdapter restAdapter22 = builder21.build();
        retrofit.RestAdapter restAdapter23 = builder21.build();
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder24.setLogLevel(logLevel27);
        boolean boolean29 = logLevel27.log();
        restAdapter23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder31 = builder14.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder33 = builder14.setServer("hi!");
        retrofit.RestAdapter.Builder builder35 = builder33.setServer("hi!");
        retrofit.RestAdapter restAdapter36 = builder33.build();
        retrofit.RestAdapter.Builder builder38 = builder33.setServer("hi!");
        retrofit.RestAdapter.Builder builder40 = builder33.setServer("hi!");
        retrofit.Server server41 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder42 = builder40.setServer(server41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNotNull(restAdapter23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
    }

    @Test
    public void test04428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04428");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        log16.log("");
        retrofit.RestAdapter.Builder builder20 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("hi!");
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = builder27.setServer("hi!");
        retrofit.RestAdapter restAdapter30 = builder29.build();
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder31.setLog(log34);
        retrofit.RestAdapter.Builder builder36 = builder29.setLog(log34);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder43 = builder41.setServer("hi!");
        retrofit.RestAdapter restAdapter44 = builder43.build();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLog(log54);
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder57 = builder55.setLogLevel(logLevel56);
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder55.setLog(log58);
        retrofit.RestAdapter.Builder builder60 = builder52.setLog(log58);
        retrofit.RestAdapter.Builder builder61 = builder47.setLog(log58);
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder64 = builder62.setLog(log63);
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLog(log66);
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder69 = builder67.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder70.setLog(log71);
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder74 = builder72.setLogLevel(logLevel73);
        retrofit.RestAdapter.Log log75 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder76 = builder72.setLog(log75);
        retrofit.RestAdapter.Builder builder77 = builder69.setLog(log75);
        retrofit.RestAdapter.Builder builder78 = builder62.setLog(log75);
        retrofit.RestAdapter.Builder builder79 = builder47.setLog(log75);
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder82 = builder80.setLog(log81);
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder84 = builder82.setLogLevel(logLevel83);
        retrofit.RestAdapter.Builder builder85 = builder79.setLogLevel(logLevel83);
        restAdapter44.setLogLevel(logLevel83);
        retrofit.RestAdapter.Builder builder87 = builder36.setLogLevel(logLevel83);
        boolean boolean88 = logLevel83.log();
        retrofit.RestAdapter.Builder builder89 = builder22.setLogLevel(logLevel83);
        retrofit.RestAdapter.Builder builder91 = builder22.setServer("hi!");
        retrofit.Server server92 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder93 = builder91.setServer(server92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(restAdapter30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(restAdapter44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(log75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(builder91);
    }

    @Test
    public void test04429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04429");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = builder6.build();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        restAdapter7.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLog(log15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder20 = builder18.setServer("hi!");
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLog(log22);
        log22.log("");
        retrofit.RestAdapter.Builder builder26 = builder18.setLog(log22);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder37.setLog(log40);
        retrofit.RestAdapter.Builder builder42 = builder34.setLog(log40);
        retrofit.RestAdapter.Builder builder43 = builder29.setLog(log40);
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLog(log45);
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLog(log48);
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder54.setLog(log57);
        retrofit.RestAdapter.Builder builder59 = builder51.setLog(log57);
        retrofit.RestAdapter.Builder builder60 = builder44.setLog(log57);
        retrofit.RestAdapter.Builder builder61 = builder29.setLog(log57);
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder64 = builder62.setLog(log63);
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder67 = builder61.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder68 = builder18.setLogLevel(logLevel65);
        restAdapter7.setLogLevel(logLevel65);
        retrofit.RestAdapter.LogLevel logLevel70 = restAdapter7.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel71 = restAdapter7.getLogLevel();
        boolean boolean72 = logLevel71.log();
        boolean boolean73 = logLevel71.log();
        boolean boolean74 = logLevel71.log();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(restAdapter7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test04430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04430");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder4.setLog(log20);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder4.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        log26.log("");
        log26.log("");
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log26);
        retrofit.RestAdapter restAdapter33 = builder24.build();
        retrofit.RestAdapter restAdapter34 = builder24.build();
        retrofit.RestAdapter.Builder builder36 = builder24.setServer("hi!");
        retrofit.RestAdapter restAdapter37 = builder24.build();
        retrofit.RestAdapter restAdapter38 = builder24.build();
        java.lang.Class<?> wildcardClass39 = restAdapter38.getClass();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(restAdapter33);
        org.junit.Assert.assertNotNull(restAdapter34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(restAdapter37);
        org.junit.Assert.assertNotNull(restAdapter38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test04431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04431");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLog(log33);
        log33.log("");
        retrofit.RestAdapter.Builder builder37 = builder29.setLog(log33);
        retrofit.RestAdapter.Builder builder38 = builder24.setLog(log33);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLog(log48);
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder49.setLog(log52);
        retrofit.RestAdapter.Builder builder54 = builder46.setLog(log52);
        retrofit.RestAdapter.Builder builder55 = builder41.setLog(log52);
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLog(log57);
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder60 = builder56.setLog(log59);
        retrofit.RestAdapter.Builder builder61 = builder55.setLog(log59);
        retrofit.RestAdapter.Builder builder63 = builder55.setServer("hi!");
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLog(log65);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder68 = builder66.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder71 = builder69.setLog(log70);
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder73 = builder71.setLogLevel(logLevel72);
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder75 = builder71.setLog(log74);
        retrofit.RestAdapter.Builder builder76 = builder68.setLog(log74);
        retrofit.RestAdapter.Builder builder78 = builder68.setServer("hi!");
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log80 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder81 = builder79.setLog(log80);
        retrofit.RestAdapter.LogLevel logLevel82 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder83 = builder81.setLogLevel(logLevel82);
        retrofit.RestAdapter.Log log84 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder85 = builder81.setLog(log84);
        retrofit.RestAdapter.Builder builder86 = builder68.setLog(log84);
        retrofit.RestAdapter.LogLevel logLevel87 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder88 = builder68.setLogLevel(logLevel87);
        retrofit.RestAdapter.Builder builder89 = builder55.setLogLevel(logLevel87);
        retrofit.RestAdapter restAdapter90 = builder55.build();
        retrofit.RestAdapter.LogLevel logLevel91 = restAdapter90.getLogLevel();
        retrofit.RestAdapter.Builder builder92 = builder24.setLogLevel(logLevel91);
        retrofit.RestAdapter restAdapter93 = builder24.build();
        retrofit.Profiler profiler94 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder95 = builder24.setProfiler(profiler94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(log80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(log84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(restAdapter90);
        org.junit.Assert.assertTrue("'" + logLevel91 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel91.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertNotNull(restAdapter93);
    }

    @Test
    public void test04432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04432");
        retrofit.client.Header[] headerArray16 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList17 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList17, headerArray16);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList17, typedOutput19);
        java.lang.String str21 = request20.getMethod();
        java.util.List<retrofit.client.Header> headerList22 = request20.getHeaders();
        java.util.List<retrofit.client.Header> headerList23 = request20.getHeaders();
        java.util.List<retrofit.client.Header> headerList24 = request20.getHeaders();
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "hi!", headerList24, typedOutput25);
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("", "", headerList24, typedOutput27);
        retrofit.mime.TypedOutput typedOutput29 = null;
        retrofit.client.Request request30 = new retrofit.client.Request("hi!", "", headerList24, typedOutput29);
        java.util.List<retrofit.client.Header> headerList31 = request30.getHeaders();
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("hi!", "hi!", headerList31, typedOutput32);
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("hi!", "", headerList31, typedOutput34);
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "hi!", headerList31, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList31, typedOutput38);
        org.junit.Assert.assertNotNull(headerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(headerList22);
        org.junit.Assert.assertNotNull(headerList23);
        org.junit.Assert.assertNotNull(headerList24);
        org.junit.Assert.assertNotNull(headerList31);
    }

    @Test
    public void test04433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04433");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLog(log21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder27.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder17.setLog(log30);
        retrofit.RestAdapter.Builder builder34 = builder2.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("hi!");
        retrofit.RestAdapter.Builder builder44 = builder42.setServer("hi!");
        retrofit.RestAdapter restAdapter45 = builder42.build();
        retrofit.client.Client client46 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder47 = builder42.setClient(client46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(restAdapter45);
    }

    @Test
    public void test04434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04434");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = builder6.build();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder14 = builder12.setServer("hi!");
        retrofit.RestAdapter restAdapter15 = builder14.build();
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLog(log17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLog(log20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder21.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder30 = builder26.setLog(log29);
        retrofit.RestAdapter.Builder builder31 = builder23.setLog(log29);
        retrofit.RestAdapter.Builder builder32 = builder18.setLog(log29);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLog(log34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLog(log37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLog(log42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder43.setLog(log46);
        retrofit.RestAdapter.Builder builder48 = builder40.setLog(log46);
        retrofit.RestAdapter.Builder builder49 = builder33.setLog(log46);
        retrofit.RestAdapter.Builder builder50 = builder18.setLog(log46);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder56 = builder50.setLogLevel(logLevel54);
        restAdapter15.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder60 = builder58.setLog(log59);
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder63 = builder61.setLog(log62);
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder65 = builder63.setLogLevel(logLevel64);
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder68 = builder66.setLog(log67);
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder70 = builder68.setLogLevel(logLevel69);
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder68.setLog(log71);
        retrofit.RestAdapter.Builder builder73 = builder65.setLog(log71);
        retrofit.RestAdapter.Builder builder74 = builder58.setLog(log71);
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log76 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder77 = builder75.setLog(log76);
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder79 = builder75.setLogLevel(logLevel78);
        boolean boolean80 = logLevel78.log();
        retrofit.RestAdapter.Builder builder81 = builder58.setLogLevel(logLevel78);
        restAdapter15.setLogLevel(logLevel78);
        retrofit.RestAdapter.LogLevel logLevel83 = restAdapter15.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel84 = restAdapter15.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel85 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter15.setLogLevel(logLevel85);
        boolean boolean87 = logLevel85.log();
        boolean boolean88 = logLevel85.log();
        restAdapter7.setLogLevel(logLevel85);
        java.lang.Class<?> wildcardClass90 = logLevel85.getClass();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(restAdapter7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(restAdapter15);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test04435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04435");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder14.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = builder9.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLog(log27);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder33 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        log35.log("");
        log35.log("");
        retrofit.RestAdapter.Builder builder41 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder42 = builder4.setLog(log35);
        retrofit.RestAdapter restAdapter43 = builder42.build();
        retrofit.RestAdapter.Builder builder45 = builder42.setServer("hi!");
        retrofit.RestAdapter.Builder builder47 = builder45.setServer("hi!");
        java.util.concurrent.Executor executor48 = null;
        java.util.concurrent.Executor executor49 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder50 = builder45.setExecutors(executor48, executor49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(restAdapter43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
    }

    @Test
    public void test04436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04436");
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList5, typedOutput9);
        java.util.List<retrofit.client.Header> headerList11 = request10.getHeaders();
        java.lang.String str12 = request10.getMethod();
        java.lang.String str13 = request10.getMethod();
        retrofit.mime.TypedOutput typedOutput14 = request10.getBody();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass15 = typedOutput14.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(typedOutput14);
    }

    @Test
    public void test04437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04437");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder2.setLog(log17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLog(log20);
        log20.log("hi!");
        retrofit.RestAdapter.Builder builder24 = builder2.setLog(log20);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLog(log29);
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder32 = builder30.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder34 = builder32.setServer("hi!");
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        log36.log("");
        retrofit.RestAdapter.Builder builder40 = builder32.setLog(log36);
        log36.log("hi!");
        retrofit.RestAdapter.Builder builder43 = builder27.setLog(log36);
        log36.log("hi!");
        retrofit.RestAdapter.Builder builder46 = builder24.setLog(log36);
        retrofit.converter.Converter converter47 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder48 = builder46.setConverter(converter47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder46);
    }

    @Test
    public void test04438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04438");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        log16.log("");
        retrofit.RestAdapter.Builder builder20 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("hi!");
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = builder27.setServer("hi!");
        retrofit.RestAdapter restAdapter30 = builder29.build();
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder31.setLog(log34);
        retrofit.RestAdapter.Builder builder36 = builder29.setLog(log34);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder43 = builder41.setServer("hi!");
        retrofit.RestAdapter restAdapter44 = builder43.build();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLog(log54);
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder57 = builder55.setLogLevel(logLevel56);
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder55.setLog(log58);
        retrofit.RestAdapter.Builder builder60 = builder52.setLog(log58);
        retrofit.RestAdapter.Builder builder61 = builder47.setLog(log58);
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder64 = builder62.setLog(log63);
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLog(log66);
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder69 = builder67.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder70.setLog(log71);
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder74 = builder72.setLogLevel(logLevel73);
        retrofit.RestAdapter.Log log75 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder76 = builder72.setLog(log75);
        retrofit.RestAdapter.Builder builder77 = builder69.setLog(log75);
        retrofit.RestAdapter.Builder builder78 = builder62.setLog(log75);
        retrofit.RestAdapter.Builder builder79 = builder47.setLog(log75);
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder82 = builder80.setLog(log81);
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder84 = builder82.setLogLevel(logLevel83);
        retrofit.RestAdapter.Builder builder85 = builder79.setLogLevel(logLevel83);
        restAdapter44.setLogLevel(logLevel83);
        retrofit.RestAdapter.Builder builder87 = builder36.setLogLevel(logLevel83);
        boolean boolean88 = logLevel83.log();
        retrofit.RestAdapter.Builder builder89 = builder22.setLogLevel(logLevel83);
        retrofit.RestAdapter.Builder builder91 = builder22.setServer("hi!");
        retrofit.RestAdapter.Builder builder93 = builder22.setServer("hi!");
        retrofit.RestAdapter restAdapter94 = builder22.build();
        retrofit.RequestInterceptor requestInterceptor95 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder96 = builder22.setRequestInterceptor(requestInterceptor95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(restAdapter30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(restAdapter44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(log75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertNotNull(restAdapter94);
    }

    @Test
    public void test04439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04439");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        log10.log("");
        retrofit.RestAdapter.Builder builder14 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder19.setServer("hi!");
        retrofit.RestAdapter restAdapter22 = builder21.build();
        retrofit.RestAdapter restAdapter23 = builder21.build();
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder24.setLogLevel(logLevel27);
        boolean boolean29 = logLevel27.log();
        restAdapter23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder31 = builder14.setLogLevel(logLevel27);
        retrofit.client.Client client32 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder33 = builder31.setClient(client32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNotNull(restAdapter23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(builder31);
    }

    @Test
    public void test04440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04440");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder2.setLog(log17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLog(log20);
        log20.log("hi!");
        retrofit.RestAdapter.Builder builder24 = builder2.setLog(log20);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLog(log29);
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder32 = builder30.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLog(log34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder35.setLog(log38);
        retrofit.RestAdapter.Builder builder40 = builder32.setLog(log38);
        retrofit.RestAdapter.Builder builder41 = builder27.setLog(log38);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder42.setLog(log45);
        retrofit.RestAdapter.Builder builder47 = builder41.setLog(log45);
        retrofit.RestAdapter.Builder builder49 = builder41.setServer("hi!");
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLog(log51);
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder54 = builder52.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder56 = builder54.setServer("hi!");
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLog(log58);
        log58.log("");
        retrofit.RestAdapter.Builder builder62 = builder54.setLog(log58);
        retrofit.RestAdapter.Builder builder63 = builder49.setLog(log58);
        retrofit.RestAdapter.Builder builder64 = builder24.setLog(log58);
        retrofit.RestAdapter.Builder builder66 = builder24.setServer("hi!");
        retrofit.RestAdapter restAdapter67 = builder24.build();
        retrofit.client.Client client68 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder69 = builder24.setClient(client68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(restAdapter67);
    }

    @Test
    public void test04441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04441");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder2.setLog(log17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLog(log20);
        log20.log("");
        retrofit.RestAdapter.Builder builder24 = builder18.setLog(log20);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLog(log29);
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder32 = builder30.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLog(log34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder35.setLog(log38);
        retrofit.RestAdapter.Builder builder40 = builder32.setLog(log38);
        retrofit.RestAdapter.Builder builder41 = builder27.setLog(log38);
        log38.log("");
        log38.log("");
        log38.log("hi!");
        retrofit.RestAdapter.Builder builder48 = builder24.setLog(log38);
        retrofit.RestAdapter.Builder builder50 = builder48.setServer("hi!");
        retrofit.RestAdapter.Builder builder52 = builder48.setServer("hi!");
        retrofit.converter.Converter converter53 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder54 = builder52.setConverter(converter53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
    }

    @Test
    public void test04442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04442");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter restAdapter5 = builder2.build();
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log7 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder8 = builder6.setLog(log7);
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLog(log12);
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder13.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder10.setLog(log16);
        retrofit.RestAdapter.Builder builder20 = builder10.setServer("hi!");
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLog(log22);
        log22.log("");
        retrofit.RestAdapter.Builder builder26 = builder10.setLog(log22);
        log22.log("hi!");
        log22.log("");
        retrofit.RestAdapter.Builder builder31 = builder2.setLog(log22);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLog(log33);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder42.setLog(log45);
        retrofit.RestAdapter.Builder builder47 = builder39.setLog(log45);
        retrofit.RestAdapter.Builder builder48 = builder34.setLog(log45);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder49.setLog(log52);
        retrofit.RestAdapter.Builder builder54 = builder48.setLog(log52);
        retrofit.RestAdapter.Builder builder56 = builder48.setServer("hi!");
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLog(log58);
        retrofit.RestAdapter.Builder builder60 = builder56.setLog(log58);
        retrofit.RestAdapter restAdapter61 = builder56.build();
        retrofit.RestAdapter restAdapter62 = builder56.build();
        retrofit.RestAdapter restAdapter63 = builder56.build();
        retrofit.RestAdapter.LogLevel logLevel64 = restAdapter63.getLogLevel();
        boolean boolean65 = logLevel64.log();
        retrofit.RestAdapter.Builder builder66 = builder2.setLogLevel(logLevel64);
        retrofit.Server server67 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder68 = builder66.setServer(server67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(restAdapter5);
        org.junit.Assert.assertNotNull(log7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(restAdapter61);
        org.junit.Assert.assertNotNull(restAdapter62);
        org.junit.Assert.assertNotNull(restAdapter63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(builder66);
    }

    @Test
    public void test04443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04443");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLog(log33);
        log33.log("");
        retrofit.RestAdapter.Builder builder37 = builder29.setLog(log33);
        retrofit.RestAdapter.Builder builder38 = builder24.setLog(log33);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLog(log48);
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder49.setLog(log52);
        retrofit.RestAdapter.Builder builder54 = builder46.setLog(log52);
        retrofit.RestAdapter.Builder builder55 = builder41.setLog(log52);
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLog(log57);
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder60 = builder56.setLog(log59);
        retrofit.RestAdapter.Builder builder61 = builder55.setLog(log59);
        retrofit.RestAdapter.Builder builder63 = builder55.setServer("hi!");
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLog(log65);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder68 = builder66.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder71 = builder69.setLog(log70);
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder73 = builder71.setLogLevel(logLevel72);
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder75 = builder71.setLog(log74);
        retrofit.RestAdapter.Builder builder76 = builder68.setLog(log74);
        retrofit.RestAdapter.Builder builder78 = builder68.setServer("hi!");
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log80 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder81 = builder79.setLog(log80);
        retrofit.RestAdapter.LogLevel logLevel82 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder83 = builder81.setLogLevel(logLevel82);
        retrofit.RestAdapter.Log log84 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder85 = builder81.setLog(log84);
        retrofit.RestAdapter.Builder builder86 = builder68.setLog(log84);
        retrofit.RestAdapter.LogLevel logLevel87 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder88 = builder68.setLogLevel(logLevel87);
        retrofit.RestAdapter.Builder builder89 = builder55.setLogLevel(logLevel87);
        retrofit.RestAdapter restAdapter90 = builder55.build();
        retrofit.RestAdapter.LogLevel logLevel91 = restAdapter90.getLogLevel();
        retrofit.RestAdapter.Builder builder92 = builder24.setLogLevel(logLevel91);
        retrofit.RestAdapter restAdapter93 = builder24.build();
        retrofit.ErrorHandler errorHandler94 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder95 = builder24.setErrorHandler(errorHandler94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(log80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(log84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(restAdapter90);
        org.junit.Assert.assertTrue("'" + logLevel91 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel91.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertNotNull(restAdapter93);
    }

    @Test
    public void test04444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04444");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("hi!");
        retrofit.RestAdapter restAdapter32 = builder31.build();
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLog(log34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        restAdapter32.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder45 = builder43.setServer("hi!");
        retrofit.RestAdapter restAdapter46 = builder45.build();
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLog(log48);
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        restAdapter46.setLogLevel(logLevel50);
        restAdapter32.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder58 = builder56.setLogLevel(logLevel57);
        retrofit.RestAdapter.Builder builder60 = builder58.setServer("hi!");
        retrofit.RestAdapter restAdapter61 = builder60.build();
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder64 = builder62.setLog(log63);
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        restAdapter61.setLogLevel(logLevel65);
        restAdapter32.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder69 = builder16.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder71 = builder69.setServer("hi!");
        java.util.concurrent.Executor executor72 = null;
        java.util.concurrent.Executor executor73 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder74 = builder71.setExecutors(executor72, executor73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(restAdapter32);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(restAdapter46);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(restAdapter61);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder71);
    }

    @Test
    public void test04445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04445");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder22.setServer("hi!");
        retrofit.RestAdapter.Builder builder26 = builder24.setServer("hi!");
        retrofit.RestAdapter restAdapter27 = builder24.build();
        java.lang.Class<?> wildcardClass28 = restAdapter27.getClass();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(restAdapter27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test04446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04446");
        retrofit.client.Header[] headerArray16 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList17 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList17, headerArray16);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList17, typedOutput19);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList17, typedOutput21);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList17, typedOutput23);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList17, typedOutput25);
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList17, typedOutput27);
        retrofit.mime.TypedOutput typedOutput29 = null;
        retrofit.client.Request request30 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList17, typedOutput29);
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList17, typedOutput31);
        retrofit.mime.TypedOutput typedOutput33 = null;
        retrofit.client.Request request34 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList17, typedOutput33);
        java.lang.String str35 = request34.getMethod();
        java.lang.String str36 = request34.getUrl();
        retrofit.mime.TypedOutput typedOutput37 = request34.getBody();
        org.junit.Assert.assertNotNull(headerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNull(typedOutput37);
    }

    @Test
    public void test04447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04447");
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        java.lang.String str11 = request10.getMethod();
        java.util.List<retrofit.client.Header> headerList12 = request10.getHeaders();
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", headerList12, typedOutput13);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "hi!", headerList12, typedOutput15);
        java.lang.String str17 = request16.getUrl();
        retrofit.mime.TypedOutput typedOutput18 = request16.getBody();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass19 = typedOutput18.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNull(typedOutput18);
    }

    @Test
    public void test04448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04448");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        log8.log("");
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log8);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter15 = builder14.build();
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLog(log17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("hi!");
        retrofit.RestAdapter restAdapter23 = builder22.build();
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        restAdapter23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = builder34.setServer("hi!");
        retrofit.RestAdapter restAdapter37 = builder36.build();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLog(log39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder40.setLogLevel(logLevel41);
        restAdapter37.setLogLevel(logLevel41);
        restAdapter23.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder51 = builder49.setServer("hi!");
        retrofit.RestAdapter restAdapter52 = builder51.build();
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLog(log54);
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder57 = builder55.setLogLevel(logLevel56);
        restAdapter52.setLogLevel(logLevel56);
        restAdapter23.setLogLevel(logLevel56);
        retrofit.RestAdapter.Builder builder60 = builder14.setLogLevel(logLevel56);
        retrofit.RestAdapter restAdapter61 = builder60.build();
        retrofit.Server server62 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder63 = builder60.setServer(server62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(restAdapter15);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(restAdapter23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(restAdapter37);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(restAdapter52);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(restAdapter61);
    }

    @Test
    public void test04449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04449");
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        java.lang.String str15 = request14.getMethod();
        java.lang.String str16 = request14.getMethod();
        java.util.List<retrofit.client.Header> headerList17 = request14.getHeaders();
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("", "", headerList17, typedOutput18);
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("", "", headerList17, typedOutput20);
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "hi!", headerList17, typedOutput22);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "hi!", headerList17, typedOutput24);
        retrofit.mime.TypedOutput typedOutput26 = request25.getBody();
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(headerList17);
        org.junit.Assert.assertNull(typedOutput26);
    }

    @Test
    public void test04450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04450");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLog(log21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder27.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder17.setLog(log30);
        retrofit.RestAdapter.Builder builder34 = builder2.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLog(log42);
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLog(log45);
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder53 = builder51.setLogLevel(logLevel52);
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder51.setLog(log54);
        retrofit.RestAdapter.Builder builder56 = builder48.setLog(log54);
        retrofit.RestAdapter.Builder builder57 = builder43.setLog(log54);
        log54.log("");
        log54.log("");
        retrofit.RestAdapter.Builder builder62 = builder40.setLog(log54);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLog(log64);
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder67 = builder65.setLogLevel(logLevel66);
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder68.setLog(log69);
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder72 = builder70.setLogLevel(logLevel71);
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder74 = builder70.setLog(log73);
        retrofit.RestAdapter.Builder builder75 = builder67.setLog(log73);
        log73.log("hi!");
        log73.log("hi!");
        log73.log("hi!");
        retrofit.RestAdapter.Builder builder82 = builder62.setLog(log73);
        retrofit.RestAdapter.Log log83 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder84 = builder62.setLog(log83);
        retrofit.converter.Converter converter85 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder86 = builder84.setConverter(converter85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(log83);
        org.junit.Assert.assertNotNull(builder84);
    }

    @Test
    public void test04451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04451");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder12.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder19.setServer("hi!");
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLog(log23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder32.setLog(log35);
        retrofit.RestAdapter.Builder builder37 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder38 = builder24.setLog(log35);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder39.setLog(log42);
        retrofit.RestAdapter.Builder builder44 = builder38.setLog(log42);
        retrofit.RestAdapter.Builder builder46 = builder44.setServer("hi!");
        retrofit.RestAdapter.Builder builder48 = builder44.setServer("hi!");
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        log50.log("");
        log50.log("");
        retrofit.RestAdapter.Builder builder56 = builder44.setLog(log50);
        retrofit.RestAdapter.Builder builder57 = builder19.setLog(log50);
        retrofit.RestAdapter restAdapter58 = builder57.build();
        retrofit.RestAdapter restAdapter59 = builder57.build();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.Builder builder63 = builder57.setLog(log61);
        retrofit.RestAdapter.Builder builder64 = builder12.setLog(log61);
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLog(log66);
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder69 = builder67.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder70.setLog(log71);
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder74 = builder72.setLogLevel(logLevel73);
        retrofit.RestAdapter.Log log75 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder76 = builder72.setLog(log75);
        retrofit.RestAdapter.Builder builder77 = builder69.setLog(log75);
        retrofit.RestAdapter.Builder builder79 = builder69.setServer("hi!");
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder82 = builder80.setLog(log81);
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder84 = builder82.setLogLevel(logLevel83);
        retrofit.RestAdapter.Log log85 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder86 = builder82.setLog(log85);
        retrofit.RestAdapter.Builder builder87 = builder69.setLog(log85);
        retrofit.RestAdapter.Builder builder88 = builder64.setLog(log85);
        retrofit.client.Client.Provider provider89 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder90 = builder88.setClient(provider89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(restAdapter58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(log75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(log85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder88);
    }

    @Test
    public void test04452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04452");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        log16.log("");
        retrofit.RestAdapter.Builder builder20 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("hi!");
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLog(log27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder33.setLog(log36);
        retrofit.RestAdapter.Builder builder38 = builder30.setLog(log36);
        retrofit.RestAdapter.Builder builder39 = builder25.setLog(log36);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder40.setLog(log43);
        retrofit.RestAdapter.Builder builder45 = builder39.setLog(log43);
        retrofit.RestAdapter.Builder builder47 = builder39.setServer("hi!");
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder54 = builder52.setServer("hi!");
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder57 = builder55.setLog(log56);
        log56.log("");
        retrofit.RestAdapter.Builder builder60 = builder52.setLog(log56);
        retrofit.RestAdapter.Builder builder61 = builder47.setLog(log56);
        log56.log("hi!");
        retrofit.RestAdapter.Builder builder64 = builder22.setLog(log56);
        retrofit.RestAdapter.Builder builder66 = builder64.setServer("hi!");
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log68 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder69 = builder67.setLog(log68);
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder70.setLog(log71);
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder74 = builder72.setLogLevel(logLevel73);
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log76 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder77 = builder75.setLog(log76);
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder79 = builder77.setLogLevel(logLevel78);
        retrofit.RestAdapter.Log log80 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder81 = builder77.setLog(log80);
        retrofit.RestAdapter.Builder builder82 = builder74.setLog(log80);
        retrofit.RestAdapter.Builder builder83 = builder67.setLog(log80);
        retrofit.RestAdapter.Builder builder84 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log85 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder86 = builder84.setLog(log85);
        retrofit.RestAdapter.LogLevel logLevel87 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder88 = builder84.setLogLevel(logLevel87);
        boolean boolean89 = logLevel87.log();
        retrofit.RestAdapter.Builder builder90 = builder67.setLogLevel(logLevel87);
        retrofit.RestAdapter.Builder builder91 = builder66.setLogLevel(logLevel87);
        retrofit.Server server92 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder93 = builder66.setServer(server92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(log80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(log85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(builder91);
    }

    @Test
    public void test04453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04453");
        retrofit.client.Header[] headerArray18 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList19 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList19, headerArray18);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList19, typedOutput21);
        java.lang.String str23 = request22.getMethod();
        java.util.List<retrofit.client.Header> headerList24 = request22.getHeaders();
        java.util.List<retrofit.client.Header> headerList25 = request22.getHeaders();
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "hi!", headerList25, typedOutput26);
        java.util.List<retrofit.client.Header> headerList28 = request27.getHeaders();
        retrofit.mime.TypedOutput typedOutput29 = null;
        retrofit.client.Request request30 = new retrofit.client.Request("", "", headerList28, typedOutput29);
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("", "", headerList28, typedOutput31);
        retrofit.mime.TypedOutput typedOutput33 = null;
        retrofit.client.Request request34 = new retrofit.client.Request("hi!", "", headerList28, typedOutput33);
        retrofit.mime.TypedOutput typedOutput35 = null;
        retrofit.client.Request request36 = new retrofit.client.Request("hi!", "hi!", headerList28, typedOutput35);
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("", "", headerList28, typedOutput37);
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("hi!", "hi!", headerList28, typedOutput39);
        retrofit.mime.TypedOutput typedOutput41 = null;
        retrofit.client.Request request42 = new retrofit.client.Request("hi!", "hi!", headerList28, typedOutput41);
        org.junit.Assert.assertNotNull(headerArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(headerList24);
        org.junit.Assert.assertNotNull(headerList25);
        org.junit.Assert.assertNotNull(headerList28);
    }

    @Test
    public void test04454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04454");
        retrofit.client.Header[] headerArray16 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList17 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList17, headerArray16);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList17, typedOutput19);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList17, typedOutput21);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList17, typedOutput23);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList17, typedOutput25);
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList17, typedOutput27);
        retrofit.mime.TypedOutput typedOutput29 = null;
        retrofit.client.Request request30 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList17, typedOutput29);
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList17, typedOutput31);
        retrofit.mime.TypedOutput typedOutput33 = null;
        retrofit.client.Request request34 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList17, typedOutput33);
        java.lang.String str35 = request34.getUrl();
        org.junit.Assert.assertNotNull(headerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
    }

    @Test
    public void test04455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04455");
        retrofit.client.Header[] headerArray12 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList13 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList13, headerArray12);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList13, typedOutput15);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList13, typedOutput17);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList13, typedOutput19);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList13, typedOutput21);
        java.lang.String str23 = request22.getUrl();
        java.util.List<retrofit.client.Header> headerList24 = request22.getHeaders();
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("hi!", "hi!", headerList24, typedOutput27);
        java.lang.String str29 = request28.getMethod();
        java.lang.String str30 = request28.getUrl();
        org.junit.Assert.assertNotNull(headerArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(headerList24);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
    }

    @Test
    public void test04456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04456");
        retrofit.client.Header[] headerArray14 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList15 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList15, headerArray14);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList15, typedOutput17);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList15, typedOutput19);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList15, typedOutput21);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList15, typedOutput23);
        java.util.List<retrofit.client.Header> headerList25 = request24.getHeaders();
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("hi!", "hi!", headerList25, typedOutput28);
        retrofit.mime.TypedOutput typedOutput30 = null;
        retrofit.client.Request request31 = new retrofit.client.Request("hi!", "hi!", headerList25, typedOutput30);
        java.lang.String str32 = request31.getMethod();
        retrofit.mime.TypedOutput typedOutput33 = request31.getBody();
        org.junit.Assert.assertNotNull(headerArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(headerList25);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNull(typedOutput33);
    }

    @Test
    public void test04457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04457");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = builder6.build();
        retrofit.RestAdapter restAdapter8 = builder6.build();
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder9.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLog(log13);
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder16 = builder14.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = builder19.setLog(log22);
        retrofit.RestAdapter.Builder builder24 = builder16.setLog(log22);
        retrofit.RestAdapter.Builder builder25 = builder11.setLog(log22);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLog(log27);
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder30 = builder26.setLog(log29);
        retrofit.RestAdapter.Builder builder31 = builder25.setLog(log29);
        retrofit.RestAdapter.Builder builder33 = builder25.setServer("hi!");
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        retrofit.RestAdapter.Builder builder37 = builder33.setLog(log35);
        retrofit.RestAdapter.Builder builder38 = builder6.setLog(log35);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder45 = builder43.setServer("hi!");
        retrofit.RestAdapter restAdapter46 = builder45.build();
        retrofit.RestAdapter restAdapter47 = builder45.build();
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLog(log57);
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder60 = builder58.setLogLevel(logLevel59);
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder58.setLog(log61);
        retrofit.RestAdapter.Builder builder63 = builder55.setLog(log61);
        retrofit.RestAdapter.Builder builder64 = builder50.setLog(log61);
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLog(log66);
        retrofit.RestAdapter.Log log68 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder69 = builder65.setLog(log68);
        retrofit.RestAdapter.Builder builder70 = builder64.setLog(log68);
        retrofit.RestAdapter.Builder builder72 = builder64.setServer("hi!");
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder75 = builder73.setLog(log74);
        retrofit.RestAdapter.Builder builder76 = builder72.setLog(log74);
        retrofit.RestAdapter.Builder builder77 = builder45.setLog(log74);
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log79 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder80 = builder78.setLog(log79);
        retrofit.RestAdapter.LogLevel logLevel81 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder82 = builder80.setLogLevel(logLevel81);
        retrofit.RestAdapter.Log log83 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder84 = builder80.setLog(log83);
        log83.log("hi!");
        log83.log("");
        log83.log("hi!");
        retrofit.RestAdapter.Builder builder91 = builder45.setLog(log83);
        log83.log("");
        log83.log("");
        log83.log("hi!");
        retrofit.RestAdapter.Builder builder98 = builder6.setLog(log83);
        java.lang.Class<?> wildcardClass99 = builder6.getClass();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(restAdapter7);
        org.junit.Assert.assertNotNull(restAdapter8);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(restAdapter46);
        org.junit.Assert.assertNotNull(restAdapter47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(log83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(builder98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test04458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04458");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = builder6.build();
        retrofit.RestAdapter.LogLevel logLevel8 = restAdapter7.getLogLevel();
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder9.setLog(log10);
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder15 = builder13.setServer("hi!");
        retrofit.RestAdapter restAdapter16 = builder15.build();
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        restAdapter16.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = builder27.setServer("hi!");
        retrofit.RestAdapter restAdapter30 = builder29.build();
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        restAdapter30.setLogLevel(logLevel34);
        restAdapter16.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLog(log39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder40.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder44 = builder42.setServer("hi!");
        retrofit.RestAdapter restAdapter45 = builder44.build();
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLog(log47);
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        restAdapter45.setLogLevel(logLevel49);
        restAdapter16.setLogLevel(logLevel49);
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter16.setLogLevel(logLevel53);
        retrofit.RestAdapter.LogLevel logLevel55 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel56 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLog(log58);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder61 = builder57.setLogLevel(logLevel60);
        restAdapter16.setLogLevel(logLevel60);
        restAdapter7.setLogLevel(logLevel60);
        retrofit.RestAdapter.LogLevel logLevel64 = restAdapter7.getLogLevel();
        boolean boolean65 = logLevel64.log();
        java.lang.Class<?> wildcardClass66 = logLevel64.getClass();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(restAdapter7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(restAdapter16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(restAdapter30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(restAdapter45);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test04459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04459");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log26);
        retrofit.RestAdapter restAdapter29 = builder24.build();
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder37.setLog(log40);
        retrofit.RestAdapter.Builder builder42 = builder34.setLog(log40);
        retrofit.RestAdapter.Builder builder44 = builder34.setServer("hi!");
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder47.setLog(log50);
        retrofit.RestAdapter.Builder builder52 = builder34.setLog(log50);
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder54 = builder34.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder55 = builder24.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder57 = builder55.setServer("hi!");
        retrofit.RequestInterceptor requestInterceptor58 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder59 = builder55.setRequestInterceptor(requestInterceptor58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(restAdapter29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
    }

    @Test
    public void test04460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04460");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder14.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = builder9.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLog(log27);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder33 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder40 = builder38.setServer("hi!");
        retrofit.RestAdapter restAdapter41 = builder40.build();
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        restAdapter41.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder54 = builder52.setServer("hi!");
        retrofit.RestAdapter restAdapter55 = builder54.build();
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLog(log57);
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder60 = builder58.setLogLevel(logLevel59);
        restAdapter55.setLogLevel(logLevel59);
        restAdapter41.setLogLevel(logLevel59);
        retrofit.RestAdapter.LogLevel logLevel63 = restAdapter41.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel64 = restAdapter41.getLogLevel();
        retrofit.RestAdapter.Builder builder65 = builder29.setLogLevel(logLevel64);
        boolean boolean66 = logLevel64.log();
        retrofit.RestAdapter.Builder builder67 = builder6.setLogLevel(logLevel64);
        retrofit.RestAdapter.Builder builder69 = builder67.setServer("hi!");
        retrofit.RestAdapter restAdapter70 = builder69.build();
        retrofit.ErrorHandler errorHandler71 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder72 = builder69.setErrorHandler(errorHandler71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(restAdapter41);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(restAdapter55);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(restAdapter70);
    }

    @Test
    public void test04461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04461");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        log16.log("");
        retrofit.RestAdapter.Builder builder20 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLog(log22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLog(log30);
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder31.setLog(log34);
        retrofit.RestAdapter.Builder builder36 = builder28.setLog(log34);
        retrofit.RestAdapter.Builder builder37 = builder23.setLog(log34);
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLog(log39);
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder38.setLog(log41);
        retrofit.RestAdapter.Builder builder43 = builder37.setLog(log41);
        retrofit.RestAdapter.Builder builder45 = builder37.setServer("hi!");
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLog(log47);
        retrofit.RestAdapter.Builder builder49 = builder45.setLog(log47);
        retrofit.RestAdapter.Builder builder50 = builder20.setLog(log47);
        retrofit.RestAdapter.Builder builder52 = builder20.setServer("hi!");
        retrofit.RestAdapter.Builder builder54 = builder52.setServer("hi!");
        retrofit.ErrorHandler errorHandler55 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder56 = builder52.setErrorHandler(errorHandler55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
    }

    @Test
    public void test04462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04462");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLog(log33);
        log33.log("");
        retrofit.RestAdapter.Builder builder37 = builder29.setLog(log33);
        retrofit.RestAdapter.Builder builder38 = builder24.setLog(log33);
        retrofit.RestAdapter restAdapter39 = builder24.build();
        retrofit.RestAdapter restAdapter40 = builder24.build();
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLog(log42);
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLog(log45);
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder53 = builder51.setLogLevel(logLevel52);
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder51.setLog(log54);
        retrofit.RestAdapter.Builder builder56 = builder48.setLog(log54);
        retrofit.RestAdapter.Builder builder57 = builder43.setLog(log54);
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder60 = builder58.setLog(log59);
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder58.setLog(log61);
        retrofit.RestAdapter.Builder builder63 = builder57.setLog(log61);
        retrofit.RestAdapter.Builder builder65 = builder57.setServer("hi!");
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder68 = builder66.setLog(log67);
        retrofit.RestAdapter.Builder builder69 = builder65.setLog(log67);
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder70.setLog(log71);
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder74 = builder72.setLogLevel(logLevel73);
        retrofit.RestAdapter.Builder builder76 = builder74.setServer("hi!");
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log78 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder79 = builder77.setLog(log78);
        log78.log("");
        retrofit.RestAdapter.Builder builder82 = builder74.setLog(log78);
        log78.log("");
        log78.log("");
        retrofit.RestAdapter.Builder builder87 = builder65.setLog(log78);
        retrofit.RestAdapter.Builder builder88 = builder24.setLog(log78);
        retrofit.Profiler profiler89 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder90 = builder24.setProfiler(profiler89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(restAdapter39);
        org.junit.Assert.assertNotNull(restAdapter40);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(log78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder88);
    }

    @Test
    public void test04463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04463");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder14.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = builder9.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLog(log27);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder33 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        log35.log("");
        log35.log("");
        retrofit.RestAdapter.Builder builder41 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder42 = builder4.setLog(log35);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder43.setLogLevel(logLevel46);
        boolean boolean48 = logLevel46.log();
        boolean boolean49 = logLevel46.log();
        retrofit.RestAdapter.Builder builder50 = builder4.setLogLevel(logLevel46);
        java.util.concurrent.Executor executor51 = null;
        java.util.concurrent.Executor executor52 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder53 = builder4.setExecutors(executor51, executor52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(builder50);
    }

    @Test
    public void test04464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04464");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log26);
        retrofit.RestAdapter.Builder builder30 = builder28.setServer("hi!");
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder41.setLog(log44);
        retrofit.RestAdapter.Builder builder46 = builder38.setLog(log44);
        retrofit.RestAdapter.Builder builder47 = builder33.setLog(log44);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder52 = builder48.setLog(log51);
        retrofit.RestAdapter.Builder builder53 = builder47.setLog(log51);
        retrofit.RestAdapter.Builder builder55 = builder47.setServer("hi!");
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLog(log57);
        retrofit.RestAdapter.Builder builder59 = builder55.setLog(log57);
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        boolean boolean65 = logLevel63.log();
        retrofit.RestAdapter.Builder builder66 = builder59.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder67 = builder30.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder68.setLog(log69);
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log72 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder73 = builder71.setLog(log72);
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder75 = builder73.setLogLevel(logLevel74);
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log77 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder78 = builder76.setLog(log77);
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder80 = builder78.setLogLevel(logLevel79);
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder82 = builder78.setLog(log81);
        retrofit.RestAdapter.Builder builder83 = builder75.setLog(log81);
        retrofit.RestAdapter.Builder builder84 = builder70.setLog(log81);
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log86 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder87 = builder85.setLog(log86);
        retrofit.RestAdapter.Log log88 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder89 = builder85.setLog(log88);
        retrofit.RestAdapter.Builder builder90 = builder84.setLog(log88);
        log88.log("hi!");
        retrofit.RestAdapter.Builder builder93 = builder67.setLog(log88);
        retrofit.Profiler profiler94 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder95 = builder67.setProfiler(profiler94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(log77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(log86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(log88);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(builder93);
    }

    @Test
    public void test04465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04465");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder4.setLog(log20);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder4.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder32.setLog(log35);
        retrofit.RestAdapter.Builder builder37 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder39 = builder37.setServer("hi!");
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder47.setLog(log50);
        log50.log("");
        retrofit.RestAdapter.Builder builder54 = builder44.setLog(log50);
        log50.log("");
        retrofit.RestAdapter.Builder builder57 = builder39.setLog(log50);
        retrofit.RestAdapter.Builder builder58 = builder4.setLog(log50);
        retrofit.converter.Converter converter59 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder60 = builder58.setConverter(converter59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder58);
    }

    @Test
    public void test04466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04466");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder5.setLog(log8);
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLog(log21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder22.setLog(log25);
        retrofit.RestAdapter.Builder builder27 = builder19.setLog(log25);
        retrofit.RestAdapter.Builder builder28 = builder14.setLog(log25);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLog(log30);
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder29.setLog(log32);
        retrofit.RestAdapter.Builder builder34 = builder28.setLog(log32);
        retrofit.RestAdapter.Builder builder36 = builder28.setServer("hi!");
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder44.setLog(log47);
        retrofit.RestAdapter.Builder builder49 = builder41.setLog(log47);
        retrofit.RestAdapter.Builder builder51 = builder41.setServer("hi!");
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder54.setLog(log57);
        retrofit.RestAdapter.Builder builder59 = builder41.setLog(log57);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder61 = builder41.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder62 = builder28.setLogLevel(logLevel60);
        retrofit.RestAdapter restAdapter63 = builder28.build();
        retrofit.RestAdapter.LogLevel logLevel64 = restAdapter63.getLogLevel();
        retrofit.RestAdapter.Builder builder65 = builder11.setLogLevel(logLevel64);
        retrofit.RestAdapter.Builder builder66 = builder2.setLogLevel(logLevel64);
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log68 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder69 = builder67.setLog(log68);
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder71 = builder69.setLogLevel(logLevel70);
        retrofit.RestAdapter.Builder builder73 = builder71.setServer("hi!");
        retrofit.RestAdapter restAdapter74 = builder73.build();
        retrofit.RestAdapter.LogLevel logLevel75 = restAdapter74.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel76 = restAdapter74.getLogLevel();
        retrofit.RestAdapter.Builder builder77 = builder66.setLogLevel(logLevel76);
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log79 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder80 = builder78.setLog(log79);
        retrofit.RestAdapter.Builder builder82 = builder80.setServer("hi!");
        retrofit.RestAdapter restAdapter83 = builder82.build();
        retrofit.RestAdapter.LogLevel logLevel84 = restAdapter83.getLogLevel();
        retrofit.RestAdapter.Builder builder85 = builder77.setLogLevel(logLevel84);
        retrofit.RestAdapter restAdapter86 = builder85.build();
        java.util.concurrent.Executor executor87 = null;
        java.util.concurrent.Executor executor88 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder89 = builder85.setExecutors(executor87, executor88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(restAdapter63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(restAdapter74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(restAdapter83);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(restAdapter86);
    }

    @Test
    public void test04467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04467");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder25.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder24.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder32 = builder24.setServer("hi!");
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLog(log34);
        retrofit.RestAdapter.Builder builder37 = builder35.setServer("hi!");
        retrofit.RestAdapter restAdapter38 = builder37.build();
        retrofit.RestAdapter.LogLevel logLevel39 = restAdapter38.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel40 = restAdapter38.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter38.getLogLevel();
        boolean boolean42 = logLevel41.log();
        retrofit.RestAdapter.Builder builder43 = builder24.setLogLevel(logLevel41);
        retrofit.RequestInterceptor requestInterceptor44 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder45 = builder24.setRequestInterceptor(requestInterceptor44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(restAdapter38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(builder43);
    }

    @Test
    public void test04468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04468");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = builder6.build();
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean9 = logLevel8.log();
        boolean boolean10 = logLevel8.log();
        retrofit.RestAdapter.Builder builder11 = builder6.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("hi!");
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLog(log15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLog(log23);
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log27);
        retrofit.RestAdapter.Builder builder29 = builder21.setLog(log27);
        retrofit.RestAdapter.Builder builder30 = builder14.setLog(log27);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder41.setLog(log44);
        retrofit.RestAdapter.Builder builder46 = builder38.setLog(log44);
        retrofit.RestAdapter.Builder builder47 = builder31.setLog(log44);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder48.setLogLevel(logLevel51);
        boolean boolean53 = logLevel51.log();
        retrofit.RestAdapter.Builder builder54 = builder31.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder55 = builder30.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLog(log57);
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder60 = builder58.setLogLevel(logLevel59);
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder58.setLog(log61);
        log61.log("hi!");
        log61.log("hi!");
        retrofit.RestAdapter.Builder builder67 = builder30.setLog(log61);
        retrofit.RestAdapter.Builder builder68 = builder11.setLog(log61);
        retrofit.RestAdapter restAdapter69 = builder68.build();
        retrofit.converter.Converter converter70 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder71 = builder68.setConverter(converter70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(restAdapter7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(restAdapter69);
    }

    @Test
    public void test04469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04469");
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        java.lang.String str15 = request14.getMethod();
        java.util.List<retrofit.client.Header> headerList16 = request14.getHeaders();
        java.util.List<retrofit.client.Header> headerList17 = request14.getHeaders();
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("", "hi!", headerList17, typedOutput18);
        java.util.List<retrofit.client.Header> headerList20 = request19.getHeaders();
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("", "", headerList20, typedOutput21);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("", "", headerList20, typedOutput23);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "", headerList20, typedOutput25);
        retrofit.mime.TypedOutput typedOutput27 = request26.getBody();
        java.lang.String str28 = request26.getMethod();
        java.lang.String str29 = request26.getMethod();
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(headerList16);
        org.junit.Assert.assertNotNull(headerList17);
        org.junit.Assert.assertNotNull(headerList20);
        org.junit.Assert.assertNull(typedOutput27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
    }

    @Test
    public void test04470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04470");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLog(log21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder27.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder17.setLog(log30);
        retrofit.RestAdapter.Builder builder34 = builder2.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("hi!");
        retrofit.RestAdapter.Builder builder44 = builder42.setServer("hi!");
        retrofit.RestAdapter restAdapter45 = builder42.build();
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLog(log47);
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder52 = builder50.setServer("hi!");
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLog(log54);
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLog(log57);
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder60 = builder58.setLogLevel(logLevel59);
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder63 = builder61.setLog(log62);
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder65 = builder63.setLogLevel(logLevel64);
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder67 = builder63.setLog(log66);
        retrofit.RestAdapter.Builder builder68 = builder60.setLog(log66);
        retrofit.RestAdapter.Builder builder69 = builder55.setLog(log66);
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder70.setLog(log71);
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder74 = builder70.setLog(log73);
        retrofit.RestAdapter.Builder builder75 = builder69.setLog(log73);
        retrofit.RestAdapter.Builder builder77 = builder75.setServer("hi!");
        retrofit.RestAdapter.Builder builder79 = builder75.setServer("hi!");
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder82 = builder80.setLog(log81);
        log81.log("");
        log81.log("");
        retrofit.RestAdapter.Builder builder87 = builder75.setLog(log81);
        retrofit.RestAdapter.Builder builder88 = builder50.setLog(log81);
        retrofit.RestAdapter restAdapter89 = builder88.build();
        retrofit.RestAdapter restAdapter90 = builder88.build();
        retrofit.RestAdapter.LogLevel logLevel91 = restAdapter90.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel92 = restAdapter90.getLogLevel();
        retrofit.RestAdapter.Builder builder93 = builder42.setLogLevel(logLevel92);
        retrofit.Profiler profiler94 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder95 = builder42.setProfiler(profiler94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(restAdapter45);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(restAdapter89);
        org.junit.Assert.assertNotNull(restAdapter90);
        org.junit.Assert.assertTrue("'" + logLevel91 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel91.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder93);
    }

    @Test
    public void test04471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04471");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder12.setServer("hi!");
        retrofit.RestAdapter.Builder builder16 = builder14.setServer("hi!");
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLog(log21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder27.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder24.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder19.setLog(log30);
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = builder34.setLog(log37);
        retrofit.RestAdapter.Builder builder39 = builder33.setLog(log37);
        retrofit.RestAdapter.Builder builder41 = builder33.setServer("hi!");
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder48 = builder46.setServer("hi!");
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        log50.log("");
        retrofit.RestAdapter.Builder builder54 = builder46.setLog(log50);
        retrofit.RestAdapter.Builder builder55 = builder41.setLog(log50);
        log50.log("hi!");
        retrofit.RestAdapter.Builder builder58 = builder16.setLog(log50);
        retrofit.client.Client client59 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder60 = builder16.setClient(client59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder58);
    }

    @Test
    public void test04472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04472");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder4.setLog(log20);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder4.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder26 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLog(log33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder34.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder39.setLog(log42);
        retrofit.RestAdapter.Builder builder44 = builder36.setLog(log42);
        retrofit.RestAdapter.Builder builder45 = builder31.setLog(log42);
        log42.log("hi!");
        retrofit.RestAdapter.Builder builder48 = builder4.setLog(log42);
        retrofit.RequestInterceptor requestInterceptor49 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder50 = builder4.setRequestInterceptor(requestInterceptor49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder48);
    }

    @Test
    public void test04473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04473");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder22.setServer("hi!");
        retrofit.RestAdapter.Builder builder26 = builder22.setServer("hi!");
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder33 = builder31.setServer("hi!");
        retrofit.RestAdapter restAdapter34 = builder33.build();
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        restAdapter34.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLog(log42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder47 = builder45.setServer("hi!");
        retrofit.RestAdapter restAdapter48 = builder47.build();
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder53 = builder51.setLogLevel(logLevel52);
        restAdapter48.setLogLevel(logLevel52);
        restAdapter34.setLogLevel(logLevel52);
        retrofit.RestAdapter.LogLevel logLevel56 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel57 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.Builder builder58 = builder22.setLogLevel(logLevel57);
        retrofit.RestAdapter restAdapter59 = builder22.build();
        retrofit.RestAdapter.Builder builder61 = builder22.setServer("hi!");
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder64 = builder62.setLog(log63);
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder68 = builder66.setServer("hi!");
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder71 = builder69.setLog(log70);
        log70.log("");
        retrofit.RestAdapter.Builder builder74 = builder66.setLog(log70);
        log70.log("");
        retrofit.RestAdapter.Builder builder77 = builder22.setLog(log70);
        retrofit.client.Client.Provider provider78 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder79 = builder22.setClient(provider78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(restAdapter34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(restAdapter48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder77);
    }

    @Test
    public void test04474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04474");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder4.setLog(log20);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder4.setLogLevel(logLevel23);
        retrofit.RestAdapter restAdapter25 = builder24.build();
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLog(log27);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLog(log30);
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder36.setLog(log39);
        retrofit.RestAdapter.Builder builder41 = builder33.setLog(log39);
        retrofit.RestAdapter.Builder builder42 = builder28.setLog(log39);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLog(log47);
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder57 = builder53.setLog(log56);
        retrofit.RestAdapter.Builder builder58 = builder50.setLog(log56);
        retrofit.RestAdapter.Builder builder59 = builder43.setLog(log56);
        retrofit.RestAdapter.Builder builder60 = builder28.setLog(log56);
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder63 = builder61.setLog(log62);
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder65 = builder63.setLogLevel(logLevel64);
        retrofit.RestAdapter.Builder builder66 = builder60.setLogLevel(logLevel64);
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log68 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder69 = builder67.setLog(log68);
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder70.setLog(log71);
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder74 = builder72.setLogLevel(logLevel73);
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log76 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder77 = builder75.setLog(log76);
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder79 = builder77.setLogLevel(logLevel78);
        retrofit.RestAdapter.Log log80 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder81 = builder77.setLog(log80);
        retrofit.RestAdapter.Builder builder82 = builder74.setLog(log80);
        retrofit.RestAdapter.Builder builder83 = builder69.setLog(log80);
        log80.log("");
        log80.log("");
        retrofit.RestAdapter.Builder builder88 = builder66.setLog(log80);
        log80.log("hi!");
        retrofit.RestAdapter.Builder builder91 = builder24.setLog(log80);
        retrofit.RestAdapter.Builder builder93 = builder24.setServer("hi!");
        retrofit.converter.Converter converter94 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder95 = builder93.setConverter(converter94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(restAdapter25);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(log80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(builder93);
    }

    @Test
    public void test04475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04475");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder14.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = builder9.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLog(log27);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder32.setLog(log35);
        log35.log("hi!");
        log35.log("");
        retrofit.RestAdapter.Builder builder41 = builder29.setLog(log35);
        retrofit.RestAdapter.Builder builder42 = builder4.setLog(log35);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = builder47.setServer("hi!");
        retrofit.RestAdapter restAdapter50 = builder49.build();
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        restAdapter50.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLog(log58);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder61 = builder59.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder63 = builder61.setServer("hi!");
        retrofit.RestAdapter restAdapter64 = builder63.build();
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLog(log66);
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder69 = builder67.setLogLevel(logLevel68);
        restAdapter64.setLogLevel(logLevel68);
        restAdapter50.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder74 = builder72.setLog(log73);
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder76 = builder74.setLogLevel(logLevel75);
        retrofit.RestAdapter.Builder builder78 = builder76.setServer("hi!");
        retrofit.RestAdapter restAdapter79 = builder78.build();
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder82 = builder80.setLog(log81);
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder84 = builder82.setLogLevel(logLevel83);
        restAdapter79.setLogLevel(logLevel83);
        restAdapter50.setLogLevel(logLevel83);
        retrofit.RestAdapter.LogLevel logLevel87 = restAdapter50.getLogLevel();
        retrofit.RestAdapter.Builder builder88 = builder4.setLogLevel(logLevel87);
        retrofit.RestAdapter.Builder builder90 = builder88.setServer("hi!");
        retrofit.RestAdapter restAdapter91 = builder88.build();
        retrofit.RestAdapter restAdapter92 = builder88.build();
        retrofit.RestAdapter.LogLevel logLevel93 = restAdapter92.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel94 = restAdapter92.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel95 = restAdapter92.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel96 = restAdapter92.getLogLevel();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(restAdapter50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(restAdapter64);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(restAdapter79);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(restAdapter91);
        org.junit.Assert.assertNotNull(restAdapter92);
        org.junit.Assert.assertTrue("'" + logLevel93 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel93.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel94 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel94.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel95 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel95.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel96 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel96.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test04476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04476");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = builder6.build();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLog(log12);
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLog(log17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = builder18.setLog(log21);
        retrofit.RestAdapter.Builder builder23 = builder15.setLog(log21);
        retrofit.RestAdapter.Builder builder24 = builder10.setLog(log21);
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder10.setLog(log25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        log28.log("");
        retrofit.RestAdapter.Builder builder32 = builder26.setLog(log28);
        log28.log("");
        retrofit.RestAdapter.Builder builder35 = builder6.setLog(log28);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLog(log37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("hi!");
        retrofit.RestAdapter restAdapter43 = builder42.build();
        retrofit.RestAdapter restAdapter44 = builder42.build();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder51 = builder49.setServer("hi!");
        retrofit.RestAdapter restAdapter52 = builder51.build();
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLog(log54);
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder57 = builder55.setLogLevel(logLevel56);
        restAdapter52.setLogLevel(logLevel56);
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder61 = builder59.setLog(log60);
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder63 = builder61.setLogLevel(logLevel62);
        retrofit.RestAdapter.Builder builder65 = builder63.setServer("hi!");
        retrofit.RestAdapter restAdapter66 = builder65.build();
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log68 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder69 = builder67.setLog(log68);
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder71 = builder69.setLogLevel(logLevel70);
        restAdapter66.setLogLevel(logLevel70);
        restAdapter52.setLogLevel(logLevel70);
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log75 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder76 = builder74.setLog(log75);
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder78 = builder76.setLogLevel(logLevel77);
        retrofit.RestAdapter.Builder builder80 = builder78.setServer("hi!");
        retrofit.RestAdapter restAdapter81 = builder80.build();
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log83 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder84 = builder82.setLog(log83);
        retrofit.RestAdapter.LogLevel logLevel85 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder86 = builder84.setLogLevel(logLevel85);
        restAdapter81.setLogLevel(logLevel85);
        restAdapter52.setLogLevel(logLevel85);
        retrofit.RestAdapter.LogLevel logLevel89 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter52.setLogLevel(logLevel89);
        retrofit.RestAdapter.LogLevel logLevel91 = restAdapter52.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel92 = restAdapter52.getLogLevel();
        restAdapter44.setLogLevel(logLevel92);
        retrofit.RestAdapter.Builder builder94 = builder35.setLogLevel(logLevel92);
        retrofit.RestAdapter restAdapter95 = builder35.build();
        retrofit.RestAdapter restAdapter96 = builder35.build();
        retrofit.Profiler profiler97 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder98 = builder35.setProfiler(profiler97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(restAdapter7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(restAdapter43);
        org.junit.Assert.assertNotNull(restAdapter44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(restAdapter52);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(restAdapter66);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(log75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(restAdapter81);
        org.junit.Assert.assertNotNull(log83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel91 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel91.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder94);
        org.junit.Assert.assertNotNull(restAdapter95);
        org.junit.Assert.assertNotNull(restAdapter96);
    }

    @Test
    public void test04477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04477");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = builder6.build();
        retrofit.RestAdapter restAdapter8 = builder6.build();
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder9.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLog(log13);
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder16 = builder14.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = builder19.setLog(log22);
        retrofit.RestAdapter.Builder builder24 = builder16.setLog(log22);
        retrofit.RestAdapter.Builder builder25 = builder11.setLog(log22);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLog(log27);
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder30 = builder26.setLog(log29);
        retrofit.RestAdapter.Builder builder31 = builder25.setLog(log29);
        retrofit.RestAdapter.Builder builder33 = builder25.setServer("hi!");
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        retrofit.RestAdapter.Builder builder37 = builder33.setLog(log35);
        retrofit.RestAdapter.Builder builder38 = builder6.setLog(log35);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder41.setLog(log44);
        log44.log("hi!");
        log44.log("");
        log44.log("hi!");
        retrofit.RestAdapter.Builder builder52 = builder6.setLog(log44);
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLog(log54);
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder57 = builder55.setLogLevel(logLevel56);
        retrofit.RestAdapter.Builder builder59 = builder57.setServer("hi!");
        retrofit.RestAdapter restAdapter60 = builder59.build();
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder63 = builder61.setLog(log62);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLog(log65);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder68 = builder66.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder71 = builder69.setLog(log70);
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder73 = builder71.setLogLevel(logLevel72);
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder75 = builder71.setLog(log74);
        retrofit.RestAdapter.Builder builder76 = builder68.setLog(log74);
        retrofit.RestAdapter.Builder builder77 = builder63.setLog(log74);
        retrofit.RestAdapter.Log log78 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder79 = builder63.setLog(log78);
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder82 = builder80.setLog(log81);
        log81.log("");
        retrofit.RestAdapter.Builder builder85 = builder79.setLog(log81);
        log81.log("");
        retrofit.RestAdapter.Builder builder88 = builder59.setLog(log81);
        retrofit.RestAdapter.Builder builder89 = builder52.setLog(log81);
        retrofit.RestAdapter restAdapter90 = builder89.build();
        retrofit.RestAdapter.LogLevel logLevel91 = restAdapter90.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel92 = restAdapter90.getLogLevel();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(restAdapter7);
        org.junit.Assert.assertNotNull(restAdapter8);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(restAdapter60);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(log78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(restAdapter90);
        org.junit.Assert.assertTrue("'" + logLevel91 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel91.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test04478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04478");
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        java.lang.String str11 = request10.getMethod();
        java.util.List<retrofit.client.Header> headerList12 = request10.getHeaders();
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", headerList12, typedOutput13);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "", headerList12, typedOutput15);
        java.lang.String str17 = request16.getMethod();
        retrofit.mime.TypedOutput typedOutput18 = request16.getBody();
        java.util.List<retrofit.client.Header> headerList19 = request16.getHeaders();
        java.lang.String str20 = request16.getMethod();
        retrofit.mime.TypedOutput typedOutput21 = request16.getBody();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(typedOutput18);
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNull(typedOutput21);
    }

    @Test
    public void test04479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04479");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log26);
        retrofit.RestAdapter restAdapter29 = builder24.build();
        retrofit.RestAdapter.Builder builder31 = builder24.setServer("hi!");
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLog(log33);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder42.setLog(log45);
        retrofit.RestAdapter.Builder builder47 = builder39.setLog(log45);
        retrofit.RestAdapter.Builder builder48 = builder34.setLog(log45);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder49.setLog(log52);
        retrofit.RestAdapter.Builder builder54 = builder48.setLog(log52);
        retrofit.RestAdapter.Builder builder56 = builder54.setServer("hi!");
        retrofit.RestAdapter.Builder builder58 = builder54.setServer("hi!");
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder61 = builder59.setLog(log60);
        log60.log("");
        log60.log("");
        retrofit.RestAdapter.Builder builder66 = builder54.setLog(log60);
        log60.log("hi!");
        retrofit.RestAdapter.Builder builder69 = builder24.setLog(log60);
        retrofit.Profiler profiler70 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder71 = builder24.setProfiler(profiler70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(restAdapter29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder69);
    }

    @Test
    public void test04480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04480");
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList11, typedOutput15);
        java.util.List<retrofit.client.Header> headerList17 = request16.getHeaders();
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("hi!", "hi!", headerList17, typedOutput18);
        java.util.List<retrofit.client.Header> headerList20 = request19.getHeaders();
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("", "hi!", headerList20, typedOutput21);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("", "hi!", headerList20, typedOutput23);
        java.lang.String str25 = request24.getMethod();
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(headerList17);
        org.junit.Assert.assertNotNull(headerList20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
    }

    @Test
    public void test04481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04481");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder22.setServer("hi!");
        retrofit.RestAdapter.Builder builder26 = builder24.setServer("hi!");
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder33 = builder31.setServer("hi!");
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder44.setLog(log47);
        retrofit.RestAdapter.Builder builder49 = builder41.setLog(log47);
        retrofit.RestAdapter.Builder builder50 = builder36.setLog(log47);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder51.setLog(log54);
        retrofit.RestAdapter.Builder builder56 = builder50.setLog(log54);
        retrofit.RestAdapter.Builder builder58 = builder56.setServer("hi!");
        retrofit.RestAdapter.Builder builder60 = builder56.setServer("hi!");
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder63 = builder61.setLog(log62);
        log62.log("");
        log62.log("");
        retrofit.RestAdapter.Builder builder68 = builder56.setLog(log62);
        retrofit.RestAdapter.Builder builder69 = builder31.setLog(log62);
        retrofit.RestAdapter restAdapter70 = builder69.build();
        retrofit.RestAdapter restAdapter71 = builder69.build();
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder74 = builder72.setLog(log73);
        retrofit.RestAdapter.Builder builder75 = builder69.setLog(log73);
        retrofit.RestAdapter.Builder builder76 = builder24.setLog(log73);
        retrofit.RestAdapter.Log log77 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder78 = builder76.setLog(log77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Log may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(restAdapter70);
        org.junit.Assert.assertNotNull(restAdapter71);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder76);
    }

    @Test
    public void test04482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04482");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter restAdapter5 = builder2.build();
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log7 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder8 = builder6.setLog(log7);
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLog(log12);
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder13.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder10.setLog(log16);
        retrofit.RestAdapter.Builder builder20 = builder10.setServer("hi!");
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLog(log22);
        log22.log("");
        retrofit.RestAdapter.Builder builder26 = builder10.setLog(log22);
        log22.log("hi!");
        log22.log("");
        retrofit.RestAdapter.Builder builder31 = builder2.setLog(log22);
        retrofit.client.Client.Provider provider32 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder33 = builder31.setClient(provider32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(restAdapter5);
        org.junit.Assert.assertNotNull(log7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder31);
    }

    @Test
    public void test04483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04483");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        log10.log("");
        retrofit.RestAdapter.Builder builder14 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder18.setLog(log19);
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder22 = builder20.setLogLevel(logLevel21);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder25.setLog(log28);
        retrofit.RestAdapter.Builder builder30 = builder22.setLog(log28);
        retrofit.RestAdapter.Builder builder31 = builder17.setLog(log28);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLog(log33);
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder32.setLog(log35);
        retrofit.RestAdapter.Builder builder37 = builder31.setLog(log35);
        retrofit.RestAdapter.Builder builder39 = builder31.setServer("hi!");
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.Builder builder46 = builder44.setServer("hi!");
        retrofit.RestAdapter restAdapter47 = builder46.build();
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        restAdapter47.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder58 = builder56.setLogLevel(logLevel57);
        retrofit.RestAdapter.Builder builder60 = builder58.setServer("hi!");
        retrofit.RestAdapter restAdapter61 = builder60.build();
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder64 = builder62.setLog(log63);
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        restAdapter61.setLogLevel(logLevel65);
        restAdapter47.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder71 = builder69.setLog(log70);
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder73 = builder71.setLogLevel(logLevel72);
        retrofit.RestAdapter.Builder builder75 = builder73.setServer("hi!");
        retrofit.RestAdapter restAdapter76 = builder75.build();
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log78 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder79 = builder77.setLog(log78);
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder81 = builder79.setLogLevel(logLevel80);
        restAdapter76.setLogLevel(logLevel80);
        restAdapter47.setLogLevel(logLevel80);
        retrofit.RestAdapter.Builder builder84 = builder31.setLogLevel(logLevel80);
        retrofit.RestAdapter restAdapter85 = builder84.build();
        retrofit.RestAdapter.LogLevel logLevel86 = restAdapter85.getLogLevel();
        retrofit.RestAdapter.Builder builder87 = builder14.setLogLevel(logLevel86);
        retrofit.Server server88 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder89 = builder14.setServer(server88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(restAdapter47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(restAdapter61);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(restAdapter76);
        org.junit.Assert.assertNotNull(log78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(restAdapter85);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder87);
    }

    @Test
    public void test04484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04484");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log26);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLog(log30);
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        boolean boolean34 = logLevel32.log();
        retrofit.RestAdapter.Builder builder35 = builder28.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder37 = builder28.setServer("hi!");
        retrofit.RestAdapter.Builder builder39 = builder37.setServer("hi!");
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder50.setLog(log53);
        retrofit.RestAdapter.Builder builder55 = builder47.setLog(log53);
        retrofit.RestAdapter.Builder builder56 = builder42.setLog(log53);
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder42.setLog(log57);
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder61 = builder59.setLog(log60);
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder63 = builder61.setLogLevel(logLevel62);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLog(log65);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder68 = builder66.setLogLevel(logLevel67);
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder66.setLog(log69);
        log69.log("");
        retrofit.RestAdapter.Builder builder73 = builder63.setLog(log69);
        log69.log("");
        retrofit.RestAdapter.Builder builder76 = builder58.setLog(log69);
        retrofit.RestAdapter.Builder builder77 = builder37.setLog(log69);
        retrofit.Server server78 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder79 = builder37.setServer(server78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder77);
    }

    @Test
    public void test04485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04485");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder4.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = builder27.setServer("hi!");
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        log31.log("");
        retrofit.RestAdapter.Builder builder35 = builder27.setLog(log31);
        log31.log("");
        retrofit.RestAdapter.Builder builder38 = builder4.setLog(log31);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.Builder builder43 = builder41.setServer("hi!");
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLog(log45);
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder53 = builder51.setLogLevel(logLevel52);
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder51.setLog(log54);
        retrofit.RestAdapter.Builder builder56 = builder48.setLog(log54);
        retrofit.RestAdapter.Builder builder57 = builder43.setLog(log54);
        retrofit.RestAdapter.Builder builder58 = builder38.setLog(log54);
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder61 = builder59.setLog(log60);
        log60.log("");
        retrofit.RestAdapter.Builder builder64 = builder38.setLog(log60);
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLog(log66);
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder69 = builder67.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder70.setLog(log71);
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder74 = builder72.setLogLevel(logLevel73);
        retrofit.RestAdapter.Log log75 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder76 = builder72.setLog(log75);
        retrofit.RestAdapter.Builder builder77 = builder69.setLog(log75);
        retrofit.RestAdapter.Builder builder78 = builder64.setLog(log75);
        retrofit.client.Client client79 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder80 = builder64.setClient(client79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(log75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder78);
    }

    @Test
    public void test04486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04486");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log26);
        retrofit.RestAdapter.Builder builder30 = builder28.setServer("hi!");
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder41.setLog(log44);
        retrofit.RestAdapter.Builder builder46 = builder38.setLog(log44);
        retrofit.RestAdapter.Builder builder47 = builder33.setLog(log44);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder52 = builder48.setLog(log51);
        retrofit.RestAdapter.Builder builder53 = builder47.setLog(log51);
        retrofit.RestAdapter.Builder builder55 = builder47.setServer("hi!");
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLog(log57);
        retrofit.RestAdapter.Builder builder59 = builder55.setLog(log57);
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        boolean boolean65 = logLevel63.log();
        retrofit.RestAdapter.Builder builder66 = builder59.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder67 = builder30.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder68.setLog(log69);
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log72 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder73 = builder71.setLog(log72);
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder75 = builder73.setLogLevel(logLevel74);
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log77 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder78 = builder76.setLog(log77);
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder80 = builder78.setLogLevel(logLevel79);
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder82 = builder78.setLog(log81);
        retrofit.RestAdapter.Builder builder83 = builder75.setLog(log81);
        retrofit.RestAdapter.Builder builder84 = builder70.setLog(log81);
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log86 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder87 = builder85.setLog(log86);
        retrofit.RestAdapter.Log log88 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder89 = builder85.setLog(log88);
        retrofit.RestAdapter.Builder builder90 = builder84.setLog(log88);
        log88.log("hi!");
        retrofit.RestAdapter.Builder builder93 = builder67.setLog(log88);
        retrofit.ErrorHandler errorHandler94 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder95 = builder93.setErrorHandler(errorHandler94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(log77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(log86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(log88);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(builder93);
    }

    @Test
    public void test04487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04487");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder22.setServer("hi!");
        retrofit.RestAdapter restAdapter25 = builder22.build();
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter25.getLogLevel();
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder37.setLog(log40);
        retrofit.RestAdapter.Builder builder42 = builder34.setLog(log40);
        retrofit.RestAdapter.Builder builder43 = builder27.setLog(log40);
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLog(log45);
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder48 = builder44.setLogLevel(logLevel47);
        boolean boolean49 = logLevel47.log();
        retrofit.RestAdapter.Builder builder50 = builder27.setLogLevel(logLevel47);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLog(log57);
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder60 = builder58.setLogLevel(logLevel59);
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder58.setLog(log61);
        log61.log("");
        retrofit.RestAdapter.Builder builder65 = builder55.setLog(log61);
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder68 = builder66.setLog(log67);
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder70 = builder68.setLogLevel(logLevel69);
        retrofit.RestAdapter.Builder builder72 = builder70.setServer("hi!");
        retrofit.RestAdapter restAdapter73 = builder72.build();
        retrofit.RestAdapter restAdapter74 = builder72.build();
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log76 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder77 = builder75.setLog(log76);
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder79 = builder75.setLogLevel(logLevel78);
        boolean boolean80 = logLevel78.log();
        restAdapter74.setLogLevel(logLevel78);
        retrofit.RestAdapter.Builder builder82 = builder65.setLogLevel(logLevel78);
        boolean boolean83 = logLevel78.log();
        boolean boolean84 = logLevel78.log();
        boolean boolean85 = logLevel78.log();
        retrofit.RestAdapter.Builder builder86 = builder50.setLogLevel(logLevel78);
        restAdapter25.setLogLevel(logLevel78);
        boolean boolean88 = logLevel78.log();
        boolean boolean89 = logLevel78.log();
        boolean boolean90 = logLevel78.log();
        boolean boolean91 = logLevel78.log();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(restAdapter25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(restAdapter73);
        org.junit.Assert.assertNotNull(restAdapter74);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test04488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04488");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder4.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = builder27.setServer("hi!");
        retrofit.RestAdapter restAdapter30 = builder29.build();
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        restAdapter30.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder43 = builder41.setServer("hi!");
        retrofit.RestAdapter restAdapter44 = builder43.build();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        restAdapter44.setLogLevel(logLevel48);
        restAdapter30.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder58 = builder56.setServer("hi!");
        retrofit.RestAdapter restAdapter59 = builder58.build();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        restAdapter59.setLogLevel(logLevel63);
        restAdapter30.setLogLevel(logLevel63);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter30.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder69 = builder4.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder71 = builder69.setServer("hi!");
        retrofit.ErrorHandler errorHandler72 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder73 = builder69.setErrorHandler(errorHandler72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(restAdapter30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(restAdapter44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder71);
    }

    @Test
    public void test04489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04489");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = builder6.build();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        restAdapter7.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLog(log15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder20 = builder18.setServer("hi!");
        retrofit.RestAdapter restAdapter21 = builder20.build();
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLog(log23);
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        restAdapter21.setLogLevel(logLevel25);
        restAdapter7.setLogLevel(logLevel25);
        java.lang.Class<?> wildcardClass29 = logLevel25.getClass();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(restAdapter7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(restAdapter21);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test04490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04490");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder22.setServer("hi!");
        retrofit.RestAdapter.Builder builder26 = builder22.setServer("hi!");
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder33 = builder31.setServer("hi!");
        retrofit.RestAdapter restAdapter34 = builder33.build();
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder41 = builder39.setServer("hi!");
        retrofit.RestAdapter restAdapter42 = builder41.build();
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLog(log44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        restAdapter42.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder53 = builder51.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder55 = builder53.setServer("hi!");
        retrofit.RestAdapter restAdapter56 = builder55.build();
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLog(log58);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder61 = builder59.setLogLevel(logLevel60);
        restAdapter56.setLogLevel(logLevel60);
        restAdapter42.setLogLevel(logLevel60);
        boolean boolean64 = logLevel60.log();
        boolean boolean65 = logLevel60.log();
        restAdapter34.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder67 = builder22.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder69 = builder22.setServer("hi!");
        retrofit.RestAdapter restAdapter70 = builder22.build();
        retrofit.Profiler profiler71 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder72 = builder22.setProfiler(profiler71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(restAdapter34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(restAdapter42);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(restAdapter56);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(restAdapter70);
    }

    @Test
    public void test04491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04491");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter15 = builder14.build();
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLog(log17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLog(log20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder21.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder30 = builder26.setLog(log29);
        retrofit.RestAdapter.Builder builder31 = builder23.setLog(log29);
        retrofit.RestAdapter.Builder builder32 = builder18.setLog(log29);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLog(log34);
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder33.setLog(log36);
        retrofit.RestAdapter.Builder builder38 = builder32.setLog(log36);
        retrofit.RestAdapter.Builder builder40 = builder32.setServer("hi!");
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLog(log42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder47 = builder45.setServer("hi!");
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        log49.log("");
        retrofit.RestAdapter.Builder builder53 = builder45.setLog(log49);
        retrofit.RestAdapter.Builder builder54 = builder40.setLog(log49);
        log49.log("hi!");
        retrofit.RestAdapter.Builder builder57 = builder14.setLog(log49);
        retrofit.client.Client client58 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder59 = builder57.setClient(client58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(restAdapter15);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder57);
    }

    @Test
    public void test04492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04492");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLog(log33);
        log33.log("");
        retrofit.RestAdapter.Builder builder37 = builder29.setLog(log33);
        retrofit.RestAdapter.Builder builder38 = builder24.setLog(log33);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder45 = builder43.setServer("hi!");
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLog(log47);
        log47.log("");
        retrofit.RestAdapter.Builder builder51 = builder43.setLog(log47);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder57 = builder55.setLog(log56);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder59 = builder57.setLogLevel(logLevel58);
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder66 = builder62.setLog(log65);
        retrofit.RestAdapter.Builder builder67 = builder59.setLog(log65);
        retrofit.RestAdapter.Builder builder68 = builder54.setLog(log65);
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder71 = builder69.setLog(log70);
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder74 = builder72.setLog(log73);
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder76 = builder74.setLogLevel(logLevel75);
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log78 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder79 = builder77.setLog(log78);
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder81 = builder79.setLogLevel(logLevel80);
        retrofit.RestAdapter.Log log82 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder83 = builder79.setLog(log82);
        retrofit.RestAdapter.Builder builder84 = builder76.setLog(log82);
        retrofit.RestAdapter.Builder builder85 = builder69.setLog(log82);
        retrofit.RestAdapter.Builder builder86 = builder54.setLog(log82);
        retrofit.RestAdapter.Builder builder87 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log88 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder89 = builder87.setLog(log88);
        retrofit.RestAdapter.LogLevel logLevel90 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder91 = builder89.setLogLevel(logLevel90);
        retrofit.RestAdapter.Builder builder92 = builder86.setLogLevel(logLevel90);
        retrofit.RestAdapter.Builder builder93 = builder43.setLogLevel(logLevel90);
        retrofit.RestAdapter.Builder builder94 = builder38.setLogLevel(logLevel90);
        retrofit.converter.Converter converter95 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder96 = builder38.setConverter(converter95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(log78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(log82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(log88);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertTrue("'" + logLevel90 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel90.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertNotNull(builder94);
    }

    @Test
    public void test04493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04493");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder6 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLog(log8);
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder11 = builder9.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("hi!");
        retrofit.RestAdapter restAdapter14 = builder13.build();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter14.getLogLevel();
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLog(log17);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder16.setLog(log19);
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter.Builder builder22 = builder16.setLogLevel(logLevel21);
        restAdapter14.setLogLevel(logLevel21);
        retrofit.RestAdapter.Builder builder24 = builder4.setLogLevel(logLevel21);
        retrofit.Profiler profiler25 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder26 = builder24.setProfiler(profiler25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(restAdapter14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
    }

    @Test
    public void test04494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04494");
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList5, typedOutput9);
        java.lang.String str11 = request10.getUrl();
        retrofit.mime.TypedOutput typedOutput12 = request10.getBody();
        java.lang.String str13 = request10.getMethod();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test04495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04495");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter restAdapter5 = builder2.build();
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log7 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder8 = builder6.setLog(log7);
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLog(log12);
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder13.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder10.setLog(log16);
        retrofit.RestAdapter.Builder builder20 = builder10.setServer("hi!");
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLog(log22);
        log22.log("");
        retrofit.RestAdapter.Builder builder26 = builder10.setLog(log22);
        log22.log("hi!");
        log22.log("");
        retrofit.RestAdapter.Builder builder31 = builder2.setLog(log22);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLog(log33);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder42.setLog(log45);
        retrofit.RestAdapter.Builder builder47 = builder39.setLog(log45);
        retrofit.RestAdapter.Builder builder48 = builder34.setLog(log45);
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder34.setLog(log49);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLog(log52);
        log52.log("hi!");
        retrofit.RestAdapter.Builder builder56 = builder34.setLog(log52);
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLog(log57);
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder61 = builder59.setLog(log60);
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder63 = builder61.setLogLevel(logLevel62);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLog(log65);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder68 = builder66.setLogLevel(logLevel67);
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder66.setLog(log69);
        retrofit.RestAdapter.Builder builder71 = builder63.setLog(log69);
        log69.log("hi!");
        log69.log("hi!");
        log69.log("hi!");
        retrofit.RestAdapter.Builder builder78 = builder58.setLog(log69);
        log69.log("hi!");
        retrofit.RestAdapter.Builder builder81 = builder2.setLog(log69);
        retrofit.Profiler profiler82 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder83 = builder2.setProfiler(profiler82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(restAdapter5);
        org.junit.Assert.assertNotNull(log7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder81);
    }

    @Test
    public void test04496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04496");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLog(log6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder7.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RestAdapter.Builder builder14 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        log16.log("");
        retrofit.RestAdapter.Builder builder20 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("hi!");
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = builder27.setServer("hi!");
        retrofit.RestAdapter restAdapter30 = builder29.build();
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        restAdapter30.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder43 = builder41.setServer("hi!");
        retrofit.RestAdapter restAdapter44 = builder43.build();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        restAdapter44.setLogLevel(logLevel48);
        restAdapter30.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLog(log53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder58 = builder56.setServer("hi!");
        retrofit.RestAdapter restAdapter59 = builder58.build();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        restAdapter59.setLogLevel(logLevel63);
        restAdapter30.setLogLevel(logLevel63);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter30.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder69 = builder22.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder70.setLog(log71);
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder74 = builder72.setLogLevel(logLevel73);
        retrofit.RestAdapter.Builder builder76 = builder74.setServer("hi!");
        retrofit.RestAdapter restAdapter77 = builder76.build();
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log79 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder80 = builder78.setLog(log79);
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder82 = builder78.setLog(log81);
        retrofit.RestAdapter.Builder builder83 = builder76.setLog(log81);
        retrofit.RestAdapter.Builder builder84 = builder69.setLog(log81);
        retrofit.RestAdapter.Builder builder86 = builder84.setServer("hi!");
        retrofit.RestAdapter restAdapter87 = builder84.build();
        retrofit.RestAdapter restAdapter88 = builder84.build();
        retrofit.client.Client client89 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder90 = builder84.setClient(client89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(restAdapter30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(restAdapter44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(restAdapter77);
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(restAdapter87);
        org.junit.Assert.assertNotNull(restAdapter88);
    }

    @Test
    public void test04497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04497");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder2.setLog(log17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLog(log20);
        log20.log("hi!");
        retrofit.RestAdapter.Builder builder24 = builder2.setLog(log20);
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.RestAdapter.Builder builder28 = builder26.setServer("hi!");
        retrofit.RestAdapter.Builder builder30 = builder26.setServer("hi!");
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLog(log37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder38.setLog(log41);
        retrofit.RestAdapter.Builder builder43 = builder35.setLog(log41);
        log41.log("hi!");
        log41.log("hi!");
        log41.log("");
        log41.log("");
        retrofit.RestAdapter.Builder builder52 = builder30.setLog(log41);
        log41.log("hi!");
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder52);
    }

    @Test
    public void test04498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04498");
        retrofit.client.Header[] headerArray18 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList19 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList19, headerArray18);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList19, typedOutput21);
        java.lang.String str23 = request22.getMethod();
        java.util.List<retrofit.client.Header> headerList24 = request22.getHeaders();
        java.util.List<retrofit.client.Header> headerList25 = request22.getHeaders();
        java.util.List<retrofit.client.Header> headerList26 = request22.getHeaders();
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("", "", headerList26, typedOutput27);
        retrofit.mime.TypedOutput typedOutput29 = request28.getBody();
        java.util.List<retrofit.client.Header> headerList30 = request28.getHeaders();
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("", "", headerList30, typedOutput31);
        retrofit.mime.TypedOutput typedOutput33 = null;
        retrofit.client.Request request34 = new retrofit.client.Request("", "hi!", headerList30, typedOutput33);
        retrofit.mime.TypedOutput typedOutput35 = null;
        retrofit.client.Request request36 = new retrofit.client.Request("hi!", "", headerList30, typedOutput35);
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("", "", headerList30, typedOutput37);
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("hi!", "", headerList30, typedOutput39);
        retrofit.mime.TypedOutput typedOutput41 = null;
        retrofit.client.Request request42 = new retrofit.client.Request("", "", headerList30, typedOutput41);
        retrofit.mime.TypedOutput typedOutput43 = null;
        retrofit.client.Request request44 = new retrofit.client.Request("", "", headerList30, typedOutput43);
        java.lang.String str45 = request44.getMethod();
        org.junit.Assert.assertNotNull(headerArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(headerList24);
        org.junit.Assert.assertNotNull(headerList25);
        org.junit.Assert.assertNotNull(headerList26);
        org.junit.Assert.assertNull(typedOutput29);
        org.junit.Assert.assertNotNull(headerList30);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
    }

    @Test
    public void test04499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04499");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLog(log4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder14 = builder10.setLog(log13);
        retrofit.RestAdapter.Builder builder15 = builder7.setLog(log13);
        retrofit.RestAdapter.Builder builder16 = builder2.setLog(log13);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder17.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        retrofit.RestAdapter.Builder builder28 = builder24.setLog(log26);
        retrofit.RestAdapter.Builder builder30 = builder28.setServer("hi!");
        retrofit.RestAdapter.Builder builder32 = builder28.setServer("hi!");
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLog(log34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLog(log37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLog(log42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder43.setLog(log46);
        retrofit.RestAdapter.Builder builder48 = builder40.setLog(log46);
        retrofit.RestAdapter.Builder builder49 = builder35.setLog(log46);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLog(log51);
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLog(log54);
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder57 = builder55.setLogLevel(logLevel56);
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder60 = builder58.setLog(log59);
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder62 = builder60.setLogLevel(logLevel61);
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder64 = builder60.setLog(log63);
        retrofit.RestAdapter.Builder builder65 = builder57.setLog(log63);
        retrofit.RestAdapter.Builder builder66 = builder50.setLog(log63);
        retrofit.RestAdapter.Builder builder67 = builder35.setLog(log63);
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder68.setLog(log69);
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder72 = builder70.setLogLevel(logLevel71);
        retrofit.RestAdapter.Builder builder73 = builder67.setLogLevel(logLevel71);
        boolean boolean74 = logLevel71.log();
        retrofit.RestAdapter.Builder builder75 = builder28.setLogLevel(logLevel71);
        retrofit.client.Client client76 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder77 = builder28.setClient(client76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(builder75);
    }

    @Test
    public void test04500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04500");
        retrofit.client.Header[] headerArray12 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList13 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList13, headerArray12);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList13, typedOutput15);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList13, typedOutput17);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList13, typedOutput19);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList13, typedOutput21);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList13, typedOutput23);
        java.util.List<retrofit.client.Header> headerList25 = request24.getHeaders();
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("hi!", "hi!", headerList25, typedOutput26);
        org.junit.Assert.assertNotNull(headerArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(headerList25);
    }
}

