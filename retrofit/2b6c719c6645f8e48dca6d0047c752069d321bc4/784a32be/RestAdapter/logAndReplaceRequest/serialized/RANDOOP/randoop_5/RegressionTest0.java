import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.Server server2 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder3 = builder0.setServer(server2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter1);
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.client.Client.Provider provider2 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder3 = builder0.setClient(provider2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter1);
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder4 = builder0.setLog(log3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Log may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder2 = builder0.setConverter(converter1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.Server server3 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder4 = builder0.setServer(server3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections collections1 = serializedObjectSupporter0.deserializeObjectList1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Collections$UnmodifiableRandomAccessList cannot be cast to java.util.Collections");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections collections3 = serializedObjectSupporter0.deserializeObjectList1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Collections$UnmodifiableRandomAccessList cannot be cast to java.util.Collections");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        retrofit.ErrorHandler errorHandler5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder6 = builder0.setErrorHandler(errorHandler5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        retrofit.client.Client.Provider provider5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder6 = builder0.setClient(provider5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter3();
        builder0.converter = gsonConverter5;
        java.util.concurrent.Executor executor7 = null;
        java.util.concurrent.Executor executor8 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder9 = builder0.setExecutors(executor7, executor8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(gsonConverter5);
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter3();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter4 = serializedObjectSupporter0.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertNotNull(gsonConverter3);
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder5 = builder0.setExecutors(executor3, executor4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.lang.Class<?> wildcardClass3 = builder0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        java.lang.String str0 = retrofit.RestAdapter.THREAD_PREFIX;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "Retrofit-" + "'", str0, "Retrofit-");
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter1 = builder0.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = null;
        builder0.setcallbackExecutor(executor3);
        java.util.concurrent.Executor executor5 = null;
        builder0.sethttpExecutor(executor5);
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest1();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter5 = serializedObjectSupporter0.deserializeObjectLogLevel2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(request4);
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter3 = serializedObjectSupporter0.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        java.util.concurrent.Executor executor3 = null;
        builder0.httpExecutor = executor3;
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request6 = serializedObjectSupporter5.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter5.deserializeObjectConverter2();
        builder0.serializedObjectSupporter = serializedObjectSupporter5;
        java.util.concurrent.Executor executor9 = builder0.callbackExecutor;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNull(executor9);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        java.util.concurrent.Executor executor5 = builder0.callbackExecutor;
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        builder0.log = log6;
        retrofit.Profiler profiler8 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder9 = builder0.setProfiler(profiler8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNotNull(log6);
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        java.lang.String str0 = retrofit.RestAdapter.IDLE_THREAD_NAME;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "Retrofit-Idle" + "'", str0, "Retrofit-Idle");
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.converter.Converter converter3 = builder0.converter;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder6 = builder0.setExecutors(executor4, executor5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter3);
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.client.Client.Provider provider2 = null;
        builder0.setclientProvider(provider2);
        retrofit.ErrorHandler errorHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder5 = builder0.setErrorHandler(errorHandler4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter1);
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.RequestInterceptor requestInterceptor3 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections collections4 = serializedObjectSupporter0.deserializeObjectList1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Collections$UnmodifiableRandomAccessList cannot be cast to java.util.Collections");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(requestInterceptor3);
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.client.Client.Provider provider2 = null;
        builder0.setclientProvider(provider2);
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor5 = null;
        builder4.sethttpExecutor(executor5);
        retrofit.RestAdapter.Log log7 = null;
        builder4.log = log7;
        java.util.concurrent.Executor executor9 = builder4.callbackExecutor;
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        builder4.log = log10;
        retrofit.RestAdapter.Builder builder12 = builder0.setLog(log10);
        log10.log("http://example.com/");
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        java.util.concurrent.Executor executor3 = null;
        builder0.httpExecutor = executor3;
        retrofit.client.Client client5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder6 = builder0.setClient(client5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = null;
        builder0.setcallbackExecutor(executor3);
        retrofit.ErrorHandler errorHandler5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder6 = builder0.setErrorHandler(errorHandler5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter3 = serializedObjectSupporter0.deserializeObjectLogLevel1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Retrofit-" + "'", str2, "Retrofit-");
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest8();
        java.lang.String str2 = request1.getMethod();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "GET" + "'", str2, "GET");
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.converter.Converter converter3 = builder0.converter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("GET");
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder8 = builder0.setExecutors(executor6, executor7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(builder5);
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest6();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections collections4 = serializedObjectSupporter0.deserializeObjectList1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Collections$UnmodifiableRandomAccessList cannot be cast to java.util.Collections");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.mime.TypedOutput typedOutput4 = request3.body;
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNull(typedOutput4);
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter8();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections collections4 = serializedObjectSupporter0.deserializeObjectList1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Collections$UnmodifiableRandomAccessList cannot be cast to java.util.Collections");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        java.lang.String str26 = serializedObjectSupporter25.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter25.deserializeObjectConverter3();
        java.lang.String str28 = serializedObjectSupporter25.deserializeObjectString4();
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter25;
        retrofit.client.Response response31 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response33 = restAdapter23.logAndReplaceResponse("Retrofit-", response31, (long) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "GET" + "'", str26, "GET");
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.RequestInterceptor requestInterceptor3 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter4 = serializedObjectSupporter0.deserializeObjectLogLevel1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(requestInterceptor3);
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest7();
        java.util.List<retrofit.client.Header> headerList3 = request2.getHeaders();
        java.util.List<retrofit.client.Header> headerList4 = request2.getHeaders();
        java.util.List<retrofit.client.Header> headerList5 = request2.headers;
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(headerList3);
        org.junit.Assert.assertNotNull(headerList4);
        org.junit.Assert.assertNotNull(headerList5);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.ErrorHandler errorHandler2 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder3 = builder0.setErrorHandler(errorHandler2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(provider1);
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.RestAdapter.Log log4 = builder3.log;
        retrofit.client.Client client5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder6 = builder3.setClient(client5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(log4);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString5();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "POST" + "'", str2, "POST");
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter4();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections collections4 = serializedObjectSupporter0.deserializeObjectList1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Collections$UnmodifiableRandomAccessList cannot be cast to java.util.Collections");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.Profiler profiler3 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder4 = builder0.setProfiler(profiler3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(profiler2);
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter2 = serializedObjectSupporter0.deserializeObjectLogLevel1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter3 = serializedObjectSupporter0.deserializeObjectLogLevel2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.RequestInterceptor requestInterceptor3 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter5 = serializedObjectSupporter0.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(requestInterceptor3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-Idle" + "'", str4, "Retrofit-Idle");
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.client.Client client3 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder4 = builder0.setClient(client3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.RequestInterceptor requestInterceptor4 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections collections5 = serializedObjectSupporter0.deserializeObjectList1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Collections$UnmodifiableRandomAccessList cannot be cast to java.util.Collections");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(requestInterceptor4);
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest5();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString5();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter4 = serializedObjectSupporter0.deserializeObjectLogLevel2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "POST" + "'", str3, "POST");
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest2();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections collections4 = serializedObjectSupporter0.deserializeObjectList1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Collections$UnmodifiableRandomAccessList cannot be cast to java.util.Collections");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest8();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter5 = serializedObjectSupporter0.deserializeObjectLogLevel2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(request4);
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter3();
        java.lang.String str4 = serializedObjectSupporter1.deserializeObjectString4();
        retrofit.Server server5 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.client.Client.Provider provider6 = null;
        java.util.concurrent.Executor executor7 = null;
        java.util.concurrent.Executor executor8 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor11 = serializedObjectSupporter9.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest1();
        retrofit.client.Request request14 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.Profiler profiler16 = null;
        retrofit.ErrorHandler errorHandler17 = null;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor19 = null;
        builder18.sethttpExecutor(executor19);
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        builder18.log = log21;
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter(server5, provider6, executor7, executor8, requestInterceptor11, (retrofit.converter.Converter) gsonConverter15, profiler16, errorHandler17, log21, logLevel23);
        builder0.logLevel = logLevel23;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "GET" + "'", str2, "GET");
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Retrofit-" + "'", str10, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor11);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(request14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = null;
        builder0.setcallbackExecutor(executor3);
        retrofit.client.Client.Provider provider5 = null;
        builder0.clientProvider = provider5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = builder7.serializedObjectSupporter;
        retrofit.Profiler profiler9 = builder7.profiler;
        retrofit.RestAdapter.LogLevel logLevel10 = builder7.logLevel;
        builder0.logLevel = logLevel10;
        java.util.concurrent.Executor executor12 = null;
        builder0.httpExecutor = executor12;
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertNull(profiler9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest3();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter5 = serializedObjectSupporter0.deserializeObjectLogLevel2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(request4);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter3();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter5 = serializedObjectSupporter0.deserializeObjectLogLevel1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.RequestInterceptor requestInterceptor4 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter5 = serializedObjectSupporter0.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(requestInterceptor4);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        java.util.concurrent.Executor executor5 = null;
        builder0.httpExecutor = executor5;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter7.deserializeObjectConverter3();
        java.lang.String str10 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.client.Request request11 = serializedObjectSupporter7.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler12 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        builder0.errorHandler = errorHandler12;
        java.util.concurrent.Executor executor14 = builder0.httpExecutor;
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "GET" + "'", str8, "GET");
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertNotNull(errorHandler12);
        org.junit.Assert.assertNull(executor14);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest4();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections collections5 = serializedObjectSupporter0.deserializeObjectList1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Collections$UnmodifiableRandomAccessList cannot be cast to java.util.Collections");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(request4);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        java.util.concurrent.Executor executor5 = null;
        builder0.httpExecutor = executor5;
        java.util.concurrent.Executor executor7 = null;
        builder0.setcallbackExecutor(executor7);
        java.util.concurrent.Executor executor9 = null;
        builder0.httpExecutor = executor9;
        retrofit.converter.Converter converter11 = builder0.converter;
        org.junit.Assert.assertNull(converter11);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.RestAdapter.LogLevel logLevel4 = builder3.logLevel;
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder6 = builder3.setLogLevel(logLevel5);
        retrofit.client.Client.Provider provider7 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder8 = builder6.setClient(provider7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter5 = serializedObjectSupporter0.deserializeObjectLogLevel2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter3();
        builder0.converter = gsonConverter5;
        builder0.ensureSaneDefaults();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(gsonConverter5);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder6 = builder3.setExecutors(executor4, executor5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest7();
        java.util.List<retrofit.client.Header> headerList3 = request2.headers;
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(headerList3);
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = null;
        builder0.setcallbackExecutor(executor3);
        retrofit.client.Client.Provider provider5 = null;
        builder0.clientProvider = provider5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = builder7.serializedObjectSupporter;
        retrofit.Profiler profiler9 = builder7.profiler;
        retrofit.RestAdapter.LogLevel logLevel10 = builder7.logLevel;
        builder0.logLevel = logLevel10;
        retrofit.RestAdapter.Log log12 = null;
        builder0.log = log12;
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter16 = serializedObjectSupporter14.deserializeObjectConverter3();
        java.lang.String str17 = serializedObjectSupporter14.deserializeObjectString4();
        retrofit.Server server18 = serializedObjectSupporter14.deserializeObjectServer1();
        retrofit.client.Client.Provider provider19 = null;
        java.util.concurrent.Executor executor20 = null;
        java.util.concurrent.Executor executor21 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        java.lang.String str23 = serializedObjectSupporter22.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor24 = serializedObjectSupporter22.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request26 = serializedObjectSupporter25.deserializeObjectRequest1();
        retrofit.client.Request request27 = serializedObjectSupporter25.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter25.deserializeObjectConverter5();
        retrofit.Profiler profiler29 = null;
        retrofit.ErrorHandler errorHandler30 = null;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor32 = null;
        builder31.sethttpExecutor(executor32);
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        builder31.log = log34;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server18, provider19, executor20, executor21, requestInterceptor24, (retrofit.converter.Converter) gsonConverter28, profiler29, errorHandler30, log34, logLevel36);
        java.util.concurrent.Executor executor38 = restAdapter37.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor39 = restAdapter37.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor40 = restAdapter37.requestInterceptor;
        builder0.requestInterceptor = requestInterceptor40;
        java.util.concurrent.Executor executor42 = null;
        java.util.concurrent.Executor executor43 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder44 = builder0.setExecutors(executor42, executor43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertNull(profiler9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "GET" + "'", str15, "GET");
        org.junit.Assert.assertNotNull(gsonConverter16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "http://example.com/" + "'", str17, "http://example.com/");
        org.junit.Assert.assertNotNull(server18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Retrofit-" + "'", str23, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor24);
        org.junit.Assert.assertNotNull(request26);
        org.junit.Assert.assertNotNull(request27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor38);
        org.junit.Assert.assertNotNull(requestInterceptor39);
        org.junit.Assert.assertNotNull(requestInterceptor40);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        java.util.concurrent.Executor executor5 = builder0.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Log log7 = builder0.log;
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(log7);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        retrofit.converter.Converter converter5 = builder0.converter;
        java.util.concurrent.Executor executor6 = null;
        builder0.httpExecutor = executor6;
        java.util.concurrent.Executor executor8 = null;
        builder0.httpExecutor = executor8;
        retrofit.client.Client.Provider provider10 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder11 = builder0.setClient(provider10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter5);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter3();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter4 = serializedObjectSupporter0.deserializeObjectLogLevel2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertNotNull(gsonConverter3);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest1();
        java.util.List<retrofit.client.Header> headerList4 = request3.getHeaders();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(headerList4);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = null;
        builder0.setcallbackExecutor(executor3);
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.FULL;
        builder0.logLevel = logLevel5;
        boolean boolean7 = logLevel5.log();
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.RequestInterceptor requestInterceptor4 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter3();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter7 = serializedObjectSupporter0.deserializeObjectLogLevel2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(requestInterceptor4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter6);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest5();
        java.util.List<retrofit.client.Header> headerList3 = request2.getHeaders();
        java.util.List<retrofit.client.Header> headerList4 = request2.headers;
        retrofit.mime.TypedOutput typedOutput5 = request2.getBody();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(headerList3);
        org.junit.Assert.assertNotNull(headerList4);
        org.junit.Assert.assertNull(typedOutput5);
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter3();
        builder0.converter = gsonConverter5;
        retrofit.client.Client.Provider provider7 = null;
        builder0.clientProvider = provider7;
        retrofit.client.Client.Provider provider9 = null;
        builder0.setclientProvider(provider9);
        retrofit.Server server11 = builder0.server;
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNull(server11);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString3();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "GET" + "'", str3, "GET");
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.RestAdapter.Log log4 = builder3.log;
        retrofit.client.Client.Provider provider5 = null;
        builder3.setclientProvider(provider5);
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(log4);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.RequestInterceptor requestInterceptor4 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter2();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(requestInterceptor4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter6);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertNull(errorHandler2);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request3 = serializedObjectSupporter2.deserializeObjectRequest1();
        retrofit.client.Request request4 = serializedObjectSupporter2.deserializeObjectRequest5();
        java.util.List<retrofit.client.Header> headerList5 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList6 = request4.getHeaders();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request10 = serializedObjectSupporter9.deserializeObjectRequest1();
        retrofit.client.Request request11 = serializedObjectSupporter9.deserializeObjectRequest5();
        java.util.List<retrofit.client.Header> headerList12 = request11.getHeaders();
        java.util.List<retrofit.client.Header> headerList13 = request11.headers;
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request15 = serializedObjectSupporter14.deserializeObjectRequest8();
        retrofit.mime.TypedString typedString16 = serializedObjectSupporter14.deserializeObjectTypedOutput2();
        retrofit.client.Request request17 = new retrofit.client.Request("GET", "http://example.com/", headerList13, (retrofit.mime.TypedOutput) typedString16);
        retrofit.client.Request request18 = new retrofit.client.Request("", "POST", headerList6, (retrofit.mime.TypedOutput) typedString16);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(headerList5);
        org.junit.Assert.assertNotNull(headerList6);
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertNotNull(request15);
        org.junit.Assert.assertNotNull(typedString16);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        java.util.concurrent.Executor executor5 = null;
        builder0.httpExecutor = executor5;
        java.util.concurrent.Executor executor7 = null;
        builder0.setcallbackExecutor(executor7);
        java.util.concurrent.Executor executor9 = builder0.callbackExecutor;
        retrofit.Profiler profiler10 = builder0.profiler;
        java.util.concurrent.Executor executor11 = builder0.getcallbackExecutor();
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNull(profiler10);
        org.junit.Assert.assertNull(executor11);
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.ErrorHandler errorHandler4 = null;
        builder0.errorHandler = errorHandler4;
        java.util.concurrent.Executor executor6 = null;
        builder0.sethttpExecutor(executor6);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter8 = builder0.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.Profiler profiler2 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder3 = builder0.setProfiler(profiler2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter1);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        java.util.concurrent.Executor executor3 = null;
        builder0.httpExecutor = executor3;
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request6 = serializedObjectSupporter5.deserializeObjectRequest1();
        retrofit.Server server7 = serializedObjectSupporter5.deserializeObjectServer1();
        java.lang.String str8 = serializedObjectSupporter5.deserializeObjectString3();
        builder0.serializedObjectSupporter = serializedObjectSupporter5;
        java.util.concurrent.Executor executor10 = builder0.gethttpExecutor();
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(server7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "GET" + "'", str8, "GET");
        org.junit.Assert.assertNull(executor10);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter2();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.RequestInterceptor requestInterceptor4 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString4();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter6 = serializedObjectSupporter0.deserializeObjectLogLevel2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(requestInterceptor4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.RestAdapter.Log log4 = builder0.log;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor6 = null;
        builder5.sethttpExecutor(executor6);
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        builder5.log = log8;
        log8.log("Retrofit-");
        builder0.log = log8;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertNotNull(log8);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter5();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest3();
        retrofit.mime.TypedString typedString3 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        java.lang.Class<?> wildcardClass4 = serializedObjectSupporter0.getClass();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(typedString3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        retrofit.RestAdapter.Log log0 = retrofit.RestAdapter.Log.NONE;
        log0.log("http://example.com/");
        log0.log("hi!");
        org.junit.Assert.assertNotNull(log0);
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest8();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString5();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "POST" + "'", str4, "POST");
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        retrofit.Profiler profiler5 = null;
        builder0.profiler = profiler5;
        java.util.concurrent.Executor executor7 = builder0.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter8.deserializeObjectConverter3();
        java.lang.String str11 = serializedObjectSupporter8.deserializeObjectString4();
        retrofit.Server server12 = serializedObjectSupporter8.deserializeObjectServer1();
        retrofit.client.Client.Provider provider13 = null;
        java.util.concurrent.Executor executor14 = null;
        java.util.concurrent.Executor executor15 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor18 = serializedObjectSupporter16.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request20 = serializedObjectSupporter19.deserializeObjectRequest1();
        retrofit.client.Request request21 = serializedObjectSupporter19.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter19.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.ErrorHandler errorHandler24 = null;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor26 = null;
        builder25.sethttpExecutor(executor26);
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        builder25.log = log28;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter(server12, provider13, executor14, executor15, requestInterceptor18, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler24, log28, logLevel30);
        java.util.concurrent.Executor executor32 = restAdapter31.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor33 = restAdapter31.requestInterceptor;
        retrofit.RestAdapter.Builder builder34 = builder0.setRequestInterceptor(requestInterceptor33);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = builder35.serializedObjectSupporter;
        retrofit.client.Client.Provider provider37 = null;
        builder35.setclientProvider(provider37);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor40 = null;
        builder39.sethttpExecutor(executor40);
        retrofit.RestAdapter.Log log42 = null;
        builder39.log = log42;
        java.util.concurrent.Executor executor44 = builder39.callbackExecutor;
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        builder39.log = log45;
        retrofit.RestAdapter.Builder builder47 = builder35.setLog(log45);
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = new retrofit.SerializedObjectSupporter();
        java.lang.String str49 = serializedObjectSupporter48.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter50 = serializedObjectSupporter48.deserializeObjectConverter3();
        java.lang.String str51 = serializedObjectSupporter48.deserializeObjectString4();
        retrofit.client.Request request52 = serializedObjectSupporter48.deserializeObjectRequest6();
        retrofit.Server server53 = serializedObjectSupporter48.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder54 = builder47.setServer(server53);
        retrofit.client.Client.Provider provider55 = null;
        java.util.concurrent.Executor executor56 = null;
        java.util.concurrent.Executor executor57 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request59 = serializedObjectSupporter58.deserializeObjectRequest1();
        retrofit.client.Request request60 = serializedObjectSupporter58.deserializeObjectRequest5();
        retrofit.RequestInterceptor requestInterceptor61 = serializedObjectSupporter58.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter62 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request63 = serializedObjectSupporter62.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter64 = serializedObjectSupporter62.deserializeObjectConverter2();
        retrofit.Profiler profiler65 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter66 = new retrofit.SerializedObjectSupporter();
        java.lang.String str67 = serializedObjectSupporter66.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter68 = serializedObjectSupporter66.deserializeObjectConverter3();
        java.lang.String str69 = serializedObjectSupporter66.deserializeObjectString4();
        retrofit.client.Request request70 = serializedObjectSupporter66.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler71 = serializedObjectSupporter66.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter73 = builder72.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter74 = builder72.serializedObjectSupporter;
        retrofit.client.Client.Provider provider75 = null;
        builder72.clientProvider = provider75;
        retrofit.RestAdapter.Log log77 = retrofit.RestAdapter.Log.NONE;
        builder72.log = log77;
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor80 = null;
        builder79.setcallbackExecutor(executor80);
        java.util.concurrent.Executor executor82 = null;
        builder79.setcallbackExecutor(executor82);
        retrofit.client.Client.Provider provider84 = null;
        builder79.clientProvider = provider84;
        retrofit.RestAdapter.Builder builder86 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter87 = builder86.serializedObjectSupporter;
        retrofit.Profiler profiler88 = builder86.profiler;
        retrofit.RestAdapter.LogLevel logLevel89 = builder86.logLevel;
        builder79.logLevel = logLevel89;
        retrofit.RestAdapter restAdapter91 = new retrofit.RestAdapter(server53, provider55, executor56, executor57, requestInterceptor61, (retrofit.converter.Converter) gsonConverter64, profiler65, errorHandler71, log77, logLevel89);
        builder0.server = server53;
        retrofit.client.Client.Provider provider93 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder94 = builder0.setClient(provider93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "GET" + "'", str9, "GET");
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "http://example.com/" + "'", str11, "http://example.com/");
        org.junit.Assert.assertNotNull(server12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Retrofit-" + "'", str17, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor18);
        org.junit.Assert.assertNotNull(request20);
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor32);
        org.junit.Assert.assertNotNull(requestInterceptor33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNull(serializedObjectSupporter36);
        org.junit.Assert.assertNull(executor44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "GET" + "'", str49, "GET");
        org.junit.Assert.assertNotNull(gsonConverter50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "http://example.com/" + "'", str51, "http://example.com/");
        org.junit.Assert.assertNotNull(request52);
        org.junit.Assert.assertNotNull(server53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(request59);
        org.junit.Assert.assertNotNull(request60);
        org.junit.Assert.assertNotNull(requestInterceptor61);
        org.junit.Assert.assertNotNull(request63);
        org.junit.Assert.assertNotNull(gsonConverter64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "GET" + "'", str67, "GET");
        org.junit.Assert.assertNotNull(gsonConverter68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "http://example.com/" + "'", str69, "http://example.com/");
        org.junit.Assert.assertNotNull(request70);
        org.junit.Assert.assertNotNull(errorHandler71);
        org.junit.Assert.assertNull(serializedObjectSupporter73);
        org.junit.Assert.assertNull(serializedObjectSupporter74);
        org.junit.Assert.assertNotNull(log77);
        org.junit.Assert.assertNull(serializedObjectSupporter87);
        org.junit.Assert.assertNull(profiler88);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        retrofit.Profiler profiler5 = null;
        builder0.profiler = profiler5;
        retrofit.Profiler profiler7 = builder0.profiler;
        org.junit.Assert.assertNull(profiler7);
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        retrofit.converter.Converter converter5 = builder0.converter;
        java.util.concurrent.Executor executor6 = null;
        builder0.httpExecutor = executor6;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request9 = serializedObjectSupporter8.deserializeObjectRequest1();
        retrofit.Server server10 = serializedObjectSupporter8.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter8.deserializeObjectConverter3();
        builder0.converter = gsonConverter11;
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter13.deserializeObjectConverter3();
        java.lang.String str16 = serializedObjectSupporter13.deserializeObjectString4();
        retrofit.Server server17 = serializedObjectSupporter13.deserializeObjectServer1();
        retrofit.client.Client.Provider provider18 = null;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = new retrofit.SerializedObjectSupporter();
        java.lang.String str22 = serializedObjectSupporter21.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor23 = serializedObjectSupporter21.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request25 = serializedObjectSupporter24.deserializeObjectRequest1();
        retrofit.client.Request request26 = serializedObjectSupporter24.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter24.deserializeObjectConverter5();
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor31 = null;
        builder30.sethttpExecutor(executor31);
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        builder30.log = log33;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter(server17, provider18, executor19, executor20, requestInterceptor23, (retrofit.converter.Converter) gsonConverter27, profiler28, errorHandler29, log33, logLevel35);
        java.util.concurrent.Executor executor37 = restAdapter36.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor38 = restAdapter36.requestInterceptor;
        builder0.requestInterceptor = requestInterceptor38;
        retrofit.converter.Converter converter40 = builder0.converter;
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(request9);
        org.junit.Assert.assertNotNull(server10);
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "GET" + "'", str14, "GET");
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(server17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Retrofit-" + "'", str22, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor23);
        org.junit.Assert.assertNotNull(request25);
        org.junit.Assert.assertNotNull(request26);
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertNotNull(requestInterceptor38);
        org.junit.Assert.assertNotNull(converter40);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request5 = serializedObjectSupporter4.deserializeObjectRequest1();
        retrofit.client.Request request6 = serializedObjectSupporter4.deserializeObjectRequest5();
        java.lang.String str7 = serializedObjectSupporter4.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter4.deserializeObjectConverter7();
        retrofit.Server server9 = serializedObjectSupporter4.deserializeObjectServer1();
        retrofit.client.Request request10 = serializedObjectSupporter4.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler11 = serializedObjectSupporter4.deserializeObjectErrorHandler1();
        builder0.errorHandler = errorHandler11;
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "POST" + "'", str7, "POST");
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertNotNull(errorHandler11);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = builder0.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel4 = builder0.logLevel;
        retrofit.Profiler profiler5 = builder0.profiler;
        retrofit.RestAdapter.Builder builder7 = builder0.setServer("hi!");
        retrofit.client.Client.Provider provider8 = null;
        builder7.setclientProvider(provider8);
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler5);
        org.junit.Assert.assertNotNull(builder7);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor27 = restAdapter23.getrequestInterceptor();
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter23.getLogLevel();
        java.lang.Throwable throwable29 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter23.logException(throwable29, "POST");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.RequestInterceptor requestInterceptor4 = builder3.requestInterceptor;
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(requestInterceptor4);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.LogLevel logLevel3 = builder0.logLevel;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        java.lang.String str5 = serializedObjectSupporter4.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter4.deserializeObjectConverter3();
        java.lang.String str7 = serializedObjectSupporter4.deserializeObjectString4();
        retrofit.client.Request request8 = serializedObjectSupporter4.deserializeObjectRequest6();
        retrofit.Server server9 = serializedObjectSupporter4.deserializeObjectServer1();
        retrofit.client.Client.Provider provider10 = null;
        java.util.concurrent.Executor executor11 = null;
        java.util.concurrent.Executor executor12 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor15 = serializedObjectSupporter13.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor17 = null;
        builder16.sethttpExecutor(executor17);
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = new retrofit.SerializedObjectSupporter();
        java.lang.String str20 = serializedObjectSupporter19.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter19.deserializeObjectConverter3();
        builder16.converter = gsonConverter21;
        retrofit.Profiler profiler23 = null;
        retrofit.ErrorHandler errorHandler24 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        java.lang.String str26 = serializedObjectSupporter25.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter25.deserializeObjectConverter3();
        java.lang.String str28 = serializedObjectSupporter25.deserializeObjectString4();
        retrofit.Server server29 = serializedObjectSupporter25.deserializeObjectServer1();
        retrofit.client.Client.Provider provider30 = null;
        java.util.concurrent.Executor executor31 = null;
        java.util.concurrent.Executor executor32 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        java.lang.String str34 = serializedObjectSupporter33.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor35 = serializedObjectSupporter33.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request37 = serializedObjectSupporter36.deserializeObjectRequest1();
        retrofit.client.Request request38 = serializedObjectSupporter36.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter36.deserializeObjectConverter5();
        retrofit.Profiler profiler40 = null;
        retrofit.ErrorHandler errorHandler41 = null;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor43 = null;
        builder42.sethttpExecutor(executor43);
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        builder42.log = log45;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server29, provider30, executor31, executor32, requestInterceptor35, (retrofit.converter.Converter) gsonConverter39, profiler40, errorHandler41, log45, logLevel47);
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = new retrofit.SerializedObjectSupporter();
        java.lang.String str50 = serializedObjectSupporter49.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter51 = serializedObjectSupporter49.deserializeObjectConverter3();
        java.lang.String str52 = serializedObjectSupporter49.deserializeObjectString4();
        retrofit.Server server53 = serializedObjectSupporter49.deserializeObjectServer1();
        retrofit.client.Client.Provider provider54 = null;
        java.util.concurrent.Executor executor55 = null;
        java.util.concurrent.Executor executor56 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter57 = new retrofit.SerializedObjectSupporter();
        java.lang.String str58 = serializedObjectSupporter57.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor59 = serializedObjectSupporter57.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request61 = serializedObjectSupporter60.deserializeObjectRequest1();
        retrofit.client.Request request62 = serializedObjectSupporter60.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter63 = serializedObjectSupporter60.deserializeObjectConverter5();
        retrofit.Profiler profiler64 = null;
        retrofit.ErrorHandler errorHandler65 = null;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor67 = null;
        builder66.sethttpExecutor(executor67);
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        builder66.log = log69;
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter72 = new retrofit.RestAdapter(server53, provider54, executor55, executor56, requestInterceptor59, (retrofit.converter.Converter) gsonConverter63, profiler64, errorHandler65, log69, logLevel71);
        java.util.concurrent.Executor executor73 = restAdapter72.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor74 = restAdapter72.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor75 = restAdapter72.requestInterceptor;
        java.lang.String str76 = restAdapter72.getTHREAD_PREFIX();
        retrofit.SerializedObjectSupporter serializedObjectSupporter77 = restAdapter72.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel78 = restAdapter72.logLevel;
        retrofit.RestAdapter restAdapter79 = new retrofit.RestAdapter(server9, provider10, executor11, executor12, requestInterceptor15, (retrofit.converter.Converter) gsonConverter21, profiler23, errorHandler24, log45, logLevel78);
        retrofit.RestAdapter.Builder builder80 = builder0.setRequestInterceptor(requestInterceptor15);
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "GET" + "'", str5, "GET");
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Retrofit-" + "'", str14, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "GET" + "'", str20, "GET");
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "GET" + "'", str26, "GET");
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Retrofit-" + "'", str34, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor35);
        org.junit.Assert.assertNotNull(request37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "GET" + "'", str50, "GET");
        org.junit.Assert.assertNotNull(gsonConverter51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "http://example.com/" + "'", str52, "http://example.com/");
        org.junit.Assert.assertNotNull(server53);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Retrofit-" + "'", str58, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor59);
        org.junit.Assert.assertNotNull(request61);
        org.junit.Assert.assertNotNull(request62);
        org.junit.Assert.assertNotNull(gsonConverter63);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor73);
        org.junit.Assert.assertNotNull(requestInterceptor74);
        org.junit.Assert.assertNotNull(requestInterceptor75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Retrofit-" + "'", str76, "Retrofit-");
        org.junit.Assert.assertNull(serializedObjectSupporter77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder80);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest8();
        java.util.List<retrofit.client.Header> headerList2 = request1.getHeaders();
        java.lang.String str3 = request1.url;
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(headerList2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        java.lang.String str25 = restAdapter23.getIDLE_THREAD_NAME();
        java.lang.String str26 = restAdapter23.getTHREAD_PREFIX();
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = builder27.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = builder29.serializedObjectSupporter;
        retrofit.Profiler profiler31 = builder29.profiler;
        retrofit.RestAdapter.LogLevel logLevel32 = builder29.logLevel;
        builder27.logLevel = logLevel32;
        restAdapter23.setLogLevel(logLevel32);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Retrofit-Idle" + "'", str25, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-" + "'", str26, "Retrofit-");
        org.junit.Assert.assertNull(serializedObjectSupporter28);
        org.junit.Assert.assertNull(serializedObjectSupporter30);
        org.junit.Assert.assertNull(profiler31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        java.lang.String str27 = restAdapter23.getTHREAD_PREFIX();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = restAdapter23.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter23.logLevel;
        java.lang.String str30 = restAdapter23.getTHREAD_PREFIX();
        retrofit.client.Client.Provider provider31 = restAdapter23.clientProvider;
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = restAdapter23.serializedObjectSupporter;
        retrofit.converter.Converter converter33 = restAdapter23.getconverter();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Retrofit-" + "'", str27, "Retrofit-");
        org.junit.Assert.assertNull(serializedObjectSupporter28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Retrofit-" + "'", str30, "Retrofit-");
        org.junit.Assert.assertNull(provider31);
        org.junit.Assert.assertNull(serializedObjectSupporter32);
        org.junit.Assert.assertNotNull(converter33);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        retrofit.Profiler profiler5 = null;
        builder0.profiler = profiler5;
        java.util.concurrent.Executor executor7 = builder0.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter8.deserializeObjectConverter3();
        java.lang.String str11 = serializedObjectSupporter8.deserializeObjectString4();
        retrofit.Server server12 = serializedObjectSupporter8.deserializeObjectServer1();
        retrofit.client.Client.Provider provider13 = null;
        java.util.concurrent.Executor executor14 = null;
        java.util.concurrent.Executor executor15 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor18 = serializedObjectSupporter16.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request20 = serializedObjectSupporter19.deserializeObjectRequest1();
        retrofit.client.Request request21 = serializedObjectSupporter19.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter19.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.ErrorHandler errorHandler24 = null;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor26 = null;
        builder25.sethttpExecutor(executor26);
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        builder25.log = log28;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter(server12, provider13, executor14, executor15, requestInterceptor18, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler24, log28, logLevel30);
        java.util.concurrent.Executor executor32 = restAdapter31.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor33 = restAdapter31.requestInterceptor;
        retrofit.RestAdapter.Builder builder34 = builder0.setRequestInterceptor(requestInterceptor33);
        builder0.ensureSaneDefaults();
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "GET" + "'", str9, "GET");
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "http://example.com/" + "'", str11, "http://example.com/");
        org.junit.Assert.assertNotNull(server12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Retrofit-" + "'", str17, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor18);
        org.junit.Assert.assertNotNull(request20);
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor32);
        org.junit.Assert.assertNotNull(requestInterceptor33);
        org.junit.Assert.assertNotNull(builder34);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = null;
        builder0.setcallbackExecutor(executor3);
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.FULL;
        builder0.logLevel = logLevel5;
        retrofit.client.Client.Provider provider7 = builder0.getclientProvider();
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = builder0.serializedObjectSupporter;
        retrofit.client.Client.Provider provider9 = null;
        builder0.clientProvider = provider9;
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = null;
        builder0.setcallbackExecutor(executor3);
        retrofit.client.Client.Provider provider5 = null;
        builder0.clientProvider = provider5;
        retrofit.Profiler profiler7 = null;
        builder0.profiler = profiler7;
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request10 = serializedObjectSupporter9.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter2();
        retrofit.client.Request request12 = serializedObjectSupporter9.deserializeObjectRequest8();
        retrofit.RequestInterceptor requestInterceptor13 = serializedObjectSupporter9.deserializeObjectRequestInterceptor1();
        builder0.serializedObjectSupporter = serializedObjectSupporter9;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder17 = builder0.setExecutors(executor15, executor16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(requestInterceptor13);
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = retrofit.RestAdapter.Log.NONE;
        builder0.log = log3;
        log3.log("");
        log3.log("POST");
        log3.log("Retrofit-Idle");
        org.junit.Assert.assertNotNull(log3);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        retrofit.client.Client.Provider provider3 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder4 = builder0.setClient(provider3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter0.deserializeObjectConverter8();
        java.lang.String str9 = serializedObjectSupporter0.deserializeObjectString1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest6();
        java.util.List<retrofit.client.Header> headerList4 = request3.getHeaders();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(headerList4);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter23.logLevel = logLevel25;
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = restAdapter23.serializedObjectSupporter;
        retrofit.RestAdapter.Log log28 = restAdapter23.log;
        java.util.concurrent.Executor executor29 = restAdapter23.httpExecutor;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(serializedObjectSupporter27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNull(executor29);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.client.Client.Provider provider2 = null;
        builder0.setclientProvider(provider2);
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor5 = null;
        builder4.sethttpExecutor(executor5);
        retrofit.RestAdapter.Log log7 = null;
        builder4.log = log7;
        java.util.concurrent.Executor executor9 = builder4.callbackExecutor;
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        builder4.log = log10;
        retrofit.RestAdapter.Builder builder12 = builder0.setLog(log10);
        retrofit.client.Client.Provider provider13 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder14 = builder0.setClient(provider13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter23.logLevel = logLevel25;
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = restAdapter23.serializedObjectSupporter;
        retrofit.Profiler profiler28 = restAdapter23.profiler;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(serializedObjectSupporter27);
        org.junit.Assert.assertNull(profiler28);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        builder0.ensureSaneDefaults();
        retrofit.client.Client.Provider provider4 = null;
        builder0.setclientProvider(provider4);
        java.util.concurrent.Executor executor6 = null;
        builder0.httpExecutor = executor6;
        java.util.concurrent.Executor executor8 = null;
        java.util.concurrent.Executor executor9 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder10 = builder0.setExecutors(executor8, executor9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        java.lang.String str26 = restAdapter23.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        java.util.concurrent.Executor executor28 = restAdapter23.callbackExecutor;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(executor28);
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        java.lang.String str26 = serializedObjectSupporter25.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter25.deserializeObjectConverter3();
        java.lang.String str28 = serializedObjectSupporter25.deserializeObjectString4();
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter25;
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter23.getLogLevel();
        java.lang.String str31 = restAdapter23.getTHREAD_PREFIX();
        java.lang.String str32 = restAdapter23.getIDLE_THREAD_NAME();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "GET" + "'", str26, "GET");
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Retrofit-" + "'", str31, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Retrofit-Idle" + "'", str32, "Retrofit-Idle");
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest1();
        java.lang.String str6 = request5.method;
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "GET" + "'", str6, "GET");
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter23.logLevel = logLevel25;
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = restAdapter23.serializedObjectSupporter;
        retrofit.RestAdapter.Log log28 = restAdapter23.log;
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request30 = serializedObjectSupporter29.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter32 = serializedObjectSupporter29.deserializeObjectConverter8();
        java.lang.String str33 = serializedObjectSupporter29.deserializeObjectString4();
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter29;
        retrofit.converter.GsonConverter gsonConverter35 = serializedObjectSupporter29.deserializeObjectConverter4();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(serializedObjectSupporter27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(request30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(gsonConverter32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter35);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter8();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        retrofit.ErrorHandler errorHandler27 = restAdapter23.geterrorHandler();
        java.util.concurrent.Executor executor28 = restAdapter23.gethttpExecutor();
        java.lang.String str29 = restAdapter23.getTHREAD_PREFIX();
        retrofit.client.Response response31 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response33 = restAdapter23.logAndReplaceResponse("Retrofit-Idle", response31, 1L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNull(errorHandler27);
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Retrofit-" + "'", str29, "Retrofit-");
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor2 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter8();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter5 = serializedObjectSupporter0.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Retrofit-" + "'", str1, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.converter;
        java.util.concurrent.Executor executor26 = restAdapter23.callbackExecutor;
        retrofit.client.Response response28 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response30 = restAdapter23.logAndReplaceResponse("", response28, (long) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertNull(executor26);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter4();
        java.lang.String str8 = serializedObjectSupporter0.deserializeObjectString3();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "GET" + "'", str8, "GET");
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.RestAdapter.Log log4 = builder3.log;
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.HEADERS;
        builder3.logLevel = logLevel5;
        boolean boolean7 = logLevel5.log();
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.converter;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        retrofit.client.Response response28 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response30 = restAdapter23.logAndReplaceResponse("Retrofit-", response28, (long) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.converter.Converter converter3 = builder0.converter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("GET");
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor7 = null;
        builder6.sethttpExecutor(executor7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter3();
        builder6.converter = gsonConverter11;
        retrofit.client.Client.Provider provider13 = null;
        builder6.clientProvider = provider13;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter3();
        java.lang.String str18 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter15.deserializeObjectConverter6();
        builder6.converter = gsonConverter19;
        builder0.converter = gsonConverter19;
        retrofit.RestAdapter restAdapter22 = builder0.build();
        retrofit.converter.Converter converter23 = builder0.converter;
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "GET" + "'", str10, "GET");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "GET" + "'", str16, "GET");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNotNull(converter23);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        java.lang.String str27 = restAdapter23.getTHREAD_PREFIX();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = restAdapter23.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter23.logLevel;
        java.lang.String str30 = restAdapter23.getTHREAD_PREFIX();
        retrofit.ErrorHandler errorHandler31 = restAdapter23.geterrorHandler();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Retrofit-" + "'", str27, "Retrofit-");
        org.junit.Assert.assertNull(serializedObjectSupporter28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Retrofit-" + "'", str30, "Retrofit-");
        org.junit.Assert.assertNull(errorHandler31);
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        java.util.concurrent.Executor executor3 = null;
        builder0.httpExecutor = executor3;
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request6 = serializedObjectSupporter5.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter5.deserializeObjectConverter2();
        builder0.serializedObjectSupporter = serializedObjectSupporter5;
        retrofit.client.Client.Provider provider9 = builder0.getclientProvider();
        retrofit.client.Client.Provider provider10 = builder0.getclientProvider();
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNull(provider10);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        java.lang.String str26 = restAdapter23.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        java.util.concurrent.Executor executor28 = restAdapter23.httpExecutor;
        java.util.concurrent.Executor executor29 = restAdapter23.httpExecutor;
        java.lang.Throwable throwable30 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter23.logException(throwable30, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNull(executor29);
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.converter.Converter converter4 = builder3.converter;
        java.util.concurrent.Executor executor5 = null;
        builder3.sethttpExecutor(executor5);
        retrofit.converter.Converter converter7 = builder3.converter;
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNull(converter7);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        retrofit.Profiler profiler5 = null;
        builder0.profiler = profiler5;
        java.util.concurrent.Executor executor7 = builder0.callbackExecutor;
        retrofit.RestAdapter.Log log8 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder9 = builder0.setLog(log8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Log may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(executor7);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.RequestInterceptor requestInterceptor4 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter1();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter7 = serializedObjectSupporter0.deserializeObjectLogLevel1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(requestInterceptor4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter6);
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter7();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-Idle" + "'", str4, "Retrofit-Idle");
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        java.lang.String str26 = restAdapter23.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        retrofit.Profiler profiler28 = restAdapter23.getprofiler();
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter23.new RestHandler();
        java.lang.Throwable throwable30 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter23.logException(throwable30, "Retrofit-Idle");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(profiler28);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest4();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter5 = serializedObjectSupporter0.deserializeObjectLogLevel1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "GET" + "'", str3, "GET");
        org.junit.Assert.assertNotNull(request4);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        boolean boolean25 = logLevel24.log();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest5();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter4();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString3();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "POST" + "'", str3, "POST");
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "GET" + "'", str5, "GET");
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest8();
        java.lang.String str2 = request1.method;
        retrofit.mime.TypedOutput typedOutput3 = request1.body;
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "GET" + "'", str2, "GET");
        org.junit.Assert.assertNull(typedOutput3);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        retrofit.client.Client.Provider provider3 = null;
        builder0.clientProvider = provider3;
        retrofit.Server server5 = builder0.server;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNull(server5);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        retrofit.ErrorHandler errorHandler27 = restAdapter23.geterrorHandler();
        java.util.concurrent.Executor executor28 = restAdapter23.gethttpExecutor();
        java.lang.String str29 = restAdapter23.getTHREAD_PREFIX();
        retrofit.Profiler profiler30 = restAdapter23.getprofiler();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNull(errorHandler27);
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Retrofit-" + "'", str29, "Retrofit-");
        org.junit.Assert.assertNull(profiler30);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest8();
        java.lang.String str5 = request4.getMethod();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "GET" + "'", str5, "GET");
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        java.util.concurrent.Executor executor3 = null;
        builder0.httpExecutor = executor3;
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request6 = serializedObjectSupporter5.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter5.deserializeObjectConverter2();
        builder0.serializedObjectSupporter = serializedObjectSupporter5;
        retrofit.client.Request request9 = serializedObjectSupporter5.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter5.deserializeObjectConverter5();
        retrofit.Server server11 = serializedObjectSupporter5.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter5.deserializeObjectConverter2();
        retrofit.client.Request request13 = serializedObjectSupporter5.deserializeObjectRequest3();
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(request9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNotNull(request13);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = null;
        builder0.setcallbackExecutor(executor3);
        retrofit.client.Client.Provider provider5 = null;
        builder0.clientProvider = provider5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = builder7.serializedObjectSupporter;
        retrofit.Profiler profiler9 = builder7.profiler;
        retrofit.RestAdapter.LogLevel logLevel10 = builder7.logLevel;
        builder0.logLevel = logLevel10;
        retrofit.RestAdapter.Log log12 = null;
        builder0.log = log12;
        java.util.concurrent.Executor executor14 = builder0.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter3();
        java.lang.String str18 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.client.Request request19 = serializedObjectSupporter15.deserializeObjectRequest6();
        retrofit.Server server20 = serializedObjectSupporter15.deserializeObjectServer1();
        retrofit.client.Client.Provider provider21 = null;
        java.util.concurrent.Executor executor22 = null;
        java.util.concurrent.Executor executor23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        java.lang.String str25 = serializedObjectSupporter24.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor26 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor28 = null;
        builder27.sethttpExecutor(executor28);
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        java.lang.String str31 = serializedObjectSupporter30.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter32 = serializedObjectSupporter30.deserializeObjectConverter3();
        builder27.converter = gsonConverter32;
        retrofit.Profiler profiler34 = null;
        retrofit.ErrorHandler errorHandler35 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        java.lang.String str37 = serializedObjectSupporter36.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter3();
        java.lang.String str39 = serializedObjectSupporter36.deserializeObjectString4();
        retrofit.Server server40 = serializedObjectSupporter36.deserializeObjectServer1();
        retrofit.client.Client.Provider provider41 = null;
        java.util.concurrent.Executor executor42 = null;
        java.util.concurrent.Executor executor43 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = new retrofit.SerializedObjectSupporter();
        java.lang.String str45 = serializedObjectSupporter44.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor46 = serializedObjectSupporter44.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request48 = serializedObjectSupporter47.deserializeObjectRequest1();
        retrofit.client.Request request49 = serializedObjectSupporter47.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter50 = serializedObjectSupporter47.deserializeObjectConverter5();
        retrofit.Profiler profiler51 = null;
        retrofit.ErrorHandler errorHandler52 = null;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor54 = null;
        builder53.sethttpExecutor(executor54);
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        builder53.log = log56;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter59 = new retrofit.RestAdapter(server40, provider41, executor42, executor43, requestInterceptor46, (retrofit.converter.Converter) gsonConverter50, profiler51, errorHandler52, log56, logLevel58);
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = new retrofit.SerializedObjectSupporter();
        java.lang.String str61 = serializedObjectSupporter60.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter62 = serializedObjectSupporter60.deserializeObjectConverter3();
        java.lang.String str63 = serializedObjectSupporter60.deserializeObjectString4();
        retrofit.Server server64 = serializedObjectSupporter60.deserializeObjectServer1();
        retrofit.client.Client.Provider provider65 = null;
        java.util.concurrent.Executor executor66 = null;
        java.util.concurrent.Executor executor67 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter68 = new retrofit.SerializedObjectSupporter();
        java.lang.String str69 = serializedObjectSupporter68.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor70 = serializedObjectSupporter68.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter71 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request72 = serializedObjectSupporter71.deserializeObjectRequest1();
        retrofit.client.Request request73 = serializedObjectSupporter71.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter74 = serializedObjectSupporter71.deserializeObjectConverter5();
        retrofit.Profiler profiler75 = null;
        retrofit.ErrorHandler errorHandler76 = null;
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor78 = null;
        builder77.sethttpExecutor(executor78);
        retrofit.RestAdapter.Log log80 = retrofit.RestAdapter.Log.NONE;
        builder77.log = log80;
        retrofit.RestAdapter.LogLevel logLevel82 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter83 = new retrofit.RestAdapter(server64, provider65, executor66, executor67, requestInterceptor70, (retrofit.converter.Converter) gsonConverter74, profiler75, errorHandler76, log80, logLevel82);
        java.util.concurrent.Executor executor84 = restAdapter83.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor85 = restAdapter83.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor86 = restAdapter83.requestInterceptor;
        java.lang.String str87 = restAdapter83.getTHREAD_PREFIX();
        retrofit.SerializedObjectSupporter serializedObjectSupporter88 = restAdapter83.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel89 = restAdapter83.logLevel;
        retrofit.RestAdapter restAdapter90 = new retrofit.RestAdapter(server20, provider21, executor22, executor23, requestInterceptor26, (retrofit.converter.Converter) gsonConverter32, profiler34, errorHandler35, log56, logLevel89);
        builder0.server = server20;
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertNull(profiler9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "GET" + "'", str16, "GET");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(request19);
        org.junit.Assert.assertNotNull(server20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Retrofit-" + "'", str25, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "GET" + "'", str31, "GET");
        org.junit.Assert.assertNotNull(gsonConverter32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "GET" + "'", str37, "GET");
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "http://example.com/" + "'", str39, "http://example.com/");
        org.junit.Assert.assertNotNull(server40);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Retrofit-" + "'", str45, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor46);
        org.junit.Assert.assertNotNull(request48);
        org.junit.Assert.assertNotNull(request49);
        org.junit.Assert.assertNotNull(gsonConverter50);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "GET" + "'", str61, "GET");
        org.junit.Assert.assertNotNull(gsonConverter62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "http://example.com/" + "'", str63, "http://example.com/");
        org.junit.Assert.assertNotNull(server64);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Retrofit-" + "'", str69, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor70);
        org.junit.Assert.assertNotNull(request72);
        org.junit.Assert.assertNotNull(request73);
        org.junit.Assert.assertNotNull(gsonConverter74);
        org.junit.Assert.assertNotNull(log80);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor84);
        org.junit.Assert.assertNotNull(requestInterceptor85);
        org.junit.Assert.assertNotNull(requestInterceptor86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Retrofit-" + "'", str87, "Retrofit-");
        org.junit.Assert.assertNull(serializedObjectSupporter88);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor2 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest6();
        java.lang.String str6 = request5.getMethod();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Retrofit-" + "'", str1, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "GET" + "'", str6, "GET");
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        java.lang.String str25 = restAdapter23.getIDLE_THREAD_NAME();
        retrofit.client.Response response27 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response29 = restAdapter23.logAndReplaceResponse("", response27, (long) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Retrofit-Idle" + "'", str25, "Retrofit-Idle");
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest5();
        java.util.List<retrofit.client.Header> headerList3 = request2.getHeaders();
        java.util.List<retrofit.client.Header> headerList4 = request2.headers;
        java.lang.String str5 = request2.getUrl();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(headerList3);
        org.junit.Assert.assertNotNull(headerList4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor3 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString5();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString4();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Retrofit-" + "'", str2, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "POST" + "'", str4, "POST");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        java.util.concurrent.Executor executor5 = builder0.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = builder8.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = builder8.serializedObjectSupporter;
        java.util.concurrent.Executor executor11 = null;
        builder8.httpExecutor = executor11;
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request14 = serializedObjectSupporter13.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter13.deserializeObjectConverter2();
        builder8.serializedObjectSupporter = serializedObjectSupporter13;
        retrofit.client.Request request17 = serializedObjectSupporter13.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter13.deserializeObjectConverter5();
        retrofit.Server server19 = serializedObjectSupporter13.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter13.deserializeObjectConverter2();
        builder0.converter = gsonConverter20;
        retrofit.client.Client.Provider provider22 = builder0.clientProvider;
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(serializedObjectSupporter7);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertNull(serializedObjectSupporter10);
        org.junit.Assert.assertNotNull(request14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(server19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertNull(provider22);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider6 = null;
        java.util.concurrent.Executor executor7 = null;
        java.util.concurrent.Executor executor8 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor11 = serializedObjectSupporter9.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor13 = null;
        builder12.sethttpExecutor(executor13);
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter3();
        builder12.converter = gsonConverter17;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = new retrofit.SerializedObjectSupporter();
        java.lang.String str22 = serializedObjectSupporter21.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter21.deserializeObjectConverter3();
        java.lang.String str24 = serializedObjectSupporter21.deserializeObjectString4();
        retrofit.Server server25 = serializedObjectSupporter21.deserializeObjectServer1();
        retrofit.client.Client.Provider provider26 = null;
        java.util.concurrent.Executor executor27 = null;
        java.util.concurrent.Executor executor28 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        java.lang.String str30 = serializedObjectSupporter29.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor31 = serializedObjectSupporter29.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request33 = serializedObjectSupporter32.deserializeObjectRequest1();
        retrofit.client.Request request34 = serializedObjectSupporter32.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter35 = serializedObjectSupporter32.deserializeObjectConverter5();
        retrofit.Profiler profiler36 = null;
        retrofit.ErrorHandler errorHandler37 = null;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor39 = null;
        builder38.sethttpExecutor(executor39);
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        builder38.log = log41;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter(server25, provider26, executor27, executor28, requestInterceptor31, (retrofit.converter.Converter) gsonConverter35, profiler36, errorHandler37, log41, logLevel43);
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = new retrofit.SerializedObjectSupporter();
        java.lang.String str46 = serializedObjectSupporter45.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter47 = serializedObjectSupporter45.deserializeObjectConverter3();
        java.lang.String str48 = serializedObjectSupporter45.deserializeObjectString4();
        retrofit.Server server49 = serializedObjectSupporter45.deserializeObjectServer1();
        retrofit.client.Client.Provider provider50 = null;
        java.util.concurrent.Executor executor51 = null;
        java.util.concurrent.Executor executor52 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter53 = new retrofit.SerializedObjectSupporter();
        java.lang.String str54 = serializedObjectSupporter53.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor55 = serializedObjectSupporter53.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request57 = serializedObjectSupporter56.deserializeObjectRequest1();
        retrofit.client.Request request58 = serializedObjectSupporter56.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter59 = serializedObjectSupporter56.deserializeObjectConverter5();
        retrofit.Profiler profiler60 = null;
        retrofit.ErrorHandler errorHandler61 = null;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor63 = null;
        builder62.sethttpExecutor(executor63);
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        builder62.log = log65;
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter(server49, provider50, executor51, executor52, requestInterceptor55, (retrofit.converter.Converter) gsonConverter59, profiler60, errorHandler61, log65, logLevel67);
        java.util.concurrent.Executor executor69 = restAdapter68.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor70 = restAdapter68.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor71 = restAdapter68.requestInterceptor;
        java.lang.String str72 = restAdapter68.getTHREAD_PREFIX();
        retrofit.SerializedObjectSupporter serializedObjectSupporter73 = restAdapter68.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel74 = restAdapter68.logLevel;
        retrofit.RestAdapter restAdapter75 = new retrofit.RestAdapter(server5, provider6, executor7, executor8, requestInterceptor11, (retrofit.converter.Converter) gsonConverter17, profiler19, errorHandler20, log41, logLevel74);
        retrofit.client.Response response77 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response79 = restAdapter75.logAndReplaceResponse("POST", response77, 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Retrofit-" + "'", str10, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "GET" + "'", str16, "GET");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "GET" + "'", str22, "GET");
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Retrofit-" + "'", str30, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor31);
        org.junit.Assert.assertNotNull(request33);
        org.junit.Assert.assertNotNull(request34);
        org.junit.Assert.assertNotNull(gsonConverter35);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "GET" + "'", str46, "GET");
        org.junit.Assert.assertNotNull(gsonConverter47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "http://example.com/" + "'", str48, "http://example.com/");
        org.junit.Assert.assertNotNull(server49);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Retrofit-" + "'", str54, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor55);
        org.junit.Assert.assertNotNull(request57);
        org.junit.Assert.assertNotNull(request58);
        org.junit.Assert.assertNotNull(gsonConverter59);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor69);
        org.junit.Assert.assertNotNull(requestInterceptor70);
        org.junit.Assert.assertNotNull(requestInterceptor71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Retrofit-" + "'", str72, "Retrofit-");
        org.junit.Assert.assertNull(serializedObjectSupporter73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = builder4.serializedObjectSupporter;
        retrofit.client.Client.Provider provider6 = null;
        builder4.setclientProvider(provider6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor9 = null;
        builder8.sethttpExecutor(executor9);
        retrofit.RestAdapter.Log log11 = null;
        builder8.log = log11;
        java.util.concurrent.Executor executor13 = builder8.callbackExecutor;
        retrofit.RestAdapter.Log log14 = retrofit.RestAdapter.Log.NONE;
        builder8.log = log14;
        retrofit.RestAdapter.Builder builder16 = builder4.setLog(log14);
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter17.deserializeObjectConverter3();
        java.lang.String str20 = serializedObjectSupporter17.deserializeObjectString4();
        retrofit.client.Request request21 = serializedObjectSupporter17.deserializeObjectRequest6();
        retrofit.Server server22 = serializedObjectSupporter17.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder23 = builder16.setServer(server22);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer(server22);
        retrofit.Profiler profiler25 = builder24.profiler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter26.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter3();
        retrofit.RestAdapter.Builder builder30 = builder24.setConverter((retrofit.converter.Converter) gsonConverter29);
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(serializedObjectSupporter5);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNotNull(log14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "GET" + "'", str18, "GET");
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "http://example.com/" + "'", str20, "http://example.com/");
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(server22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(profiler25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "GET" + "'", str27, "GET");
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNotNull(builder30);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.converter.Converter converter4 = builder3.converter;
        java.util.concurrent.Executor executor5 = null;
        builder3.sethttpExecutor(executor5);
        retrofit.RestAdapter.Builder builder8 = builder3.setServer("GET");
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = builder8.serializedObjectSupporter;
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        java.util.concurrent.Executor executor5 = builder0.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = builder0.serializedObjectSupporter;
        builder0.ensureSaneDefaults();
        retrofit.client.Client client9 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder10 = builder0.setClient(client9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(serializedObjectSupporter7);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = builder0.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel4 = builder0.logLevel;
        retrofit.Profiler profiler5 = builder0.profiler;
        java.util.concurrent.Executor executor6 = null;
        builder0.callbackExecutor = executor6;
        java.util.concurrent.Executor executor8 = builder0.httpExecutor;
        retrofit.client.Client.Provider provider9 = builder0.clientProvider;
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler5);
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNull(provider9);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest1();
        java.lang.String str4 = request3.getUrl();
        java.lang.String str5 = request3.url;
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter3();
        builder0.converter = gsonConverter5;
        retrofit.client.Client.Provider provider7 = null;
        builder0.clientProvider = provider7;
        retrofit.RestAdapter.LogLevel logLevel9 = builder0.logLevel;
        java.util.concurrent.Executor executor10 = null;
        builder0.setcallbackExecutor(executor10);
        retrofit.converter.Converter converter12 = builder0.converter;
        retrofit.client.Client.Provider provider13 = builder0.clientProvider;
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(converter12);
        org.junit.Assert.assertNull(provider13);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = builder0.requestInterceptor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        java.lang.String str5 = serializedObjectSupporter4.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter4.deserializeObjectConverter3();
        java.lang.String str7 = serializedObjectSupporter4.deserializeObjectString4();
        retrofit.client.Request request8 = serializedObjectSupporter4.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler9 = serializedObjectSupporter4.deserializeObjectErrorHandler1();
        builder0.errorHandler = errorHandler9;
        retrofit.RestAdapter.Log log11 = builder0.log;
        retrofit.Profiler profiler12 = null;
        builder0.profiler = profiler12;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter14 = builder0.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(requestInterceptor3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "GET" + "'", str5, "GET");
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(errorHandler9);
        org.junit.Assert.assertNull(log11);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter8();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter1();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter5);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request3 = serializedObjectSupporter2.deserializeObjectRequest1();
        retrofit.client.Request request4 = serializedObjectSupporter2.deserializeObjectRequest5();
        java.util.List<retrofit.client.Header> headerList5 = request4.getHeaders();
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request7 = serializedObjectSupporter6.deserializeObjectRequest8();
        retrofit.mime.TypedString typedString8 = serializedObjectSupporter6.deserializeObjectTypedOutput2();
        retrofit.client.Request request9 = new retrofit.client.Request("Retrofit-Idle", "", headerList5, (retrofit.mime.TypedOutput) typedString8);
        java.lang.String str10 = request9.url;
        java.lang.String str11 = request9.method;
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(headerList5);
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertNotNull(typedString8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        java.util.concurrent.Executor executor3 = null;
        builder0.httpExecutor = executor3;
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request6 = serializedObjectSupporter5.deserializeObjectRequest1();
        retrofit.Server server7 = serializedObjectSupporter5.deserializeObjectServer1();
        java.lang.String str8 = serializedObjectSupporter5.deserializeObjectString3();
        builder0.serializedObjectSupporter = serializedObjectSupporter5;
        retrofit.mime.TypedString typedString10 = serializedObjectSupporter5.deserializeObjectTypedOutput2();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter5.deserializeObjectConverter1();
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(server7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "GET" + "'", str8, "GET");
        org.junit.Assert.assertNotNull(typedString10);
        org.junit.Assert.assertNotNull(gsonConverter11);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.ErrorHandler errorHandler3 = builder0.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        java.lang.String str5 = serializedObjectSupporter4.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter4.deserializeObjectConverter3();
        java.lang.String str7 = serializedObjectSupporter4.deserializeObjectString4();
        retrofit.Server server8 = serializedObjectSupporter4.deserializeObjectServer1();
        retrofit.client.Client.Provider provider9 = null;
        java.util.concurrent.Executor executor10 = null;
        java.util.concurrent.Executor executor11 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor14 = serializedObjectSupporter12.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request16 = serializedObjectSupporter15.deserializeObjectRequest1();
        retrofit.client.Request request17 = serializedObjectSupporter15.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter15.deserializeObjectConverter5();
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor22 = null;
        builder21.sethttpExecutor(executor22);
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        builder21.log = log24;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter(server8, provider9, executor10, executor11, requestInterceptor14, (retrofit.converter.Converter) gsonConverter18, profiler19, errorHandler20, log24, logLevel26);
        java.util.concurrent.Executor executor28 = restAdapter27.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor29 = restAdapter27.requestInterceptor;
        retrofit.RestAdapter.Builder builder30 = builder0.setRequestInterceptor(requestInterceptor29);
        retrofit.ErrorHandler errorHandler31 = builder30.errorHandler;
        retrofit.client.Client.Provider provider32 = null;
        builder30.setclientProvider(provider32);
        java.util.concurrent.Executor executor34 = null;
        builder30.setcallbackExecutor(executor34);
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "GET" + "'", str5, "GET");
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-" + "'", str13, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor14);
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNotNull(requestInterceptor29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(errorHandler31);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter3();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "GET" + "'", str3, "GET");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(gsonConverter5);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest6();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter4 = serializedObjectSupporter0.deserializeObjectLogLevel2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = null;
        builder0.setcallbackExecutor(executor3);
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.FULL;
        builder0.logLevel = logLevel5;
        retrofit.client.Client.Provider provider7 = builder0.getclientProvider();
        java.util.concurrent.Executor executor8 = builder0.getcallbackExecutor();
        java.util.concurrent.Executor executor9 = builder0.httpExecutor;
        retrofit.Profiler profiler10 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder11 = builder0.setProfiler(profiler10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNull(executor9);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest1();
        java.lang.String str5 = request4.getMethod();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "GET" + "'", str5, "GET");
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest8();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest5();
        java.lang.String str6 = request5.getMethod();
        java.lang.String str7 = request5.getUrl();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "GET" + "'", str6, "GET");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.RestAdapter.Log log4 = builder3.log;
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter5.deserializeObjectConverter3();
        java.lang.String str8 = serializedObjectSupporter5.deserializeObjectString4();
        retrofit.Server server9 = serializedObjectSupporter5.deserializeObjectServer1();
        retrofit.client.Client.Provider provider10 = null;
        java.util.concurrent.Executor executor11 = null;
        java.util.concurrent.Executor executor12 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor15 = serializedObjectSupporter13.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request17 = serializedObjectSupporter16.deserializeObjectRequest1();
        retrofit.client.Request request18 = serializedObjectSupporter16.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter16.deserializeObjectConverter5();
        retrofit.Profiler profiler20 = null;
        retrofit.ErrorHandler errorHandler21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor23 = null;
        builder22.sethttpExecutor(executor23);
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        builder22.log = log25;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter(server9, provider10, executor11, executor12, requestInterceptor15, (retrofit.converter.Converter) gsonConverter19, profiler20, errorHandler21, log25, logLevel27);
        java.util.concurrent.Executor executor29 = restAdapter28.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor30 = restAdapter28.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter28.logLevel;
        builder3.logLevel = logLevel31;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = builder33.serializedObjectSupporter;
        retrofit.client.Client.Provider provider35 = null;
        builder33.setclientProvider(provider35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor38 = null;
        builder37.sethttpExecutor(executor38);
        retrofit.RestAdapter.Log log40 = null;
        builder37.log = log40;
        java.util.concurrent.Executor executor42 = builder37.callbackExecutor;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        builder37.log = log43;
        retrofit.RestAdapter.Builder builder45 = builder33.setLog(log43);
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        java.lang.String str47 = serializedObjectSupporter46.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter48 = serializedObjectSupporter46.deserializeObjectConverter3();
        java.lang.String str49 = serializedObjectSupporter46.deserializeObjectString4();
        retrofit.client.Request request50 = serializedObjectSupporter46.deserializeObjectRequest6();
        retrofit.Server server51 = serializedObjectSupporter46.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder52 = builder45.setServer(server51);
        retrofit.client.Client.Provider provider53 = null;
        java.util.concurrent.Executor executor54 = null;
        java.util.concurrent.Executor executor55 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request57 = serializedObjectSupporter56.deserializeObjectRequest1();
        retrofit.client.Request request58 = serializedObjectSupporter56.deserializeObjectRequest5();
        retrofit.RequestInterceptor requestInterceptor59 = serializedObjectSupporter56.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request61 = serializedObjectSupporter60.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter62 = serializedObjectSupporter60.deserializeObjectConverter2();
        retrofit.Profiler profiler63 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter64 = new retrofit.SerializedObjectSupporter();
        java.lang.String str65 = serializedObjectSupporter64.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter66 = serializedObjectSupporter64.deserializeObjectConverter3();
        java.lang.String str67 = serializedObjectSupporter64.deserializeObjectString4();
        retrofit.client.Request request68 = serializedObjectSupporter64.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler69 = serializedObjectSupporter64.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter71 = builder70.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter72 = builder70.serializedObjectSupporter;
        retrofit.client.Client.Provider provider73 = null;
        builder70.clientProvider = provider73;
        retrofit.RestAdapter.Log log75 = retrofit.RestAdapter.Log.NONE;
        builder70.log = log75;
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor78 = null;
        builder77.setcallbackExecutor(executor78);
        java.util.concurrent.Executor executor80 = null;
        builder77.setcallbackExecutor(executor80);
        retrofit.client.Client.Provider provider82 = null;
        builder77.clientProvider = provider82;
        retrofit.RestAdapter.Builder builder84 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter85 = builder84.serializedObjectSupporter;
        retrofit.Profiler profiler86 = builder84.profiler;
        retrofit.RestAdapter.LogLevel logLevel87 = builder84.logLevel;
        builder77.logLevel = logLevel87;
        retrofit.RestAdapter restAdapter89 = new retrofit.RestAdapter(server51, provider53, executor54, executor55, requestInterceptor59, (retrofit.converter.Converter) gsonConverter62, profiler63, errorHandler69, log75, logLevel87);
        builder3.requestInterceptor = requestInterceptor59;
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "GET" + "'", str6, "GET");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Retrofit-" + "'", str14, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor15);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(request18);
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor29);
        org.junit.Assert.assertNotNull(requestInterceptor30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(serializedObjectSupporter34);
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "GET" + "'", str47, "GET");
        org.junit.Assert.assertNotNull(gsonConverter48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "http://example.com/" + "'", str49, "http://example.com/");
        org.junit.Assert.assertNotNull(request50);
        org.junit.Assert.assertNotNull(server51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(request57);
        org.junit.Assert.assertNotNull(request58);
        org.junit.Assert.assertNotNull(requestInterceptor59);
        org.junit.Assert.assertNotNull(request61);
        org.junit.Assert.assertNotNull(gsonConverter62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "GET" + "'", str65, "GET");
        org.junit.Assert.assertNotNull(gsonConverter66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "http://example.com/" + "'", str67, "http://example.com/");
        org.junit.Assert.assertNotNull(request68);
        org.junit.Assert.assertNotNull(errorHandler69);
        org.junit.Assert.assertNull(serializedObjectSupporter71);
        org.junit.Assert.assertNull(serializedObjectSupporter72);
        org.junit.Assert.assertNotNull(log75);
        org.junit.Assert.assertNull(serializedObjectSupporter85);
        org.junit.Assert.assertNull(profiler86);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.ErrorHandler errorHandler3 = builder0.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        java.lang.String str5 = serializedObjectSupporter4.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter4.deserializeObjectConverter3();
        java.lang.String str7 = serializedObjectSupporter4.deserializeObjectString4();
        retrofit.Server server8 = serializedObjectSupporter4.deserializeObjectServer1();
        retrofit.client.Client.Provider provider9 = null;
        java.util.concurrent.Executor executor10 = null;
        java.util.concurrent.Executor executor11 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor14 = serializedObjectSupporter12.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request16 = serializedObjectSupporter15.deserializeObjectRequest1();
        retrofit.client.Request request17 = serializedObjectSupporter15.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter15.deserializeObjectConverter5();
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor22 = null;
        builder21.sethttpExecutor(executor22);
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        builder21.log = log24;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter(server8, provider9, executor10, executor11, requestInterceptor14, (retrofit.converter.Converter) gsonConverter18, profiler19, errorHandler20, log24, logLevel26);
        java.util.concurrent.Executor executor28 = restAdapter27.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor29 = restAdapter27.requestInterceptor;
        retrofit.RestAdapter.Builder builder30 = builder0.setRequestInterceptor(requestInterceptor29);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider32 = builder31.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder34 = builder31.setLogLevel(logLevel33);
        retrofit.RestAdapter.Log log35 = builder34.log;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.HEADERS;
        builder34.logLevel = logLevel36;
        retrofit.ErrorHandler errorHandler38 = builder34.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        java.lang.String str40 = serializedObjectSupporter39.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter39.deserializeObjectConverter3();
        java.lang.String str42 = serializedObjectSupporter39.deserializeObjectString4();
        retrofit.client.Request request43 = serializedObjectSupporter39.deserializeObjectRequest6();
        retrofit.Server server44 = serializedObjectSupporter39.deserializeObjectServer1();
        builder34.server = server44;
        retrofit.RestAdapter.Builder builder46 = builder30.setServer(server44);
        retrofit.Profiler profiler47 = builder46.profiler;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "GET" + "'", str5, "GET");
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-" + "'", str13, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor14);
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNotNull(requestInterceptor29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(errorHandler38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "GET" + "'", str40, "GET");
        org.junit.Assert.assertNotNull(gsonConverter41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "http://example.com/" + "'", str42, "http://example.com/");
        org.junit.Assert.assertNotNull(request43);
        org.junit.Assert.assertNotNull(server44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNull(profiler47);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest7();
        java.lang.String str7 = serializedObjectSupporter0.deserializeObjectString5();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "POST" + "'", str7, "POST");
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        java.util.concurrent.Executor executor5 = null;
        builder0.httpExecutor = executor5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider8 = builder7.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder10 = builder7.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = builder10.logLevel;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder10.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = builder0.setLogLevel(logLevel12);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor3 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter4 = serializedObjectSupporter0.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Retrofit-" + "'", str2, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor3);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider6 = null;
        java.util.concurrent.Executor executor7 = null;
        java.util.concurrent.Executor executor8 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter3();
        java.lang.String str12 = serializedObjectSupporter9.deserializeObjectString4();
        retrofit.Server server13 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter17.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request21 = serializedObjectSupporter20.deserializeObjectRequest1();
        retrofit.client.Request request22 = serializedObjectSupporter20.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler24 = null;
        retrofit.ErrorHandler errorHandler25 = null;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor27 = null;
        builder26.sethttpExecutor(executor27);
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        builder26.log = log29;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor19, (retrofit.converter.Converter) gsonConverter23, profiler24, errorHandler25, log29, logLevel31);
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter32.getLogLevel();
        retrofit.converter.Converter converter34 = restAdapter32.converter;
        retrofit.RequestInterceptor requestInterceptor35 = restAdapter32.requestInterceptor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        java.lang.String str37 = serializedObjectSupporter36.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter3();
        java.lang.String str39 = serializedObjectSupporter36.deserializeObjectString4();
        retrofit.Server server40 = serializedObjectSupporter36.deserializeObjectServer1();
        retrofit.client.Client.Provider provider41 = null;
        java.util.concurrent.Executor executor42 = null;
        java.util.concurrent.Executor executor43 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = new retrofit.SerializedObjectSupporter();
        java.lang.String str45 = serializedObjectSupporter44.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor46 = serializedObjectSupporter44.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request48 = serializedObjectSupporter47.deserializeObjectRequest1();
        retrofit.client.Request request49 = serializedObjectSupporter47.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter50 = serializedObjectSupporter47.deserializeObjectConverter5();
        retrofit.Profiler profiler51 = null;
        retrofit.ErrorHandler errorHandler52 = null;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor54 = null;
        builder53.sethttpExecutor(executor54);
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        builder53.log = log56;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter59 = new retrofit.RestAdapter(server40, provider41, executor42, executor43, requestInterceptor46, (retrofit.converter.Converter) gsonConverter50, profiler51, errorHandler52, log56, logLevel58);
        java.util.concurrent.Executor executor60 = restAdapter59.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter59.logLevel = logLevel61;
        retrofit.Profiler profiler63 = restAdapter59.profiler;
        retrofit.client.Client.Provider provider64 = restAdapter59.clientProvider;
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = restAdapter59.serializedObjectSupporter;
        retrofit.converter.Converter converter66 = restAdapter59.converter;
        retrofit.Profiler profiler67 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter68 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request69 = serializedObjectSupporter68.deserializeObjectRequest8();
        retrofit.converter.GsonConverter gsonConverter70 = serializedObjectSupporter68.deserializeObjectConverter2();
        retrofit.ErrorHandler errorHandler71 = serializedObjectSupporter68.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor73 = null;
        builder72.sethttpExecutor(executor73);
        retrofit.RequestInterceptor requestInterceptor75 = null;
        builder72.requestInterceptor = requestInterceptor75;
        java.util.concurrent.Executor executor77 = null;
        builder72.httpExecutor = executor77;
        java.util.concurrent.Executor executor79 = null;
        builder72.setcallbackExecutor(executor79);
        retrofit.client.Client.Provider provider81 = null;
        builder72.setclientProvider(provider81);
        retrofit.SerializedObjectSupporter serializedObjectSupporter83 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request84 = serializedObjectSupporter83.deserializeObjectRequest8();
        retrofit.converter.GsonConverter gsonConverter85 = serializedObjectSupporter83.deserializeObjectConverter2();
        retrofit.ErrorHandler errorHandler86 = serializedObjectSupporter83.deserializeObjectErrorHandler1();
        builder72.errorHandler = errorHandler86;
        retrofit.RestAdapter.Builder builder88 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor89 = null;
        builder88.sethttpExecutor(executor89);
        retrofit.RestAdapter.Log log91 = retrofit.RestAdapter.Log.NONE;
        builder88.log = log91;
        retrofit.RestAdapter.Builder builder93 = builder72.setLog(log91);
        retrofit.RestAdapter.LogLevel logLevel94 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter restAdapter95 = new retrofit.RestAdapter(server5, provider6, executor7, executor8, requestInterceptor35, converter66, profiler67, errorHandler71, log91, logLevel94);
        retrofit.Profiler profiler96 = restAdapter95.profiler;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "GET" + "'", str10, "GET");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Retrofit-" + "'", str18, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(request22);
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter34);
        org.junit.Assert.assertNotNull(requestInterceptor35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "GET" + "'", str37, "GET");
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "http://example.com/" + "'", str39, "http://example.com/");
        org.junit.Assert.assertNotNull(server40);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Retrofit-" + "'", str45, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor46);
        org.junit.Assert.assertNotNull(request48);
        org.junit.Assert.assertNotNull(request49);
        org.junit.Assert.assertNotNull(gsonConverter50);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(profiler63);
        org.junit.Assert.assertNull(provider64);
        org.junit.Assert.assertNull(serializedObjectSupporter65);
        org.junit.Assert.assertNotNull(converter66);
        org.junit.Assert.assertNotNull(request69);
        org.junit.Assert.assertNotNull(gsonConverter70);
        org.junit.Assert.assertNotNull(errorHandler71);
        org.junit.Assert.assertNotNull(request84);
        org.junit.Assert.assertNotNull(gsonConverter85);
        org.junit.Assert.assertNotNull(errorHandler86);
        org.junit.Assert.assertNotNull(log91);
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertTrue("'" + logLevel94 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel94.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler96);
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = builder0.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel4 = builder0.logLevel;
        retrofit.Profiler profiler5 = builder0.profiler;
        retrofit.RestAdapter.Builder builder7 = builder0.setServer("hi!");
        retrofit.Profiler profiler8 = null;
        builder0.profiler = profiler8;
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler5);
        org.junit.Assert.assertNotNull(builder7);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider6 = null;
        java.util.concurrent.Executor executor7 = null;
        java.util.concurrent.Executor executor8 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter3();
        java.lang.String str12 = serializedObjectSupporter9.deserializeObjectString4();
        retrofit.Server server13 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter17.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request21 = serializedObjectSupporter20.deserializeObjectRequest1();
        retrofit.client.Request request22 = serializedObjectSupporter20.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler24 = null;
        retrofit.ErrorHandler errorHandler25 = null;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor27 = null;
        builder26.sethttpExecutor(executor27);
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        builder26.log = log29;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor19, (retrofit.converter.Converter) gsonConverter23, profiler24, errorHandler25, log29, logLevel31);
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter32.getLogLevel();
        retrofit.converter.Converter converter34 = restAdapter32.converter;
        retrofit.RequestInterceptor requestInterceptor35 = restAdapter32.requestInterceptor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        java.lang.String str37 = serializedObjectSupporter36.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter3();
        java.lang.String str39 = serializedObjectSupporter36.deserializeObjectString4();
        retrofit.Server server40 = serializedObjectSupporter36.deserializeObjectServer1();
        retrofit.client.Client.Provider provider41 = null;
        java.util.concurrent.Executor executor42 = null;
        java.util.concurrent.Executor executor43 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = new retrofit.SerializedObjectSupporter();
        java.lang.String str45 = serializedObjectSupporter44.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor46 = serializedObjectSupporter44.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request48 = serializedObjectSupporter47.deserializeObjectRequest1();
        retrofit.client.Request request49 = serializedObjectSupporter47.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter50 = serializedObjectSupporter47.deserializeObjectConverter5();
        retrofit.Profiler profiler51 = null;
        retrofit.ErrorHandler errorHandler52 = null;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor54 = null;
        builder53.sethttpExecutor(executor54);
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        builder53.log = log56;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter59 = new retrofit.RestAdapter(server40, provider41, executor42, executor43, requestInterceptor46, (retrofit.converter.Converter) gsonConverter50, profiler51, errorHandler52, log56, logLevel58);
        java.util.concurrent.Executor executor60 = restAdapter59.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter59.logLevel = logLevel61;
        retrofit.Profiler profiler63 = restAdapter59.profiler;
        retrofit.client.Client.Provider provider64 = restAdapter59.clientProvider;
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = restAdapter59.serializedObjectSupporter;
        retrofit.converter.Converter converter66 = restAdapter59.converter;
        retrofit.Profiler profiler67 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter68 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request69 = serializedObjectSupporter68.deserializeObjectRequest8();
        retrofit.converter.GsonConverter gsonConverter70 = serializedObjectSupporter68.deserializeObjectConverter2();
        retrofit.ErrorHandler errorHandler71 = serializedObjectSupporter68.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor73 = null;
        builder72.sethttpExecutor(executor73);
        retrofit.RequestInterceptor requestInterceptor75 = null;
        builder72.requestInterceptor = requestInterceptor75;
        java.util.concurrent.Executor executor77 = null;
        builder72.httpExecutor = executor77;
        java.util.concurrent.Executor executor79 = null;
        builder72.setcallbackExecutor(executor79);
        retrofit.client.Client.Provider provider81 = null;
        builder72.setclientProvider(provider81);
        retrofit.SerializedObjectSupporter serializedObjectSupporter83 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request84 = serializedObjectSupporter83.deserializeObjectRequest8();
        retrofit.converter.GsonConverter gsonConverter85 = serializedObjectSupporter83.deserializeObjectConverter2();
        retrofit.ErrorHandler errorHandler86 = serializedObjectSupporter83.deserializeObjectErrorHandler1();
        builder72.errorHandler = errorHandler86;
        retrofit.RestAdapter.Builder builder88 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor89 = null;
        builder88.sethttpExecutor(executor89);
        retrofit.RestAdapter.Log log91 = retrofit.RestAdapter.Log.NONE;
        builder88.log = log91;
        retrofit.RestAdapter.Builder builder93 = builder72.setLog(log91);
        retrofit.RestAdapter.LogLevel logLevel94 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter restAdapter95 = new retrofit.RestAdapter(server5, provider6, executor7, executor8, requestInterceptor35, converter66, profiler67, errorHandler71, log91, logLevel94);
        retrofit.SerializedObjectSupporter serializedObjectSupporter96 = restAdapter95.serializedObjectSupporter;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "GET" + "'", str10, "GET");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Retrofit-" + "'", str18, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(request22);
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter34);
        org.junit.Assert.assertNotNull(requestInterceptor35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "GET" + "'", str37, "GET");
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "http://example.com/" + "'", str39, "http://example.com/");
        org.junit.Assert.assertNotNull(server40);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Retrofit-" + "'", str45, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor46);
        org.junit.Assert.assertNotNull(request48);
        org.junit.Assert.assertNotNull(request49);
        org.junit.Assert.assertNotNull(gsonConverter50);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(profiler63);
        org.junit.Assert.assertNull(provider64);
        org.junit.Assert.assertNull(serializedObjectSupporter65);
        org.junit.Assert.assertNotNull(converter66);
        org.junit.Assert.assertNotNull(request69);
        org.junit.Assert.assertNotNull(gsonConverter70);
        org.junit.Assert.assertNotNull(errorHandler71);
        org.junit.Assert.assertNotNull(request84);
        org.junit.Assert.assertNotNull(gsonConverter85);
        org.junit.Assert.assertNotNull(errorHandler86);
        org.junit.Assert.assertNotNull(log91);
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertTrue("'" + logLevel94 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel94.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(serializedObjectSupporter96);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.getconverter();
        java.util.concurrent.Executor executor26 = restAdapter23.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor27 = restAdapter23.getrequestInterceptor();
        retrofit.Server server28 = restAdapter23.server;
        retrofit.converter.Converter converter29 = restAdapter23.getconverter();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(converter29);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.RequestInterceptor requestInterceptor3 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.Class<?> wildcardClass5 = serializedObjectSupporter0.getClass();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(requestInterceptor3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-Idle" + "'", str4, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.client.Client.Provider provider2 = null;
        builder0.setclientProvider(provider2);
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor5 = null;
        builder4.sethttpExecutor(executor5);
        retrofit.RestAdapter.Log log7 = null;
        builder4.log = log7;
        java.util.concurrent.Executor executor9 = builder4.callbackExecutor;
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        builder4.log = log10;
        retrofit.RestAdapter.Builder builder12 = builder0.setLog(log10);
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter13.deserializeObjectConverter3();
        java.lang.String str16 = serializedObjectSupporter13.deserializeObjectString4();
        retrofit.client.Request request17 = serializedObjectSupporter13.deserializeObjectRequest6();
        retrofit.Server server18 = serializedObjectSupporter13.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder19 = builder12.setServer(server18);
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter3();
        java.lang.String str26 = serializedObjectSupporter23.deserializeObjectString4();
        retrofit.Server server27 = serializedObjectSupporter23.deserializeObjectServer1();
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        java.lang.String str32 = serializedObjectSupporter31.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor33 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request35 = serializedObjectSupporter34.deserializeObjectRequest1();
        retrofit.client.Request request36 = serializedObjectSupporter34.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter34.deserializeObjectConverter5();
        retrofit.Profiler profiler38 = null;
        retrofit.ErrorHandler errorHandler39 = null;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor41 = null;
        builder40.sethttpExecutor(executor41);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        builder40.log = log43;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor33, (retrofit.converter.Converter) gsonConverter37, profiler38, errorHandler39, log43, logLevel45);
        retrofit.RestAdapter.LogLevel logLevel47 = restAdapter46.getLogLevel();
        retrofit.converter.Converter converter48 = restAdapter46.converter;
        retrofit.RequestInterceptor requestInterceptor49 = restAdapter46.requestInterceptor;
        retrofit.converter.Converter converter50 = null;
        retrofit.Profiler profiler51 = null;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor53 = null;
        builder52.sethttpExecutor(executor53);
        retrofit.RestAdapter.Log log55 = null;
        builder52.log = log55;
        retrofit.RestAdapter.Log log57 = builder52.log;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor59 = null;
        builder58.sethttpExecutor(executor59);
        retrofit.RequestInterceptor requestInterceptor61 = null;
        builder58.requestInterceptor = requestInterceptor61;
        java.util.concurrent.Executor executor63 = null;
        builder58.httpExecutor = executor63;
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = new retrofit.SerializedObjectSupporter();
        java.lang.String str66 = serializedObjectSupporter65.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter67 = serializedObjectSupporter65.deserializeObjectConverter3();
        java.lang.String str68 = serializedObjectSupporter65.deserializeObjectString4();
        retrofit.client.Request request69 = serializedObjectSupporter65.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler70 = serializedObjectSupporter65.deserializeObjectErrorHandler1();
        builder58.errorHandler = errorHandler70;
        retrofit.RestAdapter.Builder builder72 = builder52.setErrorHandler(errorHandler70);
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider75 = builder74.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder77 = builder74.setLogLevel(logLevel76);
        retrofit.RestAdapter.LogLevel logLevel78 = builder77.logLevel;
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder80 = builder77.setLogLevel(logLevel79);
        retrofit.RestAdapter restAdapter81 = new retrofit.RestAdapter(server18, provider20, executor21, executor22, requestInterceptor49, converter50, profiler51, errorHandler70, log73, logLevel79);
        log73.log("Retrofit-");
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "GET" + "'", str14, "GET");
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(server18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "GET" + "'", str24, "GET");
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "http://example.com/" + "'", str26, "http://example.com/");
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Retrofit-" + "'", str32, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor33);
        org.junit.Assert.assertNotNull(request35);
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter48);
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNull(log57);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "GET" + "'", str66, "GET");
        org.junit.Assert.assertNotNull(gsonConverter67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "http://example.com/" + "'", str68, "http://example.com/");
        org.junit.Assert.assertNotNull(request69);
        org.junit.Assert.assertNotNull(errorHandler70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNull(provider75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder80);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter23.logLevel = logLevel25;
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = restAdapter23.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler28 = restAdapter23.geterrorHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = null;
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter29;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(serializedObjectSupporter27);
        org.junit.Assert.assertNull(errorHandler28);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.client.Client.Provider provider2 = null;
        builder0.setclientProvider(provider2);
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor5 = null;
        builder4.sethttpExecutor(executor5);
        retrofit.RestAdapter.Log log7 = null;
        builder4.log = log7;
        java.util.concurrent.Executor executor9 = builder4.callbackExecutor;
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        builder4.log = log10;
        retrofit.RestAdapter.Builder builder12 = builder0.setLog(log10);
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter13.deserializeObjectConverter3();
        java.lang.String str16 = serializedObjectSupporter13.deserializeObjectString4();
        retrofit.client.Request request17 = serializedObjectSupporter13.deserializeObjectRequest6();
        retrofit.Server server18 = serializedObjectSupporter13.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder19 = builder12.setServer(server18);
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter3();
        java.lang.String str26 = serializedObjectSupporter23.deserializeObjectString4();
        retrofit.Server server27 = serializedObjectSupporter23.deserializeObjectServer1();
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        java.lang.String str32 = serializedObjectSupporter31.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor33 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request35 = serializedObjectSupporter34.deserializeObjectRequest1();
        retrofit.client.Request request36 = serializedObjectSupporter34.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter34.deserializeObjectConverter5();
        retrofit.Profiler profiler38 = null;
        retrofit.ErrorHandler errorHandler39 = null;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor41 = null;
        builder40.sethttpExecutor(executor41);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        builder40.log = log43;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor33, (retrofit.converter.Converter) gsonConverter37, profiler38, errorHandler39, log43, logLevel45);
        retrofit.RestAdapter.LogLevel logLevel47 = restAdapter46.getLogLevel();
        retrofit.converter.Converter converter48 = restAdapter46.converter;
        retrofit.RequestInterceptor requestInterceptor49 = restAdapter46.requestInterceptor;
        retrofit.converter.Converter converter50 = null;
        retrofit.Profiler profiler51 = null;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor53 = null;
        builder52.sethttpExecutor(executor53);
        retrofit.RestAdapter.Log log55 = null;
        builder52.log = log55;
        retrofit.RestAdapter.Log log57 = builder52.log;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor59 = null;
        builder58.sethttpExecutor(executor59);
        retrofit.RequestInterceptor requestInterceptor61 = null;
        builder58.requestInterceptor = requestInterceptor61;
        java.util.concurrent.Executor executor63 = null;
        builder58.httpExecutor = executor63;
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = new retrofit.SerializedObjectSupporter();
        java.lang.String str66 = serializedObjectSupporter65.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter67 = serializedObjectSupporter65.deserializeObjectConverter3();
        java.lang.String str68 = serializedObjectSupporter65.deserializeObjectString4();
        retrofit.client.Request request69 = serializedObjectSupporter65.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler70 = serializedObjectSupporter65.deserializeObjectErrorHandler1();
        builder58.errorHandler = errorHandler70;
        retrofit.RestAdapter.Builder builder72 = builder52.setErrorHandler(errorHandler70);
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider75 = builder74.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder77 = builder74.setLogLevel(logLevel76);
        retrofit.RestAdapter.LogLevel logLevel78 = builder77.logLevel;
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder80 = builder77.setLogLevel(logLevel79);
        retrofit.RestAdapter restAdapter81 = new retrofit.RestAdapter(server18, provider20, executor21, executor22, requestInterceptor49, converter50, profiler51, errorHandler70, log73, logLevel79);
        retrofit.RequestInterceptor requestInterceptor82 = restAdapter81.getrequestInterceptor();
        java.util.concurrent.Executor executor83 = restAdapter81.getcallbackExecutor();
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "GET" + "'", str14, "GET");
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(server18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "GET" + "'", str24, "GET");
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "http://example.com/" + "'", str26, "http://example.com/");
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Retrofit-" + "'", str32, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor33);
        org.junit.Assert.assertNotNull(request35);
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter48);
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNull(log57);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "GET" + "'", str66, "GET");
        org.junit.Assert.assertNotNull(gsonConverter67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "http://example.com/" + "'", str68, "http://example.com/");
        org.junit.Assert.assertNotNull(request69);
        org.junit.Assert.assertNotNull(errorHandler70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNull(provider75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(requestInterceptor82);
        org.junit.Assert.assertNull(executor83);
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest3();
        retrofit.mime.TypedOutput typedOutput3 = request2.body;
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(typedOutput3);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter3();
        builder0.converter = gsonConverter5;
        retrofit.client.Client.Provider provider7 = null;
        builder0.clientProvider = provider7;
        retrofit.RestAdapter.LogLevel logLevel9 = builder0.logLevel;
        java.util.concurrent.Executor executor10 = null;
        builder0.setcallbackExecutor(executor10);
        builder0.ensureSaneDefaults();
        java.util.concurrent.Executor executor13 = null;
        builder0.httpExecutor = executor13;
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest1();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(request6);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        retrofit.RestAdapter.LogLevel logLevel0 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean1 = logLevel0.log();
        java.lang.Class<?> wildcardClass2 = logLevel0.getClass();
        org.junit.Assert.assertTrue("'" + logLevel0 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel0.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest3();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString2();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest7();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "GET" + "'", str3, "GET");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Retrofit-Idle" + "'", str5, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(request6);
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest3();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(request6);
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        java.util.concurrent.Executor executor3 = null;
        builder0.httpExecutor = executor3;
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request6 = serializedObjectSupporter5.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter5.deserializeObjectConverter2();
        builder0.serializedObjectSupporter = serializedObjectSupporter5;
        java.lang.String str9 = serializedObjectSupporter5.deserializeObjectString2();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter5.deserializeObjectConverter7();
        retrofit.client.Request request11 = serializedObjectSupporter5.deserializeObjectRequest4();
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-Idle" + "'", str9, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertNotNull(request11);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        java.lang.String str26 = serializedObjectSupporter25.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter25.deserializeObjectConverter3();
        java.lang.String str28 = serializedObjectSupporter25.deserializeObjectString4();
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter25;
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter23.getLogLevel();
        java.lang.String str31 = restAdapter23.getTHREAD_PREFIX();
        java.util.concurrent.Executor executor32 = restAdapter23.callbackExecutor;
        retrofit.converter.Converter converter33 = restAdapter23.getconverter();
        retrofit.client.Client.Provider provider34 = restAdapter23.getclientProvider();
        retrofit.client.Response response36 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response38 = restAdapter23.logAndReplaceResponse("Retrofit-", response36, (long) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "GET" + "'", str26, "GET");
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Retrofit-" + "'", str31, "Retrofit-");
        org.junit.Assert.assertNull(executor32);
        org.junit.Assert.assertNotNull(converter33);
        org.junit.Assert.assertNull(provider34);
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        java.lang.String str26 = restAdapter23.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        java.util.concurrent.Executor executor28 = restAdapter23.httpExecutor;
        retrofit.client.Response response30 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response32 = restAdapter23.logAndReplaceResponse("Retrofit-Idle", response30, (long) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(executor28);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.RestAdapter.Log log4 = builder3.log;
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.HEADERS;
        builder3.logLevel = logLevel5;
        retrofit.Profiler profiler7 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder8 = builder3.setProfiler(profiler7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.client.Client.Provider provider4 = builder3.getclientProvider();
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(provider4);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor27 = restAdapter23.getrequestInterceptor();
        retrofit.converter.Converter converter28 = restAdapter23.getconverter();
        java.lang.Throwable throwable29 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter23.logException(throwable29, "Retrofit-Idle");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(converter28);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter23.logLevel = logLevel25;
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = restAdapter23.serializedObjectSupporter;
        retrofit.RestAdapter.Log log28 = restAdapter23.log;
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request30 = serializedObjectSupporter29.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter32 = serializedObjectSupporter29.deserializeObjectConverter8();
        java.lang.String str33 = serializedObjectSupporter29.deserializeObjectString4();
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter29;
        java.util.concurrent.Executor executor35 = restAdapter23.gethttpExecutor();
        java.lang.Throwable throwable36 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter23.logException(throwable36, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(serializedObjectSupporter27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(request30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(gsonConverter32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNull(executor35);
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        java.lang.String str26 = serializedObjectSupporter25.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter25.deserializeObjectConverter3();
        java.lang.String str28 = serializedObjectSupporter25.deserializeObjectString4();
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter25;
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter23.getLogLevel();
        java.util.concurrent.Executor executor31 = restAdapter23.callbackExecutor;
        java.util.concurrent.Executor executor32 = restAdapter23.callbackExecutor;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "GET" + "'", str26, "GET");
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor31);
        org.junit.Assert.assertNull(executor32);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.Profiler profiler24 = restAdapter23.profiler;
        java.util.concurrent.Executor executor25 = restAdapter23.httpExecutor;
        java.lang.Throwable throwable26 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter23.logException(throwable26, "http://example.com/");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(profiler24);
        org.junit.Assert.assertNull(executor25);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter23.logLevel = logLevel25;
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = restAdapter23.serializedObjectSupporter;
        retrofit.RestAdapter.Log log28 = restAdapter23.log;
        retrofit.Server server29 = restAdapter23.server;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(serializedObjectSupporter27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(server29);
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter23.getLogLevel();
        retrofit.RestAdapter.Log log26 = restAdapter23.log;
        retrofit.converter.Converter converter27 = restAdapter23.getconverter();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(converter27);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        java.util.concurrent.Executor executor3 = null;
        builder0.httpExecutor = executor3;
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request6 = serializedObjectSupporter5.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter5.deserializeObjectConverter2();
        builder0.serializedObjectSupporter = serializedObjectSupporter5;
        retrofit.client.Request request9 = serializedObjectSupporter5.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter5.deserializeObjectConverter5();
        retrofit.Server server11 = serializedObjectSupporter5.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter5.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter5.deserializeObjectConverter2();
        retrofit.client.Request request14 = serializedObjectSupporter5.deserializeObjectRequest7();
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(request9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertNotNull(request14);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter3();
        builder0.converter = gsonConverter5;
        retrofit.client.Client.Provider provider7 = null;
        builder0.setclientProvider(provider7);
        java.util.concurrent.Executor executor9 = null;
        builder0.httpExecutor = executor9;
        retrofit.RestAdapter.Log log11 = builder0.log;
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNull(log11);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        retrofit.RestAdapter.Log log5 = builder0.log;
        retrofit.Profiler profiler6 = builder0.profiler;
        retrofit.RestAdapter.Builder builder8 = builder0.setServer("http://example.com/");
        retrofit.Profiler profiler9 = builder0.profiler;
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNull(profiler6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(profiler9);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.RestAdapter.Log log4 = builder3.log;
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.HEADERS;
        builder3.logLevel = logLevel5;
        retrofit.ErrorHandler errorHandler7 = builder3.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter8.deserializeObjectConverter3();
        java.lang.String str11 = serializedObjectSupporter8.deserializeObjectString4();
        retrofit.client.Request request12 = serializedObjectSupporter8.deserializeObjectRequest6();
        retrofit.Server server13 = serializedObjectSupporter8.deserializeObjectServer1();
        builder3.server = server13;
        java.util.concurrent.Executor executor15 = builder3.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel16 = builder3.logLevel;
        retrofit.client.Client client17 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder18 = builder3.setClient(client17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(errorHandler7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "GET" + "'", str9, "GET");
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "http://example.com/" + "'", str11, "http://example.com/");
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter7();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString5();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "POST" + "'", str5, "POST");
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = null;
        builder0.setcallbackExecutor(executor3);
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.FULL;
        builder0.logLevel = logLevel5;
        retrofit.client.Client.Provider provider7 = builder0.getclientProvider();
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = builder0.serializedObjectSupporter;
        java.util.concurrent.Executor executor9 = builder0.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor10 = builder0.requestInterceptor;
        retrofit.Profiler profiler11 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder12 = builder0.setProfiler(profiler11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNull(requestInterceptor10);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter3();
        builder0.converter = gsonConverter5;
        retrofit.client.Client.Provider provider7 = null;
        builder0.clientProvider = provider7;
        retrofit.RestAdapter.LogLevel logLevel9 = builder0.logLevel;
        java.util.concurrent.Executor executor10 = null;
        builder0.setcallbackExecutor(executor10);
        builder0.ensureSaneDefaults();
        retrofit.Profiler profiler13 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder14 = builder0.setProfiler(profiler13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.converter;
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter23.getLogLevel();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest3();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest6();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(request5);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.RestAdapter.Log log4 = builder3.log;
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.HEADERS;
        builder3.logLevel = logLevel5;
        retrofit.ErrorHandler errorHandler7 = builder3.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter8.deserializeObjectConverter3();
        java.lang.String str11 = serializedObjectSupporter8.deserializeObjectString4();
        retrofit.client.Request request12 = serializedObjectSupporter8.deserializeObjectRequest6();
        retrofit.Server server13 = serializedObjectSupporter8.deserializeObjectServer1();
        builder3.server = server13;
        java.util.concurrent.Executor executor15 = builder3.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel16 = builder3.logLevel;
        retrofit.client.Client.Provider provider17 = builder3.clientProvider;
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(errorHandler7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "GET" + "'", str9, "GET");
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "http://example.com/" + "'", str11, "http://example.com/");
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider17);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.RestAdapter.Log log4 = builder3.log;
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.HEADERS;
        builder3.logLevel = logLevel5;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request8 = serializedObjectSupporter7.deserializeObjectRequest1();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str10 = serializedObjectSupporter7.deserializeObjectString3();
        retrofit.client.Request request11 = serializedObjectSupporter7.deserializeObjectRequest4();
        retrofit.client.Request request12 = serializedObjectSupporter7.deserializeObjectRequest6();
        builder3.serializedObjectSupporter = serializedObjectSupporter7;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter14 = serializedObjectSupporter7.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "GET" + "'", str10, "GET");
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertNotNull(request12);
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        retrofit.ErrorHandler errorHandler27 = restAdapter23.geterrorHandler();
        java.util.concurrent.Executor executor28 = restAdapter23.gethttpExecutor();
        java.lang.String str29 = restAdapter23.getTHREAD_PREFIX();
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request31 = serializedObjectSupporter30.deserializeObjectRequest1();
        retrofit.client.Request request32 = serializedObjectSupporter30.deserializeObjectRequest5();
        retrofit.client.Request request33 = restAdapter23.logAndReplaceRequest(request32);
        java.lang.Throwable throwable34 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter23.logException(throwable34, "Retrofit-");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNull(errorHandler27);
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Retrofit-" + "'", str29, "Retrofit-");
        org.junit.Assert.assertNotNull(request31);
        org.junit.Assert.assertNotNull(request32);
        org.junit.Assert.assertNotNull(request33);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.RequestInterceptor requestInterceptor4 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter5 = serializedObjectSupporter0.deserializeObjectLogLevel1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(requestInterceptor4);
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        java.lang.String str26 = serializedObjectSupporter25.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter25.deserializeObjectConverter3();
        java.lang.String str28 = serializedObjectSupporter25.deserializeObjectString4();
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter25;
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter23.getLogLevel();
        java.lang.String str31 = restAdapter23.getTHREAD_PREFIX();
        retrofit.client.Response response33 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response35 = restAdapter23.logAndReplaceResponse("hi!", response33, (long) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "GET" + "'", str26, "GET");
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Retrofit-" + "'", str31, "Retrofit-");
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter23.logLevel = logLevel25;
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = restAdapter23.serializedObjectSupporter;
        retrofit.RestAdapter.Log log28 = restAdapter23.log;
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request30 = serializedObjectSupporter29.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter32 = serializedObjectSupporter29.deserializeObjectConverter8();
        java.lang.String str33 = serializedObjectSupporter29.deserializeObjectString4();
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter29;
        java.lang.Throwable throwable35 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter23.logException(throwable35, "Retrofit-");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(serializedObjectSupporter27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(request30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(gsonConverter32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter4();
        java.lang.String str8 = serializedObjectSupporter0.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.client.Request request10 = serializedObjectSupporter0.deserializeObjectRequest8();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "POST" + "'", str8, "POST");
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(request10);
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter6();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter4 = serializedObjectSupporter0.deserializeObjectLogLevel2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.converter.Converter converter4 = builder3.converter;
        java.util.concurrent.Executor executor5 = null;
        builder3.sethttpExecutor(executor5);
        retrofit.RestAdapter.Builder builder8 = builder3.setServer("GET");
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor10 = null;
        builder9.setcallbackExecutor(executor10);
        java.util.concurrent.Executor executor12 = null;
        builder9.setcallbackExecutor(executor12);
        builder9.ensureSaneDefaults();
        java.util.concurrent.Executor executor15 = builder9.callbackExecutor;
        builder8.setcallbackExecutor(executor15);
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter17.deserializeObjectConverter3();
        java.lang.String str20 = serializedObjectSupporter17.deserializeObjectString4();
        retrofit.Server server21 = serializedObjectSupporter17.deserializeObjectServer1();
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        java.lang.String str26 = serializedObjectSupporter25.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor27 = serializedObjectSupporter25.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request29 = serializedObjectSupporter28.deserializeObjectRequest1();
        retrofit.client.Request request30 = serializedObjectSupporter28.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter28.deserializeObjectConverter5();
        retrofit.Profiler profiler32 = null;
        retrofit.ErrorHandler errorHandler33 = null;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor35 = null;
        builder34.sethttpExecutor(executor35);
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        builder34.log = log37;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor27, (retrofit.converter.Converter) gsonConverter31, profiler32, errorHandler33, log37, logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter40.getLogLevel();
        java.lang.String str42 = restAdapter40.getIDLE_THREAD_NAME();
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = restAdapter40.serializedObjectSupporter;
        retrofit.RestAdapter.Log log44 = restAdapter40.log;
        retrofit.Server server45 = restAdapter40.getserver();
        builder8.server = server45;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor48 = null;
        builder47.setcallbackExecutor(executor48);
        java.util.concurrent.Executor executor50 = builder47.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel51 = builder47.logLevel;
        retrofit.Profiler profiler52 = builder47.profiler;
        retrofit.RestAdapter.Builder builder54 = builder47.setServer("hi!");
        retrofit.converter.Converter converter55 = builder54.converter;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider57 = builder56.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder59 = builder56.setLogLevel(logLevel58);
        retrofit.converter.Converter converter60 = builder59.converter;
        builder59.ensureSaneDefaults();
        retrofit.client.Client.Provider provider62 = builder59.clientProvider;
        builder54.clientProvider = provider62;
        builder8.setclientProvider(provider62);
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "GET" + "'", str18, "GET");
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "http://example.com/" + "'", str20, "http://example.com/");
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-" + "'", str26, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(request29);
        org.junit.Assert.assertNotNull(request30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Retrofit-Idle" + "'", str42, "Retrofit-Idle");
        org.junit.Assert.assertNull(serializedObjectSupporter43);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(server45);
        org.junit.Assert.assertNull(executor50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(converter55);
        org.junit.Assert.assertNull(provider57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNull(converter60);
        org.junit.Assert.assertNotNull(provider62);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest7();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString5();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString2();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Retrofit-" + "'", str3, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "POST" + "'", str4, "POST");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Retrofit-Idle" + "'", str5, "Retrofit-Idle");
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = builder0.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel4 = builder0.logLevel;
        retrofit.Profiler profiler5 = builder0.profiler;
        retrofit.RestAdapter.Builder builder7 = builder0.setServer("hi!");
        retrofit.client.Client client8 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder9 = builder7.setClient(client8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler5);
        org.junit.Assert.assertNotNull(builder7);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest2();
        java.lang.String str4 = request3.getMethod();
        retrofit.mime.TypedOutput typedOutput5 = request3.body;
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNull(typedOutput5);
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        builder0.ensureSaneDefaults();
        retrofit.client.Client.Provider provider4 = null;
        builder0.setclientProvider(provider4);
        java.util.concurrent.Executor executor6 = null;
        builder0.httpExecutor = executor6;
        java.util.concurrent.Executor executor8 = builder0.gethttpExecutor();
        retrofit.Profiler profiler9 = builder0.profiler;
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNull(profiler9);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        builder0.ensureSaneDefaults();
        retrofit.client.Client.Provider provider4 = null;
        builder0.setclientProvider(provider4);
        java.util.concurrent.Executor executor6 = null;
        builder0.httpExecutor = executor6;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = builder0.serializedObjectSupporter;
        java.util.concurrent.Executor executor9 = builder0.gethttpExecutor();
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertNull(executor9);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        java.lang.String str27 = restAdapter23.getTHREAD_PREFIX();
        java.util.concurrent.Executor executor28 = restAdapter23.callbackExecutor;
        java.lang.String str29 = restAdapter23.getIDLE_THREAD_NAME();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Retrofit-" + "'", str27, "Retrofit-");
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Retrofit-Idle" + "'", str29, "Retrofit-Idle");
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        java.util.concurrent.Executor executor3 = null;
        builder0.httpExecutor = executor3;
        retrofit.client.Client.Provider provider5 = null;
        builder0.setclientProvider(provider5);
        java.lang.Class<?> wildcardClass7 = builder0.getClass();
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.converter.Converter converter3 = builder0.converter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("GET");
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor7 = null;
        builder6.sethttpExecutor(executor7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter3();
        builder6.converter = gsonConverter11;
        retrofit.client.Client.Provider provider13 = null;
        builder6.clientProvider = provider13;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter3();
        java.lang.String str18 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter15.deserializeObjectConverter6();
        builder6.converter = gsonConverter19;
        builder0.converter = gsonConverter19;
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        java.lang.String str23 = serializedObjectSupporter22.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter24 = serializedObjectSupporter22.deserializeObjectConverter3();
        java.lang.String str25 = serializedObjectSupporter22.deserializeObjectString4();
        retrofit.Server server26 = serializedObjectSupporter22.deserializeObjectServer1();
        retrofit.client.Client.Provider provider27 = null;
        java.util.concurrent.Executor executor28 = null;
        java.util.concurrent.Executor executor29 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        java.lang.String str31 = serializedObjectSupporter30.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter30.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request34 = serializedObjectSupporter33.deserializeObjectRequest1();
        retrofit.client.Request request35 = serializedObjectSupporter33.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter33.deserializeObjectConverter5();
        retrofit.Profiler profiler37 = null;
        retrofit.ErrorHandler errorHandler38 = null;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor40 = null;
        builder39.sethttpExecutor(executor40);
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        builder39.log = log42;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter(server26, provider27, executor28, executor29, requestInterceptor32, (retrofit.converter.Converter) gsonConverter36, profiler37, errorHandler38, log42, logLevel44);
        java.util.concurrent.Executor executor46 = restAdapter45.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor47 = restAdapter45.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor48 = restAdapter45.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor49 = restAdapter45.getrequestInterceptor();
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor51 = null;
        builder50.sethttpExecutor(executor51);
        retrofit.RequestInterceptor requestInterceptor53 = null;
        builder50.requestInterceptor = requestInterceptor53;
        retrofit.converter.Converter converter55 = builder50.converter;
        java.util.concurrent.Executor executor56 = null;
        builder50.httpExecutor = executor56;
        retrofit.RestAdapter.LogLevel logLevel58 = builder50.logLevel;
        restAdapter45.logLevel = logLevel58;
        builder0.logLevel = logLevel58;
        java.util.concurrent.Executor executor61 = builder0.getcallbackExecutor();
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter63 = builder62.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter64 = builder62.serializedObjectSupporter;
        retrofit.client.Client.Provider provider65 = null;
        builder62.clientProvider = provider65;
        java.util.concurrent.Executor executor67 = null;
        builder62.callbackExecutor = executor67;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor70 = null;
        builder69.setcallbackExecutor(executor70);
        java.util.concurrent.Executor executor72 = null;
        builder69.setcallbackExecutor(executor72);
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.FULL;
        builder69.logLevel = logLevel74;
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor77 = null;
        builder76.setcallbackExecutor(executor77);
        java.util.concurrent.Executor executor79 = null;
        builder76.setcallbackExecutor(executor79);
        builder76.ensureSaneDefaults();
        java.util.concurrent.Executor executor82 = builder76.callbackExecutor;
        builder69.sethttpExecutor(executor82);
        builder62.httpExecutor = executor82;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor86 = null;
        builder85.sethttpExecutor(executor86);
        retrofit.RestAdapter.Log log88 = null;
        builder85.log = log88;
        java.util.concurrent.Executor executor90 = builder85.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter91 = builder85.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter92 = builder85.serializedObjectSupporter;
        builder85.ensureSaneDefaults();
        java.util.concurrent.Executor executor94 = builder85.httpExecutor;
        retrofit.RestAdapter.Builder builder95 = builder0.setExecutors(executor82, executor94);
        retrofit.RestAdapter restAdapter96 = builder0.build();
        java.lang.Throwable throwable97 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter96.logException(throwable97, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "GET" + "'", str10, "GET");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "GET" + "'", str16, "GET");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "GET" + "'", str23, "GET");
        org.junit.Assert.assertNotNull(gsonConverter24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "http://example.com/" + "'", str25, "http://example.com/");
        org.junit.Assert.assertNotNull(server26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Retrofit-" + "'", str31, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(request34);
        org.junit.Assert.assertNotNull(request35);
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor46);
        org.junit.Assert.assertNotNull(requestInterceptor47);
        org.junit.Assert.assertNotNull(requestInterceptor48);
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNull(converter55);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor61);
        org.junit.Assert.assertNull(serializedObjectSupporter63);
        org.junit.Assert.assertNull(serializedObjectSupporter64);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(executor82);
        org.junit.Assert.assertNull(executor90);
        org.junit.Assert.assertNull(serializedObjectSupporter91);
        org.junit.Assert.assertNull(serializedObjectSupporter92);
        org.junit.Assert.assertNotNull(executor94);
        org.junit.Assert.assertNotNull(builder95);
        org.junit.Assert.assertNotNull(restAdapter96);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.client.Request request7 = serializedObjectSupporter0.deserializeObjectRequest2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(request7);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.RequestInterceptor requestInterceptor3 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter7();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest4();
        java.util.List<retrofit.client.Header> headerList6 = request5.headers;
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(requestInterceptor3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(headerList6);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        java.util.concurrent.Executor executor5 = builder0.callbackExecutor;
        java.util.concurrent.Executor executor6 = null;
        builder0.httpExecutor = executor6;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter8 = builder0.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(executor5);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        java.lang.String str27 = restAdapter23.getTHREAD_PREFIX();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = restAdapter23.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter23.logLevel;
        retrofit.converter.Converter converter30 = restAdapter23.getconverter();
        java.lang.Class<?> wildcardClass31 = restAdapter23.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Retrofit-" + "'", str27, "Retrofit-");
        org.junit.Assert.assertNull(serializedObjectSupporter28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.client.Client.Provider provider2 = null;
        builder0.setclientProvider(provider2);
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor5 = null;
        builder4.sethttpExecutor(executor5);
        retrofit.RestAdapter.Log log7 = null;
        builder4.log = log7;
        java.util.concurrent.Executor executor9 = builder4.callbackExecutor;
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        builder4.log = log10;
        retrofit.RestAdapter.Builder builder12 = builder0.setLog(log10);
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter13.deserializeObjectConverter3();
        java.lang.String str16 = serializedObjectSupporter13.deserializeObjectString4();
        retrofit.client.Request request17 = serializedObjectSupporter13.deserializeObjectRequest6();
        retrofit.Server server18 = serializedObjectSupporter13.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder19 = builder12.setServer(server18);
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter3();
        java.lang.String str26 = serializedObjectSupporter23.deserializeObjectString4();
        retrofit.Server server27 = serializedObjectSupporter23.deserializeObjectServer1();
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        java.lang.String str32 = serializedObjectSupporter31.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor33 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request35 = serializedObjectSupporter34.deserializeObjectRequest1();
        retrofit.client.Request request36 = serializedObjectSupporter34.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter34.deserializeObjectConverter5();
        retrofit.Profiler profiler38 = null;
        retrofit.ErrorHandler errorHandler39 = null;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor41 = null;
        builder40.sethttpExecutor(executor41);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        builder40.log = log43;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor33, (retrofit.converter.Converter) gsonConverter37, profiler38, errorHandler39, log43, logLevel45);
        retrofit.RestAdapter.LogLevel logLevel47 = restAdapter46.getLogLevel();
        retrofit.converter.Converter converter48 = restAdapter46.converter;
        retrofit.RequestInterceptor requestInterceptor49 = restAdapter46.requestInterceptor;
        retrofit.converter.Converter converter50 = null;
        retrofit.Profiler profiler51 = null;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor53 = null;
        builder52.sethttpExecutor(executor53);
        retrofit.RestAdapter.Log log55 = null;
        builder52.log = log55;
        retrofit.RestAdapter.Log log57 = builder52.log;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor59 = null;
        builder58.sethttpExecutor(executor59);
        retrofit.RequestInterceptor requestInterceptor61 = null;
        builder58.requestInterceptor = requestInterceptor61;
        java.util.concurrent.Executor executor63 = null;
        builder58.httpExecutor = executor63;
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = new retrofit.SerializedObjectSupporter();
        java.lang.String str66 = serializedObjectSupporter65.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter67 = serializedObjectSupporter65.deserializeObjectConverter3();
        java.lang.String str68 = serializedObjectSupporter65.deserializeObjectString4();
        retrofit.client.Request request69 = serializedObjectSupporter65.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler70 = serializedObjectSupporter65.deserializeObjectErrorHandler1();
        builder58.errorHandler = errorHandler70;
        retrofit.RestAdapter.Builder builder72 = builder52.setErrorHandler(errorHandler70);
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider75 = builder74.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder77 = builder74.setLogLevel(logLevel76);
        retrofit.RestAdapter.LogLevel logLevel78 = builder77.logLevel;
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder80 = builder77.setLogLevel(logLevel79);
        retrofit.RestAdapter restAdapter81 = new retrofit.RestAdapter(server18, provider20, executor21, executor22, requestInterceptor49, converter50, profiler51, errorHandler70, log73, logLevel79);
        java.lang.Class<?> wildcardClass82 = restAdapter81.getClass();
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "GET" + "'", str14, "GET");
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(server18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "GET" + "'", str24, "GET");
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "http://example.com/" + "'", str26, "http://example.com/");
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Retrofit-" + "'", str32, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor33);
        org.junit.Assert.assertNotNull(request35);
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter48);
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNull(log57);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "GET" + "'", str66, "GET");
        org.junit.Assert.assertNotNull(gsonConverter67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "http://example.com/" + "'", str68, "http://example.com/");
        org.junit.Assert.assertNotNull(request69);
        org.junit.Assert.assertNotNull(errorHandler70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNull(provider75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        log20.log("http://example.com/");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        java.util.concurrent.Executor executor5 = builder0.callbackExecutor;
        java.util.concurrent.Executor executor6 = null;
        builder0.httpExecutor = executor6;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter3();
        java.lang.String str12 = serializedObjectSupporter9.deserializeObjectString4();
        retrofit.Server server13 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter17.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request21 = serializedObjectSupporter20.deserializeObjectRequest1();
        retrofit.client.Request request22 = serializedObjectSupporter20.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler24 = null;
        retrofit.ErrorHandler errorHandler25 = null;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor27 = null;
        builder26.sethttpExecutor(executor27);
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        builder26.log = log29;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor19, (retrofit.converter.Converter) gsonConverter23, profiler24, errorHandler25, log29, logLevel31);
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter32.getLogLevel();
        retrofit.converter.Converter converter34 = restAdapter32.getconverter();
        java.util.concurrent.Executor executor35 = restAdapter32.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor36 = restAdapter32.getrequestInterceptor();
        builder0.requestInterceptor = requestInterceptor36;
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "GET" + "'", str10, "GET");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Retrofit-" + "'", str18, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(request22);
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter34);
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNotNull(requestInterceptor36);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString3();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "GET" + "'", str3, "GET");
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.getconverter();
        retrofit.client.Client.Provider provider26 = restAdapter23.getclientProvider();
        retrofit.converter.Converter converter27 = restAdapter23.getconverter();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertNotNull(converter27);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.RestAdapter.Log log4 = builder3.log;
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.HEADERS;
        builder3.logLevel = logLevel5;
        java.util.concurrent.Executor executor7 = null;
        builder3.callbackExecutor = executor7;
        retrofit.Profiler profiler9 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder10 = builder3.setProfiler(profiler9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString5();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest2();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "POST" + "'", str4, "POST");
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(gsonConverter6);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest4();
        java.lang.String str5 = request4.url;
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        retrofit.ErrorHandler errorHandler27 = restAdapter23.geterrorHandler();
        java.util.concurrent.Executor executor28 = restAdapter23.gethttpExecutor();
        java.util.concurrent.Executor executor29 = restAdapter23.callbackExecutor;
        retrofit.converter.Converter converter30 = restAdapter23.converter;
        retrofit.client.Response response32 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response34 = restAdapter23.logAndReplaceResponse("http://example.com/", response32, 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNull(errorHandler27);
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNull(executor29);
        org.junit.Assert.assertNotNull(converter30);
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        retrofit.Server server26 = restAdapter23.server;
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        retrofit.client.Response response29 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response31 = restAdapter23.logAndReplaceResponse("http://example.com/", response29, (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNotNull(server26);
        org.junit.Assert.assertNull(executor27);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.converter.Converter converter3 = builder0.converter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("GET");
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor7 = null;
        builder6.sethttpExecutor(executor7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter3();
        builder6.converter = gsonConverter11;
        retrofit.client.Client.Provider provider13 = null;
        builder6.clientProvider = provider13;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter3();
        java.lang.String str18 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter15.deserializeObjectConverter6();
        builder6.converter = gsonConverter19;
        builder0.converter = gsonConverter19;
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        java.lang.String str23 = serializedObjectSupporter22.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter24 = serializedObjectSupporter22.deserializeObjectConverter3();
        java.lang.String str25 = serializedObjectSupporter22.deserializeObjectString4();
        retrofit.Server server26 = serializedObjectSupporter22.deserializeObjectServer1();
        retrofit.client.Client.Provider provider27 = null;
        java.util.concurrent.Executor executor28 = null;
        java.util.concurrent.Executor executor29 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        java.lang.String str31 = serializedObjectSupporter30.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter30.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request34 = serializedObjectSupporter33.deserializeObjectRequest1();
        retrofit.client.Request request35 = serializedObjectSupporter33.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter33.deserializeObjectConverter5();
        retrofit.Profiler profiler37 = null;
        retrofit.ErrorHandler errorHandler38 = null;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor40 = null;
        builder39.sethttpExecutor(executor40);
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        builder39.log = log42;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter(server26, provider27, executor28, executor29, requestInterceptor32, (retrofit.converter.Converter) gsonConverter36, profiler37, errorHandler38, log42, logLevel44);
        java.util.concurrent.Executor executor46 = restAdapter45.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor47 = restAdapter45.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor48 = restAdapter45.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor49 = restAdapter45.getrequestInterceptor();
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor51 = null;
        builder50.sethttpExecutor(executor51);
        retrofit.RequestInterceptor requestInterceptor53 = null;
        builder50.requestInterceptor = requestInterceptor53;
        retrofit.converter.Converter converter55 = builder50.converter;
        java.util.concurrent.Executor executor56 = null;
        builder50.httpExecutor = executor56;
        retrofit.RestAdapter.LogLevel logLevel58 = builder50.logLevel;
        restAdapter45.logLevel = logLevel58;
        builder0.logLevel = logLevel58;
        java.util.concurrent.Executor executor61 = builder0.getcallbackExecutor();
        retrofit.converter.Converter converter62 = builder0.converter;
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "GET" + "'", str10, "GET");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "GET" + "'", str16, "GET");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "GET" + "'", str23, "GET");
        org.junit.Assert.assertNotNull(gsonConverter24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "http://example.com/" + "'", str25, "http://example.com/");
        org.junit.Assert.assertNotNull(server26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Retrofit-" + "'", str31, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(request34);
        org.junit.Assert.assertNotNull(request35);
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor46);
        org.junit.Assert.assertNotNull(requestInterceptor47);
        org.junit.Assert.assertNotNull(requestInterceptor48);
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNull(converter55);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor61);
        org.junit.Assert.assertNotNull(converter62);
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.getconverter();
        java.util.concurrent.Executor executor26 = restAdapter23.httpExecutor;
        retrofit.client.Client.Provider provider27 = restAdapter23.clientProvider;
        retrofit.client.Client.Provider provider28 = restAdapter23.clientProvider;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertNull(provider28);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.converter;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        retrofit.client.Request request27 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request28 = restAdapter23.logAndReplaceRequest(request27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        java.util.concurrent.Executor executor3 = null;
        builder0.httpExecutor = executor3;
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request6 = serializedObjectSupporter5.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter5.deserializeObjectConverter2();
        builder0.serializedObjectSupporter = serializedObjectSupporter5;
        retrofit.client.Request request9 = serializedObjectSupporter5.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter5.deserializeObjectConverter5();
        retrofit.Server server11 = serializedObjectSupporter5.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter5.deserializeObjectConverter2();
        retrofit.client.Request request13 = serializedObjectSupporter5.deserializeObjectRequest5();
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(request9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNotNull(request13);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest3();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter4();
        java.lang.Class<?> wildcardClass5 = serializedObjectSupporter0.getClass();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter23.logLevel = logLevel25;
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = restAdapter23.serializedObjectSupporter;
        retrofit.RestAdapter.Log log28 = restAdapter23.log;
        retrofit.RequestInterceptor requestInterceptor29 = restAdapter23.requestInterceptor;
        java.util.concurrent.Executor executor30 = restAdapter23.gethttpExecutor();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(serializedObjectSupporter27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(requestInterceptor29);
        org.junit.Assert.assertNull(executor30);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.mime.TypedString typedString9 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter10 = serializedObjectSupporter0.deserializeObjectLogLevel2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertNotNull(typedString9);
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = null;
        builder0.setcallbackExecutor(executor3);
        retrofit.client.Client.Provider provider5 = null;
        builder0.clientProvider = provider5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = builder7.serializedObjectSupporter;
        retrofit.Profiler profiler9 = builder7.profiler;
        retrofit.RestAdapter.LogLevel logLevel10 = builder7.logLevel;
        builder0.logLevel = logLevel10;
        retrofit.RestAdapter.Log log12 = null;
        builder0.log = log12;
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter16 = serializedObjectSupporter14.deserializeObjectConverter3();
        java.lang.String str17 = serializedObjectSupporter14.deserializeObjectString4();
        retrofit.Server server18 = serializedObjectSupporter14.deserializeObjectServer1();
        retrofit.client.Client.Provider provider19 = null;
        java.util.concurrent.Executor executor20 = null;
        java.util.concurrent.Executor executor21 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        java.lang.String str23 = serializedObjectSupporter22.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor24 = serializedObjectSupporter22.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request26 = serializedObjectSupporter25.deserializeObjectRequest1();
        retrofit.client.Request request27 = serializedObjectSupporter25.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter25.deserializeObjectConverter5();
        retrofit.Profiler profiler29 = null;
        retrofit.ErrorHandler errorHandler30 = null;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor32 = null;
        builder31.sethttpExecutor(executor32);
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        builder31.log = log34;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server18, provider19, executor20, executor21, requestInterceptor24, (retrofit.converter.Converter) gsonConverter28, profiler29, errorHandler30, log34, logLevel36);
        java.util.concurrent.Executor executor38 = restAdapter37.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor39 = restAdapter37.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor40 = restAdapter37.requestInterceptor;
        builder0.requestInterceptor = requestInterceptor40;
        retrofit.client.Client.Provider provider42 = builder0.getclientProvider();
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        java.lang.String str44 = serializedObjectSupporter43.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter45 = serializedObjectSupporter43.deserializeObjectConverter3();
        java.lang.String str46 = serializedObjectSupporter43.deserializeObjectString4();
        retrofit.Server server47 = serializedObjectSupporter43.deserializeObjectServer1();
        java.lang.String str48 = serializedObjectSupporter43.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter49 = serializedObjectSupporter43.deserializeObjectConverter5();
        builder0.converter = gsonConverter49;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider52 = builder51.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder54 = builder51.setLogLevel(logLevel53);
        retrofit.converter.Converter converter55 = builder54.converter;
        retrofit.Profiler profiler56 = builder54.profiler;
        java.util.concurrent.Executor executor57 = builder54.callbackExecutor;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor59 = null;
        builder58.setcallbackExecutor(executor59);
        java.util.concurrent.Executor executor61 = null;
        builder58.setcallbackExecutor(executor61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.FULL;
        builder58.logLevel = logLevel63;
        retrofit.client.Client.Provider provider65 = builder58.getclientProvider();
        retrofit.SerializedObjectSupporter serializedObjectSupporter66 = builder58.serializedObjectSupporter;
        java.util.concurrent.Executor executor67 = builder58.callbackExecutor;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter69 = builder68.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter70 = builder68.serializedObjectSupporter;
        java.util.concurrent.Executor executor71 = null;
        builder68.httpExecutor = executor71;
        retrofit.SerializedObjectSupporter serializedObjectSupporter73 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request74 = serializedObjectSupporter73.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter75 = serializedObjectSupporter73.deserializeObjectConverter2();
        builder68.serializedObjectSupporter = serializedObjectSupporter73;
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider78 = builder77.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder80 = builder77.setLogLevel(logLevel79);
        retrofit.converter.Converter converter81 = builder80.converter;
        java.util.concurrent.Executor executor82 = null;
        builder80.sethttpExecutor(executor82);
        retrofit.RestAdapter.Builder builder85 = builder80.setServer("GET");
        retrofit.RestAdapter.Builder builder86 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor87 = null;
        builder86.setcallbackExecutor(executor87);
        java.util.concurrent.Executor executor89 = null;
        builder86.setcallbackExecutor(executor89);
        builder86.ensureSaneDefaults();
        java.util.concurrent.Executor executor92 = builder86.callbackExecutor;
        builder85.setcallbackExecutor(executor92);
        builder68.httpExecutor = executor92;
        builder58.sethttpExecutor(executor92);
        builder54.callbackExecutor = executor92;
        builder0.callbackExecutor = executor92;
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertNull(profiler9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "GET" + "'", str15, "GET");
        org.junit.Assert.assertNotNull(gsonConverter16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "http://example.com/" + "'", str17, "http://example.com/");
        org.junit.Assert.assertNotNull(server18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Retrofit-" + "'", str23, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor24);
        org.junit.Assert.assertNotNull(request26);
        org.junit.Assert.assertNotNull(request27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor38);
        org.junit.Assert.assertNotNull(requestInterceptor39);
        org.junit.Assert.assertNotNull(requestInterceptor40);
        org.junit.Assert.assertNull(provider42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "GET" + "'", str44, "GET");
        org.junit.Assert.assertNotNull(gsonConverter45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "http://example.com/" + "'", str46, "http://example.com/");
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "GET" + "'", str48, "GET");
        org.junit.Assert.assertNotNull(gsonConverter49);
        org.junit.Assert.assertNull(provider52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(converter55);
        org.junit.Assert.assertNull(profiler56);
        org.junit.Assert.assertNull(executor57);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider65);
        org.junit.Assert.assertNull(serializedObjectSupporter66);
        org.junit.Assert.assertNull(executor67);
        org.junit.Assert.assertNull(serializedObjectSupporter69);
        org.junit.Assert.assertNull(serializedObjectSupporter70);
        org.junit.Assert.assertNotNull(request74);
        org.junit.Assert.assertNotNull(gsonConverter75);
        org.junit.Assert.assertNull(provider78);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNull(converter81);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(executor92);
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter23.logLevel = logLevel25;
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = restAdapter23.serializedObjectSupporter;
        retrofit.RestAdapter.Log log28 = restAdapter23.log;
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request30 = serializedObjectSupporter29.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter32 = serializedObjectSupporter29.deserializeObjectConverter8();
        java.lang.String str33 = serializedObjectSupporter29.deserializeObjectString4();
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter29;
        retrofit.RestAdapter.Log log35 = restAdapter23.log;
        retrofit.ErrorHandler errorHandler36 = restAdapter23.geterrorHandler();
        java.lang.Throwable throwable37 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter23.logException(throwable37, "Retrofit-");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(serializedObjectSupporter27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(request30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(gsonConverter32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNull(errorHandler36);
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        java.lang.String str26 = serializedObjectSupporter25.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter25.deserializeObjectConverter3();
        java.lang.String str28 = serializedObjectSupporter25.deserializeObjectString4();
        retrofit.client.Request request29 = serializedObjectSupporter25.deserializeObjectRequest8();
        java.lang.String str30 = request29.method;
        java.lang.String str31 = request29.getUrl();
        retrofit.client.Request request32 = restAdapter23.logAndReplaceRequest(request29);
        java.lang.Throwable throwable33 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter23.logException(throwable33, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "GET" + "'", str26, "GET");
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertNotNull(request29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "GET" + "'", str30, "GET");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "http://example.com/" + "'", str31, "http://example.com/");
        org.junit.Assert.assertNotNull(request32);
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString5();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest2();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString3();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter7 = serializedObjectSupporter0.deserializeObjectLogLevel2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "POST" + "'", str4, "POST");
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "GET" + "'", str6, "GET");
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.RestAdapter.Log log4 = builder3.log;
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.HEADERS;
        builder3.logLevel = logLevel5;
        retrofit.ErrorHandler errorHandler7 = builder3.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter8.deserializeObjectConverter3();
        java.lang.String str11 = serializedObjectSupporter8.deserializeObjectString4();
        retrofit.client.Request request12 = serializedObjectSupporter8.deserializeObjectRequest6();
        retrofit.Server server13 = serializedObjectSupporter8.deserializeObjectServer1();
        builder3.server = server13;
        java.util.concurrent.Executor executor15 = builder3.getcallbackExecutor();
        retrofit.RestAdapter.Log log16 = builder3.log;
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(errorHandler7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "GET" + "'", str9, "GET");
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "http://example.com/" + "'", str11, "http://example.com/");
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(log16);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter23.logLevel;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = builder27.serializedObjectSupporter;
        retrofit.Profiler profiler29 = builder27.profiler;
        retrofit.RestAdapter.LogLevel logLevel30 = builder27.logLevel;
        boolean boolean31 = logLevel30.log();
        restAdapter23.setLogLevel(logLevel30);
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter23.logLevel;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(serializedObjectSupporter28);
        org.junit.Assert.assertNull(profiler29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        java.lang.String str26 = serializedObjectSupporter25.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter25.deserializeObjectConverter3();
        java.lang.String str28 = serializedObjectSupporter25.deserializeObjectString4();
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter25;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter30 = serializedObjectSupporter25.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "GET" + "'", str26, "GET");
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter1();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString5();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter6 = serializedObjectSupporter0.deserializeObjectLogLevel2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "POST" + "'", str5, "POST");
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.converter;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        retrofit.converter.Converter converter27 = restAdapter23.converter;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNotNull(converter27);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        java.lang.String str25 = restAdapter23.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor26 = restAdapter23.httpExecutor;
        retrofit.Profiler profiler27 = restAdapter23.getprofiler();
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = builder28.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = builder28.serializedObjectSupporter;
        java.util.concurrent.Executor executor31 = null;
        builder28.httpExecutor = executor31;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request34 = serializedObjectSupporter33.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter35 = serializedObjectSupporter33.deserializeObjectConverter2();
        builder28.serializedObjectSupporter = serializedObjectSupporter33;
        retrofit.client.Request request37 = serializedObjectSupporter33.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter33.deserializeObjectConverter5();
        retrofit.client.Request request39 = serializedObjectSupporter33.deserializeObjectRequest1();
        retrofit.mime.TypedOutput typedOutput40 = request39.body;
        retrofit.client.Request request41 = restAdapter23.logAndReplaceRequest(request39);
        retrofit.client.Response response43 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response45 = restAdapter23.logAndReplaceResponse("http://example.com/", response43, (long) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Retrofit-Idle" + "'", str25, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNull(profiler27);
        org.junit.Assert.assertNull(serializedObjectSupporter29);
        org.junit.Assert.assertNull(serializedObjectSupporter30);
        org.junit.Assert.assertNotNull(request34);
        org.junit.Assert.assertNotNull(gsonConverter35);
        org.junit.Assert.assertNotNull(request37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNotNull(request41);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request3 = serializedObjectSupporter2.deserializeObjectRequest8();
        java.util.List<retrofit.client.Header> headerList4 = request3.headers;
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request6 = serializedObjectSupporter5.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter5.deserializeObjectConverter2();
        retrofit.client.Request request8 = serializedObjectSupporter5.deserializeObjectRequest6();
        retrofit.client.Request request9 = serializedObjectSupporter5.deserializeObjectRequest8();
        retrofit.client.Request request10 = serializedObjectSupporter5.deserializeObjectRequest1();
        retrofit.mime.TypedString typedString11 = serializedObjectSupporter5.deserializeObjectTypedOutput2();
        retrofit.client.Request request12 = new retrofit.client.Request("http://example.com/", "Retrofit-", headerList4, (retrofit.mime.TypedOutput) typedString11);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(headerList4);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(request9);
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertNotNull(typedString11);
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.converter.Converter converter4 = builder3.converter;
        retrofit.Profiler profiler5 = builder3.profiler;
        java.util.concurrent.Executor executor6 = builder3.callbackExecutor;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor8 = null;
        builder7.setcallbackExecutor(executor8);
        java.util.concurrent.Executor executor10 = null;
        builder7.setcallbackExecutor(executor10);
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.FULL;
        builder7.logLevel = logLevel12;
        retrofit.client.Client.Provider provider14 = builder7.getclientProvider();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = builder7.serializedObjectSupporter;
        java.util.concurrent.Executor executor16 = builder7.callbackExecutor;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = builder17.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = builder17.serializedObjectSupporter;
        java.util.concurrent.Executor executor20 = null;
        builder17.httpExecutor = executor20;
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request23 = serializedObjectSupporter22.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter24 = serializedObjectSupporter22.deserializeObjectConverter2();
        builder17.serializedObjectSupporter = serializedObjectSupporter22;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider27 = builder26.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder29 = builder26.setLogLevel(logLevel28);
        retrofit.converter.Converter converter30 = builder29.converter;
        java.util.concurrent.Executor executor31 = null;
        builder29.sethttpExecutor(executor31);
        retrofit.RestAdapter.Builder builder34 = builder29.setServer("GET");
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor36 = null;
        builder35.setcallbackExecutor(executor36);
        java.util.concurrent.Executor executor38 = null;
        builder35.setcallbackExecutor(executor38);
        builder35.ensureSaneDefaults();
        java.util.concurrent.Executor executor41 = builder35.callbackExecutor;
        builder34.setcallbackExecutor(executor41);
        builder17.httpExecutor = executor41;
        builder7.sethttpExecutor(executor41);
        builder3.callbackExecutor = executor41;
        retrofit.Profiler profiler46 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder47 = builder3.setProfiler(profiler46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNull(profiler5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(serializedObjectSupporter15);
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertNull(serializedObjectSupporter18);
        org.junit.Assert.assertNull(serializedObjectSupporter19);
        org.junit.Assert.assertNotNull(request23);
        org.junit.Assert.assertNotNull(gsonConverter24);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNull(converter30);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(executor41);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest5();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "GET" + "'", str3, "GET");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(request5);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("http://example.com/", "", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request10 = serializedObjectSupporter9.deserializeObjectRequest8();
        retrofit.client.Request request11 = serializedObjectSupporter9.deserializeObjectRequest3();
        retrofit.mime.TypedString typedString12 = serializedObjectSupporter9.deserializeObjectTypedOutput2();
        retrofit.client.Request request13 = new retrofit.client.Request("GET", "http://example.com/", (java.util.List<retrofit.client.Header>) headerList5, (retrofit.mime.TypedOutput) typedString12);
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertNotNull(typedString12);
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter23.logLevel = logLevel25;
        retrofit.Profiler profiler27 = restAdapter23.profiler;
        retrofit.Profiler profiler28 = restAdapter23.getprofiler();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(profiler27);
        org.junit.Assert.assertNull(profiler28);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = null;
        builder0.setcallbackExecutor(executor3);
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.FULL;
        builder0.logLevel = logLevel5;
        retrofit.client.Client.Provider provider7 = builder0.getclientProvider();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor9 = null;
        builder8.sethttpExecutor(executor9);
        retrofit.RestAdapter.Log log11 = null;
        builder8.log = log11;
        retrofit.RestAdapter.Log log13 = builder8.log;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor15 = null;
        builder14.sethttpExecutor(executor15);
        retrofit.RequestInterceptor requestInterceptor17 = null;
        builder14.requestInterceptor = requestInterceptor17;
        java.util.concurrent.Executor executor19 = null;
        builder14.httpExecutor = executor19;
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = new retrofit.SerializedObjectSupporter();
        java.lang.String str22 = serializedObjectSupporter21.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter21.deserializeObjectConverter3();
        java.lang.String str24 = serializedObjectSupporter21.deserializeObjectString4();
        retrofit.client.Request request25 = serializedObjectSupporter21.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler26 = serializedObjectSupporter21.deserializeObjectErrorHandler1();
        builder14.errorHandler = errorHandler26;
        retrofit.RestAdapter.Builder builder28 = builder8.setErrorHandler(errorHandler26);
        retrofit.RestAdapter.Builder builder29 = builder0.setErrorHandler(errorHandler26);
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request31 = serializedObjectSupporter30.deserializeObjectRequest1();
        java.lang.String str32 = serializedObjectSupporter30.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor33 = serializedObjectSupporter30.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder34 = builder29.setRequestInterceptor(requestInterceptor33);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor36 = null;
        builder35.sethttpExecutor(executor36);
        retrofit.RequestInterceptor requestInterceptor38 = null;
        builder35.requestInterceptor = requestInterceptor38;
        java.util.concurrent.Executor executor40 = null;
        builder35.httpExecutor = executor40;
        java.util.concurrent.Executor executor42 = null;
        builder35.setcallbackExecutor(executor42);
        retrofit.client.Client.Provider provider44 = null;
        builder35.setclientProvider(provider44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        builder46.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler48 = builder46.errorHandler;
        java.util.concurrent.Executor executor49 = builder46.getcallbackExecutor();
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter51 = builder50.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = builder50.serializedObjectSupporter;
        java.util.concurrent.Executor executor53 = null;
        builder50.httpExecutor = executor53;
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request56 = serializedObjectSupporter55.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter57 = serializedObjectSupporter55.deserializeObjectConverter2();
        builder50.serializedObjectSupporter = serializedObjectSupporter55;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider60 = builder59.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder62 = builder59.setLogLevel(logLevel61);
        retrofit.converter.Converter converter63 = builder62.converter;
        java.util.concurrent.Executor executor64 = null;
        builder62.sethttpExecutor(executor64);
        retrofit.RestAdapter.Builder builder67 = builder62.setServer("GET");
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor69 = null;
        builder68.setcallbackExecutor(executor69);
        java.util.concurrent.Executor executor71 = null;
        builder68.setcallbackExecutor(executor71);
        builder68.ensureSaneDefaults();
        java.util.concurrent.Executor executor74 = builder68.callbackExecutor;
        builder67.setcallbackExecutor(executor74);
        builder50.httpExecutor = executor74;
        retrofit.RestAdapter.Builder builder77 = builder35.setExecutors(executor49, executor74);
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor79 = null;
        builder78.sethttpExecutor(executor79);
        retrofit.RequestInterceptor requestInterceptor81 = null;
        builder78.requestInterceptor = requestInterceptor81;
        java.util.concurrent.Executor executor83 = null;
        builder78.httpExecutor = executor83;
        java.util.concurrent.Executor executor85 = null;
        builder78.setcallbackExecutor(executor85);
        retrofit.client.Client.Provider provider87 = null;
        builder78.setclientProvider(provider87);
        retrofit.client.Client.Provider provider89 = null;
        builder78.setclientProvider(provider89);
        retrofit.RestAdapter.Builder builder91 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor92 = null;
        builder91.setcallbackExecutor(executor92);
        java.util.concurrent.Executor executor94 = null;
        builder91.setcallbackExecutor(executor94);
        builder91.ensureSaneDefaults();
        java.util.concurrent.Executor executor97 = builder91.callbackExecutor;
        builder78.httpExecutor = executor97;
        retrofit.RestAdapter.Builder builder99 = builder29.setExecutors(executor49, executor97);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(log13);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "GET" + "'", str22, "GET");
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(request25);
        org.junit.Assert.assertNotNull(errorHandler26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(request31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Retrofit-" + "'", str32, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(errorHandler48);
        org.junit.Assert.assertNotNull(executor49);
        org.junit.Assert.assertNull(serializedObjectSupporter51);
        org.junit.Assert.assertNull(serializedObjectSupporter52);
        org.junit.Assert.assertNotNull(request56);
        org.junit.Assert.assertNotNull(gsonConverter57);
        org.junit.Assert.assertNull(provider60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNull(converter63);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(executor74);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(executor97);
        org.junit.Assert.assertNotNull(builder99);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        retrofit.converter.Converter converter5 = builder0.converter;
        java.util.concurrent.Executor executor6 = null;
        builder0.httpExecutor = executor6;
        java.util.concurrent.Executor executor8 = null;
        builder0.httpExecutor = executor8;
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = builder0.serializedObjectSupporter;
        retrofit.client.Client.Provider provider11 = builder0.clientProvider;
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNull(serializedObjectSupporter10);
        org.junit.Assert.assertNull(provider11);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest6();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "GET" + "'", str3, "GET");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(request5);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        retrofit.Server server26 = restAdapter23.server;
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = restAdapter23.serializedObjectSupporter;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNotNull(server26);
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(serializedObjectSupporter28);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        java.util.concurrent.Executor executor5 = null;
        builder0.httpExecutor = executor5;
        java.util.concurrent.Executor executor7 = null;
        builder0.setcallbackExecutor(executor7);
        retrofit.client.Client.Provider provider9 = null;
        builder0.setclientProvider(provider9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        builder11.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler13 = builder11.errorHandler;
        java.util.concurrent.Executor executor14 = builder11.getcallbackExecutor();
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = builder15.serializedObjectSupporter;
        java.util.concurrent.Executor executor18 = null;
        builder15.httpExecutor = executor18;
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request21 = serializedObjectSupporter20.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter2();
        builder15.serializedObjectSupporter = serializedObjectSupporter20;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider25 = builder24.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder27 = builder24.setLogLevel(logLevel26);
        retrofit.converter.Converter converter28 = builder27.converter;
        java.util.concurrent.Executor executor29 = null;
        builder27.sethttpExecutor(executor29);
        retrofit.RestAdapter.Builder builder32 = builder27.setServer("GET");
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor34 = null;
        builder33.setcallbackExecutor(executor34);
        java.util.concurrent.Executor executor36 = null;
        builder33.setcallbackExecutor(executor36);
        builder33.ensureSaneDefaults();
        java.util.concurrent.Executor executor39 = builder33.callbackExecutor;
        builder32.setcallbackExecutor(executor39);
        builder15.httpExecutor = executor39;
        retrofit.RestAdapter.Builder builder42 = builder0.setExecutors(executor14, executor39);
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        java.lang.String str44 = serializedObjectSupporter43.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter45 = serializedObjectSupporter43.deserializeObjectConverter3();
        java.lang.String str46 = serializedObjectSupporter43.deserializeObjectString4();
        retrofit.Server server47 = serializedObjectSupporter43.deserializeObjectServer1();
        retrofit.client.Client.Provider provider48 = null;
        java.util.concurrent.Executor executor49 = null;
        java.util.concurrent.Executor executor50 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter51 = new retrofit.SerializedObjectSupporter();
        java.lang.String str52 = serializedObjectSupporter51.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor53 = serializedObjectSupporter51.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter54 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request55 = serializedObjectSupporter54.deserializeObjectRequest1();
        retrofit.client.Request request56 = serializedObjectSupporter54.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter57 = serializedObjectSupporter54.deserializeObjectConverter5();
        retrofit.Profiler profiler58 = null;
        retrofit.ErrorHandler errorHandler59 = null;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor61 = null;
        builder60.sethttpExecutor(executor61);
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        builder60.log = log63;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter(server47, provider48, executor49, executor50, requestInterceptor53, (retrofit.converter.Converter) gsonConverter57, profiler58, errorHandler59, log63, logLevel65);
        builder0.log = log63;
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(executor14);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNull(serializedObjectSupporter17);
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNull(converter28);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(executor39);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "GET" + "'", str44, "GET");
        org.junit.Assert.assertNotNull(gsonConverter45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "http://example.com/" + "'", str46, "http://example.com/");
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Retrofit-" + "'", str52, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor53);
        org.junit.Assert.assertNotNull(request55);
        org.junit.Assert.assertNotNull(request56);
        org.junit.Assert.assertNotNull(gsonConverter57);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest8();
        java.lang.String str2 = request1.method;
        retrofit.mime.TypedOutput typedOutput3 = request1.getBody();
        java.lang.String str4 = request1.getMethod();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "GET" + "'", str2, "GET");
        org.junit.Assert.assertNull(typedOutput3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter7();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest8();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString4();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        retrofit.RestAdapter.Log log5 = builder0.log;
        retrofit.Profiler profiler6 = builder0.profiler;
        retrofit.RestAdapter.Builder builder8 = builder0.setServer("http://example.com/");
        java.util.concurrent.Executor executor9 = null;
        builder0.sethttpExecutor(executor9);
        java.util.concurrent.Executor executor11 = builder0.callbackExecutor;
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNull(profiler6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(executor11);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        java.util.concurrent.Executor executor3 = null;
        builder0.httpExecutor = executor3;
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request6 = serializedObjectSupporter5.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter5.deserializeObjectConverter2();
        builder0.serializedObjectSupporter = serializedObjectSupporter5;
        retrofit.client.Request request9 = serializedObjectSupporter5.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter5.deserializeObjectConverter5();
        retrofit.Server server11 = serializedObjectSupporter5.deserializeObjectServer1();
        retrofit.client.Request request12 = serializedObjectSupporter5.deserializeObjectRequest4();
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(request9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(request12);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        java.util.concurrent.Executor executor5 = null;
        builder0.httpExecutor = executor5;
        java.util.concurrent.Executor executor7 = null;
        builder0.setcallbackExecutor(executor7);
        retrofit.client.Client.Provider provider9 = null;
        builder0.setclientProvider(provider9);
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest8();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter11.deserializeObjectConverter2();
        retrofit.ErrorHandler errorHandler14 = serializedObjectSupporter11.deserializeObjectErrorHandler1();
        builder0.errorHandler = errorHandler14;
        retrofit.Profiler profiler16 = null;
        builder0.profiler = profiler16;
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = builder0.serializedObjectSupporter;
        retrofit.client.Client client19 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder20 = builder0.setClient(client19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertNotNull(errorHandler14);
        org.junit.Assert.assertNull(serializedObjectSupporter18);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.client.Client.Provider provider2 = null;
        builder0.setclientProvider(provider2);
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor5 = null;
        builder4.sethttpExecutor(executor5);
        retrofit.RestAdapter.Log log7 = null;
        builder4.log = log7;
        java.util.concurrent.Executor executor9 = builder4.callbackExecutor;
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        builder4.log = log10;
        retrofit.RestAdapter.Builder builder12 = builder0.setLog(log10);
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter13.deserializeObjectConverter3();
        java.lang.String str16 = serializedObjectSupporter13.deserializeObjectString4();
        retrofit.client.Request request17 = serializedObjectSupporter13.deserializeObjectRequest6();
        retrofit.Server server18 = serializedObjectSupporter13.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder19 = builder12.setServer(server18);
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter3();
        java.lang.String str26 = serializedObjectSupporter23.deserializeObjectString4();
        retrofit.Server server27 = serializedObjectSupporter23.deserializeObjectServer1();
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        java.lang.String str32 = serializedObjectSupporter31.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor33 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request35 = serializedObjectSupporter34.deserializeObjectRequest1();
        retrofit.client.Request request36 = serializedObjectSupporter34.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter34.deserializeObjectConverter5();
        retrofit.Profiler profiler38 = null;
        retrofit.ErrorHandler errorHandler39 = null;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor41 = null;
        builder40.sethttpExecutor(executor41);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        builder40.log = log43;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor33, (retrofit.converter.Converter) gsonConverter37, profiler38, errorHandler39, log43, logLevel45);
        retrofit.RestAdapter.LogLevel logLevel47 = restAdapter46.getLogLevel();
        retrofit.converter.Converter converter48 = restAdapter46.converter;
        retrofit.RequestInterceptor requestInterceptor49 = restAdapter46.requestInterceptor;
        retrofit.converter.Converter converter50 = null;
        retrofit.Profiler profiler51 = null;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor53 = null;
        builder52.sethttpExecutor(executor53);
        retrofit.RestAdapter.Log log55 = null;
        builder52.log = log55;
        retrofit.RestAdapter.Log log57 = builder52.log;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor59 = null;
        builder58.sethttpExecutor(executor59);
        retrofit.RequestInterceptor requestInterceptor61 = null;
        builder58.requestInterceptor = requestInterceptor61;
        java.util.concurrent.Executor executor63 = null;
        builder58.httpExecutor = executor63;
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = new retrofit.SerializedObjectSupporter();
        java.lang.String str66 = serializedObjectSupporter65.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter67 = serializedObjectSupporter65.deserializeObjectConverter3();
        java.lang.String str68 = serializedObjectSupporter65.deserializeObjectString4();
        retrofit.client.Request request69 = serializedObjectSupporter65.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler70 = serializedObjectSupporter65.deserializeObjectErrorHandler1();
        builder58.errorHandler = errorHandler70;
        retrofit.RestAdapter.Builder builder72 = builder52.setErrorHandler(errorHandler70);
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider75 = builder74.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder77 = builder74.setLogLevel(logLevel76);
        retrofit.RestAdapter.LogLevel logLevel78 = builder77.logLevel;
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder80 = builder77.setLogLevel(logLevel79);
        retrofit.RestAdapter restAdapter81 = new retrofit.RestAdapter(server18, provider20, executor21, executor22, requestInterceptor49, converter50, profiler51, errorHandler70, log73, logLevel79);
        retrofit.converter.Converter converter82 = restAdapter81.getconverter();
        retrofit.Server server83 = restAdapter81.getserver();
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "GET" + "'", str14, "GET");
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(server18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "GET" + "'", str24, "GET");
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "http://example.com/" + "'", str26, "http://example.com/");
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Retrofit-" + "'", str32, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor33);
        org.junit.Assert.assertNotNull(request35);
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter48);
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNull(log57);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "GET" + "'", str66, "GET");
        org.junit.Assert.assertNotNull(gsonConverter67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "http://example.com/" + "'", str68, "http://example.com/");
        org.junit.Assert.assertNotNull(request69);
        org.junit.Assert.assertNotNull(errorHandler70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNull(provider75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNull(converter82);
        org.junit.Assert.assertNotNull(server83);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("GET");
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = builder0.requestInterceptor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        java.lang.String str5 = serializedObjectSupporter4.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter4.deserializeObjectConverter3();
        java.lang.String str7 = serializedObjectSupporter4.deserializeObjectString4();
        retrofit.client.Request request8 = serializedObjectSupporter4.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler9 = serializedObjectSupporter4.deserializeObjectErrorHandler1();
        builder0.errorHandler = errorHandler9;
        retrofit.RestAdapter.Log log11 = builder0.log;
        retrofit.Profiler profiler12 = null;
        builder0.profiler = profiler12;
        retrofit.client.Client.Provider provider14 = builder0.getclientProvider();
        org.junit.Assert.assertNull(requestInterceptor3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "GET" + "'", str5, "GET");
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(errorHandler9);
        org.junit.Assert.assertNull(log11);
        org.junit.Assert.assertNull(provider14);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.mime.TypedOutput typedOutput3 = request2.getBody();
        java.lang.String str4 = request2.getMethod();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNull(typedOutput3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.RestAdapter.Log log4 = builder3.log;
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.HEADERS;
        builder3.logLevel = logLevel5;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request8 = serializedObjectSupporter7.deserializeObjectRequest1();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str10 = serializedObjectSupporter7.deserializeObjectString3();
        retrofit.client.Request request11 = serializedObjectSupporter7.deserializeObjectRequest4();
        retrofit.client.Request request12 = serializedObjectSupporter7.deserializeObjectRequest6();
        builder3.serializedObjectSupporter = serializedObjectSupporter7;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = builder14.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = builder16.serializedObjectSupporter;
        retrofit.Profiler profiler18 = builder16.profiler;
        retrofit.RestAdapter.LogLevel logLevel19 = builder16.logLevel;
        builder14.logLevel = logLevel19;
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = new retrofit.SerializedObjectSupporter();
        java.lang.String str22 = serializedObjectSupporter21.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter21.deserializeObjectConverter3();
        java.lang.String str24 = serializedObjectSupporter21.deserializeObjectString4();
        retrofit.Server server25 = serializedObjectSupporter21.deserializeObjectServer1();
        retrofit.client.Client.Provider provider26 = null;
        java.util.concurrent.Executor executor27 = null;
        java.util.concurrent.Executor executor28 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        java.lang.String str30 = serializedObjectSupporter29.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor31 = serializedObjectSupporter29.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request33 = serializedObjectSupporter32.deserializeObjectRequest1();
        retrofit.client.Request request34 = serializedObjectSupporter32.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter35 = serializedObjectSupporter32.deserializeObjectConverter5();
        retrofit.Profiler profiler36 = null;
        retrofit.ErrorHandler errorHandler37 = null;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor39 = null;
        builder38.sethttpExecutor(executor39);
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        builder38.log = log41;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter(server25, provider26, executor27, executor28, requestInterceptor31, (retrofit.converter.Converter) gsonConverter35, profiler36, errorHandler37, log41, logLevel43);
        java.util.concurrent.Executor executor45 = restAdapter44.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter44.logLevel = logLevel46;
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = restAdapter44.serializedObjectSupporter;
        retrofit.RestAdapter.Log log49 = restAdapter44.log;
        builder14.log = log49;
        retrofit.RestAdapter.Builder builder51 = builder3.setLog(log49);
        log49.log("http://example.com/");
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "GET" + "'", str10, "GET");
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNull(serializedObjectSupporter15);
        org.junit.Assert.assertNull(serializedObjectSupporter17);
        org.junit.Assert.assertNull(profiler18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "GET" + "'", str22, "GET");
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Retrofit-" + "'", str30, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor31);
        org.junit.Assert.assertNotNull(request33);
        org.junit.Assert.assertNotNull(request34);
        org.junit.Assert.assertNotNull(gsonConverter35);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(serializedObjectSupporter48);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder51);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        retrofit.Profiler profiler27 = restAdapter23.getprofiler();
        retrofit.client.Client.Provider provider28 = restAdapter23.clientProvider;
        retrofit.RequestInterceptor requestInterceptor29 = restAdapter23.getrequestInterceptor();
        java.util.concurrent.Executor executor30 = restAdapter23.httpExecutor;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNull(profiler27);
        org.junit.Assert.assertNull(provider28);
        org.junit.Assert.assertNotNull(requestInterceptor29);
        org.junit.Assert.assertNull(executor30);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.client.Client.Provider provider2 = null;
        builder0.setclientProvider(provider2);
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor5 = null;
        builder4.sethttpExecutor(executor5);
        retrofit.RestAdapter.Log log7 = null;
        builder4.log = log7;
        java.util.concurrent.Executor executor9 = builder4.callbackExecutor;
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        builder4.log = log10;
        retrofit.RestAdapter.Builder builder12 = builder0.setLog(log10);
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter13.deserializeObjectConverter3();
        java.lang.String str16 = serializedObjectSupporter13.deserializeObjectString4();
        retrofit.client.Request request17 = serializedObjectSupporter13.deserializeObjectRequest6();
        retrofit.Server server18 = serializedObjectSupporter13.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder19 = builder12.setServer(server18);
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest1();
        retrofit.client.Request request25 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.RequestInterceptor requestInterceptor26 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request28 = serializedObjectSupporter27.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter27.deserializeObjectConverter2();
        retrofit.Profiler profiler30 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        java.lang.String str32 = serializedObjectSupporter31.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter3();
        java.lang.String str34 = serializedObjectSupporter31.deserializeObjectString4();
        retrofit.client.Request request35 = serializedObjectSupporter31.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler36 = serializedObjectSupporter31.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = builder37.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = builder37.serializedObjectSupporter;
        retrofit.client.Client.Provider provider40 = null;
        builder37.clientProvider = provider40;
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        builder37.log = log42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor45 = null;
        builder44.setcallbackExecutor(executor45);
        java.util.concurrent.Executor executor47 = null;
        builder44.setcallbackExecutor(executor47);
        retrofit.client.Client.Provider provider49 = null;
        builder44.clientProvider = provider49;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = builder51.serializedObjectSupporter;
        retrofit.Profiler profiler53 = builder51.profiler;
        retrofit.RestAdapter.LogLevel logLevel54 = builder51.logLevel;
        builder44.logLevel = logLevel54;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter(server18, provider20, executor21, executor22, requestInterceptor26, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler36, log42, logLevel54);
        retrofit.Server server57 = restAdapter56.server;
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        java.lang.String str59 = serializedObjectSupporter58.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter60 = serializedObjectSupporter58.deserializeObjectConverter3();
        java.lang.String str61 = serializedObjectSupporter58.deserializeObjectString4();
        retrofit.Server server62 = serializedObjectSupporter58.deserializeObjectServer1();
        retrofit.client.Client.Provider provider63 = null;
        java.util.concurrent.Executor executor64 = null;
        java.util.concurrent.Executor executor65 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter66 = new retrofit.SerializedObjectSupporter();
        java.lang.String str67 = serializedObjectSupporter66.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor68 = serializedObjectSupporter66.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter69 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request70 = serializedObjectSupporter69.deserializeObjectRequest1();
        retrofit.client.Request request71 = serializedObjectSupporter69.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter72 = serializedObjectSupporter69.deserializeObjectConverter5();
        retrofit.Profiler profiler73 = null;
        retrofit.ErrorHandler errorHandler74 = null;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor76 = null;
        builder75.sethttpExecutor(executor76);
        retrofit.RestAdapter.Log log78 = retrofit.RestAdapter.Log.NONE;
        builder75.log = log78;
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter81 = new retrofit.RestAdapter(server62, provider63, executor64, executor65, requestInterceptor68, (retrofit.converter.Converter) gsonConverter72, profiler73, errorHandler74, log78, logLevel80);
        java.util.concurrent.Executor executor82 = restAdapter81.getcallbackExecutor();
        java.util.concurrent.Executor executor83 = restAdapter81.callbackExecutor;
        java.lang.String str84 = restAdapter81.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor85 = restAdapter81.httpExecutor;
        retrofit.Profiler profiler86 = restAdapter81.getprofiler();
        retrofit.Server server87 = restAdapter81.getserver();
        retrofit.SerializedObjectSupporter serializedObjectSupporter88 = new retrofit.SerializedObjectSupporter();
        java.lang.String str89 = serializedObjectSupporter88.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter90 = serializedObjectSupporter88.deserializeObjectConverter3();
        java.lang.String str91 = serializedObjectSupporter88.deserializeObjectString4();
        retrofit.Server server92 = serializedObjectSupporter88.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter93 = serializedObjectSupporter88.deserializeObjectConverter6();
        retrofit.client.Request request94 = serializedObjectSupporter88.deserializeObjectRequest7();
        retrofit.converter.GsonConverter gsonConverter95 = serializedObjectSupporter88.deserializeObjectConverter8();
        retrofit.converter.GsonConverter gsonConverter96 = serializedObjectSupporter88.deserializeObjectConverter8();
        retrofit.mime.TypedString typedString97 = serializedObjectSupporter88.deserializeObjectTypedOutput2();
        restAdapter81.serializedObjectSupporter = serializedObjectSupporter88;
        restAdapter56.serializedObjectSupporter = serializedObjectSupporter88;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "GET" + "'", str14, "GET");
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(server18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(request25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNotNull(request28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "GET" + "'", str32, "GET");
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "http://example.com/" + "'", str34, "http://example.com/");
        org.junit.Assert.assertNotNull(request35);
        org.junit.Assert.assertNotNull(errorHandler36);
        org.junit.Assert.assertNull(serializedObjectSupporter38);
        org.junit.Assert.assertNull(serializedObjectSupporter39);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNull(serializedObjectSupporter52);
        org.junit.Assert.assertNull(profiler53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(server57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "GET" + "'", str59, "GET");
        org.junit.Assert.assertNotNull(gsonConverter60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "http://example.com/" + "'", str61, "http://example.com/");
        org.junit.Assert.assertNotNull(server62);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Retrofit-" + "'", str67, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor68);
        org.junit.Assert.assertNotNull(request70);
        org.junit.Assert.assertNotNull(request71);
        org.junit.Assert.assertNotNull(gsonConverter72);
        org.junit.Assert.assertNotNull(log78);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor82);
        org.junit.Assert.assertNull(executor83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Retrofit-Idle" + "'", str84, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor85);
        org.junit.Assert.assertNull(profiler86);
        org.junit.Assert.assertNotNull(server87);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "GET" + "'", str89, "GET");
        org.junit.Assert.assertNotNull(gsonConverter90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "http://example.com/" + "'", str91, "http://example.com/");
        org.junit.Assert.assertNotNull(server92);
        org.junit.Assert.assertNotNull(gsonConverter93);
        org.junit.Assert.assertNotNull(request94);
        org.junit.Assert.assertNotNull(gsonConverter95);
        org.junit.Assert.assertNotNull(gsonConverter96);
        org.junit.Assert.assertNotNull(typedString97);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        java.lang.String str26 = restAdapter23.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        retrofit.Profiler profiler28 = restAdapter23.getprofiler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = restAdapter23.serializedObjectSupporter;
        retrofit.RequestInterceptor requestInterceptor30 = restAdapter23.requestInterceptor;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertNull(serializedObjectSupporter29);
        org.junit.Assert.assertNotNull(requestInterceptor30);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        retrofit.ErrorHandler errorHandler27 = restAdapter23.geterrorHandler();
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter23.getLogLevel();
        java.lang.Throwable throwable29 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter23.logException(throwable29, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNull(errorHandler27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter23.getLogLevel();
        java.util.concurrent.Executor executor26 = restAdapter23.httpExecutor;
        java.util.concurrent.Executor executor27 = restAdapter23.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = restAdapter23.serializedObjectSupporter;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(serializedObjectSupporter28);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor2 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest7();
        java.lang.Class<?> wildcardClass6 = serializedObjectSupporter0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Retrofit-" + "'", str1, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        java.lang.String str26 = restAdapter23.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        retrofit.RestAdapter.Log log28 = restAdapter23.log;
        log28.log("GET");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNotNull(log28);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        java.lang.String str25 = restAdapter23.getIDLE_THREAD_NAME();
        retrofit.converter.Converter converter26 = restAdapter23.converter;
        retrofit.RestAdapter.RestHandler restHandler27 = restAdapter23.new RestHandler();
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor29 = null;
        builder28.sethttpExecutor(executor29);
        retrofit.RestAdapter.Log log31 = null;
        builder28.log = log31;
        retrofit.RestAdapter.Log log33 = builder28.log;
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request35 = serializedObjectSupporter34.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter34.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter34.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder38 = builder28.setConverter((retrofit.converter.Converter) gsonConverter37);
        java.lang.reflect.Method method39 = null;
        java.lang.Object[] objArray40 = new java.lang.Object[] {};
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj41 = restHandler27.invoke((java.lang.Object) gsonConverter37, method39, objArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Retrofit-Idle" + "'", str25, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(converter26);
        org.junit.Assert.assertNull(log33);
        org.junit.Assert.assertNotNull(request35);
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = new retrofit.SerializedObjectSupporter();
        java.lang.String str3 = serializedObjectSupporter2.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter2.deserializeObjectConverter3();
        java.lang.String str5 = serializedObjectSupporter2.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter2.deserializeObjectConverter6();
        retrofit.client.Request request7 = serializedObjectSupporter2.deserializeObjectRequest8();
        retrofit.mime.TypedOutput typedOutput8 = request7.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request7.headers;
        java.util.List<retrofit.client.Header> headerList10 = request7.headers;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = builder11.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = builder11.serializedObjectSupporter;
        java.util.concurrent.Executor executor14 = null;
        builder11.httpExecutor = executor14;
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request17 = serializedObjectSupporter16.deserializeObjectRequest1();
        retrofit.Server server18 = serializedObjectSupporter16.deserializeObjectServer1();
        java.lang.String str19 = serializedObjectSupporter16.deserializeObjectString3();
        builder11.serializedObjectSupporter = serializedObjectSupporter16;
        retrofit.mime.TypedString typedString21 = serializedObjectSupporter16.deserializeObjectTypedOutput2();
        retrofit.client.Request request22 = new retrofit.client.Request("Retrofit-", "", headerList10, (retrofit.mime.TypedOutput) typedString21);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "GET" + "'", str3, "GET");
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(serializedObjectSupporter12);
        org.junit.Assert.assertNull(serializedObjectSupporter13);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(server18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "GET" + "'", str19, "GET");
        org.junit.Assert.assertNotNull(typedString21);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        retrofit.RestAdapter.Log log5 = builder0.log;
        retrofit.Profiler profiler6 = builder0.profiler;
        retrofit.RestAdapter.Builder builder8 = builder0.setServer("http://example.com/");
        java.util.concurrent.Executor executor9 = null;
        builder0.sethttpExecutor(executor9);
        retrofit.client.Client.Provider provider11 = builder0.clientProvider;
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNull(profiler6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(provider11);
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest3();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest4();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(request6);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = restAdapter23.serializedObjectSupporter;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNull(serializedObjectSupporter27);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        java.lang.String str26 = restAdapter23.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        retrofit.Profiler profiler28 = restAdapter23.getprofiler();
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter23.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        java.lang.String str31 = serializedObjectSupporter30.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter32 = serializedObjectSupporter30.deserializeObjectConverter3();
        java.lang.String str33 = serializedObjectSupporter30.deserializeObjectString4();
        retrofit.client.Request request34 = serializedObjectSupporter30.deserializeObjectRequest6();
        retrofit.Server server35 = serializedObjectSupporter30.deserializeObjectServer1();
        restHandler29.serializedObjectSupporter = serializedObjectSupporter30;
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = restHandler29.serializedObjectSupporter;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "GET" + "'", str31, "GET");
        org.junit.Assert.assertNotNull(gsonConverter32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNotNull(request34);
        org.junit.Assert.assertNotNull(server35);
        org.junit.Assert.assertNotNull(serializedObjectSupporter37);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter23.logLevel = logLevel25;
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = restAdapter23.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler28 = restAdapter23.geterrorHandler();
        retrofit.RestAdapter.Log log29 = restAdapter23.log;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(serializedObjectSupporter27);
        org.junit.Assert.assertNull(errorHandler28);
        org.junit.Assert.assertNotNull(log29);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = builder0.log;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor3 = null;
        builder2.setcallbackExecutor(executor3);
        java.util.concurrent.Executor executor5 = null;
        builder2.setcallbackExecutor(executor5);
        retrofit.client.Client.Provider provider7 = null;
        builder2.clientProvider = provider7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = builder9.serializedObjectSupporter;
        retrofit.Profiler profiler11 = builder9.profiler;
        retrofit.RestAdapter.LogLevel logLevel12 = builder9.logLevel;
        builder2.logLevel = logLevel12;
        builder0.logLevel = logLevel12;
        retrofit.client.Client.Provider provider15 = builder0.getclientProvider();
        org.junit.Assert.assertNull(log1);
        org.junit.Assert.assertNull(serializedObjectSupporter10);
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(provider15);
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = builder0.getcallbackExecutor();
        java.util.concurrent.Executor executor4 = builder0.httpExecutor;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor6 = null;
        builder5.sethttpExecutor(executor6);
        retrofit.RestAdapter.Log log8 = null;
        builder5.log = log8;
        retrofit.RestAdapter.Log log10 = builder5.log;
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter11.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder15 = builder5.setConverter((retrofit.converter.Converter) gsonConverter14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = builder16.serializedObjectSupporter;
        retrofit.client.Client.Provider provider18 = null;
        builder16.setclientProvider(provider18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor21 = null;
        builder20.sethttpExecutor(executor21);
        retrofit.RestAdapter.Log log23 = null;
        builder20.log = log23;
        java.util.concurrent.Executor executor25 = builder20.callbackExecutor;
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        builder20.log = log26;
        retrofit.RestAdapter.Builder builder28 = builder16.setLog(log26);
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        java.lang.String str30 = serializedObjectSupporter29.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter3();
        java.lang.String str32 = serializedObjectSupporter29.deserializeObjectString4();
        retrofit.client.Request request33 = serializedObjectSupporter29.deserializeObjectRequest6();
        retrofit.Server server34 = serializedObjectSupporter29.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder35 = builder28.setServer(server34);
        retrofit.client.Client.Provider provider36 = null;
        java.util.concurrent.Executor executor37 = null;
        java.util.concurrent.Executor executor38 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        java.lang.String str40 = serializedObjectSupporter39.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter39.deserializeObjectConverter3();
        java.lang.String str42 = serializedObjectSupporter39.deserializeObjectString4();
        retrofit.Server server43 = serializedObjectSupporter39.deserializeObjectServer1();
        retrofit.client.Client.Provider provider44 = null;
        java.util.concurrent.Executor executor45 = null;
        java.util.concurrent.Executor executor46 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        java.lang.String str48 = serializedObjectSupporter47.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor49 = serializedObjectSupporter47.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter50 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request51 = serializedObjectSupporter50.deserializeObjectRequest1();
        retrofit.client.Request request52 = serializedObjectSupporter50.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter53 = serializedObjectSupporter50.deserializeObjectConverter5();
        retrofit.Profiler profiler54 = null;
        retrofit.ErrorHandler errorHandler55 = null;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor57 = null;
        builder56.sethttpExecutor(executor57);
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        builder56.log = log59;
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter62 = new retrofit.RestAdapter(server43, provider44, executor45, executor46, requestInterceptor49, (retrofit.converter.Converter) gsonConverter53, profiler54, errorHandler55, log59, logLevel61);
        retrofit.RestAdapter.LogLevel logLevel63 = restAdapter62.getLogLevel();
        retrofit.converter.Converter converter64 = restAdapter62.converter;
        retrofit.RequestInterceptor requestInterceptor65 = restAdapter62.requestInterceptor;
        retrofit.converter.Converter converter66 = null;
        retrofit.Profiler profiler67 = null;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor69 = null;
        builder68.sethttpExecutor(executor69);
        retrofit.RestAdapter.Log log71 = null;
        builder68.log = log71;
        retrofit.RestAdapter.Log log73 = builder68.log;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor75 = null;
        builder74.sethttpExecutor(executor75);
        retrofit.RequestInterceptor requestInterceptor77 = null;
        builder74.requestInterceptor = requestInterceptor77;
        java.util.concurrent.Executor executor79 = null;
        builder74.httpExecutor = executor79;
        retrofit.SerializedObjectSupporter serializedObjectSupporter81 = new retrofit.SerializedObjectSupporter();
        java.lang.String str82 = serializedObjectSupporter81.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter83 = serializedObjectSupporter81.deserializeObjectConverter3();
        java.lang.String str84 = serializedObjectSupporter81.deserializeObjectString4();
        retrofit.client.Request request85 = serializedObjectSupporter81.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler86 = serializedObjectSupporter81.deserializeObjectErrorHandler1();
        builder74.errorHandler = errorHandler86;
        retrofit.RestAdapter.Builder builder88 = builder68.setErrorHandler(errorHandler86);
        retrofit.RestAdapter.Log log89 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder90 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider91 = builder90.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel92 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder93 = builder90.setLogLevel(logLevel92);
        retrofit.RestAdapter.LogLevel logLevel94 = builder93.logLevel;
        retrofit.RestAdapter.LogLevel logLevel95 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder96 = builder93.setLogLevel(logLevel95);
        retrofit.RestAdapter restAdapter97 = new retrofit.RestAdapter(server34, provider36, executor37, executor38, requestInterceptor65, converter66, profiler67, errorHandler86, log89, logLevel95);
        builder5.errorHandler = errorHandler86;
        builder0.errorHandler = errorHandler86;
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNull(executor4);
        org.junit.Assert.assertNull(log10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(serializedObjectSupporter17);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "GET" + "'", str30, "GET");
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "http://example.com/" + "'", str32, "http://example.com/");
        org.junit.Assert.assertNotNull(request33);
        org.junit.Assert.assertNotNull(server34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "GET" + "'", str40, "GET");
        org.junit.Assert.assertNotNull(gsonConverter41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "http://example.com/" + "'", str42, "http://example.com/");
        org.junit.Assert.assertNotNull(server43);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Retrofit-" + "'", str48, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNotNull(request51);
        org.junit.Assert.assertNotNull(request52);
        org.junit.Assert.assertNotNull(gsonConverter53);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter64);
        org.junit.Assert.assertNotNull(requestInterceptor65);
        org.junit.Assert.assertNull(log73);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "GET" + "'", str82, "GET");
        org.junit.Assert.assertNotNull(gsonConverter83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "http://example.com/" + "'", str84, "http://example.com/");
        org.junit.Assert.assertNotNull(request85);
        org.junit.Assert.assertNotNull(errorHandler86);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(log89);
        org.junit.Assert.assertNull(provider91);
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertTrue("'" + logLevel94 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel94.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel95 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel95.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder96);
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request7 = serializedObjectSupporter0.deserializeObjectRequest8();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(request7);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest3();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString1();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-" + "'", str4, "Retrofit-");
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.RestAdapter.LogLevel logLevel4 = builder3.logLevel;
        retrofit.RequestInterceptor requestInterceptor5 = builder3.requestInterceptor;
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(requestInterceptor5);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        retrofit.Profiler profiler27 = restAdapter23.getprofiler();
        retrofit.client.Client.Provider provider28 = restAdapter23.clientProvider;
        retrofit.RequestInterceptor requestInterceptor29 = restAdapter23.getrequestInterceptor();
        java.lang.String str30 = restAdapter23.getIDLE_THREAD_NAME();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNull(profiler27);
        org.junit.Assert.assertNull(provider28);
        org.junit.Assert.assertNotNull(requestInterceptor29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Retrofit-Idle" + "'", str30, "Retrofit-Idle");
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        java.util.concurrent.Executor executor5 = builder0.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler7 = builder0.errorHandler;
        retrofit.converter.Converter converter8 = builder0.converter;
        retrofit.RestAdapter.LogLevel logLevel9 = builder0.logLevel;
        retrofit.client.Client.Provider provider10 = builder0.clientProvider;
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(errorHandler7);
        org.junit.Assert.assertNull(converter8);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(provider10);
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest3();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter6 = serializedObjectSupporter0.deserializeObjectLogLevel2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertNotNull(request5);
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.Profiler profiler24 = restAdapter23.profiler;
        java.lang.Throwable throwable25 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter23.logException(throwable25, "Retrofit-");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(profiler24);
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.RestAdapter.LogLevel logLevel4 = builder3.logLevel;
        retrofit.RestAdapter.LogLevel logLevel5 = builder3.logLevel;
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler5 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString2();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter7 = serializedObjectSupporter0.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(errorHandler5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Retrofit-Idle" + "'", str6, "Retrofit-Idle");
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        java.util.concurrent.Executor executor26 = restAdapter23.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request28 = serializedObjectSupporter27.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter27.deserializeObjectConverter2();
        retrofit.client.Request request30 = serializedObjectSupporter27.deserializeObjectRequest8();
        retrofit.client.Request request31 = restAdapter23.logAndReplaceRequest(request30);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNotNull(request28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNotNull(request30);
        org.junit.Assert.assertNotNull(request31);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        retrofit.RestAdapter.Log log5 = builder0.log;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request7 = serializedObjectSupporter6.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter6.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter6.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder10 = builder0.setConverter((retrofit.converter.Converter) gsonConverter9);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter11 = builder0.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter1();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Retrofit-" + "'", str2, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "POST" + "'", str3, "POST");
        org.junit.Assert.assertNotNull(gsonConverter4);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.converter.Converter converter4 = builder3.converter;
        retrofit.Profiler profiler5 = builder3.profiler;
        java.util.concurrent.Executor executor6 = builder3.callbackExecutor;
        builder3.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor9 = null;
        builder8.sethttpExecutor(executor9);
        retrofit.RestAdapter.Log log11 = null;
        builder8.log = log11;
        retrofit.RestAdapter.Log log13 = builder8.log;
        retrofit.Profiler profiler14 = builder8.profiler;
        retrofit.RestAdapter.Builder builder16 = builder8.setServer("http://example.com/");
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request18 = serializedObjectSupporter17.deserializeObjectRequest1();
        retrofit.client.Request request19 = serializedObjectSupporter17.deserializeObjectRequest5();
        java.lang.String str20 = serializedObjectSupporter17.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter17.deserializeObjectConverter7();
        builder8.converter = gsonConverter21;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor24 = null;
        builder23.sethttpExecutor(executor24);
        retrofit.RequestInterceptor requestInterceptor26 = null;
        builder23.requestInterceptor = requestInterceptor26;
        retrofit.converter.Converter converter28 = builder23.converter;
        java.util.concurrent.Executor executor29 = null;
        builder23.httpExecutor = executor29;
        java.util.concurrent.Executor executor31 = null;
        builder23.httpExecutor = executor31;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor34 = null;
        builder33.sethttpExecutor(executor34);
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        builder33.log = log36;
        log36.log("");
        log36.log("POST");
        builder23.log = log36;
        builder8.log = log36;
        retrofit.RestAdapter.LogLevel logLevel44 = builder8.logLevel;
        retrofit.RestAdapter.Builder builder45 = builder3.setLogLevel(logLevel44);
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNull(profiler5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNull(log13);
        org.junit.Assert.assertNull(profiler14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(request18);
        org.junit.Assert.assertNotNull(request19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "POST" + "'", str20, "POST");
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNull(converter28);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        retrofit.client.Client.Provider provider3 = null;
        builder0.clientProvider = provider3;
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter5.deserializeObjectConverter3();
        java.lang.String str8 = serializedObjectSupporter5.deserializeObjectString4();
        retrofit.client.Request request9 = serializedObjectSupporter5.deserializeObjectRequest6();
        retrofit.Server server10 = serializedObjectSupporter5.deserializeObjectServer1();
        retrofit.client.Client.Provider provider11 = null;
        java.util.concurrent.Executor executor12 = null;
        java.util.concurrent.Executor executor13 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor16 = serializedObjectSupporter14.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        java.lang.String str21 = serializedObjectSupporter20.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter3();
        builder17.converter = gsonConverter22;
        retrofit.Profiler profiler24 = null;
        retrofit.ErrorHandler errorHandler25 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter26.deserializeObjectConverter3();
        java.lang.String str29 = serializedObjectSupporter26.deserializeObjectString4();
        retrofit.Server server30 = serializedObjectSupporter26.deserializeObjectServer1();
        retrofit.client.Client.Provider provider31 = null;
        java.util.concurrent.Executor executor32 = null;
        java.util.concurrent.Executor executor33 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = new retrofit.SerializedObjectSupporter();
        java.lang.String str35 = serializedObjectSupporter34.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor36 = serializedObjectSupporter34.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request38 = serializedObjectSupporter37.deserializeObjectRequest1();
        retrofit.client.Request request39 = serializedObjectSupporter37.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter40 = serializedObjectSupporter37.deserializeObjectConverter5();
        retrofit.Profiler profiler41 = null;
        retrofit.ErrorHandler errorHandler42 = null;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor44 = null;
        builder43.sethttpExecutor(executor44);
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        builder43.log = log46;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server30, provider31, executor32, executor33, requestInterceptor36, (retrofit.converter.Converter) gsonConverter40, profiler41, errorHandler42, log46, logLevel48);
        retrofit.SerializedObjectSupporter serializedObjectSupporter50 = new retrofit.SerializedObjectSupporter();
        java.lang.String str51 = serializedObjectSupporter50.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter52 = serializedObjectSupporter50.deserializeObjectConverter3();
        java.lang.String str53 = serializedObjectSupporter50.deserializeObjectString4();
        retrofit.Server server54 = serializedObjectSupporter50.deserializeObjectServer1();
        retrofit.client.Client.Provider provider55 = null;
        java.util.concurrent.Executor executor56 = null;
        java.util.concurrent.Executor executor57 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        java.lang.String str59 = serializedObjectSupporter58.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor60 = serializedObjectSupporter58.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter61 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request62 = serializedObjectSupporter61.deserializeObjectRequest1();
        retrofit.client.Request request63 = serializedObjectSupporter61.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter64 = serializedObjectSupporter61.deserializeObjectConverter5();
        retrofit.Profiler profiler65 = null;
        retrofit.ErrorHandler errorHandler66 = null;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor68 = null;
        builder67.sethttpExecutor(executor68);
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        builder67.log = log70;
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter73 = new retrofit.RestAdapter(server54, provider55, executor56, executor57, requestInterceptor60, (retrofit.converter.Converter) gsonConverter64, profiler65, errorHandler66, log70, logLevel72);
        java.util.concurrent.Executor executor74 = restAdapter73.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor75 = restAdapter73.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor76 = restAdapter73.requestInterceptor;
        java.lang.String str77 = restAdapter73.getTHREAD_PREFIX();
        retrofit.SerializedObjectSupporter serializedObjectSupporter78 = restAdapter73.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel79 = restAdapter73.logLevel;
        retrofit.RestAdapter restAdapter80 = new retrofit.RestAdapter(server10, provider11, executor12, executor13, requestInterceptor16, (retrofit.converter.Converter) gsonConverter22, profiler24, errorHandler25, log46, logLevel79);
        retrofit.client.Client.Provider provider81 = restAdapter80.clientProvider;
        retrofit.RequestInterceptor requestInterceptor82 = restAdapter80.getrequestInterceptor();
        retrofit.RestAdapter.Builder builder83 = builder0.setRequestInterceptor(requestInterceptor82);
        retrofit.ErrorHandler errorHandler84 = builder0.errorHandler;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "GET" + "'", str6, "GET");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(request9);
        org.junit.Assert.assertNotNull(server10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Retrofit-" + "'", str15, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "GET" + "'", str21, "GET");
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "GET" + "'", str27, "GET");
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "http://example.com/" + "'", str29, "http://example.com/");
        org.junit.Assert.assertNotNull(server30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Retrofit-" + "'", str35, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor36);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertNotNull(gsonConverter40);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "GET" + "'", str51, "GET");
        org.junit.Assert.assertNotNull(gsonConverter52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "http://example.com/" + "'", str53, "http://example.com/");
        org.junit.Assert.assertNotNull(server54);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Retrofit-" + "'", str59, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor60);
        org.junit.Assert.assertNotNull(request62);
        org.junit.Assert.assertNotNull(request63);
        org.junit.Assert.assertNotNull(gsonConverter64);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor74);
        org.junit.Assert.assertNotNull(requestInterceptor75);
        org.junit.Assert.assertNotNull(requestInterceptor76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Retrofit-" + "'", str77, "Retrofit-");
        org.junit.Assert.assertNull(serializedObjectSupporter78);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider81);
        org.junit.Assert.assertNotNull(requestInterceptor82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNull(errorHandler84);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        retrofit.converter.Converter converter5 = builder0.converter;
        java.util.concurrent.Executor executor6 = null;
        builder0.httpExecutor = executor6;
        java.util.concurrent.Executor executor8 = null;
        builder0.httpExecutor = executor8;
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = builder0.serializedObjectSupporter;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass11 = serializedObjectSupporter10.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNull(serializedObjectSupporter10);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter3();
        builder0.converter = gsonConverter5;
        retrofit.client.Client.Provider provider7 = null;
        builder0.clientProvider = provider7;
        retrofit.client.Client.Provider provider9 = null;
        builder0.setclientProvider(provider9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = builder11.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = builder11.serializedObjectSupporter;
        java.util.concurrent.Executor executor14 = null;
        builder11.httpExecutor = executor14;
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request17 = serializedObjectSupporter16.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter16.deserializeObjectConverter2();
        builder11.serializedObjectSupporter = serializedObjectSupporter16;
        retrofit.client.Request request20 = serializedObjectSupporter16.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter16.deserializeObjectConverter5();
        retrofit.Server server22 = serializedObjectSupporter16.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder23 = builder0.setServer(server22);
        retrofit.client.Client.Provider provider24 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor26 = null;
        builder25.setcallbackExecutor(executor26);
        retrofit.RequestInterceptor requestInterceptor28 = builder25.requestInterceptor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        java.lang.String str30 = serializedObjectSupporter29.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter3();
        java.lang.String str32 = serializedObjectSupporter29.deserializeObjectString4();
        retrofit.client.Request request33 = serializedObjectSupporter29.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler34 = serializedObjectSupporter29.deserializeObjectErrorHandler1();
        builder25.errorHandler = errorHandler34;
        retrofit.RestAdapter.Builder builder36 = builder0.setErrorHandler(errorHandler34);
        retrofit.ErrorHandler errorHandler37 = builder0.errorHandler;
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNull(serializedObjectSupporter12);
        org.junit.Assert.assertNull(serializedObjectSupporter13);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(request20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNotNull(server22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNull(requestInterceptor28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "GET" + "'", str30, "GET");
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "http://example.com/" + "'", str32, "http://example.com/");
        org.junit.Assert.assertNotNull(request33);
        org.junit.Assert.assertNotNull(errorHandler34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(errorHandler37);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = builder0.requestInterceptor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        java.lang.String str5 = serializedObjectSupporter4.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter4.deserializeObjectConverter3();
        java.lang.String str7 = serializedObjectSupporter4.deserializeObjectString4();
        retrofit.client.Request request8 = serializedObjectSupporter4.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler9 = serializedObjectSupporter4.deserializeObjectErrorHandler1();
        builder0.errorHandler = errorHandler9;
        java.util.concurrent.Executor executor11 = builder0.getcallbackExecutor();
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor13 = null;
        builder12.setcallbackExecutor(executor13);
        java.util.concurrent.Executor executor15 = null;
        builder12.setcallbackExecutor(executor15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.FULL;
        builder12.logLevel = logLevel17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor20 = null;
        builder19.setcallbackExecutor(executor20);
        java.util.concurrent.Executor executor22 = null;
        builder19.setcallbackExecutor(executor22);
        builder19.ensureSaneDefaults();
        java.util.concurrent.Executor executor25 = builder19.callbackExecutor;
        builder12.sethttpExecutor(executor25);
        builder0.httpExecutor = executor25;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter28 = builder0.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(requestInterceptor3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "GET" + "'", str5, "GET");
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(errorHandler9);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(executor25);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.ErrorHandler errorHandler3 = builder0.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        java.lang.String str5 = serializedObjectSupporter4.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter4.deserializeObjectConverter3();
        java.lang.String str7 = serializedObjectSupporter4.deserializeObjectString4();
        retrofit.Server server8 = serializedObjectSupporter4.deserializeObjectServer1();
        retrofit.client.Client.Provider provider9 = null;
        java.util.concurrent.Executor executor10 = null;
        java.util.concurrent.Executor executor11 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor14 = serializedObjectSupporter12.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request16 = serializedObjectSupporter15.deserializeObjectRequest1();
        retrofit.client.Request request17 = serializedObjectSupporter15.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter15.deserializeObjectConverter5();
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor22 = null;
        builder21.sethttpExecutor(executor22);
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        builder21.log = log24;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter(server8, provider9, executor10, executor11, requestInterceptor14, (retrofit.converter.Converter) gsonConverter18, profiler19, errorHandler20, log24, logLevel26);
        java.util.concurrent.Executor executor28 = restAdapter27.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor29 = restAdapter27.requestInterceptor;
        retrofit.RestAdapter.Builder builder30 = builder0.setRequestInterceptor(requestInterceptor29);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor32 = null;
        builder31.setcallbackExecutor(executor32);
        java.util.concurrent.Executor executor34 = null;
        builder31.setcallbackExecutor(executor34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.FULL;
        builder31.logLevel = logLevel36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor39 = null;
        builder38.setcallbackExecutor(executor39);
        java.util.concurrent.Executor executor41 = null;
        builder38.setcallbackExecutor(executor41);
        builder38.ensureSaneDefaults();
        java.util.concurrent.Executor executor44 = builder38.callbackExecutor;
        builder31.sethttpExecutor(executor44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = builder46.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = builder46.serializedObjectSupporter;
        retrofit.client.Client.Provider provider49 = null;
        builder46.clientProvider = provider49;
        java.util.concurrent.Executor executor51 = null;
        builder46.callbackExecutor = executor51;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor54 = null;
        builder53.setcallbackExecutor(executor54);
        java.util.concurrent.Executor executor56 = null;
        builder53.setcallbackExecutor(executor56);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.FULL;
        builder53.logLevel = logLevel58;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor61 = null;
        builder60.setcallbackExecutor(executor61);
        java.util.concurrent.Executor executor63 = null;
        builder60.setcallbackExecutor(executor63);
        builder60.ensureSaneDefaults();
        java.util.concurrent.Executor executor66 = builder60.callbackExecutor;
        builder53.sethttpExecutor(executor66);
        builder46.httpExecutor = executor66;
        retrofit.RestAdapter.Builder builder69 = builder30.setExecutors(executor44, executor66);
        retrofit.converter.Converter converter70 = builder30.converter;
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean72 = logLevel71.log();
        retrofit.RestAdapter.Builder builder73 = builder30.setLogLevel(logLevel71);
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "GET" + "'", str5, "GET");
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-" + "'", str13, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor14);
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNotNull(requestInterceptor29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(executor44);
        org.junit.Assert.assertNull(serializedObjectSupporter47);
        org.junit.Assert.assertNull(serializedObjectSupporter48);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(executor66);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNull(converter70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(builder73);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = null;
        builder0.setcallbackExecutor(executor3);
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.FULL;
        builder0.logLevel = logLevel5;
        retrofit.ErrorHandler errorHandler7 = builder0.errorHandler;
        builder0.ensureSaneDefaults();
        retrofit.Profiler profiler9 = null;
        builder0.profiler = profiler9;
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(errorHandler7);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        java.lang.String str25 = restAdapter23.getIDLE_THREAD_NAME();
        retrofit.Profiler profiler26 = restAdapter23.profiler;
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor28 = restAdapter23.getrequestInterceptor();
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor30 = null;
        builder29.sethttpExecutor(executor30);
        retrofit.RestAdapter.Log log32 = null;
        builder29.log = log32;
        retrofit.RestAdapter.Log log34 = builder29.log;
        retrofit.Profiler profiler35 = builder29.profiler;
        retrofit.RestAdapter.Builder builder37 = builder29.setServer("http://example.com/");
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request39 = serializedObjectSupporter38.deserializeObjectRequest1();
        retrofit.client.Request request40 = serializedObjectSupporter38.deserializeObjectRequest5();
        java.lang.String str41 = serializedObjectSupporter38.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter42 = serializedObjectSupporter38.deserializeObjectConverter7();
        builder29.converter = gsonConverter42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor45 = null;
        builder44.sethttpExecutor(executor45);
        retrofit.RequestInterceptor requestInterceptor47 = null;
        builder44.requestInterceptor = requestInterceptor47;
        retrofit.converter.Converter converter49 = builder44.converter;
        java.util.concurrent.Executor executor50 = null;
        builder44.httpExecutor = executor50;
        java.util.concurrent.Executor executor52 = null;
        builder44.httpExecutor = executor52;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor55 = null;
        builder54.sethttpExecutor(executor55);
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        builder54.log = log57;
        log57.log("");
        log57.log("POST");
        builder44.log = log57;
        builder29.log = log57;
        retrofit.RestAdapter.LogLevel logLevel65 = builder29.logLevel;
        restAdapter23.logLevel = logLevel65;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Retrofit-Idle" + "'", str25, "Retrofit-Idle");
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNull(log34);
        org.junit.Assert.assertNull(profiler35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "POST" + "'", str41, "POST");
        org.junit.Assert.assertNotNull(gsonConverter42);
        org.junit.Assert.assertNull(converter49);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.converter.Converter converter4 = builder3.converter;
        retrofit.Profiler profiler5 = builder3.profiler;
        java.util.concurrent.Executor executor6 = builder3.callbackExecutor;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor8 = null;
        builder7.setcallbackExecutor(executor8);
        java.util.concurrent.Executor executor10 = null;
        builder7.setcallbackExecutor(executor10);
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.FULL;
        builder7.logLevel = logLevel12;
        retrofit.client.Client.Provider provider14 = builder7.getclientProvider();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = builder7.serializedObjectSupporter;
        java.util.concurrent.Executor executor16 = builder7.callbackExecutor;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = builder17.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = builder17.serializedObjectSupporter;
        java.util.concurrent.Executor executor20 = null;
        builder17.httpExecutor = executor20;
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request23 = serializedObjectSupporter22.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter24 = serializedObjectSupporter22.deserializeObjectConverter2();
        builder17.serializedObjectSupporter = serializedObjectSupporter22;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider27 = builder26.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder29 = builder26.setLogLevel(logLevel28);
        retrofit.converter.Converter converter30 = builder29.converter;
        java.util.concurrent.Executor executor31 = null;
        builder29.sethttpExecutor(executor31);
        retrofit.RestAdapter.Builder builder34 = builder29.setServer("GET");
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor36 = null;
        builder35.setcallbackExecutor(executor36);
        java.util.concurrent.Executor executor38 = null;
        builder35.setcallbackExecutor(executor38);
        builder35.ensureSaneDefaults();
        java.util.concurrent.Executor executor41 = builder35.callbackExecutor;
        builder34.setcallbackExecutor(executor41);
        builder17.httpExecutor = executor41;
        builder7.sethttpExecutor(executor41);
        builder3.callbackExecutor = executor41;
        java.util.concurrent.Executor executor46 = builder3.httpExecutor;
        builder3.ensureSaneDefaults();
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNull(profiler5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(serializedObjectSupporter15);
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertNull(serializedObjectSupporter18);
        org.junit.Assert.assertNull(serializedObjectSupporter19);
        org.junit.Assert.assertNotNull(request23);
        org.junit.Assert.assertNotNull(gsonConverter24);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNull(converter30);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(executor41);
        org.junit.Assert.assertNull(executor46);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter23.logLevel = logLevel25;
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = restAdapter23.serializedObjectSupporter;
        retrofit.RestAdapter.Log log28 = restAdapter23.log;
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request30 = serializedObjectSupporter29.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter32 = serializedObjectSupporter29.deserializeObjectConverter8();
        java.lang.String str33 = serializedObjectSupporter29.deserializeObjectString4();
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter29;
        retrofit.RestAdapter.Log log35 = restAdapter23.log;
        retrofit.client.Client.Provider provider36 = restAdapter23.getclientProvider();
        retrofit.client.Client.Provider provider37 = restAdapter23.clientProvider;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(serializedObjectSupporter27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(request30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(gsonConverter32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNull(provider36);
        org.junit.Assert.assertNull(provider37);
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor2 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest7();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Retrofit-" + "'", str1, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(request6);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.converter.Converter converter4 = builder3.converter;
        retrofit.Profiler profiler5 = builder3.profiler;
        java.util.concurrent.Executor executor6 = builder3.callbackExecutor;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor8 = null;
        builder7.setcallbackExecutor(executor8);
        java.util.concurrent.Executor executor10 = null;
        builder7.setcallbackExecutor(executor10);
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.FULL;
        builder7.logLevel = logLevel12;
        retrofit.client.Client.Provider provider14 = builder7.getclientProvider();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = builder7.serializedObjectSupporter;
        java.util.concurrent.Executor executor16 = builder7.callbackExecutor;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = builder17.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = builder17.serializedObjectSupporter;
        java.util.concurrent.Executor executor20 = null;
        builder17.httpExecutor = executor20;
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request23 = serializedObjectSupporter22.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter24 = serializedObjectSupporter22.deserializeObjectConverter2();
        builder17.serializedObjectSupporter = serializedObjectSupporter22;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider27 = builder26.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder29 = builder26.setLogLevel(logLevel28);
        retrofit.converter.Converter converter30 = builder29.converter;
        java.util.concurrent.Executor executor31 = null;
        builder29.sethttpExecutor(executor31);
        retrofit.RestAdapter.Builder builder34 = builder29.setServer("GET");
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor36 = null;
        builder35.setcallbackExecutor(executor36);
        java.util.concurrent.Executor executor38 = null;
        builder35.setcallbackExecutor(executor38);
        builder35.ensureSaneDefaults();
        java.util.concurrent.Executor executor41 = builder35.callbackExecutor;
        builder34.setcallbackExecutor(executor41);
        builder17.httpExecutor = executor41;
        builder7.sethttpExecutor(executor41);
        builder3.callbackExecutor = executor41;
        retrofit.RestAdapter.LogLevel logLevel46 = builder3.logLevel;
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNull(profiler5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(serializedObjectSupporter15);
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertNull(serializedObjectSupporter18);
        org.junit.Assert.assertNull(serializedObjectSupporter19);
        org.junit.Assert.assertNotNull(request23);
        org.junit.Assert.assertNotNull(gsonConverter24);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNull(converter30);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(executor41);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter3();
        builder0.converter = gsonConverter5;
        retrofit.client.Client.Provider provider7 = null;
        builder0.clientProvider = provider7;
        retrofit.client.Client.Provider provider9 = null;
        builder0.setclientProvider(provider9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = builder11.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = builder11.serializedObjectSupporter;
        java.util.concurrent.Executor executor14 = null;
        builder11.httpExecutor = executor14;
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request17 = serializedObjectSupporter16.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter16.deserializeObjectConverter2();
        builder11.serializedObjectSupporter = serializedObjectSupporter16;
        retrofit.client.Request request20 = serializedObjectSupporter16.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter16.deserializeObjectConverter5();
        retrofit.Server server22 = serializedObjectSupporter16.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder23 = builder0.setServer(server22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor25 = null;
        builder24.sethttpExecutor(executor25);
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        java.lang.String str28 = serializedObjectSupporter27.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter27.deserializeObjectConverter3();
        builder24.converter = gsonConverter29;
        retrofit.client.Client.Provider provider31 = null;
        builder24.clientProvider = provider31;
        retrofit.client.Client.Provider provider33 = null;
        builder24.setclientProvider(provider33);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = builder35.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = builder35.serializedObjectSupporter;
        java.util.concurrent.Executor executor38 = null;
        builder35.httpExecutor = executor38;
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request41 = serializedObjectSupporter40.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter42 = serializedObjectSupporter40.deserializeObjectConverter2();
        builder35.serializedObjectSupporter = serializedObjectSupporter40;
        retrofit.client.Request request44 = serializedObjectSupporter40.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter45 = serializedObjectSupporter40.deserializeObjectConverter5();
        retrofit.Server server46 = serializedObjectSupporter40.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder47 = builder24.setServer(server46);
        retrofit.client.Client.Provider provider48 = builder24.clientProvider;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler51 = builder49.errorHandler;
        java.util.concurrent.Executor executor52 = builder49.getcallbackExecutor();
        builder24.sethttpExecutor(executor52);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor55 = null;
        builder54.sethttpExecutor(executor55);
        retrofit.RequestInterceptor requestInterceptor57 = null;
        builder54.requestInterceptor = requestInterceptor57;
        retrofit.converter.Converter converter59 = builder54.converter;
        java.util.concurrent.Executor executor60 = null;
        builder54.httpExecutor = executor60;
        java.util.concurrent.Executor executor62 = null;
        builder54.httpExecutor = executor62;
        retrofit.Profiler profiler64 = null;
        builder54.profiler = profiler64;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider67 = builder66.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder69 = builder66.setLogLevel(logLevel68);
        retrofit.converter.Converter converter70 = builder69.converter;
        builder69.ensureSaneDefaults();
        retrofit.client.Client.Provider provider72 = builder69.clientProvider;
        retrofit.RestAdapter.Builder builder73 = builder54.setClient(provider72);
        builder24.clientProvider = provider72;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor76 = null;
        builder75.setcallbackExecutor(executor76);
        java.util.concurrent.Executor executor78 = null;
        builder75.setcallbackExecutor(executor78);
        builder75.ensureSaneDefaults();
        java.util.concurrent.Executor executor81 = builder75.callbackExecutor;
        builder24.callbackExecutor = executor81;
        builder0.httpExecutor = executor81;
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNull(serializedObjectSupporter12);
        org.junit.Assert.assertNull(serializedObjectSupporter13);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(request20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNotNull(server22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "GET" + "'", str28, "GET");
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNull(serializedObjectSupporter36);
        org.junit.Assert.assertNull(serializedObjectSupporter37);
        org.junit.Assert.assertNotNull(request41);
        org.junit.Assert.assertNotNull(gsonConverter42);
        org.junit.Assert.assertNotNull(request44);
        org.junit.Assert.assertNotNull(gsonConverter45);
        org.junit.Assert.assertNotNull(server46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNotNull(errorHandler51);
        org.junit.Assert.assertNotNull(executor52);
        org.junit.Assert.assertNull(converter59);
        org.junit.Assert.assertNull(provider67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNull(converter70);
        org.junit.Assert.assertNotNull(provider72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(executor81);
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        retrofit.converter.Converter converter5 = builder0.converter;
        java.util.concurrent.Executor executor6 = null;
        builder0.httpExecutor = executor6;
        java.util.concurrent.Executor executor8 = null;
        builder0.httpExecutor = executor8;
        retrofit.Profiler profiler10 = null;
        builder0.profiler = profiler10;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor13 = null;
        builder12.sethttpExecutor(executor13);
        retrofit.RequestInterceptor requestInterceptor15 = null;
        builder12.requestInterceptor = requestInterceptor15;
        retrofit.converter.Converter converter17 = builder12.converter;
        java.util.concurrent.Executor executor18 = null;
        builder12.httpExecutor = executor18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor21 = null;
        builder20.sethttpExecutor(executor21);
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter3();
        builder20.converter = gsonConverter25;
        retrofit.client.Client.Provider provider27 = null;
        builder20.clientProvider = provider27;
        retrofit.client.Client.Provider provider29 = null;
        builder20.setclientProvider(provider29);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = builder31.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = builder31.serializedObjectSupporter;
        java.util.concurrent.Executor executor34 = null;
        builder31.httpExecutor = executor34;
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request37 = serializedObjectSupporter36.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter2();
        builder31.serializedObjectSupporter = serializedObjectSupporter36;
        retrofit.client.Request request40 = serializedObjectSupporter36.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter36.deserializeObjectConverter5();
        retrofit.Server server42 = serializedObjectSupporter36.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder43 = builder20.setServer(server42);
        builder12.server = server42;
        builder0.server = server42;
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "GET" + "'", str24, "GET");
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNull(serializedObjectSupporter32);
        org.junit.Assert.assertNull(serializedObjectSupporter33);
        org.junit.Assert.assertNotNull(request37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(gsonConverter41);
        org.junit.Assert.assertNotNull(server42);
        org.junit.Assert.assertNotNull(builder43);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest5();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "GET" + "'", str3, "GET");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(request5);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter23.getLogLevel();
        retrofit.RestAdapter.Log log26 = restAdapter23.log;
        java.util.concurrent.Executor executor27 = restAdapter23.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter23.setLogLevel(logLevel28);
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter23.logLevel;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest4();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest2();
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "GET" + "'", str3, "GET");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "GET" + "'", str5, "GET");
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNull(typedOutput7);
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest8();
        java.lang.String str2 = request1.method;
        java.lang.String str3 = request1.getUrl();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "GET" + "'", str2, "GET");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        retrofit.converter.Converter converter5 = builder0.converter;
        java.util.concurrent.Executor executor6 = builder0.getcallbackExecutor();
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNull(executor6);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.converter;
        java.lang.String str26 = restAdapter23.getIDLE_THREAD_NAME();
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = builder27.serializedObjectSupporter;
        retrofit.Profiler profiler29 = builder27.profiler;
        retrofit.RestAdapter.LogLevel logLevel30 = builder27.logLevel;
        restAdapter23.logLevel = logLevel30;
        retrofit.client.Client.Provider provider32 = restAdapter23.getclientProvider();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
        org.junit.Assert.assertNull(serializedObjectSupporter28);
        org.junit.Assert.assertNull(profiler29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(provider32);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.Profiler profiler24 = restAdapter23.profiler;
        java.util.concurrent.Executor executor25 = restAdapter23.httpExecutor;
        java.lang.Throwable throwable26 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter23.logException(throwable26, "Retrofit-");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(profiler24);
        org.junit.Assert.assertNull(executor25);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        retrofit.RestAdapter.Log log5 = builder0.log;
        retrofit.Profiler profiler6 = builder0.profiler;
        retrofit.RestAdapter.Builder builder8 = builder0.setServer("http://example.com/");
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request10 = serializedObjectSupporter9.deserializeObjectRequest1();
        retrofit.client.Request request11 = serializedObjectSupporter9.deserializeObjectRequest5();
        java.lang.String str12 = serializedObjectSupporter9.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter9.deserializeObjectConverter7();
        builder0.converter = gsonConverter13;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter3();
        java.lang.String str18 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.Server server19 = serializedObjectSupporter15.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter15.deserializeObjectConverter6();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter15.deserializeObjectConverter6();
        retrofit.client.Request request22 = serializedObjectSupporter15.deserializeObjectRequest7();
        builder0.serializedObjectSupporter = serializedObjectSupporter15;
        retrofit.client.Request request24 = serializedObjectSupporter15.deserializeObjectRequest1();
        java.util.List<retrofit.client.Header> headerList25 = request24.headers;
        retrofit.mime.TypedOutput typedOutput26 = request24.body;
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNull(profiler6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "POST" + "'", str12, "POST");
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "GET" + "'", str16, "GET");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(server19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNotNull(request22);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(headerList25);
        org.junit.Assert.assertNull(typedOutput26);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.getconverter();
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean27 = logLevel26.log();
        boolean boolean28 = logLevel26.log();
        restAdapter23.setLogLevel(logLevel26);
        retrofit.Server server30 = restAdapter23.getserver();
        java.lang.Throwable throwable31 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter23.logException(throwable31, "Retrofit-");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(server30);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest6();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString2();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections collections7 = serializedObjectSupporter0.deserializeObjectList1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Collections$UnmodifiableRandomAccessList cannot be cast to java.util.Collections");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Retrofit-Idle" + "'", str5, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Retrofit-Idle" + "'", str6, "Retrofit-Idle");
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.client.Client.Provider provider2 = null;
        builder0.setclientProvider(provider2);
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor5 = null;
        builder4.sethttpExecutor(executor5);
        retrofit.RestAdapter.Log log7 = null;
        builder4.log = log7;
        java.util.concurrent.Executor executor9 = builder4.callbackExecutor;
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        builder4.log = log10;
        retrofit.RestAdapter.Builder builder12 = builder0.setLog(log10);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder14 = builder0.setServer("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be blank.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.converter.Converter converter3 = builder0.converter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("GET");
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor7 = null;
        builder6.sethttpExecutor(executor7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter3();
        builder6.converter = gsonConverter11;
        retrofit.client.Client.Provider provider13 = null;
        builder6.clientProvider = provider13;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter3();
        java.lang.String str18 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter15.deserializeObjectConverter6();
        builder6.converter = gsonConverter19;
        builder0.converter = gsonConverter19;
        retrofit.RestAdapter restAdapter22 = builder0.build();
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor24 = null;
        builder23.sethttpExecutor(executor24);
        retrofit.RequestInterceptor requestInterceptor26 = null;
        builder23.requestInterceptor = requestInterceptor26;
        retrofit.Profiler profiler28 = null;
        builder23.profiler = profiler28;
        java.util.concurrent.Executor executor30 = builder23.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        java.lang.String str32 = serializedObjectSupporter31.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter3();
        java.lang.String str34 = serializedObjectSupporter31.deserializeObjectString4();
        retrofit.Server server35 = serializedObjectSupporter31.deserializeObjectServer1();
        retrofit.client.Client.Provider provider36 = null;
        java.util.concurrent.Executor executor37 = null;
        java.util.concurrent.Executor executor38 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        java.lang.String str40 = serializedObjectSupporter39.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor41 = serializedObjectSupporter39.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request43 = serializedObjectSupporter42.deserializeObjectRequest1();
        retrofit.client.Request request44 = serializedObjectSupporter42.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter45 = serializedObjectSupporter42.deserializeObjectConverter5();
        retrofit.Profiler profiler46 = null;
        retrofit.ErrorHandler errorHandler47 = null;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor49 = null;
        builder48.sethttpExecutor(executor49);
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        builder48.log = log51;
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter(server35, provider36, executor37, executor38, requestInterceptor41, (retrofit.converter.Converter) gsonConverter45, profiler46, errorHandler47, log51, logLevel53);
        java.util.concurrent.Executor executor55 = restAdapter54.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor56 = restAdapter54.requestInterceptor;
        retrofit.RestAdapter.Builder builder57 = builder23.setRequestInterceptor(requestInterceptor56);
        retrofit.RestAdapter.LogLevel logLevel58 = builder23.logLevel;
        restAdapter22.logLevel = logLevel58;
        java.lang.Throwable throwable60 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter22.logException(throwable60, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "GET" + "'", str10, "GET");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "GET" + "'", str16, "GET");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNull(executor30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "GET" + "'", str32, "GET");
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "http://example.com/" + "'", str34, "http://example.com/");
        org.junit.Assert.assertNotNull(server35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Retrofit-" + "'", str40, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor41);
        org.junit.Assert.assertNotNull(request43);
        org.junit.Assert.assertNotNull(request44);
        org.junit.Assert.assertNotNull(gsonConverter45);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor55);
        org.junit.Assert.assertNotNull(requestInterceptor56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        retrofit.Profiler profiler27 = restAdapter23.getprofiler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        java.lang.String str29 = serializedObjectSupporter28.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter28.deserializeObjectConverter3();
        java.lang.String str31 = serializedObjectSupporter28.deserializeObjectString4();
        retrofit.Server server32 = serializedObjectSupporter28.deserializeObjectServer1();
        retrofit.client.Client.Provider provider33 = null;
        java.util.concurrent.Executor executor34 = null;
        java.util.concurrent.Executor executor35 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        java.lang.String str37 = serializedObjectSupporter36.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor38 = serializedObjectSupporter36.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request40 = serializedObjectSupporter39.deserializeObjectRequest1();
        retrofit.client.Request request41 = serializedObjectSupporter39.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter42 = serializedObjectSupporter39.deserializeObjectConverter5();
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor46 = null;
        builder45.sethttpExecutor(executor46);
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        builder45.log = log48;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter(server32, provider33, executor34, executor35, requestInterceptor38, (retrofit.converter.Converter) gsonConverter42, profiler43, errorHandler44, log48, logLevel50);
        retrofit.RestAdapter.LogLevel logLevel52 = restAdapter51.getLogLevel();
        java.lang.String str53 = restAdapter51.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor54 = restAdapter51.httpExecutor;
        retrofit.Profiler profiler55 = restAdapter51.getprofiler();
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor57 = null;
        builder56.setcallbackExecutor(executor57);
        java.util.concurrent.Executor executor59 = builder56.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel60 = builder56.logLevel;
        boolean boolean61 = logLevel60.log();
        restAdapter51.logLevel = logLevel60;
        restAdapter23.logLevel = logLevel60;
        retrofit.SerializedObjectSupporter serializedObjectSupporter64 = new retrofit.SerializedObjectSupporter();
        java.lang.String str65 = serializedObjectSupporter64.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter66 = serializedObjectSupporter64.deserializeObjectConverter3();
        java.lang.String str67 = serializedObjectSupporter64.deserializeObjectString4();
        retrofit.Server server68 = serializedObjectSupporter64.deserializeObjectServer1();
        retrofit.client.Client.Provider provider69 = null;
        java.util.concurrent.Executor executor70 = null;
        java.util.concurrent.Executor executor71 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter72 = new retrofit.SerializedObjectSupporter();
        java.lang.String str73 = serializedObjectSupporter72.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor74 = serializedObjectSupporter72.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter75 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request76 = serializedObjectSupporter75.deserializeObjectRequest1();
        retrofit.client.Request request77 = serializedObjectSupporter75.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter78 = serializedObjectSupporter75.deserializeObjectConverter5();
        retrofit.Profiler profiler79 = null;
        retrofit.ErrorHandler errorHandler80 = null;
        retrofit.RestAdapter.Builder builder81 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor82 = null;
        builder81.sethttpExecutor(executor82);
        retrofit.RestAdapter.Log log84 = retrofit.RestAdapter.Log.NONE;
        builder81.log = log84;
        retrofit.RestAdapter.LogLevel logLevel86 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter87 = new retrofit.RestAdapter(server68, provider69, executor70, executor71, requestInterceptor74, (retrofit.converter.Converter) gsonConverter78, profiler79, errorHandler80, log84, logLevel86);
        retrofit.RestAdapter.LogLevel logLevel88 = restAdapter87.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel89 = restAdapter87.getLogLevel();
        restAdapter23.logLevel = logLevel89;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNull(profiler27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "GET" + "'", str29, "GET");
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "http://example.com/" + "'", str31, "http://example.com/");
        org.junit.Assert.assertNotNull(server32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-" + "'", str37, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor38);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(request41);
        org.junit.Assert.assertNotNull(gsonConverter42);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Retrofit-Idle" + "'", str53, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor54);
        org.junit.Assert.assertNull(profiler55);
        org.junit.Assert.assertNull(executor59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "GET" + "'", str65, "GET");
        org.junit.Assert.assertNotNull(gsonConverter66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "http://example.com/" + "'", str67, "http://example.com/");
        org.junit.Assert.assertNotNull(server68);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Retrofit-" + "'", str73, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor74);
        org.junit.Assert.assertNotNull(request76);
        org.junit.Assert.assertNotNull(request77);
        org.junit.Assert.assertNotNull(gsonConverter78);
        org.junit.Assert.assertNotNull(log84);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel88 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel88.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter3();
        builder0.converter = gsonConverter5;
        retrofit.client.Client.Provider provider7 = null;
        builder0.clientProvider = provider7;
        retrofit.client.Client.Provider provider9 = null;
        builder0.setclientProvider(provider9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = builder11.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = builder11.serializedObjectSupporter;
        java.util.concurrent.Executor executor14 = null;
        builder11.httpExecutor = executor14;
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request17 = serializedObjectSupporter16.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter16.deserializeObjectConverter2();
        builder11.serializedObjectSupporter = serializedObjectSupporter16;
        retrofit.client.Request request20 = serializedObjectSupporter16.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter16.deserializeObjectConverter5();
        retrofit.Server server22 = serializedObjectSupporter16.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder23 = builder0.setServer(server22);
        retrofit.client.Client.Provider provider24 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor26 = null;
        builder25.setcallbackExecutor(executor26);
        retrofit.RequestInterceptor requestInterceptor28 = builder25.requestInterceptor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        java.lang.String str30 = serializedObjectSupporter29.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter3();
        java.lang.String str32 = serializedObjectSupporter29.deserializeObjectString4();
        retrofit.client.Request request33 = serializedObjectSupporter29.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler34 = serializedObjectSupporter29.deserializeObjectErrorHandler1();
        builder25.errorHandler = errorHandler34;
        retrofit.RestAdapter.Builder builder36 = builder0.setErrorHandler(errorHandler34);
        retrofit.converter.Converter converter37 = builder0.converter;
        retrofit.converter.Converter converter38 = builder0.converter;
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNull(serializedObjectSupporter12);
        org.junit.Assert.assertNull(serializedObjectSupporter13);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(request20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNotNull(server22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNull(requestInterceptor28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "GET" + "'", str30, "GET");
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "http://example.com/" + "'", str32, "http://example.com/");
        org.junit.Assert.assertNotNull(request33);
        org.junit.Assert.assertNotNull(errorHandler34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(converter37);
        org.junit.Assert.assertNotNull(converter38);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest8();
        java.lang.String str6 = request5.method;
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "GET" + "'", str6, "GET");
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.converter;
        java.util.concurrent.Executor executor26 = restAdapter23.callbackExecutor;
        retrofit.Profiler profiler27 = restAdapter23.getprofiler();
        retrofit.Profiler profiler28 = restAdapter23.profiler;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNull(profiler27);
        org.junit.Assert.assertNull(profiler28);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        java.lang.String str27 = restAdapter23.getTHREAD_PREFIX();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = restAdapter23.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter23.logLevel;
        java.lang.String str30 = restAdapter23.getTHREAD_PREFIX();
        retrofit.Profiler profiler31 = restAdapter23.getprofiler();
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter23.logLevel;
        retrofit.client.Response response34 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response36 = restAdapter23.logAndReplaceResponse("hi!", response34, (long) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Retrofit-" + "'", str27, "Retrofit-");
        org.junit.Assert.assertNull(serializedObjectSupporter28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Retrofit-" + "'", str30, "Retrofit-");
        org.junit.Assert.assertNull(profiler31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        java.lang.String str26 = restAdapter23.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        java.util.concurrent.Executor executor28 = restAdapter23.httpExecutor;
        java.util.concurrent.Executor executor29 = restAdapter23.httpExecutor;
        retrofit.RestAdapter.RestHandler restHandler30 = restAdapter23.new RestHandler();
        java.lang.String str31 = restAdapter23.getTHREAD_PREFIX();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNull(executor29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Retrofit-" + "'", str31, "Retrofit-");
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        java.lang.String str26 = restAdapter23.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        retrofit.Profiler profiler28 = restAdapter23.getprofiler();
        java.util.concurrent.Executor executor29 = restAdapter23.httpExecutor;
        retrofit.converter.Converter converter30 = restAdapter23.getconverter();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertNull(executor29);
        org.junit.Assert.assertNotNull(converter30);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        java.lang.String str26 = serializedObjectSupporter25.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter25.deserializeObjectConverter3();
        java.lang.String str28 = serializedObjectSupporter25.deserializeObjectString4();
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter25;
        java.lang.String str30 = serializedObjectSupporter25.deserializeObjectString4();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "GET" + "'", str26, "GET");
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "http://example.com/" + "'", str30, "http://example.com/");
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        java.lang.String str25 = restAdapter23.getIDLE_THREAD_NAME();
        retrofit.Profiler profiler26 = restAdapter23.profiler;
        java.lang.String str27 = restAdapter23.getTHREAD_PREFIX();
        retrofit.converter.Converter converter28 = restAdapter23.getconverter();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Retrofit-Idle" + "'", str25, "Retrofit-Idle");
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Retrofit-" + "'", str27, "Retrofit-");
        org.junit.Assert.assertNotNull(converter28);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = builder0.log;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor3 = null;
        builder2.sethttpExecutor(executor3);
        retrofit.RestAdapter.Log log5 = null;
        builder2.log = log5;
        java.util.concurrent.Executor executor7 = builder2.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = builder2.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = builder2.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = builder10.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = builder10.serializedObjectSupporter;
        java.util.concurrent.Executor executor13 = null;
        builder10.httpExecutor = executor13;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request16 = serializedObjectSupporter15.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter2();
        builder10.serializedObjectSupporter = serializedObjectSupporter15;
        retrofit.client.Request request19 = serializedObjectSupporter15.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter15.deserializeObjectConverter5();
        retrofit.Server server21 = serializedObjectSupporter15.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter15.deserializeObjectConverter2();
        builder2.converter = gsonConverter22;
        builder0.converter = gsonConverter22;
        retrofit.Server server25 = builder0.server;
        retrofit.RestAdapter.LogLevel logLevel26 = builder0.logLevel;
        org.junit.Assert.assertNull(log1);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertNull(serializedObjectSupporter12);
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNotNull(request19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNull(server25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter3();
        builder0.converter = gsonConverter5;
        retrofit.client.Client.Provider provider7 = null;
        builder0.clientProvider = provider7;
        retrofit.client.Client.Provider provider9 = null;
        builder0.setclientProvider(provider9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = builder11.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = builder11.serializedObjectSupporter;
        java.util.concurrent.Executor executor14 = null;
        builder11.httpExecutor = executor14;
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request17 = serializedObjectSupporter16.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter16.deserializeObjectConverter2();
        builder11.serializedObjectSupporter = serializedObjectSupporter16;
        retrofit.client.Request request20 = serializedObjectSupporter16.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter16.deserializeObjectConverter5();
        retrofit.Server server22 = serializedObjectSupporter16.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder23 = builder0.setServer(server22);
        java.util.concurrent.Executor executor24 = null;
        builder23.sethttpExecutor(executor24);
        retrofit.RestAdapter restAdapter26 = builder23.build();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNull(serializedObjectSupporter12);
        org.junit.Assert.assertNull(serializedObjectSupporter13);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(request20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNotNull(server22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(restAdapter26);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        java.lang.String str26 = restAdapter23.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        retrofit.Profiler profiler28 = restAdapter23.getprofiler();
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter23.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = restHandler29.serializedObjectSupporter;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertNull(serializedObjectSupporter30);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor4 = null;
        builder3.sethttpExecutor(executor4);
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter6.deserializeObjectConverter3();
        builder3.converter = gsonConverter8;
        retrofit.client.Client.Provider provider10 = null;
        builder3.clientProvider = provider10;
        retrofit.client.Client.Provider provider12 = null;
        builder3.setclientProvider(provider12);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider15 = builder14.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder17 = builder14.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log18 = builder17.log;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.HEADERS;
        builder17.logLevel = logLevel19;
        retrofit.ErrorHandler errorHandler21 = builder17.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        java.lang.String str23 = serializedObjectSupporter22.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter24 = serializedObjectSupporter22.deserializeObjectConverter3();
        java.lang.String str25 = serializedObjectSupporter22.deserializeObjectString4();
        retrofit.client.Request request26 = serializedObjectSupporter22.deserializeObjectRequest6();
        retrofit.Server server27 = serializedObjectSupporter22.deserializeObjectServer1();
        builder17.server = server27;
        java.util.concurrent.Executor executor29 = builder17.getcallbackExecutor();
        java.util.concurrent.Executor executor30 = builder17.callbackExecutor;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor32 = null;
        builder31.setcallbackExecutor(executor32);
        java.util.concurrent.Executor executor34 = null;
        builder31.setcallbackExecutor(executor34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.FULL;
        builder31.logLevel = logLevel36;
        retrofit.client.Client.Provider provider38 = builder31.getclientProvider();
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor40 = null;
        builder39.sethttpExecutor(executor40);
        retrofit.RestAdapter.Log log42 = null;
        builder39.log = log42;
        retrofit.RestAdapter.Log log44 = builder39.log;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor46 = null;
        builder45.sethttpExecutor(executor46);
        retrofit.RequestInterceptor requestInterceptor48 = null;
        builder45.requestInterceptor = requestInterceptor48;
        java.util.concurrent.Executor executor50 = null;
        builder45.httpExecutor = executor50;
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = new retrofit.SerializedObjectSupporter();
        java.lang.String str53 = serializedObjectSupporter52.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter54 = serializedObjectSupporter52.deserializeObjectConverter3();
        java.lang.String str55 = serializedObjectSupporter52.deserializeObjectString4();
        retrofit.client.Request request56 = serializedObjectSupporter52.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler57 = serializedObjectSupporter52.deserializeObjectErrorHandler1();
        builder45.errorHandler = errorHandler57;
        retrofit.RestAdapter.Builder builder59 = builder39.setErrorHandler(errorHandler57);
        retrofit.RestAdapter.Builder builder60 = builder31.setErrorHandler(errorHandler57);
        retrofit.RestAdapter.Builder builder61 = builder17.setErrorHandler(errorHandler57);
        retrofit.RestAdapter.Builder builder62 = builder3.setErrorHandler(errorHandler57);
        builder0.errorHandler = errorHandler57;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "GET" + "'", str7, "GET");
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(log18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(errorHandler21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "GET" + "'", str23, "GET");
        org.junit.Assert.assertNotNull(gsonConverter24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "http://example.com/" + "'", str25, "http://example.com/");
        org.junit.Assert.assertNotNull(request26);
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertNull(executor29);
        org.junit.Assert.assertNull(executor30);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNull(log44);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "GET" + "'", str53, "GET");
        org.junit.Assert.assertNotNull(gsonConverter54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "http://example.com/" + "'", str55, "http://example.com/");
        org.junit.Assert.assertNotNull(request56);
        org.junit.Assert.assertNotNull(errorHandler57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder62);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter7();
        retrofit.RequestInterceptor requestInterceptor5 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(requestInterceptor5);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest8();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter6();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter6);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        java.util.concurrent.Executor executor5 = null;
        builder0.httpExecutor = executor5;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter7.deserializeObjectConverter3();
        java.lang.String str10 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.client.Request request11 = serializedObjectSupporter7.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler12 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        builder0.errorHandler = errorHandler12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor15 = null;
        builder14.sethttpExecutor(executor15);
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter17.deserializeObjectConverter3();
        builder14.converter = gsonConverter19;
        retrofit.client.Client.Provider provider21 = null;
        builder14.clientProvider = provider21;
        retrofit.RestAdapter.LogLevel logLevel23 = builder14.logLevel;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor25 = null;
        builder24.sethttpExecutor(executor25);
        retrofit.RequestInterceptor requestInterceptor27 = null;
        builder24.requestInterceptor = requestInterceptor27;
        retrofit.converter.Converter converter29 = builder24.converter;
        java.util.concurrent.Executor executor30 = null;
        builder24.httpExecutor = executor30;
        retrofit.RestAdapter.LogLevel logLevel32 = builder24.logLevel;
        builder14.logLevel = logLevel32;
        builder0.logLevel = logLevel32;
        retrofit.RequestInterceptor requestInterceptor35 = builder0.requestInterceptor;
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "GET" + "'", str8, "GET");
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertNotNull(errorHandler12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "GET" + "'", str18, "GET");
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter29);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(requestInterceptor35);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.RestAdapter.LogLevel logLevel4 = builder0.logLevel;
        java.util.concurrent.Executor executor5 = builder0.getcallbackExecutor();
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor5);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request5 = serializedObjectSupporter4.deserializeObjectRequest8();
        retrofit.client.Request request6 = serializedObjectSupporter4.deserializeObjectRequest7();
        java.util.List<retrofit.client.Header> headerList7 = request6.getHeaders();
        java.util.List<retrofit.client.Header> headerList8 = request6.getHeaders();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        java.util.List<retrofit.client.Header> headerList14 = request13.getHeaders();
        java.util.List<retrofit.client.Header> headerList15 = request13.headers;
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request17 = serializedObjectSupporter16.deserializeObjectRequest8();
        retrofit.mime.TypedString typedString18 = serializedObjectSupporter16.deserializeObjectTypedOutput2();
        retrofit.client.Request request19 = new retrofit.client.Request("GET", "http://example.com/", headerList15, (retrofit.mime.TypedOutput) typedString18);
        retrofit.client.Request request20 = new retrofit.client.Request("POST", "Retrofit-", headerList8, (retrofit.mime.TypedOutput) typedString18);
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = new retrofit.SerializedObjectSupporter();
        java.lang.String str22 = serializedObjectSupporter21.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter21.deserializeObjectConverter3();
        java.lang.String str24 = serializedObjectSupporter21.deserializeObjectString4();
        retrofit.client.Request request25 = serializedObjectSupporter21.deserializeObjectRequest1();
        retrofit.client.Request request26 = serializedObjectSupporter21.deserializeObjectRequest4();
        retrofit.mime.TypedString typedString27 = serializedObjectSupporter21.deserializeObjectTypedOutput2();
        retrofit.client.Request request28 = new retrofit.client.Request("GET", "hi!", headerList8, (retrofit.mime.TypedOutput) typedString27);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(typedString18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "GET" + "'", str22, "GET");
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(request25);
        org.junit.Assert.assertNotNull(request26);
        org.junit.Assert.assertNotNull(typedString27);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter7();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "GET" + "'", str3, "GET");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(gsonConverter5);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        java.lang.String str26 = restAdapter23.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        retrofit.client.Client.Provider provider28 = restAdapter23.getclientProvider();
        java.lang.String str29 = restAdapter23.getIDLE_THREAD_NAME();
        retrofit.converter.Converter converter30 = restAdapter23.getconverter();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(provider28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Retrofit-Idle" + "'", str29, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(converter30);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.getconverter();
        java.util.concurrent.Executor executor26 = restAdapter23.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request28 = serializedObjectSupporter27.deserializeObjectRequest8();
        retrofit.client.Request request29 = serializedObjectSupporter27.deserializeObjectRequest3();
        retrofit.mime.TypedString typedString30 = serializedObjectSupporter27.deserializeObjectTypedOutput2();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter27.deserializeObjectConverter4();
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter27;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNotNull(request28);
        org.junit.Assert.assertNotNull(request29);
        org.junit.Assert.assertNotNull(typedString30);
        org.junit.Assert.assertNotNull(gsonConverter31);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest4();
        java.lang.String str7 = request6.getUrl();
        java.lang.String str8 = request6.getUrl();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor27 = restAdapter23.getrequestInterceptor();
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter23.getLogLevel();
        java.lang.String str29 = restAdapter23.getTHREAD_PREFIX();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Retrofit-" + "'", str29, "Retrofit-");
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        retrofit.converter.Converter converter5 = builder0.converter;
        java.util.concurrent.Executor executor6 = null;
        builder0.httpExecutor = executor6;
        retrofit.RestAdapter.LogLevel logLevel8 = builder0.logLevel;
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter3();
        java.lang.String str12 = serializedObjectSupporter9.deserializeObjectString4();
        retrofit.Server server13 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter17.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request21 = serializedObjectSupporter20.deserializeObjectRequest1();
        retrofit.client.Request request22 = serializedObjectSupporter20.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler24 = null;
        retrofit.ErrorHandler errorHandler25 = null;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor27 = null;
        builder26.sethttpExecutor(executor27);
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        builder26.log = log29;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor19, (retrofit.converter.Converter) gsonConverter23, profiler24, errorHandler25, log29, logLevel31);
        java.util.concurrent.Executor executor33 = restAdapter32.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter32.logLevel = logLevel34;
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = restAdapter32.serializedObjectSupporter;
        retrofit.RestAdapter.Log log37 = restAdapter32.log;
        retrofit.RestAdapter.Builder builder38 = builder0.setLog(log37);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "GET" + "'", str10, "GET");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Retrofit-" + "'", str18, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(request22);
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(serializedObjectSupporter36);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.Profiler profiler24 = restAdapter23.profiler;
        java.util.concurrent.Executor executor25 = restAdapter23.httpExecutor;
        java.lang.Throwable throwable26 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter23.logException(throwable26, "POST");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(profiler24);
        org.junit.Assert.assertNull(executor25);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter23.logLevel = logLevel25;
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = restAdapter23.serializedObjectSupporter;
        retrofit.RestAdapter.Log log28 = restAdapter23.log;
        retrofit.RequestInterceptor requestInterceptor29 = restAdapter23.requestInterceptor;
        retrofit.converter.Converter converter30 = restAdapter23.converter;
        java.lang.String str31 = restAdapter23.getTHREAD_PREFIX();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(serializedObjectSupporter27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(requestInterceptor29);
        org.junit.Assert.assertNotNull(converter30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Retrofit-" + "'", str31, "Retrofit-");
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter7();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.client.Request request7 = serializedObjectSupporter0.deserializeObjectRequest4();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Retrofit-Idle" + "'", str5, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Retrofit-" + "'", str6, "Retrofit-");
        org.junit.Assert.assertNotNull(request7);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        retrofit.converter.Converter converter5 = builder0.converter;
        java.util.concurrent.Executor executor6 = null;
        builder0.httpExecutor = executor6;
        retrofit.RestAdapter.LogLevel logLevel8 = builder0.logLevel;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider10 = builder9.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder12 = builder9.setLogLevel(logLevel11);
        retrofit.converter.Converter converter13 = builder12.converter;
        builder12.ensureSaneDefaults();
        retrofit.client.Client.Provider provider15 = builder12.clientProvider;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor17 = null;
        builder16.setcallbackExecutor(executor17);
        java.util.concurrent.Executor executor19 = null;
        builder16.setcallbackExecutor(executor19);
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.FULL;
        builder16.logLevel = logLevel21;
        retrofit.client.Client.Provider provider23 = builder16.getclientProvider();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = builder16.serializedObjectSupporter;
        java.util.concurrent.Executor executor25 = builder16.callbackExecutor;
        retrofit.client.Client.Provider provider26 = null;
        builder16.setclientProvider(provider26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = builder28.serializedObjectSupporter;
        retrofit.client.Client.Provider provider30 = null;
        builder28.setclientProvider(provider30);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor33 = null;
        builder32.sethttpExecutor(executor33);
        retrofit.RestAdapter.Log log35 = null;
        builder32.log = log35;
        java.util.concurrent.Executor executor37 = builder32.callbackExecutor;
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        builder32.log = log38;
        retrofit.RestAdapter.Builder builder40 = builder28.setLog(log38);
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = new retrofit.SerializedObjectSupporter();
        java.lang.String str42 = serializedObjectSupporter41.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter41.deserializeObjectConverter3();
        java.lang.String str44 = serializedObjectSupporter41.deserializeObjectString4();
        retrofit.client.Request request45 = serializedObjectSupporter41.deserializeObjectRequest6();
        retrofit.Server server46 = serializedObjectSupporter41.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder47 = builder40.setServer(server46);
        retrofit.client.Client.Provider provider48 = null;
        java.util.concurrent.Executor executor49 = null;
        java.util.concurrent.Executor executor50 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter51 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request52 = serializedObjectSupporter51.deserializeObjectRequest1();
        retrofit.client.Request request53 = serializedObjectSupporter51.deserializeObjectRequest5();
        retrofit.RequestInterceptor requestInterceptor54 = serializedObjectSupporter51.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request56 = serializedObjectSupporter55.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter57 = serializedObjectSupporter55.deserializeObjectConverter2();
        retrofit.Profiler profiler58 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter59 = new retrofit.SerializedObjectSupporter();
        java.lang.String str60 = serializedObjectSupporter59.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter59.deserializeObjectConverter3();
        java.lang.String str62 = serializedObjectSupporter59.deserializeObjectString4();
        retrofit.client.Request request63 = serializedObjectSupporter59.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler64 = serializedObjectSupporter59.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter66 = builder65.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter67 = builder65.serializedObjectSupporter;
        retrofit.client.Client.Provider provider68 = null;
        builder65.clientProvider = provider68;
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        builder65.log = log70;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor73 = null;
        builder72.setcallbackExecutor(executor73);
        java.util.concurrent.Executor executor75 = null;
        builder72.setcallbackExecutor(executor75);
        retrofit.client.Client.Provider provider77 = null;
        builder72.clientProvider = provider77;
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter80 = builder79.serializedObjectSupporter;
        retrofit.Profiler profiler81 = builder79.profiler;
        retrofit.RestAdapter.LogLevel logLevel82 = builder79.logLevel;
        builder72.logLevel = logLevel82;
        retrofit.RestAdapter restAdapter84 = new retrofit.RestAdapter(server46, provider48, executor49, executor50, requestInterceptor54, (retrofit.converter.Converter) gsonConverter57, profiler58, errorHandler64, log70, logLevel82);
        retrofit.RestAdapter.Builder builder85 = builder16.setConverter((retrofit.converter.Converter) gsonConverter57);
        retrofit.RestAdapter.Builder builder86 = builder12.setConverter((retrofit.converter.Converter) gsonConverter57);
        builder0.converter = gsonConverter57;
        retrofit.client.Client client88 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder89 = builder0.setClient(client88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNotNull(provider15);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNull(serializedObjectSupporter24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNull(serializedObjectSupporter29);
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "GET" + "'", str42, "GET");
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "http://example.com/" + "'", str44, "http://example.com/");
        org.junit.Assert.assertNotNull(request45);
        org.junit.Assert.assertNotNull(server46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(request52);
        org.junit.Assert.assertNotNull(request53);
        org.junit.Assert.assertNotNull(requestInterceptor54);
        org.junit.Assert.assertNotNull(request56);
        org.junit.Assert.assertNotNull(gsonConverter57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "GET" + "'", str60, "GET");
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "http://example.com/" + "'", str62, "http://example.com/");
        org.junit.Assert.assertNotNull(request63);
        org.junit.Assert.assertNotNull(errorHandler64);
        org.junit.Assert.assertNull(serializedObjectSupporter66);
        org.junit.Assert.assertNull(serializedObjectSupporter67);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNull(serializedObjectSupporter80);
        org.junit.Assert.assertNull(profiler81);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder86);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        java.lang.String str27 = restAdapter23.getTHREAD_PREFIX();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = restAdapter23.serializedObjectSupporter;
        retrofit.RestAdapter.Log log29 = restAdapter23.log;
        java.util.concurrent.Executor executor30 = restAdapter23.callbackExecutor;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Retrofit-" + "'", str27, "Retrofit-");
        org.junit.Assert.assertNull(serializedObjectSupporter28);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNull(executor30);
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        java.lang.String str27 = restAdapter23.getTHREAD_PREFIX();
        java.lang.Throwable throwable28 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter23.logException(throwable28, "POST");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Retrofit-" + "'", str27, "Retrofit-");
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.RestAdapter.Log log4 = builder0.log;
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter5.deserializeObjectConverter3();
        java.lang.String str8 = serializedObjectSupporter5.deserializeObjectString4();
        retrofit.client.Request request9 = serializedObjectSupporter5.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler10 = serializedObjectSupporter5.deserializeObjectErrorHandler1();
        builder0.errorHandler = errorHandler10;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "GET" + "'", str6, "GET");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(request9);
        org.junit.Assert.assertNotNull(errorHandler10);
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.ErrorHandler errorHandler3 = builder0.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        java.lang.String str5 = serializedObjectSupporter4.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter4.deserializeObjectConverter3();
        java.lang.String str7 = serializedObjectSupporter4.deserializeObjectString4();
        retrofit.Server server8 = serializedObjectSupporter4.deserializeObjectServer1();
        retrofit.client.Client.Provider provider9 = null;
        java.util.concurrent.Executor executor10 = null;
        java.util.concurrent.Executor executor11 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor14 = serializedObjectSupporter12.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request16 = serializedObjectSupporter15.deserializeObjectRequest1();
        retrofit.client.Request request17 = serializedObjectSupporter15.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter15.deserializeObjectConverter5();
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor22 = null;
        builder21.sethttpExecutor(executor22);
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        builder21.log = log24;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter(server8, provider9, executor10, executor11, requestInterceptor14, (retrofit.converter.Converter) gsonConverter18, profiler19, errorHandler20, log24, logLevel26);
        java.util.concurrent.Executor executor28 = restAdapter27.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor29 = restAdapter27.requestInterceptor;
        retrofit.RestAdapter.Builder builder30 = builder0.setRequestInterceptor(requestInterceptor29);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor32 = null;
        builder31.setcallbackExecutor(executor32);
        java.util.concurrent.Executor executor34 = null;
        builder31.setcallbackExecutor(executor34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.FULL;
        builder31.logLevel = logLevel36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor39 = null;
        builder38.setcallbackExecutor(executor39);
        java.util.concurrent.Executor executor41 = null;
        builder38.setcallbackExecutor(executor41);
        builder38.ensureSaneDefaults();
        java.util.concurrent.Executor executor44 = builder38.callbackExecutor;
        builder31.sethttpExecutor(executor44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = builder46.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = builder46.serializedObjectSupporter;
        retrofit.client.Client.Provider provider49 = null;
        builder46.clientProvider = provider49;
        java.util.concurrent.Executor executor51 = null;
        builder46.callbackExecutor = executor51;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor54 = null;
        builder53.setcallbackExecutor(executor54);
        java.util.concurrent.Executor executor56 = null;
        builder53.setcallbackExecutor(executor56);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.FULL;
        builder53.logLevel = logLevel58;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor61 = null;
        builder60.setcallbackExecutor(executor61);
        java.util.concurrent.Executor executor63 = null;
        builder60.setcallbackExecutor(executor63);
        builder60.ensureSaneDefaults();
        java.util.concurrent.Executor executor66 = builder60.callbackExecutor;
        builder53.sethttpExecutor(executor66);
        builder46.httpExecutor = executor66;
        retrofit.RestAdapter.Builder builder69 = builder30.setExecutors(executor44, executor66);
        retrofit.client.Client client70 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder71 = builder69.setClient(client70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "GET" + "'", str5, "GET");
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-" + "'", str13, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor14);
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNotNull(requestInterceptor29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(executor44);
        org.junit.Assert.assertNull(serializedObjectSupporter47);
        org.junit.Assert.assertNull(serializedObjectSupporter48);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(executor66);
        org.junit.Assert.assertNotNull(builder69);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter7();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter7();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter5();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter6 = serializedObjectSupporter0.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(gsonConverter5);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        java.lang.String str26 = serializedObjectSupporter25.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter25.deserializeObjectConverter3();
        java.lang.String str28 = serializedObjectSupporter25.deserializeObjectString4();
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter25;
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter23.logLevel;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "GET" + "'", str26, "GET");
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest6();
        java.lang.String str4 = request3.method;
        java.lang.String str5 = request3.url;
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.mime.TypedString typedString5 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(typedString5);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider6 = null;
        java.util.concurrent.Executor executor7 = null;
        java.util.concurrent.Executor executor8 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter3();
        java.lang.String str12 = serializedObjectSupporter9.deserializeObjectString4();
        retrofit.Server server13 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter17.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request21 = serializedObjectSupporter20.deserializeObjectRequest1();
        retrofit.client.Request request22 = serializedObjectSupporter20.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler24 = null;
        retrofit.ErrorHandler errorHandler25 = null;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor27 = null;
        builder26.sethttpExecutor(executor27);
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        builder26.log = log29;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor19, (retrofit.converter.Converter) gsonConverter23, profiler24, errorHandler25, log29, logLevel31);
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter32.getLogLevel();
        retrofit.converter.Converter converter34 = restAdapter32.converter;
        retrofit.RequestInterceptor requestInterceptor35 = restAdapter32.requestInterceptor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        java.lang.String str37 = serializedObjectSupporter36.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter3();
        java.lang.String str39 = serializedObjectSupporter36.deserializeObjectString4();
        retrofit.Server server40 = serializedObjectSupporter36.deserializeObjectServer1();
        retrofit.client.Client.Provider provider41 = null;
        java.util.concurrent.Executor executor42 = null;
        java.util.concurrent.Executor executor43 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = new retrofit.SerializedObjectSupporter();
        java.lang.String str45 = serializedObjectSupporter44.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor46 = serializedObjectSupporter44.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request48 = serializedObjectSupporter47.deserializeObjectRequest1();
        retrofit.client.Request request49 = serializedObjectSupporter47.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter50 = serializedObjectSupporter47.deserializeObjectConverter5();
        retrofit.Profiler profiler51 = null;
        retrofit.ErrorHandler errorHandler52 = null;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor54 = null;
        builder53.sethttpExecutor(executor54);
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        builder53.log = log56;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter59 = new retrofit.RestAdapter(server40, provider41, executor42, executor43, requestInterceptor46, (retrofit.converter.Converter) gsonConverter50, profiler51, errorHandler52, log56, logLevel58);
        java.util.concurrent.Executor executor60 = restAdapter59.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter59.logLevel = logLevel61;
        retrofit.Profiler profiler63 = restAdapter59.profiler;
        retrofit.client.Client.Provider provider64 = restAdapter59.clientProvider;
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = restAdapter59.serializedObjectSupporter;
        retrofit.converter.Converter converter66 = restAdapter59.converter;
        retrofit.Profiler profiler67 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter68 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request69 = serializedObjectSupporter68.deserializeObjectRequest8();
        retrofit.converter.GsonConverter gsonConverter70 = serializedObjectSupporter68.deserializeObjectConverter2();
        retrofit.ErrorHandler errorHandler71 = serializedObjectSupporter68.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor73 = null;
        builder72.sethttpExecutor(executor73);
        retrofit.RequestInterceptor requestInterceptor75 = null;
        builder72.requestInterceptor = requestInterceptor75;
        java.util.concurrent.Executor executor77 = null;
        builder72.httpExecutor = executor77;
        java.util.concurrent.Executor executor79 = null;
        builder72.setcallbackExecutor(executor79);
        retrofit.client.Client.Provider provider81 = null;
        builder72.setclientProvider(provider81);
        retrofit.SerializedObjectSupporter serializedObjectSupporter83 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request84 = serializedObjectSupporter83.deserializeObjectRequest8();
        retrofit.converter.GsonConverter gsonConverter85 = serializedObjectSupporter83.deserializeObjectConverter2();
        retrofit.ErrorHandler errorHandler86 = serializedObjectSupporter83.deserializeObjectErrorHandler1();
        builder72.errorHandler = errorHandler86;
        retrofit.RestAdapter.Builder builder88 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor89 = null;
        builder88.sethttpExecutor(executor89);
        retrofit.RestAdapter.Log log91 = retrofit.RestAdapter.Log.NONE;
        builder88.log = log91;
        retrofit.RestAdapter.Builder builder93 = builder72.setLog(log91);
        retrofit.RestAdapter.LogLevel logLevel94 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter restAdapter95 = new retrofit.RestAdapter(server5, provider6, executor7, executor8, requestInterceptor35, converter66, profiler67, errorHandler71, log91, logLevel94);
        retrofit.RestAdapter.Log log96 = restAdapter95.log;
        java.lang.String str97 = restAdapter95.getTHREAD_PREFIX();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "GET" + "'", str10, "GET");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Retrofit-" + "'", str18, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(request22);
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter34);
        org.junit.Assert.assertNotNull(requestInterceptor35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "GET" + "'", str37, "GET");
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "http://example.com/" + "'", str39, "http://example.com/");
        org.junit.Assert.assertNotNull(server40);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Retrofit-" + "'", str45, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor46);
        org.junit.Assert.assertNotNull(request48);
        org.junit.Assert.assertNotNull(request49);
        org.junit.Assert.assertNotNull(gsonConverter50);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(profiler63);
        org.junit.Assert.assertNull(provider64);
        org.junit.Assert.assertNull(serializedObjectSupporter65);
        org.junit.Assert.assertNotNull(converter66);
        org.junit.Assert.assertNotNull(request69);
        org.junit.Assert.assertNotNull(gsonConverter70);
        org.junit.Assert.assertNotNull(errorHandler71);
        org.junit.Assert.assertNotNull(request84);
        org.junit.Assert.assertNotNull(gsonConverter85);
        org.junit.Assert.assertNotNull(errorHandler86);
        org.junit.Assert.assertNotNull(log91);
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertTrue("'" + logLevel94 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel94.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log96);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "Retrofit-" + "'", str97, "Retrofit-");
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = null;
        builder0.setcallbackExecutor(executor3);
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = builder0.serializedObjectSupporter;
        org.junit.Assert.assertNull(serializedObjectSupporter5);
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.Profiler profiler2 = builder0.profiler;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter3 = builder0.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(profiler2);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.getconverter();
        java.util.concurrent.Executor executor26 = restAdapter23.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor27 = restAdapter23.getrequestInterceptor();
        retrofit.Server server28 = restAdapter23.server;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor30 = null;
        builder29.sethttpExecutor(executor30);
        retrofit.RequestInterceptor requestInterceptor32 = null;
        builder29.requestInterceptor = requestInterceptor32;
        retrofit.Profiler profiler34 = null;
        builder29.profiler = profiler34;
        java.util.concurrent.Executor executor36 = builder29.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = new retrofit.SerializedObjectSupporter();
        java.lang.String str38 = serializedObjectSupporter37.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter37.deserializeObjectConverter3();
        java.lang.String str40 = serializedObjectSupporter37.deserializeObjectString4();
        retrofit.Server server41 = serializedObjectSupporter37.deserializeObjectServer1();
        retrofit.client.Client.Provider provider42 = null;
        java.util.concurrent.Executor executor43 = null;
        java.util.concurrent.Executor executor44 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = new retrofit.SerializedObjectSupporter();
        java.lang.String str46 = serializedObjectSupporter45.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor47 = serializedObjectSupporter45.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request49 = serializedObjectSupporter48.deserializeObjectRequest1();
        retrofit.client.Request request50 = serializedObjectSupporter48.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter51 = serializedObjectSupporter48.deserializeObjectConverter5();
        retrofit.Profiler profiler52 = null;
        retrofit.ErrorHandler errorHandler53 = null;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor55 = null;
        builder54.sethttpExecutor(executor55);
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        builder54.log = log57;
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter(server41, provider42, executor43, executor44, requestInterceptor47, (retrofit.converter.Converter) gsonConverter51, profiler52, errorHandler53, log57, logLevel59);
        java.util.concurrent.Executor executor61 = restAdapter60.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor62 = restAdapter60.requestInterceptor;
        retrofit.RestAdapter.Builder builder63 = builder29.setRequestInterceptor(requestInterceptor62);
        retrofit.RestAdapter.LogLevel logLevel64 = builder29.logLevel;
        restAdapter23.logLevel = logLevel64;
        java.lang.Throwable throwable66 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter23.logException(throwable66, "Retrofit-");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNull(executor36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "GET" + "'", str38, "GET");
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "http://example.com/" + "'", str40, "http://example.com/");
        org.junit.Assert.assertNotNull(server41);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Retrofit-" + "'", str46, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor47);
        org.junit.Assert.assertNotNull(request49);
        org.junit.Assert.assertNotNull(request50);
        org.junit.Assert.assertNotNull(gsonConverter51);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor61);
        org.junit.Assert.assertNotNull(requestInterceptor62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.converter;
        retrofit.converter.Converter converter26 = restAdapter23.converter;
        retrofit.Server server27 = restAdapter23.server;
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter23.getLogLevel();
        retrofit.Profiler profiler29 = restAdapter23.profiler;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertNotNull(converter26);
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(profiler29);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.RestAdapter.Log log4 = builder3.log;
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.HEADERS;
        builder3.logLevel = logLevel5;
        retrofit.ErrorHandler errorHandler7 = builder3.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter8.deserializeObjectConverter3();
        java.lang.String str11 = serializedObjectSupporter8.deserializeObjectString4();
        retrofit.client.Request request12 = serializedObjectSupporter8.deserializeObjectRequest6();
        retrofit.Server server13 = serializedObjectSupporter8.deserializeObjectServer1();
        builder3.server = server13;
        java.util.concurrent.Executor executor15 = builder3.getcallbackExecutor();
        java.util.concurrent.Executor executor16 = builder3.callbackExecutor;
        retrofit.RestAdapter.Builder builder18 = builder3.setServer("http://example.com/");
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(errorHandler7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "GET" + "'", str9, "GET");
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "http://example.com/" + "'", str11, "http://example.com/");
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertNotNull(builder18);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        java.lang.String str27 = restAdapter23.getTHREAD_PREFIX();
        java.util.concurrent.Executor executor28 = restAdapter23.callbackExecutor;
        retrofit.ErrorHandler errorHandler29 = restAdapter23.errorHandler;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Retrofit-" + "'", str27, "Retrofit-");
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNull(errorHandler29);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.converter.Converter converter4 = builder3.converter;
        java.util.concurrent.Executor executor5 = null;
        builder3.sethttpExecutor(executor5);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter7 = builder3.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(converter4);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter23.logLevel = logLevel25;
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = restAdapter23.serializedObjectSupporter;
        retrofit.RestAdapter.Log log28 = restAdapter23.log;
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request30 = serializedObjectSupporter29.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter32 = serializedObjectSupporter29.deserializeObjectConverter8();
        java.lang.String str33 = serializedObjectSupporter29.deserializeObjectString4();
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter29;
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter23.logLevel;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(serializedObjectSupporter27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(request30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(gsonConverter32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest7();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(request5);
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.mime.TypedOutput typedOutput5 = request4.body;
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNull(typedOutput5);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        java.lang.String str26 = restAdapter23.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        retrofit.client.Client.Provider provider28 = restAdapter23.getclientProvider();
        java.lang.String str29 = restAdapter23.getIDLE_THREAD_NAME();
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter23.logLevel;
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter23.logLevel;
        boolean boolean32 = logLevel31.log();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(provider28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Retrofit-Idle" + "'", str29, "Retrofit-Idle");
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter4();
        java.lang.String str8 = serializedObjectSupporter0.deserializeObjectString5();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter9 = serializedObjectSupporter0.deserializeObjectLogLevel1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "POST" + "'", str8, "POST");
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        retrofit.converter.Converter converter5 = builder0.converter;
        java.util.concurrent.Executor executor6 = null;
        builder0.httpExecutor = executor6;
        retrofit.RestAdapter.LogLevel logLevel8 = builder0.logLevel;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider10 = builder9.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder12 = builder9.setLogLevel(logLevel11);
        retrofit.converter.Converter converter13 = builder12.converter;
        builder12.ensureSaneDefaults();
        retrofit.client.Client.Provider provider15 = builder12.clientProvider;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor17 = null;
        builder16.setcallbackExecutor(executor17);
        java.util.concurrent.Executor executor19 = null;
        builder16.setcallbackExecutor(executor19);
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.FULL;
        builder16.logLevel = logLevel21;
        retrofit.client.Client.Provider provider23 = builder16.getclientProvider();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = builder16.serializedObjectSupporter;
        java.util.concurrent.Executor executor25 = builder16.callbackExecutor;
        retrofit.client.Client.Provider provider26 = null;
        builder16.setclientProvider(provider26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = builder28.serializedObjectSupporter;
        retrofit.client.Client.Provider provider30 = null;
        builder28.setclientProvider(provider30);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor33 = null;
        builder32.sethttpExecutor(executor33);
        retrofit.RestAdapter.Log log35 = null;
        builder32.log = log35;
        java.util.concurrent.Executor executor37 = builder32.callbackExecutor;
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        builder32.log = log38;
        retrofit.RestAdapter.Builder builder40 = builder28.setLog(log38);
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = new retrofit.SerializedObjectSupporter();
        java.lang.String str42 = serializedObjectSupporter41.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter41.deserializeObjectConverter3();
        java.lang.String str44 = serializedObjectSupporter41.deserializeObjectString4();
        retrofit.client.Request request45 = serializedObjectSupporter41.deserializeObjectRequest6();
        retrofit.Server server46 = serializedObjectSupporter41.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder47 = builder40.setServer(server46);
        retrofit.client.Client.Provider provider48 = null;
        java.util.concurrent.Executor executor49 = null;
        java.util.concurrent.Executor executor50 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter51 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request52 = serializedObjectSupporter51.deserializeObjectRequest1();
        retrofit.client.Request request53 = serializedObjectSupporter51.deserializeObjectRequest5();
        retrofit.RequestInterceptor requestInterceptor54 = serializedObjectSupporter51.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request56 = serializedObjectSupporter55.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter57 = serializedObjectSupporter55.deserializeObjectConverter2();
        retrofit.Profiler profiler58 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter59 = new retrofit.SerializedObjectSupporter();
        java.lang.String str60 = serializedObjectSupporter59.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter59.deserializeObjectConverter3();
        java.lang.String str62 = serializedObjectSupporter59.deserializeObjectString4();
        retrofit.client.Request request63 = serializedObjectSupporter59.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler64 = serializedObjectSupporter59.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter66 = builder65.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter67 = builder65.serializedObjectSupporter;
        retrofit.client.Client.Provider provider68 = null;
        builder65.clientProvider = provider68;
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        builder65.log = log70;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor73 = null;
        builder72.setcallbackExecutor(executor73);
        java.util.concurrent.Executor executor75 = null;
        builder72.setcallbackExecutor(executor75);
        retrofit.client.Client.Provider provider77 = null;
        builder72.clientProvider = provider77;
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter80 = builder79.serializedObjectSupporter;
        retrofit.Profiler profiler81 = builder79.profiler;
        retrofit.RestAdapter.LogLevel logLevel82 = builder79.logLevel;
        builder72.logLevel = logLevel82;
        retrofit.RestAdapter restAdapter84 = new retrofit.RestAdapter(server46, provider48, executor49, executor50, requestInterceptor54, (retrofit.converter.Converter) gsonConverter57, profiler58, errorHandler64, log70, logLevel82);
        retrofit.RestAdapter.Builder builder85 = builder16.setConverter((retrofit.converter.Converter) gsonConverter57);
        retrofit.RestAdapter.Builder builder86 = builder12.setConverter((retrofit.converter.Converter) gsonConverter57);
        builder0.converter = gsonConverter57;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter88 = builder0.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNotNull(provider15);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNull(serializedObjectSupporter24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNull(serializedObjectSupporter29);
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "GET" + "'", str42, "GET");
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "http://example.com/" + "'", str44, "http://example.com/");
        org.junit.Assert.assertNotNull(request45);
        org.junit.Assert.assertNotNull(server46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(request52);
        org.junit.Assert.assertNotNull(request53);
        org.junit.Assert.assertNotNull(requestInterceptor54);
        org.junit.Assert.assertNotNull(request56);
        org.junit.Assert.assertNotNull(gsonConverter57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "GET" + "'", str60, "GET");
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "http://example.com/" + "'", str62, "http://example.com/");
        org.junit.Assert.assertNotNull(request63);
        org.junit.Assert.assertNotNull(errorHandler64);
        org.junit.Assert.assertNull(serializedObjectSupporter66);
        org.junit.Assert.assertNull(serializedObjectSupporter67);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNull(serializedObjectSupporter80);
        org.junit.Assert.assertNull(profiler81);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder86);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.converter;
        retrofit.converter.Converter converter26 = restAdapter23.converter;
        retrofit.Server server27 = restAdapter23.server;
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = restAdapter23.serializedObjectSupporter;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertNotNull(converter26);
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertNull(serializedObjectSupporter28);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.converter;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        java.lang.String str27 = restAdapter23.getTHREAD_PREFIX();
        retrofit.client.Client.Provider provider28 = restAdapter23.getclientProvider();
        java.util.concurrent.Executor executor29 = restAdapter23.httpExecutor;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Retrofit-" + "'", str27, "Retrofit-");
        org.junit.Assert.assertNull(provider28);
        org.junit.Assert.assertNull(executor29);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.ErrorHandler errorHandler4 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(errorHandler4);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest8();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString3();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString3();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "GET" + "'", str5, "GET");
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest4();
        java.lang.String str7 = request6.url;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter4();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Retrofit-" + "'", str3, "Retrofit-");
        org.junit.Assert.assertNotNull(gsonConverter4);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        retrofit.client.Response response27 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response29 = restAdapter23.logAndReplaceResponse("", response27, (long) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter5();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(gsonConverter6);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.converter;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        retrofit.RestAdapter.Log log27 = restAdapter23.log;
        java.util.concurrent.Executor executor28 = restAdapter23.getcallbackExecutor();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNull(executor28);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        java.lang.String str26 = restAdapter23.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        retrofit.Profiler profiler28 = restAdapter23.getprofiler();
        java.util.concurrent.Executor executor29 = restAdapter23.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request31 = serializedObjectSupporter30.deserializeObjectRequest1();
        retrofit.client.Request request32 = serializedObjectSupporter30.deserializeObjectRequest8();
        retrofit.client.Request request33 = serializedObjectSupporter30.deserializeObjectRequest1();
        retrofit.client.Request request34 = restAdapter23.logAndReplaceRequest(request33);
        java.lang.Throwable throwable35 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter23.logException(throwable35, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertNull(executor29);
        org.junit.Assert.assertNotNull(request31);
        org.junit.Assert.assertNotNull(request32);
        org.junit.Assert.assertNotNull(request33);
        org.junit.Assert.assertNotNull(request34);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("http://example.com/", "", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.lang.String str7 = request6.getMethod();
        java.lang.String str8 = request6.getMethod();
        retrofit.mime.TypedOutput typedOutput9 = request6.getBody();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNull(typedOutput9);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter7();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections collections5 = serializedObjectSupporter0.deserializeObjectList1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Collections$UnmodifiableRandomAccessList cannot be cast to java.util.Collections");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor27 = restAdapter23.getrequestInterceptor();
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter23.getLogLevel();
        retrofit.RequestInterceptor requestInterceptor29 = restAdapter23.getrequestInterceptor();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(requestInterceptor29);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest7();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter6();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Retrofit-" + "'", str3, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "POST" + "'", str4, "POST");
        org.junit.Assert.assertNotNull(gsonConverter5);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request3 = serializedObjectSupporter2.deserializeObjectRequest8();
        retrofit.client.Request request4 = serializedObjectSupporter2.deserializeObjectRequest7();
        java.util.List<retrofit.client.Header> headerList5 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList6 = request4.getHeaders();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request10 = serializedObjectSupporter9.deserializeObjectRequest1();
        retrofit.client.Request request11 = serializedObjectSupporter9.deserializeObjectRequest5();
        java.util.List<retrofit.client.Header> headerList12 = request11.getHeaders();
        java.util.List<retrofit.client.Header> headerList13 = request11.headers;
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request15 = serializedObjectSupporter14.deserializeObjectRequest8();
        retrofit.mime.TypedString typedString16 = serializedObjectSupporter14.deserializeObjectTypedOutput2();
        retrofit.client.Request request17 = new retrofit.client.Request("GET", "http://example.com/", headerList13, (retrofit.mime.TypedOutput) typedString16);
        retrofit.client.Request request18 = new retrofit.client.Request("POST", "Retrofit-", headerList6, (retrofit.mime.TypedOutput) typedString16);
        java.util.List<retrofit.client.Header> headerList19 = request18.headers;
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(headerList5);
        org.junit.Assert.assertNotNull(headerList6);
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertNotNull(request15);
        org.junit.Assert.assertNotNull(typedString16);
        org.junit.Assert.assertNotNull(headerList19);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        java.lang.String str2 = request1.getUrl();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter23.logLevel = logLevel25;
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = restAdapter23.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler28 = restAdapter23.geterrorHandler();
        java.util.concurrent.Executor executor29 = restAdapter23.getcallbackExecutor();
        retrofit.client.Client.Provider provider30 = restAdapter23.clientProvider;
        retrofit.Server server31 = restAdapter23.server;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(serializedObjectSupporter27);
        org.junit.Assert.assertNull(errorHandler28);
        org.junit.Assert.assertNull(executor29);
        org.junit.Assert.assertNull(provider30);
        org.junit.Assert.assertNotNull(server31);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest7();
        java.util.List<retrofit.client.Header> headerList3 = request2.getHeaders();
        java.util.List<retrofit.client.Header> headerList4 = request2.getHeaders();
        retrofit.mime.TypedOutput typedOutput5 = request2.body;
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(headerList3);
        org.junit.Assert.assertNotNull(headerList4);
        org.junit.Assert.assertNull(typedOutput5);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        java.lang.String str27 = restAdapter23.getTHREAD_PREFIX();
        java.util.concurrent.Executor executor28 = restAdapter23.httpExecutor;
        java.lang.String str29 = restAdapter23.getIDLE_THREAD_NAME();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Retrofit-" + "'", str27, "Retrofit-");
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Retrofit-Idle" + "'", str29, "Retrofit-Idle");
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.converter.Converter converter3 = builder0.converter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("GET");
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor7 = null;
        builder6.sethttpExecutor(executor7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter3();
        builder6.converter = gsonConverter11;
        retrofit.client.Client.Provider provider13 = null;
        builder6.clientProvider = provider13;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter3();
        java.lang.String str18 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter15.deserializeObjectConverter6();
        builder6.converter = gsonConverter19;
        builder0.converter = gsonConverter19;
        retrofit.RestAdapter restAdapter22 = builder0.build();
        retrofit.RestAdapter.LogLevel logLevel23 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter22.logLevel;
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "GET" + "'", str10, "GET");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "GET" + "'", str16, "GET");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        java.util.concurrent.Executor executor3 = null;
        builder0.httpExecutor = executor3;
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request6 = serializedObjectSupporter5.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter5.deserializeObjectConverter2();
        builder0.serializedObjectSupporter = serializedObjectSupporter5;
        retrofit.client.Client.Provider provider9 = builder0.getclientProvider();
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = builder10.serializedObjectSupporter;
        retrofit.client.Client.Provider provider12 = null;
        builder10.setclientProvider(provider12);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor15 = null;
        builder14.sethttpExecutor(executor15);
        retrofit.RestAdapter.Log log17 = null;
        builder14.log = log17;
        java.util.concurrent.Executor executor19 = builder14.callbackExecutor;
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder14.log = log20;
        retrofit.RestAdapter.Builder builder22 = builder10.setLog(log20);
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter3();
        java.lang.String str26 = serializedObjectSupporter23.deserializeObjectString4();
        retrofit.client.Request request27 = serializedObjectSupporter23.deserializeObjectRequest6();
        retrofit.Server server28 = serializedObjectSupporter23.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder29 = builder22.setServer(server28);
        retrofit.client.Client.Provider provider30 = null;
        java.util.concurrent.Executor executor31 = null;
        java.util.concurrent.Executor executor32 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request34 = serializedObjectSupporter33.deserializeObjectRequest1();
        retrofit.client.Request request35 = serializedObjectSupporter33.deserializeObjectRequest5();
        retrofit.RequestInterceptor requestInterceptor36 = serializedObjectSupporter33.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request38 = serializedObjectSupporter37.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter37.deserializeObjectConverter2();
        retrofit.Profiler profiler40 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = new retrofit.SerializedObjectSupporter();
        java.lang.String str42 = serializedObjectSupporter41.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter41.deserializeObjectConverter3();
        java.lang.String str44 = serializedObjectSupporter41.deserializeObjectString4();
        retrofit.client.Request request45 = serializedObjectSupporter41.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler46 = serializedObjectSupporter41.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = builder47.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = builder47.serializedObjectSupporter;
        retrofit.client.Client.Provider provider50 = null;
        builder47.clientProvider = provider50;
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        builder47.log = log52;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor55 = null;
        builder54.setcallbackExecutor(executor55);
        java.util.concurrent.Executor executor57 = null;
        builder54.setcallbackExecutor(executor57);
        retrofit.client.Client.Provider provider59 = null;
        builder54.clientProvider = provider59;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter62 = builder61.serializedObjectSupporter;
        retrofit.Profiler profiler63 = builder61.profiler;
        retrofit.RestAdapter.LogLevel logLevel64 = builder61.logLevel;
        builder54.logLevel = logLevel64;
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter(server28, provider30, executor31, executor32, requestInterceptor36, (retrofit.converter.Converter) gsonConverter39, profiler40, errorHandler46, log52, logLevel64);
        retrofit.RestAdapter.Builder builder67 = builder0.setErrorHandler(errorHandler46);
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider69 = builder68.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder71 = builder68.setLogLevel(logLevel70);
        retrofit.converter.Converter converter72 = builder71.converter;
        retrofit.Profiler profiler73 = builder71.profiler;
        java.util.concurrent.Executor executor74 = builder71.callbackExecutor;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor76 = null;
        builder75.setcallbackExecutor(executor76);
        java.util.concurrent.Executor executor78 = null;
        builder75.setcallbackExecutor(executor78);
        retrofit.client.Client.Provider provider80 = null;
        builder75.clientProvider = provider80;
        retrofit.Profiler profiler82 = null;
        builder75.profiler = profiler82;
        retrofit.RestAdapter.Builder builder84 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider85 = builder84.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel86 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder87 = builder84.setLogLevel(logLevel86);
        retrofit.converter.Converter converter88 = builder87.converter;
        builder87.ensureSaneDefaults();
        retrofit.client.Client.Provider provider90 = builder87.clientProvider;
        retrofit.RestAdapter.Builder builder91 = builder75.setClient(provider90);
        builder71.setclientProvider(provider90);
        builder67.setclientProvider(provider90);
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertNull(executor19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "GET" + "'", str24, "GET");
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "http://example.com/" + "'", str26, "http://example.com/");
        org.junit.Assert.assertNotNull(request27);
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(request34);
        org.junit.Assert.assertNotNull(request35);
        org.junit.Assert.assertNotNull(requestInterceptor36);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "GET" + "'", str42, "GET");
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "http://example.com/" + "'", str44, "http://example.com/");
        org.junit.Assert.assertNotNull(request45);
        org.junit.Assert.assertNotNull(errorHandler46);
        org.junit.Assert.assertNull(serializedObjectSupporter48);
        org.junit.Assert.assertNull(serializedObjectSupporter49);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNull(serializedObjectSupporter62);
        org.junit.Assert.assertNull(profiler63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNull(provider69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNull(converter72);
        org.junit.Assert.assertNull(profiler73);
        org.junit.Assert.assertNull(executor74);
        org.junit.Assert.assertNull(provider85);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNull(converter88);
        org.junit.Assert.assertNotNull(provider90);
        org.junit.Assert.assertNotNull(builder91);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest4();
        java.lang.String str5 = request4.url;
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "GET" + "'", str3, "GET");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest2();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter8();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "GET" + "'", str3, "GET");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter3();
        builder0.converter = gsonConverter5;
        retrofit.client.Client.Provider provider7 = null;
        builder0.clientProvider = provider7;
        retrofit.client.Client.Provider provider9 = null;
        builder0.setclientProvider(provider9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider12 = builder11.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder14 = builder11.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log15 = builder14.log;
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.HEADERS;
        builder14.logLevel = logLevel16;
        retrofit.ErrorHandler errorHandler18 = builder14.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = new retrofit.SerializedObjectSupporter();
        java.lang.String str20 = serializedObjectSupporter19.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter19.deserializeObjectConverter3();
        java.lang.String str22 = serializedObjectSupporter19.deserializeObjectString4();
        retrofit.client.Request request23 = serializedObjectSupporter19.deserializeObjectRequest6();
        retrofit.Server server24 = serializedObjectSupporter19.deserializeObjectServer1();
        builder14.server = server24;
        java.util.concurrent.Executor executor26 = builder14.getcallbackExecutor();
        java.util.concurrent.Executor executor27 = builder14.callbackExecutor;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor29 = null;
        builder28.setcallbackExecutor(executor29);
        java.util.concurrent.Executor executor31 = null;
        builder28.setcallbackExecutor(executor31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.FULL;
        builder28.logLevel = logLevel33;
        retrofit.client.Client.Provider provider35 = builder28.getclientProvider();
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor37 = null;
        builder36.sethttpExecutor(executor37);
        retrofit.RestAdapter.Log log39 = null;
        builder36.log = log39;
        retrofit.RestAdapter.Log log41 = builder36.log;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor43 = null;
        builder42.sethttpExecutor(executor43);
        retrofit.RequestInterceptor requestInterceptor45 = null;
        builder42.requestInterceptor = requestInterceptor45;
        java.util.concurrent.Executor executor47 = null;
        builder42.httpExecutor = executor47;
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = new retrofit.SerializedObjectSupporter();
        java.lang.String str50 = serializedObjectSupporter49.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter51 = serializedObjectSupporter49.deserializeObjectConverter3();
        java.lang.String str52 = serializedObjectSupporter49.deserializeObjectString4();
        retrofit.client.Request request53 = serializedObjectSupporter49.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler54 = serializedObjectSupporter49.deserializeObjectErrorHandler1();
        builder42.errorHandler = errorHandler54;
        retrofit.RestAdapter.Builder builder56 = builder36.setErrorHandler(errorHandler54);
        retrofit.RestAdapter.Builder builder57 = builder28.setErrorHandler(errorHandler54);
        retrofit.RestAdapter.Builder builder58 = builder14.setErrorHandler(errorHandler54);
        retrofit.RestAdapter.Builder builder59 = builder0.setErrorHandler(errorHandler54);
        retrofit.client.Client.Provider provider60 = builder59.clientProvider;
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(log15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(errorHandler18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "GET" + "'", str20, "GET");
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "http://example.com/" + "'", str22, "http://example.com/");
        org.junit.Assert.assertNotNull(request23);
        org.junit.Assert.assertNotNull(server24);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNull(log41);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "GET" + "'", str50, "GET");
        org.junit.Assert.assertNotNull(gsonConverter51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "http://example.com/" + "'", str52, "http://example.com/");
        org.junit.Assert.assertNotNull(request53);
        org.junit.Assert.assertNotNull(errorHandler54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNull(provider60);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        retrofit.RestAdapter.Log log5 = builder0.log;
        retrofit.Profiler profiler6 = builder0.profiler;
        retrofit.RestAdapter.Builder builder8 = builder0.setServer("http://example.com/");
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request10 = serializedObjectSupporter9.deserializeObjectRequest1();
        retrofit.client.Request request11 = serializedObjectSupporter9.deserializeObjectRequest5();
        java.lang.String str12 = serializedObjectSupporter9.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter9.deserializeObjectConverter7();
        builder0.converter = gsonConverter13;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter3();
        java.lang.String str18 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.Server server19 = serializedObjectSupporter15.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter15.deserializeObjectConverter6();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter15.deserializeObjectConverter6();
        retrofit.client.Request request22 = serializedObjectSupporter15.deserializeObjectRequest7();
        builder0.serializedObjectSupporter = serializedObjectSupporter15;
        retrofit.client.Request request24 = serializedObjectSupporter15.deserializeObjectRequest8();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter25 = serializedObjectSupporter15.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNull(profiler6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "POST" + "'", str12, "POST");
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "GET" + "'", str16, "GET");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(server19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNotNull(request22);
        org.junit.Assert.assertNotNull(request24);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.ErrorHandler errorHandler3 = builder0.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        java.lang.String str5 = serializedObjectSupporter4.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter4.deserializeObjectConverter3();
        java.lang.String str7 = serializedObjectSupporter4.deserializeObjectString4();
        retrofit.Server server8 = serializedObjectSupporter4.deserializeObjectServer1();
        retrofit.client.Client.Provider provider9 = null;
        java.util.concurrent.Executor executor10 = null;
        java.util.concurrent.Executor executor11 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor14 = serializedObjectSupporter12.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request16 = serializedObjectSupporter15.deserializeObjectRequest1();
        retrofit.client.Request request17 = serializedObjectSupporter15.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter15.deserializeObjectConverter5();
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor22 = null;
        builder21.sethttpExecutor(executor22);
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        builder21.log = log24;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter(server8, provider9, executor10, executor11, requestInterceptor14, (retrofit.converter.Converter) gsonConverter18, profiler19, errorHandler20, log24, logLevel26);
        java.util.concurrent.Executor executor28 = restAdapter27.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor29 = restAdapter27.requestInterceptor;
        retrofit.RestAdapter.Builder builder30 = builder0.setRequestInterceptor(requestInterceptor29);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider32 = builder31.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder34 = builder31.setLogLevel(logLevel33);
        retrofit.RestAdapter.Log log35 = builder34.log;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.HEADERS;
        builder34.logLevel = logLevel36;
        retrofit.ErrorHandler errorHandler38 = builder34.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        java.lang.String str40 = serializedObjectSupporter39.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter39.deserializeObjectConverter3();
        java.lang.String str42 = serializedObjectSupporter39.deserializeObjectString4();
        retrofit.client.Request request43 = serializedObjectSupporter39.deserializeObjectRequest6();
        retrofit.Server server44 = serializedObjectSupporter39.deserializeObjectServer1();
        builder34.server = server44;
        retrofit.RestAdapter.Builder builder46 = builder30.setServer(server44);
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor48 = null;
        builder47.sethttpExecutor(executor48);
        builder47.ensureSaneDefaults();
        retrofit.client.Client.Provider provider51 = null;
        builder47.setclientProvider(provider51);
        retrofit.client.Client.Provider provider53 = null;
        builder47.setclientProvider(provider53);
        java.util.concurrent.Executor executor55 = builder47.httpExecutor;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        builder56.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler58 = builder56.errorHandler;
        java.util.concurrent.Executor executor59 = builder56.getcallbackExecutor();
        retrofit.RestAdapter.Builder builder60 = builder46.setExecutors(executor55, executor59);
        retrofit.SerializedObjectSupporter serializedObjectSupporter61 = new retrofit.SerializedObjectSupporter();
        java.lang.String str62 = serializedObjectSupporter61.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter63 = serializedObjectSupporter61.deserializeObjectConverter3();
        java.lang.String str64 = serializedObjectSupporter61.deserializeObjectString4();
        retrofit.Server server65 = serializedObjectSupporter61.deserializeObjectServer1();
        retrofit.client.Client.Provider provider66 = null;
        java.util.concurrent.Executor executor67 = null;
        java.util.concurrent.Executor executor68 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter69 = new retrofit.SerializedObjectSupporter();
        java.lang.String str70 = serializedObjectSupporter69.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor71 = serializedObjectSupporter69.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter72 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request73 = serializedObjectSupporter72.deserializeObjectRequest1();
        retrofit.client.Request request74 = serializedObjectSupporter72.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter75 = serializedObjectSupporter72.deserializeObjectConverter5();
        retrofit.Profiler profiler76 = null;
        retrofit.ErrorHandler errorHandler77 = null;
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor79 = null;
        builder78.sethttpExecutor(executor79);
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        builder78.log = log81;
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter84 = new retrofit.RestAdapter(server65, provider66, executor67, executor68, requestInterceptor71, (retrofit.converter.Converter) gsonConverter75, profiler76, errorHandler77, log81, logLevel83);
        java.util.concurrent.Executor executor85 = restAdapter84.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor86 = restAdapter84.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor87 = restAdapter84.requestInterceptor;
        retrofit.Profiler profiler88 = restAdapter84.getprofiler();
        retrofit.client.Client.Provider provider89 = restAdapter84.clientProvider;
        retrofit.RequestInterceptor requestInterceptor90 = restAdapter84.getrequestInterceptor();
        builder60.requestInterceptor = requestInterceptor90;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "GET" + "'", str5, "GET");
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-" + "'", str13, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor14);
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNotNull(requestInterceptor29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(errorHandler38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "GET" + "'", str40, "GET");
        org.junit.Assert.assertNotNull(gsonConverter41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "http://example.com/" + "'", str42, "http://example.com/");
        org.junit.Assert.assertNotNull(request43);
        org.junit.Assert.assertNotNull(server44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(executor55);
        org.junit.Assert.assertNotNull(errorHandler58);
        org.junit.Assert.assertNotNull(executor59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "GET" + "'", str62, "GET");
        org.junit.Assert.assertNotNull(gsonConverter63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "http://example.com/" + "'", str64, "http://example.com/");
        org.junit.Assert.assertNotNull(server65);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Retrofit-" + "'", str70, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor71);
        org.junit.Assert.assertNotNull(request73);
        org.junit.Assert.assertNotNull(request74);
        org.junit.Assert.assertNotNull(gsonConverter75);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor85);
        org.junit.Assert.assertNotNull(requestInterceptor86);
        org.junit.Assert.assertNotNull(requestInterceptor87);
        org.junit.Assert.assertNull(profiler88);
        org.junit.Assert.assertNull(provider89);
        org.junit.Assert.assertNotNull(requestInterceptor90);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.converter.Converter converter3 = builder0.converter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("GET");
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor7 = null;
        builder6.sethttpExecutor(executor7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter3();
        builder6.converter = gsonConverter11;
        retrofit.client.Client.Provider provider13 = null;
        builder6.clientProvider = provider13;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter3();
        java.lang.String str18 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter15.deserializeObjectConverter6();
        builder6.converter = gsonConverter19;
        builder0.converter = gsonConverter19;
        retrofit.RestAdapter restAdapter22 = builder0.build();
        java.lang.Class<?> wildcardClass23 = builder0.getClass();
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "GET" + "'", str10, "GET");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "GET" + "'", str16, "GET");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter3();
        builder0.converter = gsonConverter5;
        retrofit.client.Client.Provider provider7 = null;
        builder0.clientProvider = provider7;
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter3();
        java.lang.String str12 = serializedObjectSupporter9.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter9.deserializeObjectConverter6();
        builder0.converter = gsonConverter13;
        java.util.concurrent.Executor executor15 = builder0.gethttpExecutor();
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor17 = null;
        builder16.setcallbackExecutor(executor17);
        java.util.concurrent.Executor executor19 = null;
        builder16.setcallbackExecutor(executor19);
        retrofit.client.Client.Provider provider21 = null;
        builder16.clientProvider = provider21;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = builder23.serializedObjectSupporter;
        retrofit.Profiler profiler25 = builder23.profiler;
        retrofit.RestAdapter.LogLevel logLevel26 = builder23.logLevel;
        builder16.logLevel = logLevel26;
        retrofit.RestAdapter.Log log28 = null;
        builder16.log = log28;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        java.lang.String str31 = serializedObjectSupporter30.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter32 = serializedObjectSupporter30.deserializeObjectConverter3();
        java.lang.String str33 = serializedObjectSupporter30.deserializeObjectString4();
        retrofit.Server server34 = serializedObjectSupporter30.deserializeObjectServer1();
        retrofit.client.Client.Provider provider35 = null;
        java.util.concurrent.Executor executor36 = null;
        java.util.concurrent.Executor executor37 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        java.lang.String str39 = serializedObjectSupporter38.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor40 = serializedObjectSupporter38.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request42 = serializedObjectSupporter41.deserializeObjectRequest1();
        retrofit.client.Request request43 = serializedObjectSupporter41.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter44 = serializedObjectSupporter41.deserializeObjectConverter5();
        retrofit.Profiler profiler45 = null;
        retrofit.ErrorHandler errorHandler46 = null;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor48 = null;
        builder47.sethttpExecutor(executor48);
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        builder47.log = log50;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server34, provider35, executor36, executor37, requestInterceptor40, (retrofit.converter.Converter) gsonConverter44, profiler45, errorHandler46, log50, logLevel52);
        java.util.concurrent.Executor executor54 = restAdapter53.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor55 = restAdapter53.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor56 = restAdapter53.requestInterceptor;
        builder16.requestInterceptor = requestInterceptor56;
        builder0.requestInterceptor = requestInterceptor56;
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "GET" + "'", str10, "GET");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(serializedObjectSupporter24);
        org.junit.Assert.assertNull(profiler25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "GET" + "'", str31, "GET");
        org.junit.Assert.assertNotNull(gsonConverter32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNotNull(server34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Retrofit-" + "'", str39, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor40);
        org.junit.Assert.assertNotNull(request42);
        org.junit.Assert.assertNotNull(request43);
        org.junit.Assert.assertNotNull(gsonConverter44);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor54);
        org.junit.Assert.assertNotNull(requestInterceptor55);
        org.junit.Assert.assertNotNull(requestInterceptor56);
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter3 = builder0.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorHandler2);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.Profiler profiler24 = restAdapter23.profiler;
        java.util.concurrent.Executor executor25 = restAdapter23.httpExecutor;
        retrofit.Profiler profiler26 = restAdapter23.profiler;
        retrofit.RequestInterceptor requestInterceptor27 = restAdapter23.requestInterceptor;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(profiler24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertNotNull(requestInterceptor27);
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        java.util.concurrent.Executor executor5 = builder0.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = builder7.serializedObjectSupporter;
        retrofit.Profiler profiler9 = builder7.profiler;
        retrofit.ErrorHandler errorHandler10 = builder7.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter11.deserializeObjectConverter3();
        java.lang.String str14 = serializedObjectSupporter11.deserializeObjectString4();
        retrofit.Server server15 = serializedObjectSupporter11.deserializeObjectServer1();
        retrofit.client.Client.Provider provider16 = null;
        java.util.concurrent.Executor executor17 = null;
        java.util.concurrent.Executor executor18 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = new retrofit.SerializedObjectSupporter();
        java.lang.String str20 = serializedObjectSupporter19.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter19.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request23 = serializedObjectSupporter22.deserializeObjectRequest1();
        retrofit.client.Request request24 = serializedObjectSupporter22.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter22.deserializeObjectConverter5();
        retrofit.Profiler profiler26 = null;
        retrofit.ErrorHandler errorHandler27 = null;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor29 = null;
        builder28.sethttpExecutor(executor29);
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        builder28.log = log31;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server15, provider16, executor17, executor18, requestInterceptor21, (retrofit.converter.Converter) gsonConverter25, profiler26, errorHandler27, log31, logLevel33);
        java.util.concurrent.Executor executor35 = restAdapter34.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor36 = restAdapter34.requestInterceptor;
        retrofit.RestAdapter.Builder builder37 = builder7.setRequestInterceptor(requestInterceptor36);
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider39 = builder38.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder41 = builder38.setLogLevel(logLevel40);
        retrofit.RestAdapter.Log log42 = builder41.log;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.HEADERS;
        builder41.logLevel = logLevel43;
        retrofit.ErrorHandler errorHandler45 = builder41.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        java.lang.String str47 = serializedObjectSupporter46.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter48 = serializedObjectSupporter46.deserializeObjectConverter3();
        java.lang.String str49 = serializedObjectSupporter46.deserializeObjectString4();
        retrofit.client.Request request50 = serializedObjectSupporter46.deserializeObjectRequest6();
        retrofit.Server server51 = serializedObjectSupporter46.deserializeObjectServer1();
        builder41.server = server51;
        retrofit.RestAdapter.Builder builder53 = builder37.setServer(server51);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor55 = null;
        builder54.sethttpExecutor(executor55);
        builder54.ensureSaneDefaults();
        retrofit.client.Client.Provider provider58 = null;
        builder54.setclientProvider(provider58);
        retrofit.client.Client.Provider provider60 = null;
        builder54.setclientProvider(provider60);
        java.util.concurrent.Executor executor62 = builder54.httpExecutor;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        builder63.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler65 = builder63.errorHandler;
        java.util.concurrent.Executor executor66 = builder63.getcallbackExecutor();
        retrofit.RestAdapter.Builder builder67 = builder53.setExecutors(executor62, executor66);
        builder0.callbackExecutor = executor66;
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertNull(profiler9);
        org.junit.Assert.assertNull(errorHandler10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "GET" + "'", str12, "GET");
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "http://example.com/" + "'", str14, "http://example.com/");
        org.junit.Assert.assertNotNull(server15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Retrofit-" + "'", str20, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(request23);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNotNull(requestInterceptor36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(provider39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNull(log42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(errorHandler45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "GET" + "'", str47, "GET");
        org.junit.Assert.assertNotNull(gsonConverter48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "http://example.com/" + "'", str49, "http://example.com/");
        org.junit.Assert.assertNotNull(request50);
        org.junit.Assert.assertNotNull(server51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(executor62);
        org.junit.Assert.assertNotNull(errorHandler65);
        org.junit.Assert.assertNotNull(executor66);
        org.junit.Assert.assertNotNull(builder67);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.ErrorHandler errorHandler3 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter5 = serializedObjectSupporter0.deserializeObjectLogLevel1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(errorHandler3);
        org.junit.Assert.assertNotNull(server4);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = builder0.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel4 = builder0.logLevel;
        retrofit.Profiler profiler5 = builder0.profiler;
        retrofit.RestAdapter.Builder builder7 = builder0.setServer("hi!");
        retrofit.converter.Converter converter8 = builder7.converter;
        java.util.concurrent.Executor executor9 = builder7.getcallbackExecutor();
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(converter8);
        org.junit.Assert.assertNull(executor9);
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.mime.TypedString typedString2 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter2();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(typedString2);
        org.junit.Assert.assertNotNull(gsonConverter3);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        java.lang.String str27 = restAdapter23.getTHREAD_PREFIX();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = restAdapter23.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter23.logLevel;
        java.lang.String str30 = restAdapter23.getTHREAD_PREFIX();
        retrofit.Profiler profiler31 = restAdapter23.getprofiler();
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter23.logLevel;
        java.util.concurrent.Executor executor33 = restAdapter23.gethttpExecutor();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Retrofit-" + "'", str27, "Retrofit-");
        org.junit.Assert.assertNull(serializedObjectSupporter28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Retrofit-" + "'", str30, "Retrofit-");
        org.junit.Assert.assertNull(profiler31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor33);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.RestAdapter.LogLevel logLevel4 = builder3.logLevel;
        retrofit.RestAdapter.Log log5 = builder3.log;
        retrofit.client.Client client6 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder7 = builder3.setClient(client6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(log5);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter23.logLevel = logLevel25;
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = restAdapter23.serializedObjectSupporter;
        retrofit.RestAdapter.Log log28 = restAdapter23.log;
        retrofit.RequestInterceptor requestInterceptor29 = restAdapter23.requestInterceptor;
        java.lang.Class<?> wildcardClass30 = requestInterceptor29.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(serializedObjectSupporter27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(requestInterceptor29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        retrofit.Profiler profiler5 = null;
        builder0.profiler = profiler5;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter7 = builder0.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = builder4.serializedObjectSupporter;
        retrofit.client.Client.Provider provider6 = null;
        builder4.setclientProvider(provider6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor9 = null;
        builder8.sethttpExecutor(executor9);
        retrofit.RestAdapter.Log log11 = null;
        builder8.log = log11;
        java.util.concurrent.Executor executor13 = builder8.callbackExecutor;
        retrofit.RestAdapter.Log log14 = retrofit.RestAdapter.Log.NONE;
        builder8.log = log14;
        retrofit.RestAdapter.Builder builder16 = builder4.setLog(log14);
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter17.deserializeObjectConverter3();
        java.lang.String str20 = serializedObjectSupporter17.deserializeObjectString4();
        retrofit.client.Request request21 = serializedObjectSupporter17.deserializeObjectRequest6();
        retrofit.Server server22 = serializedObjectSupporter17.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder23 = builder16.setServer(server22);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer(server22);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor26 = null;
        builder25.sethttpExecutor(executor26);
        retrofit.RequestInterceptor requestInterceptor28 = null;
        builder25.requestInterceptor = requestInterceptor28;
        retrofit.converter.Converter converter30 = builder25.converter;
        java.util.concurrent.Executor executor31 = null;
        builder25.httpExecutor = executor31;
        retrofit.RestAdapter.LogLevel logLevel33 = builder25.logLevel;
        builder0.logLevel = logLevel33;
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(serializedObjectSupporter5);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNotNull(log14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "GET" + "'", str18, "GET");
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "http://example.com/" + "'", str20, "http://example.com/");
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(server22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(converter30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest7();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString4();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "GET" + "'", str3, "GET");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        retrofit.client.Client.Provider provider3 = null;
        builder0.clientProvider = provider3;
        retrofit.RestAdapter.Log log5 = retrofit.RestAdapter.Log.NONE;
        builder0.log = log5;
        retrofit.ErrorHandler errorHandler7 = builder0.errorHandler;
        java.util.concurrent.Executor executor8 = builder0.callbackExecutor;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNotNull(log5);
        org.junit.Assert.assertNull(errorHandler7);
        org.junit.Assert.assertNull(executor8);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter7();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.client.Request request7 = serializedObjectSupporter0.deserializeObjectRequest7();
        java.lang.String str8 = serializedObjectSupporter0.deserializeObjectString5();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "POST" + "'", str8, "POST");
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        retrofit.Profiler profiler27 = restAdapter23.getprofiler();
        retrofit.client.Client.Provider provider28 = restAdapter23.clientProvider;
        retrofit.RequestInterceptor requestInterceptor29 = restAdapter23.getrequestInterceptor();
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter23.logLevel;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNull(profiler27);
        org.junit.Assert.assertNull(provider28);
        org.junit.Assert.assertNotNull(requestInterceptor29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        java.lang.String str25 = restAdapter23.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor26 = restAdapter23.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter23.logLevel = logLevel27;
        java.util.concurrent.Executor executor29 = restAdapter23.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter23.logLevel;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Retrofit-Idle" + "'", str25, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest8();
        java.util.List<retrofit.client.Header> headerList3 = request2.headers;
        java.lang.String str4 = request2.getMethod();
        java.util.List<retrofit.client.Header> headerList5 = request2.getHeaders();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(headerList3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(headerList5);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = null;
        builder0.setcallbackExecutor(executor3);
        retrofit.client.Client.Provider provider5 = null;
        builder0.clientProvider = provider5;
        retrofit.Profiler profiler7 = null;
        builder0.profiler = profiler7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider10 = builder9.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder12 = builder9.setLogLevel(logLevel11);
        retrofit.converter.Converter converter13 = builder12.converter;
        builder12.ensureSaneDefaults();
        retrofit.client.Client.Provider provider15 = builder12.clientProvider;
        retrofit.RestAdapter.Builder builder16 = builder0.setClient(provider15);
        retrofit.client.Client client17 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder18 = builder16.setClient(client17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNotNull(provider15);
        org.junit.Assert.assertNotNull(builder16);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.ErrorHandler errorHandler3 = builder0.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        java.lang.String str5 = serializedObjectSupporter4.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter4.deserializeObjectConverter3();
        java.lang.String str7 = serializedObjectSupporter4.deserializeObjectString4();
        retrofit.Server server8 = serializedObjectSupporter4.deserializeObjectServer1();
        retrofit.client.Client.Provider provider9 = null;
        java.util.concurrent.Executor executor10 = null;
        java.util.concurrent.Executor executor11 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor14 = serializedObjectSupporter12.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request16 = serializedObjectSupporter15.deserializeObjectRequest1();
        retrofit.client.Request request17 = serializedObjectSupporter15.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter15.deserializeObjectConverter5();
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor22 = null;
        builder21.sethttpExecutor(executor22);
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        builder21.log = log24;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter(server8, provider9, executor10, executor11, requestInterceptor14, (retrofit.converter.Converter) gsonConverter18, profiler19, errorHandler20, log24, logLevel26);
        java.util.concurrent.Executor executor28 = restAdapter27.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor29 = restAdapter27.requestInterceptor;
        retrofit.RestAdapter.Builder builder30 = builder0.setRequestInterceptor(requestInterceptor29);
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        java.lang.String str32 = serializedObjectSupporter31.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter34 = serializedObjectSupporter31.deserializeObjectConverter6();
        builder0.converter = gsonConverter34;
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request37 = serializedObjectSupporter36.deserializeObjectRequest8();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter2();
        retrofit.RequestInterceptor requestInterceptor39 = serializedObjectSupporter36.deserializeObjectRequestInterceptor1();
        builder0.requestInterceptor = requestInterceptor39;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "GET" + "'", str5, "GET");
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-" + "'", str13, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor14);
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNotNull(requestInterceptor29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "GET" + "'", str32, "GET");
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(gsonConverter34);
        org.junit.Assert.assertNotNull(request37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(requestInterceptor39);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        java.lang.String str25 = restAdapter23.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor26 = restAdapter23.httpExecutor;
        retrofit.client.Client.Provider provider27 = restAdapter23.clientProvider;
        java.util.concurrent.Executor executor28 = restAdapter23.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = restAdapter23.serializedObjectSupporter;
        java.lang.Throwable throwable30 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter23.logException(throwable30, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Retrofit-Idle" + "'", str25, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNull(serializedObjectSupporter29);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest2();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter23.logLevel = logLevel25;
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = restAdapter23.serializedObjectSupporter;
        retrofit.RestAdapter.Log log28 = restAdapter23.log;
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request30 = serializedObjectSupporter29.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter32 = serializedObjectSupporter29.deserializeObjectConverter8();
        java.lang.String str33 = serializedObjectSupporter29.deserializeObjectString4();
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter29;
        java.util.concurrent.Executor executor35 = restAdapter23.gethttpExecutor();
        java.lang.Throwable throwable36 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter23.logException(throwable36, "http://example.com/");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(serializedObjectSupporter27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(request30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(gsonConverter32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNull(executor35);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor3 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter8();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Retrofit-" + "'", str2, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor3);
        org.junit.Assert.assertNotNull(gsonConverter4);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        java.util.concurrent.Executor executor5 = null;
        builder0.httpExecutor = executor5;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter7.deserializeObjectConverter3();
        java.lang.String str10 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.client.Request request11 = serializedObjectSupporter7.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler12 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        builder0.errorHandler = errorHandler12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor15 = null;
        builder14.sethttpExecutor(executor15);
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter17.deserializeObjectConverter3();
        builder14.converter = gsonConverter19;
        retrofit.client.Client.Provider provider21 = null;
        builder14.clientProvider = provider21;
        retrofit.RestAdapter.LogLevel logLevel23 = builder14.logLevel;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor25 = null;
        builder24.sethttpExecutor(executor25);
        retrofit.RequestInterceptor requestInterceptor27 = null;
        builder24.requestInterceptor = requestInterceptor27;
        retrofit.converter.Converter converter29 = builder24.converter;
        java.util.concurrent.Executor executor30 = null;
        builder24.httpExecutor = executor30;
        retrofit.RestAdapter.LogLevel logLevel32 = builder24.logLevel;
        builder14.logLevel = logLevel32;
        builder0.logLevel = logLevel32;
        builder0.ensureSaneDefaults();
        retrofit.converter.Converter converter36 = builder0.converter;
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "GET" + "'", str8, "GET");
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertNotNull(errorHandler12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "GET" + "'", str18, "GET");
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter29);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(converter36);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        retrofit.Profiler profiler5 = null;
        builder0.profiler = profiler5;
        java.util.concurrent.Executor executor7 = builder0.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter8.deserializeObjectConverter3();
        java.lang.String str11 = serializedObjectSupporter8.deserializeObjectString4();
        retrofit.Server server12 = serializedObjectSupporter8.deserializeObjectServer1();
        retrofit.client.Client.Provider provider13 = null;
        java.util.concurrent.Executor executor14 = null;
        java.util.concurrent.Executor executor15 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor18 = serializedObjectSupporter16.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request20 = serializedObjectSupporter19.deserializeObjectRequest1();
        retrofit.client.Request request21 = serializedObjectSupporter19.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter19.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.ErrorHandler errorHandler24 = null;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor26 = null;
        builder25.sethttpExecutor(executor26);
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        builder25.log = log28;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter(server12, provider13, executor14, executor15, requestInterceptor18, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler24, log28, logLevel30);
        java.util.concurrent.Executor executor32 = restAdapter31.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor33 = restAdapter31.requestInterceptor;
        retrofit.RestAdapter.Builder builder34 = builder0.setRequestInterceptor(requestInterceptor33);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder36 = builder0.setServer("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be blank.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "GET" + "'", str9, "GET");
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "http://example.com/" + "'", str11, "http://example.com/");
        org.junit.Assert.assertNotNull(server12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Retrofit-" + "'", str17, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor18);
        org.junit.Assert.assertNotNull(request20);
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor32);
        org.junit.Assert.assertNotNull(requestInterceptor33);
        org.junit.Assert.assertNotNull(builder34);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor2 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter4();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Retrofit-" + "'", str1, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        java.lang.String str26 = serializedObjectSupporter25.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter25.deserializeObjectConverter3();
        java.lang.String str28 = serializedObjectSupporter25.deserializeObjectString4();
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter25;
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter23.getLogLevel();
        java.lang.String str31 = restAdapter23.getTHREAD_PREFIX();
        java.util.concurrent.Executor executor32 = restAdapter23.callbackExecutor;
        retrofit.client.Response response34 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response36 = restAdapter23.logAndReplaceResponse("POST", response34, (long) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "GET" + "'", str26, "GET");
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Retrofit-" + "'", str31, "Retrofit-");
        org.junit.Assert.assertNull(executor32);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        builder0.ensureSaneDefaults();
        retrofit.client.Client.Provider provider4 = null;
        builder0.setclientProvider(provider4);
        retrofit.client.Client.Provider provider6 = null;
        builder0.setclientProvider(provider6);
        java.util.concurrent.Executor executor8 = builder0.httpExecutor;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor10 = null;
        builder9.sethttpExecutor(executor10);
        retrofit.RestAdapter.Log log12 = null;
        builder9.log = log12;
        retrofit.RestAdapter.Log log14 = builder9.log;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor16 = null;
        builder15.sethttpExecutor(executor16);
        retrofit.RequestInterceptor requestInterceptor18 = null;
        builder15.requestInterceptor = requestInterceptor18;
        java.util.concurrent.Executor executor20 = null;
        builder15.httpExecutor = executor20;
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        java.lang.String str23 = serializedObjectSupporter22.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter24 = serializedObjectSupporter22.deserializeObjectConverter3();
        java.lang.String str25 = serializedObjectSupporter22.deserializeObjectString4();
        retrofit.client.Request request26 = serializedObjectSupporter22.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler27 = serializedObjectSupporter22.deserializeObjectErrorHandler1();
        builder15.errorHandler = errorHandler27;
        retrofit.RestAdapter.Builder builder29 = builder9.setErrorHandler(errorHandler27);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor31 = null;
        builder30.sethttpExecutor(executor31);
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        java.lang.String str34 = serializedObjectSupporter33.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter35 = serializedObjectSupporter33.deserializeObjectConverter3();
        builder30.converter = gsonConverter35;
        retrofit.client.Client.Provider provider37 = null;
        builder30.clientProvider = provider37;
        retrofit.RestAdapter.LogLevel logLevel39 = builder30.logLevel;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor41 = null;
        builder40.sethttpExecutor(executor41);
        retrofit.RequestInterceptor requestInterceptor43 = null;
        builder40.requestInterceptor = requestInterceptor43;
        retrofit.converter.Converter converter45 = builder40.converter;
        java.util.concurrent.Executor executor46 = null;
        builder40.httpExecutor = executor46;
        retrofit.RestAdapter.LogLevel logLevel48 = builder40.logLevel;
        builder30.logLevel = logLevel48;
        java.util.concurrent.Executor executor50 = builder30.callbackExecutor;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider52 = builder51.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder54 = builder51.setLogLevel(logLevel53);
        retrofit.converter.Converter converter55 = builder54.converter;
        builder54.ensureSaneDefaults();
        retrofit.client.Client.Provider provider57 = builder54.clientProvider;
        builder30.setclientProvider(provider57);
        builder9.setclientProvider(provider57);
        retrofit.RestAdapter.Builder builder60 = builder0.setClient(provider57);
        org.junit.Assert.assertNotNull(executor8);
        org.junit.Assert.assertNull(log14);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "GET" + "'", str23, "GET");
        org.junit.Assert.assertNotNull(gsonConverter24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "http://example.com/" + "'", str25, "http://example.com/");
        org.junit.Assert.assertNotNull(request26);
        org.junit.Assert.assertNotNull(errorHandler27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "GET" + "'", str34, "GET");
        org.junit.Assert.assertNotNull(gsonConverter35);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter45);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor50);
        org.junit.Assert.assertNull(provider52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(converter55);
        org.junit.Assert.assertNotNull(provider57);
        org.junit.Assert.assertNotNull(builder60);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        java.util.concurrent.Executor executor5 = null;
        builder0.httpExecutor = executor5;
        java.util.concurrent.Executor executor7 = null;
        builder0.setcallbackExecutor(executor7);
        retrofit.client.Client.Provider provider9 = null;
        builder0.setclientProvider(provider9);
        retrofit.RestAdapter.Builder builder12 = builder0.setServer("Retrofit-Idle");
        retrofit.client.Client.Provider provider13 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log15 = builder14.log;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor17 = null;
        builder16.sethttpExecutor(executor17);
        retrofit.RestAdapter.Log log19 = null;
        builder16.log = log19;
        java.util.concurrent.Executor executor21 = builder16.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = builder16.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = builder16.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = builder24.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = builder24.serializedObjectSupporter;
        java.util.concurrent.Executor executor27 = null;
        builder24.httpExecutor = executor27;
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request30 = serializedObjectSupporter29.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter2();
        builder24.serializedObjectSupporter = serializedObjectSupporter29;
        retrofit.client.Request request33 = serializedObjectSupporter29.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter34 = serializedObjectSupporter29.deserializeObjectConverter5();
        retrofit.Server server35 = serializedObjectSupporter29.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter29.deserializeObjectConverter2();
        builder16.converter = gsonConverter36;
        builder14.converter = gsonConverter36;
        retrofit.Server server39 = builder14.server;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor41 = null;
        builder40.sethttpExecutor(executor41);
        retrofit.RequestInterceptor requestInterceptor43 = null;
        builder40.requestInterceptor = requestInterceptor43;
        retrofit.Server server45 = builder40.server;
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        java.lang.String str47 = serializedObjectSupporter46.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter48 = serializedObjectSupporter46.deserializeObjectConverter3();
        java.lang.String str49 = serializedObjectSupporter46.deserializeObjectString4();
        retrofit.Server server50 = serializedObjectSupporter46.deserializeObjectServer1();
        retrofit.client.Client.Provider provider51 = null;
        java.util.concurrent.Executor executor52 = null;
        java.util.concurrent.Executor executor53 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter54 = new retrofit.SerializedObjectSupporter();
        java.lang.String str55 = serializedObjectSupporter54.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor56 = serializedObjectSupporter54.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter57 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request58 = serializedObjectSupporter57.deserializeObjectRequest1();
        retrofit.client.Request request59 = serializedObjectSupporter57.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter60 = serializedObjectSupporter57.deserializeObjectConverter5();
        retrofit.Profiler profiler61 = null;
        retrofit.ErrorHandler errorHandler62 = null;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor64 = null;
        builder63.sethttpExecutor(executor64);
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        builder63.log = log66;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server50, provider51, executor52, executor53, requestInterceptor56, (retrofit.converter.Converter) gsonConverter60, profiler61, errorHandler62, log66, logLevel68);
        retrofit.RestAdapter.LogLevel logLevel70 = restAdapter69.getLogLevel();
        retrofit.converter.Converter converter71 = restAdapter69.converter;
        java.lang.String str72 = restAdapter69.getIDLE_THREAD_NAME();
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter74 = builder73.serializedObjectSupporter;
        retrofit.Profiler profiler75 = builder73.profiler;
        retrofit.RestAdapter.LogLevel logLevel76 = builder73.logLevel;
        restAdapter69.logLevel = logLevel76;
        retrofit.RestAdapter.Builder builder78 = builder40.setLogLevel(logLevel76);
        retrofit.RestAdapter.Builder builder79 = builder14.setLogLevel(logLevel76);
        builder0.logLevel = logLevel76;
        java.util.concurrent.Executor executor81 = builder0.gethttpExecutor();
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNull(log15);
        org.junit.Assert.assertNull(executor21);
        org.junit.Assert.assertNull(serializedObjectSupporter22);
        org.junit.Assert.assertNull(serializedObjectSupporter23);
        org.junit.Assert.assertNull(serializedObjectSupporter25);
        org.junit.Assert.assertNull(serializedObjectSupporter26);
        org.junit.Assert.assertNotNull(request30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(request33);
        org.junit.Assert.assertNotNull(gsonConverter34);
        org.junit.Assert.assertNotNull(server35);
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertNull(server39);
        org.junit.Assert.assertNull(server45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "GET" + "'", str47, "GET");
        org.junit.Assert.assertNotNull(gsonConverter48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "http://example.com/" + "'", str49, "http://example.com/");
        org.junit.Assert.assertNotNull(server50);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Retrofit-" + "'", str55, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor56);
        org.junit.Assert.assertNotNull(request58);
        org.junit.Assert.assertNotNull(request59);
        org.junit.Assert.assertNotNull(gsonConverter60);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Retrofit-Idle" + "'", str72, "Retrofit-Idle");
        org.junit.Assert.assertNull(serializedObjectSupporter74);
        org.junit.Assert.assertNull(profiler75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNull(executor81);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel27 = restAdapter23.getLogLevel();
        java.lang.Class<?> wildcardClass28 = logLevel27.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        java.lang.String str26 = restAdapter23.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        retrofit.client.Client.Provider provider28 = restAdapter23.getclientProvider();
        java.lang.String str29 = restAdapter23.getIDLE_THREAD_NAME();
        retrofit.Server server30 = restAdapter23.getserver();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(provider28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Retrofit-Idle" + "'", str29, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(server30);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter5();
        java.lang.String str8 = serializedObjectSupporter0.deserializeObjectString5();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "POST" + "'", str8, "POST");
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = retrofit.RestAdapter.Log.NONE;
        builder0.log = log3;
        log3.log("");
        log3.log("POST");
        log3.log("GET");
        log3.log("Retrofit-");
        org.junit.Assert.assertNotNull(log3);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        java.lang.String str25 = restAdapter23.getIDLE_THREAD_NAME();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = restAdapter23.serializedObjectSupporter;
        retrofit.RestAdapter.Log log27 = restAdapter23.log;
        retrofit.Server server28 = restAdapter23.getserver();
        retrofit.ErrorHandler errorHandler29 = restAdapter23.geterrorHandler();
        retrofit.converter.Converter converter30 = restAdapter23.converter;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Retrofit-Idle" + "'", str25, "Retrofit-Idle");
        org.junit.Assert.assertNull(serializedObjectSupporter26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNull(errorHandler29);
        org.junit.Assert.assertNotNull(converter30);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.ErrorHandler errorHandler4 = null;
        builder0.errorHandler = errorHandler4;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor7 = null;
        builder6.sethttpExecutor(executor7);
        retrofit.RequestInterceptor requestInterceptor9 = null;
        builder6.requestInterceptor = requestInterceptor9;
        java.util.concurrent.Executor executor11 = null;
        builder6.httpExecutor = executor11;
        java.util.concurrent.Executor executor13 = null;
        builder6.setcallbackExecutor(executor13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor16 = null;
        builder15.sethttpExecutor(executor16);
        retrofit.RestAdapter.Log log18 = null;
        builder15.log = log18;
        java.util.concurrent.Executor executor20 = builder15.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = builder15.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler22 = builder15.errorHandler;
        builder15.ensureSaneDefaults();
        retrofit.RestAdapter.LogLevel logLevel24 = builder15.logLevel;
        retrofit.client.Client.Provider provider25 = builder15.getclientProvider();
        builder6.setclientProvider(provider25);
        builder0.setclientProvider(provider25);
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(executor20);
        org.junit.Assert.assertNull(serializedObjectSupporter21);
        org.junit.Assert.assertNull(errorHandler22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(provider25);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.converter.Converter converter4 = builder3.converter;
        retrofit.Profiler profiler5 = builder3.profiler;
        java.util.concurrent.Executor executor6 = builder3.callbackExecutor;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = builder7.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = builder7.serializedObjectSupporter;
        java.util.concurrent.Executor executor10 = null;
        builder7.httpExecutor = executor10;
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter2();
        builder7.serializedObjectSupporter = serializedObjectSupporter12;
        retrofit.client.Client.Provider provider16 = builder7.getclientProvider();
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = builder17.serializedObjectSupporter;
        retrofit.client.Client.Provider provider19 = null;
        builder17.setclientProvider(provider19);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor22 = null;
        builder21.sethttpExecutor(executor22);
        retrofit.RestAdapter.Log log24 = null;
        builder21.log = log24;
        java.util.concurrent.Executor executor26 = builder21.callbackExecutor;
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        builder21.log = log27;
        retrofit.RestAdapter.Builder builder29 = builder17.setLog(log27);
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        java.lang.String str31 = serializedObjectSupporter30.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter32 = serializedObjectSupporter30.deserializeObjectConverter3();
        java.lang.String str33 = serializedObjectSupporter30.deserializeObjectString4();
        retrofit.client.Request request34 = serializedObjectSupporter30.deserializeObjectRequest6();
        retrofit.Server server35 = serializedObjectSupporter30.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder36 = builder29.setServer(server35);
        retrofit.client.Client.Provider provider37 = null;
        java.util.concurrent.Executor executor38 = null;
        java.util.concurrent.Executor executor39 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request41 = serializedObjectSupporter40.deserializeObjectRequest1();
        retrofit.client.Request request42 = serializedObjectSupporter40.deserializeObjectRequest5();
        retrofit.RequestInterceptor requestInterceptor43 = serializedObjectSupporter40.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request45 = serializedObjectSupporter44.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter44.deserializeObjectConverter2();
        retrofit.Profiler profiler47 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = new retrofit.SerializedObjectSupporter();
        java.lang.String str49 = serializedObjectSupporter48.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter50 = serializedObjectSupporter48.deserializeObjectConverter3();
        java.lang.String str51 = serializedObjectSupporter48.deserializeObjectString4();
        retrofit.client.Request request52 = serializedObjectSupporter48.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler53 = serializedObjectSupporter48.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = builder54.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = builder54.serializedObjectSupporter;
        retrofit.client.Client.Provider provider57 = null;
        builder54.clientProvider = provider57;
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        builder54.log = log59;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor62 = null;
        builder61.setcallbackExecutor(executor62);
        java.util.concurrent.Executor executor64 = null;
        builder61.setcallbackExecutor(executor64);
        retrofit.client.Client.Provider provider66 = null;
        builder61.clientProvider = provider66;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter69 = builder68.serializedObjectSupporter;
        retrofit.Profiler profiler70 = builder68.profiler;
        retrofit.RestAdapter.LogLevel logLevel71 = builder68.logLevel;
        builder61.logLevel = logLevel71;
        retrofit.RestAdapter restAdapter73 = new retrofit.RestAdapter(server35, provider37, executor38, executor39, requestInterceptor43, (retrofit.converter.Converter) gsonConverter46, profiler47, errorHandler53, log59, logLevel71);
        retrofit.RestAdapter.Builder builder74 = builder7.setErrorHandler(errorHandler53);
        retrofit.RestAdapter.Builder builder75 = builder3.setErrorHandler(errorHandler53);
        java.util.concurrent.Executor executor76 = builder75.getcallbackExecutor();
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNull(profiler5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(serializedObjectSupporter18);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "GET" + "'", str31, "GET");
        org.junit.Assert.assertNotNull(gsonConverter32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNotNull(request34);
        org.junit.Assert.assertNotNull(server35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(request41);
        org.junit.Assert.assertNotNull(request42);
        org.junit.Assert.assertNotNull(requestInterceptor43);
        org.junit.Assert.assertNotNull(request45);
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "GET" + "'", str49, "GET");
        org.junit.Assert.assertNotNull(gsonConverter50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "http://example.com/" + "'", str51, "http://example.com/");
        org.junit.Assert.assertNotNull(request52);
        org.junit.Assert.assertNotNull(errorHandler53);
        org.junit.Assert.assertNull(serializedObjectSupporter55);
        org.junit.Assert.assertNull(serializedObjectSupporter56);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNull(serializedObjectSupporter69);
        org.junit.Assert.assertNull(profiler70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNull(executor76);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter23.logLevel = logLevel25;
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = restAdapter23.serializedObjectSupporter;
        retrofit.RestAdapter.Log log28 = restAdapter23.log;
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request30 = serializedObjectSupporter29.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter32 = serializedObjectSupporter29.deserializeObjectConverter8();
        java.lang.String str33 = serializedObjectSupporter29.deserializeObjectString4();
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter29;
        retrofit.RestAdapter.RestHandler restHandler35 = restAdapter23.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        java.lang.String str37 = serializedObjectSupporter36.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter3();
        java.lang.String str39 = serializedObjectSupporter36.deserializeObjectString4();
        retrofit.client.Request request40 = serializedObjectSupporter36.deserializeObjectRequest3();
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter36;
        retrofit.client.Client.Provider provider42 = restAdapter23.clientProvider;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(serializedObjectSupporter27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(request30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(gsonConverter32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "GET" + "'", str37, "GET");
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "http://example.com/" + "'", str39, "http://example.com/");
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNull(provider42);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        java.util.concurrent.Executor executor3 = null;
        builder0.httpExecutor = executor3;
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request6 = serializedObjectSupporter5.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter5.deserializeObjectConverter2();
        builder0.serializedObjectSupporter = serializedObjectSupporter5;
        java.lang.String str9 = serializedObjectSupporter5.deserializeObjectString2();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter5.deserializeObjectConverter7();
        java.lang.String str11 = serializedObjectSupporter5.deserializeObjectString1();
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-Idle" + "'", str9, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-" + "'", str11, "Retrofit-");
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.client.Client.Provider provider2 = null;
        builder0.setclientProvider(provider2);
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor5 = null;
        builder4.sethttpExecutor(executor5);
        retrofit.RestAdapter.Log log7 = null;
        builder4.log = log7;
        java.util.concurrent.Executor executor9 = builder4.callbackExecutor;
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        builder4.log = log10;
        retrofit.RestAdapter.Builder builder12 = builder0.setLog(log10);
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter13.deserializeObjectConverter3();
        java.lang.String str16 = serializedObjectSupporter13.deserializeObjectString4();
        retrofit.client.Request request17 = serializedObjectSupporter13.deserializeObjectRequest6();
        retrofit.Server server18 = serializedObjectSupporter13.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder19 = builder12.setServer(server18);
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter3();
        java.lang.String str26 = serializedObjectSupporter23.deserializeObjectString4();
        retrofit.Server server27 = serializedObjectSupporter23.deserializeObjectServer1();
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        java.lang.String str32 = serializedObjectSupporter31.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor33 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request35 = serializedObjectSupporter34.deserializeObjectRequest1();
        retrofit.client.Request request36 = serializedObjectSupporter34.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter34.deserializeObjectConverter5();
        retrofit.Profiler profiler38 = null;
        retrofit.ErrorHandler errorHandler39 = null;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor41 = null;
        builder40.sethttpExecutor(executor41);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        builder40.log = log43;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor33, (retrofit.converter.Converter) gsonConverter37, profiler38, errorHandler39, log43, logLevel45);
        retrofit.RestAdapter.LogLevel logLevel47 = restAdapter46.getLogLevel();
        retrofit.converter.Converter converter48 = restAdapter46.converter;
        retrofit.RequestInterceptor requestInterceptor49 = restAdapter46.requestInterceptor;
        retrofit.converter.Converter converter50 = null;
        retrofit.Profiler profiler51 = null;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor53 = null;
        builder52.sethttpExecutor(executor53);
        retrofit.RestAdapter.Log log55 = null;
        builder52.log = log55;
        retrofit.RestAdapter.Log log57 = builder52.log;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor59 = null;
        builder58.sethttpExecutor(executor59);
        retrofit.RequestInterceptor requestInterceptor61 = null;
        builder58.requestInterceptor = requestInterceptor61;
        java.util.concurrent.Executor executor63 = null;
        builder58.httpExecutor = executor63;
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = new retrofit.SerializedObjectSupporter();
        java.lang.String str66 = serializedObjectSupporter65.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter67 = serializedObjectSupporter65.deserializeObjectConverter3();
        java.lang.String str68 = serializedObjectSupporter65.deserializeObjectString4();
        retrofit.client.Request request69 = serializedObjectSupporter65.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler70 = serializedObjectSupporter65.deserializeObjectErrorHandler1();
        builder58.errorHandler = errorHandler70;
        retrofit.RestAdapter.Builder builder72 = builder52.setErrorHandler(errorHandler70);
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider75 = builder74.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder77 = builder74.setLogLevel(logLevel76);
        retrofit.RestAdapter.LogLevel logLevel78 = builder77.logLevel;
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder80 = builder77.setLogLevel(logLevel79);
        retrofit.RestAdapter restAdapter81 = new retrofit.RestAdapter(server18, provider20, executor21, executor22, requestInterceptor49, converter50, profiler51, errorHandler70, log73, logLevel79);
        retrofit.converter.Converter converter82 = restAdapter81.getconverter();
        retrofit.client.Response response84 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response86 = restAdapter81.logAndReplaceResponse("", response84, (long) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "GET" + "'", str14, "GET");
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(server18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "GET" + "'", str24, "GET");
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "http://example.com/" + "'", str26, "http://example.com/");
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Retrofit-" + "'", str32, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor33);
        org.junit.Assert.assertNotNull(request35);
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter48);
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNull(log57);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "GET" + "'", str66, "GET");
        org.junit.Assert.assertNotNull(gsonConverter67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "http://example.com/" + "'", str68, "http://example.com/");
        org.junit.Assert.assertNotNull(request69);
        org.junit.Assert.assertNotNull(errorHandler70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNull(provider75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNull(converter82);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.getconverter();
        retrofit.Profiler profiler26 = restAdapter23.getprofiler();
        retrofit.Profiler profiler27 = restAdapter23.getprofiler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        java.lang.String str29 = serializedObjectSupporter28.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter28.deserializeObjectConverter3();
        java.lang.String str31 = serializedObjectSupporter28.deserializeObjectString4();
        retrofit.Server server32 = serializedObjectSupporter28.deserializeObjectServer1();
        retrofit.client.Client.Provider provider33 = null;
        java.util.concurrent.Executor executor34 = null;
        java.util.concurrent.Executor executor35 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        java.lang.String str37 = serializedObjectSupporter36.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor38 = serializedObjectSupporter36.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request40 = serializedObjectSupporter39.deserializeObjectRequest1();
        retrofit.client.Request request41 = serializedObjectSupporter39.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter42 = serializedObjectSupporter39.deserializeObjectConverter5();
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor46 = null;
        builder45.sethttpExecutor(executor46);
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        builder45.log = log48;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter(server32, provider33, executor34, executor35, requestInterceptor38, (retrofit.converter.Converter) gsonConverter42, profiler43, errorHandler44, log48, logLevel50);
        java.util.concurrent.Executor executor52 = restAdapter51.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter53 = new retrofit.SerializedObjectSupporter();
        java.lang.String str54 = serializedObjectSupporter53.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter55 = serializedObjectSupporter53.deserializeObjectConverter3();
        java.lang.String str56 = serializedObjectSupporter53.deserializeObjectString4();
        restAdapter51.serializedObjectSupporter = serializedObjectSupporter53;
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter53;
        retrofit.SerializedObjectSupporter serializedObjectSupporter59 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request60 = serializedObjectSupporter59.deserializeObjectRequest1();
        retrofit.client.Request request61 = serializedObjectSupporter59.deserializeObjectRequest8();
        java.util.List<retrofit.client.Header> headerList62 = request61.headers;
        retrofit.client.Request request63 = restAdapter23.logAndReplaceRequest(request61);
        java.lang.Throwable throwable64 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter23.logException(throwable64, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertNull(profiler27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "GET" + "'", str29, "GET");
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "http://example.com/" + "'", str31, "http://example.com/");
        org.junit.Assert.assertNotNull(server32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-" + "'", str37, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor38);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(request41);
        org.junit.Assert.assertNotNull(gsonConverter42);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "GET" + "'", str54, "GET");
        org.junit.Assert.assertNotNull(gsonConverter55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "http://example.com/" + "'", str56, "http://example.com/");
        org.junit.Assert.assertNotNull(request60);
        org.junit.Assert.assertNotNull(request61);
        org.junit.Assert.assertNotNull(headerList62);
        org.junit.Assert.assertNotNull(request63);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter3();
        builder0.converter = gsonConverter5;
        retrofit.client.Client.Provider provider7 = null;
        builder0.clientProvider = provider7;
        retrofit.client.Client.Provider provider9 = null;
        builder0.setclientProvider(provider9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = builder11.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = builder11.serializedObjectSupporter;
        java.util.concurrent.Executor executor14 = null;
        builder11.httpExecutor = executor14;
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request17 = serializedObjectSupporter16.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter16.deserializeObjectConverter2();
        builder11.serializedObjectSupporter = serializedObjectSupporter16;
        retrofit.client.Request request20 = serializedObjectSupporter16.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter16.deserializeObjectConverter5();
        retrofit.Server server22 = serializedObjectSupporter16.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder23 = builder0.setServer(server22);
        retrofit.client.Client.Provider provider24 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor26 = null;
        builder25.setcallbackExecutor(executor26);
        retrofit.RequestInterceptor requestInterceptor28 = builder25.requestInterceptor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        java.lang.String str30 = serializedObjectSupporter29.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter3();
        java.lang.String str32 = serializedObjectSupporter29.deserializeObjectString4();
        retrofit.client.Request request33 = serializedObjectSupporter29.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler34 = serializedObjectSupporter29.deserializeObjectErrorHandler1();
        builder25.errorHandler = errorHandler34;
        retrofit.RestAdapter.Builder builder36 = builder0.setErrorHandler(errorHandler34);
        retrofit.RestAdapter.Builder builder38 = builder36.setServer("POST");
        java.util.concurrent.Executor executor39 = builder38.gethttpExecutor();
        retrofit.ErrorHandler errorHandler40 = builder38.errorHandler;
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNull(serializedObjectSupporter12);
        org.junit.Assert.assertNull(serializedObjectSupporter13);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(request20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNotNull(server22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNull(requestInterceptor28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "GET" + "'", str30, "GET");
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "http://example.com/" + "'", str32, "http://example.com/");
        org.junit.Assert.assertNotNull(request33);
        org.junit.Assert.assertNotNull(errorHandler34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(executor39);
        org.junit.Assert.assertNotNull(errorHandler40);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest3();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter7 = serializedObjectSupporter0.deserializeObjectLogLevel2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(request6);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor2 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.RequestInterceptor requestInterceptor6 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter7 = serializedObjectSupporter0.deserializeObjectLogLevel1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Retrofit-" + "'", str1, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(requestInterceptor6);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest7();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString5();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter5 = serializedObjectSupporter0.deserializeObjectLogLevel1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Retrofit-" + "'", str3, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "POST" + "'", str4, "POST");
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.converter.Converter converter3 = builder0.converter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("GET");
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor7 = null;
        builder6.sethttpExecutor(executor7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter3();
        builder6.converter = gsonConverter11;
        retrofit.client.Client.Provider provider13 = null;
        builder6.clientProvider = provider13;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter3();
        java.lang.String str18 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter15.deserializeObjectConverter6();
        builder6.converter = gsonConverter19;
        builder0.converter = gsonConverter19;
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        java.lang.String str23 = serializedObjectSupporter22.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter24 = serializedObjectSupporter22.deserializeObjectConverter3();
        java.lang.String str25 = serializedObjectSupporter22.deserializeObjectString4();
        retrofit.Server server26 = serializedObjectSupporter22.deserializeObjectServer1();
        retrofit.client.Client.Provider provider27 = null;
        java.util.concurrent.Executor executor28 = null;
        java.util.concurrent.Executor executor29 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        java.lang.String str31 = serializedObjectSupporter30.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter30.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request34 = serializedObjectSupporter33.deserializeObjectRequest1();
        retrofit.client.Request request35 = serializedObjectSupporter33.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter33.deserializeObjectConverter5();
        retrofit.Profiler profiler37 = null;
        retrofit.ErrorHandler errorHandler38 = null;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor40 = null;
        builder39.sethttpExecutor(executor40);
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        builder39.log = log42;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter(server26, provider27, executor28, executor29, requestInterceptor32, (retrofit.converter.Converter) gsonConverter36, profiler37, errorHandler38, log42, logLevel44);
        java.util.concurrent.Executor executor46 = restAdapter45.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor47 = restAdapter45.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor48 = restAdapter45.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor49 = restAdapter45.getrequestInterceptor();
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor51 = null;
        builder50.sethttpExecutor(executor51);
        retrofit.RequestInterceptor requestInterceptor53 = null;
        builder50.requestInterceptor = requestInterceptor53;
        retrofit.converter.Converter converter55 = builder50.converter;
        java.util.concurrent.Executor executor56 = null;
        builder50.httpExecutor = executor56;
        retrofit.RestAdapter.LogLevel logLevel58 = builder50.logLevel;
        restAdapter45.logLevel = logLevel58;
        builder0.logLevel = logLevel58;
        java.util.concurrent.Executor executor61 = builder0.getcallbackExecutor();
        java.util.concurrent.Executor executor62 = builder0.callbackExecutor;
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "GET" + "'", str10, "GET");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "GET" + "'", str16, "GET");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "GET" + "'", str23, "GET");
        org.junit.Assert.assertNotNull(gsonConverter24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "http://example.com/" + "'", str25, "http://example.com/");
        org.junit.Assert.assertNotNull(server26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Retrofit-" + "'", str31, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(request34);
        org.junit.Assert.assertNotNull(request35);
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor46);
        org.junit.Assert.assertNotNull(requestInterceptor47);
        org.junit.Assert.assertNotNull(requestInterceptor48);
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNull(converter55);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor61);
        org.junit.Assert.assertNull(executor62);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = null;
        builder0.setcallbackExecutor(executor3);
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.FULL;
        builder0.logLevel = logLevel5;
        retrofit.client.Client client7 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder8 = builder0.setClient(client7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        java.util.concurrent.Executor executor5 = null;
        builder0.httpExecutor = executor5;
        java.util.concurrent.Executor executor7 = null;
        builder0.setcallbackExecutor(executor7);
        java.util.concurrent.Executor executor9 = null;
        builder0.httpExecutor = executor9;
        retrofit.Server server11 = builder0.server;
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter2();
        retrofit.client.Request request15 = serializedObjectSupporter12.deserializeObjectRequest6();
        retrofit.client.Request request16 = serializedObjectSupporter12.deserializeObjectRequest8();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter12.deserializeObjectConverter6();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter12.deserializeObjectConverter2();
        builder0.serializedObjectSupporter = serializedObjectSupporter12;
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(request15);
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNotNull(gsonConverter18);
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.RequestInterceptor requestInterceptor3 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter7();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest1();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(requestInterceptor3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(request5);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter23.logLevel = logLevel25;
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = restAdapter23.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler28 = restAdapter23.geterrorHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        java.lang.String str30 = serializedObjectSupporter29.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter3();
        java.lang.String str32 = serializedObjectSupporter29.deserializeObjectString4();
        retrofit.Server server33 = serializedObjectSupporter29.deserializeObjectServer1();
        retrofit.client.Client.Provider provider34 = null;
        java.util.concurrent.Executor executor35 = null;
        java.util.concurrent.Executor executor36 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = new retrofit.SerializedObjectSupporter();
        java.lang.String str38 = serializedObjectSupporter37.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor39 = serializedObjectSupporter37.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request41 = serializedObjectSupporter40.deserializeObjectRequest1();
        retrofit.client.Request request42 = serializedObjectSupporter40.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter40.deserializeObjectConverter5();
        retrofit.Profiler profiler44 = null;
        retrofit.ErrorHandler errorHandler45 = null;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor47 = null;
        builder46.sethttpExecutor(executor47);
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        builder46.log = log49;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter(server33, provider34, executor35, executor36, requestInterceptor39, (retrofit.converter.Converter) gsonConverter43, profiler44, errorHandler45, log49, logLevel51);
        java.util.concurrent.Executor executor53 = restAdapter52.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor54 = restAdapter52.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor55 = restAdapter52.requestInterceptor;
        retrofit.Profiler profiler56 = restAdapter52.getprofiler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter57 = new retrofit.SerializedObjectSupporter();
        java.lang.String str58 = serializedObjectSupporter57.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter59 = serializedObjectSupporter57.deserializeObjectConverter3();
        java.lang.String str60 = serializedObjectSupporter57.deserializeObjectString4();
        retrofit.Server server61 = serializedObjectSupporter57.deserializeObjectServer1();
        retrofit.client.Client.Provider provider62 = null;
        java.util.concurrent.Executor executor63 = null;
        java.util.concurrent.Executor executor64 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = new retrofit.SerializedObjectSupporter();
        java.lang.String str66 = serializedObjectSupporter65.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor67 = serializedObjectSupporter65.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter68 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request69 = serializedObjectSupporter68.deserializeObjectRequest1();
        retrofit.client.Request request70 = serializedObjectSupporter68.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter71 = serializedObjectSupporter68.deserializeObjectConverter5();
        retrofit.Profiler profiler72 = null;
        retrofit.ErrorHandler errorHandler73 = null;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor75 = null;
        builder74.sethttpExecutor(executor75);
        retrofit.RestAdapter.Log log77 = retrofit.RestAdapter.Log.NONE;
        builder74.log = log77;
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter80 = new retrofit.RestAdapter(server61, provider62, executor63, executor64, requestInterceptor67, (retrofit.converter.Converter) gsonConverter71, profiler72, errorHandler73, log77, logLevel79);
        retrofit.RestAdapter.LogLevel logLevel81 = restAdapter80.getLogLevel();
        java.lang.String str82 = restAdapter80.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor83 = restAdapter80.httpExecutor;
        retrofit.Profiler profiler84 = restAdapter80.getprofiler();
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor86 = null;
        builder85.setcallbackExecutor(executor86);
        java.util.concurrent.Executor executor88 = builder85.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel89 = builder85.logLevel;
        boolean boolean90 = logLevel89.log();
        restAdapter80.logLevel = logLevel89;
        restAdapter52.logLevel = logLevel89;
        restAdapter23.setLogLevel(logLevel89);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(serializedObjectSupporter27);
        org.junit.Assert.assertNull(errorHandler28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "GET" + "'", str30, "GET");
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "http://example.com/" + "'", str32, "http://example.com/");
        org.junit.Assert.assertNotNull(server33);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Retrofit-" + "'", str38, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor39);
        org.junit.Assert.assertNotNull(request41);
        org.junit.Assert.assertNotNull(request42);
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor53);
        org.junit.Assert.assertNotNull(requestInterceptor54);
        org.junit.Assert.assertNotNull(requestInterceptor55);
        org.junit.Assert.assertNull(profiler56);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "GET" + "'", str58, "GET");
        org.junit.Assert.assertNotNull(gsonConverter59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "http://example.com/" + "'", str60, "http://example.com/");
        org.junit.Assert.assertNotNull(server61);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Retrofit-" + "'", str66, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor67);
        org.junit.Assert.assertNotNull(request69);
        org.junit.Assert.assertNotNull(request70);
        org.junit.Assert.assertNotNull(gsonConverter71);
        org.junit.Assert.assertNotNull(log77);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Retrofit-Idle" + "'", str82, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor83);
        org.junit.Assert.assertNull(profiler84);
        org.junit.Assert.assertNull(executor88);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(gsonConverter5);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        java.lang.String str26 = restAdapter23.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        retrofit.Profiler profiler28 = restAdapter23.getprofiler();
        java.util.concurrent.Executor executor29 = restAdapter23.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request31 = serializedObjectSupporter30.deserializeObjectRequest1();
        retrofit.client.Request request32 = serializedObjectSupporter30.deserializeObjectRequest8();
        retrofit.client.Request request33 = serializedObjectSupporter30.deserializeObjectRequest1();
        retrofit.client.Request request34 = restAdapter23.logAndReplaceRequest(request33);
        java.lang.String str35 = request34.getUrl();
        java.lang.String str36 = request34.getUrl();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertNull(executor29);
        org.junit.Assert.assertNotNull(request31);
        org.junit.Assert.assertNotNull(request32);
        org.junit.Assert.assertNotNull(request33);
        org.junit.Assert.assertNotNull(request34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "http://example.com/" + "'", str35, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "http://example.com/" + "'", str36, "http://example.com/");
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        java.util.concurrent.Executor executor5 = null;
        builder0.httpExecutor = executor5;
        java.util.concurrent.Executor executor7 = null;
        builder0.setcallbackExecutor(executor7);
        retrofit.Profiler profiler9 = null;
        builder0.profiler = profiler9;
        retrofit.client.Client.Provider provider11 = builder0.getclientProvider();
        org.junit.Assert.assertNull(provider11);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        java.util.concurrent.Executor executor5 = null;
        builder0.httpExecutor = executor5;
        java.util.concurrent.Executor executor7 = null;
        builder0.setcallbackExecutor(executor7);
        retrofit.client.Client.Provider provider9 = null;
        builder0.setclientProvider(provider9);
        retrofit.converter.Converter converter11 = builder0.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter16 = serializedObjectSupporter12.deserializeObjectConverter7();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter12.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter12.deserializeObjectConverter1();
        builder0.serializedObjectSupporter = serializedObjectSupporter12;
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "GET" + "'", str13, "GET");
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(gsonConverter16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNotNull(gsonConverter18);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.mime.TypedString typedString6 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "GET" + "'", str3, "GET");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(typedString6);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        retrofit.RestAdapter.Log log5 = builder0.log;
        retrofit.Profiler profiler6 = builder0.profiler;
        retrofit.RestAdapter.Builder builder8 = builder0.setServer("http://example.com/");
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request10 = serializedObjectSupporter9.deserializeObjectRequest1();
        retrofit.client.Request request11 = serializedObjectSupporter9.deserializeObjectRequest5();
        java.lang.String str12 = serializedObjectSupporter9.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter9.deserializeObjectConverter7();
        builder0.converter = gsonConverter13;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter3();
        java.lang.String str18 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.Server server19 = serializedObjectSupporter15.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter15.deserializeObjectConverter6();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter15.deserializeObjectConverter6();
        retrofit.client.Request request22 = serializedObjectSupporter15.deserializeObjectRequest7();
        builder0.serializedObjectSupporter = serializedObjectSupporter15;
        retrofit.client.Request request24 = serializedObjectSupporter15.deserializeObjectRequest1();
        java.lang.String str25 = request24.method;
        retrofit.mime.TypedOutput typedOutput26 = request24.getBody();
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNull(profiler6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "POST" + "'", str12, "POST");
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "GET" + "'", str16, "GET");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(server19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNotNull(request22);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "GET" + "'", str25, "GET");
        org.junit.Assert.assertNull(typedOutput26);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor27 = restAdapter23.requestInterceptor;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNotNull(requestInterceptor27);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        retrofit.RestAdapter.Log log5 = builder0.log;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request7 = serializedObjectSupporter6.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter6.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter6.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder10 = builder0.setConverter((retrofit.converter.Converter) gsonConverter9);
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter11.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter8();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter11.deserializeObjectConverter3();
        retrofit.RestAdapter.Builder builder16 = builder10.setConverter((retrofit.converter.Converter) gsonConverter15);
        java.lang.Class<?> wildcardClass17 = builder10.getClass();
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = builder4.serializedObjectSupporter;
        retrofit.client.Client.Provider provider6 = null;
        builder4.setclientProvider(provider6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor9 = null;
        builder8.sethttpExecutor(executor9);
        retrofit.RestAdapter.Log log11 = null;
        builder8.log = log11;
        java.util.concurrent.Executor executor13 = builder8.callbackExecutor;
        retrofit.RestAdapter.Log log14 = retrofit.RestAdapter.Log.NONE;
        builder8.log = log14;
        retrofit.RestAdapter.Builder builder16 = builder4.setLog(log14);
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter17.deserializeObjectConverter3();
        java.lang.String str20 = serializedObjectSupporter17.deserializeObjectString4();
        retrofit.client.Request request21 = serializedObjectSupporter17.deserializeObjectRequest6();
        retrofit.Server server22 = serializedObjectSupporter17.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder23 = builder16.setServer(server22);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer(server22);
        java.util.concurrent.Executor executor25 = builder0.gethttpExecutor();
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(serializedObjectSupporter5);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNotNull(log14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "GET" + "'", str18, "GET");
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "http://example.com/" + "'", str20, "http://example.com/");
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(server22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(executor25);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.converter.Converter converter3 = builder0.converter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("GET");
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor7 = null;
        builder6.sethttpExecutor(executor7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter3();
        builder6.converter = gsonConverter11;
        retrofit.client.Client.Provider provider13 = null;
        builder6.clientProvider = provider13;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter3();
        java.lang.String str18 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter15.deserializeObjectConverter6();
        builder6.converter = gsonConverter19;
        builder0.converter = gsonConverter19;
        retrofit.RestAdapter restAdapter22 = builder0.build();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter2();
        retrofit.client.Request request26 = serializedObjectSupporter23.deserializeObjectRequest8();
        java.lang.String str27 = serializedObjectSupporter23.deserializeObjectString3();
        retrofit.client.Request request28 = serializedObjectSupporter23.deserializeObjectRequest5();
        restAdapter22.serializedObjectSupporter = serializedObjectSupporter23;
        java.lang.String str30 = serializedObjectSupporter23.deserializeObjectString1();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.client.Request request32 = serializedObjectSupporter23.deserializeObjectRequest7();
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "GET" + "'", str10, "GET");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "GET" + "'", str16, "GET");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(request26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "GET" + "'", str27, "GET");
        org.junit.Assert.assertNotNull(request28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Retrofit-" + "'", str30, "Retrofit-");
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(request32);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = null;
        builder0.setcallbackExecutor(executor3);
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.FULL;
        builder0.logLevel = logLevel5;
        retrofit.client.Client.Provider provider7 = builder0.getclientProvider();
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = builder0.serializedObjectSupporter;
        java.util.concurrent.Executor executor9 = builder0.callbackExecutor;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = builder10.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = builder10.serializedObjectSupporter;
        java.util.concurrent.Executor executor13 = null;
        builder10.httpExecutor = executor13;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request16 = serializedObjectSupporter15.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter2();
        builder10.serializedObjectSupporter = serializedObjectSupporter15;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider20 = builder19.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder22 = builder19.setLogLevel(logLevel21);
        retrofit.converter.Converter converter23 = builder22.converter;
        java.util.concurrent.Executor executor24 = null;
        builder22.sethttpExecutor(executor24);
        retrofit.RestAdapter.Builder builder27 = builder22.setServer("GET");
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor29 = null;
        builder28.setcallbackExecutor(executor29);
        java.util.concurrent.Executor executor31 = null;
        builder28.setcallbackExecutor(executor31);
        builder28.ensureSaneDefaults();
        java.util.concurrent.Executor executor34 = builder28.callbackExecutor;
        builder27.setcallbackExecutor(executor34);
        builder10.httpExecutor = executor34;
        builder0.sethttpExecutor(executor34);
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider39 = builder38.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder41 = builder38.setLogLevel(logLevel40);
        retrofit.converter.Converter converter42 = builder41.converter;
        retrofit.Profiler profiler43 = builder41.profiler;
        java.util.concurrent.Executor executor44 = builder41.callbackExecutor;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor46 = null;
        builder45.setcallbackExecutor(executor46);
        java.util.concurrent.Executor executor48 = null;
        builder45.setcallbackExecutor(executor48);
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.FULL;
        builder45.logLevel = logLevel50;
        retrofit.client.Client.Provider provider52 = builder45.getclientProvider();
        retrofit.SerializedObjectSupporter serializedObjectSupporter53 = builder45.serializedObjectSupporter;
        java.util.concurrent.Executor executor54 = builder45.callbackExecutor;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = builder55.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter57 = builder55.serializedObjectSupporter;
        java.util.concurrent.Executor executor58 = null;
        builder55.httpExecutor = executor58;
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request61 = serializedObjectSupporter60.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter62 = serializedObjectSupporter60.deserializeObjectConverter2();
        builder55.serializedObjectSupporter = serializedObjectSupporter60;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider65 = builder64.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder67 = builder64.setLogLevel(logLevel66);
        retrofit.converter.Converter converter68 = builder67.converter;
        java.util.concurrent.Executor executor69 = null;
        builder67.sethttpExecutor(executor69);
        retrofit.RestAdapter.Builder builder72 = builder67.setServer("GET");
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor74 = null;
        builder73.setcallbackExecutor(executor74);
        java.util.concurrent.Executor executor76 = null;
        builder73.setcallbackExecutor(executor76);
        builder73.ensureSaneDefaults();
        java.util.concurrent.Executor executor79 = builder73.callbackExecutor;
        builder72.setcallbackExecutor(executor79);
        builder55.httpExecutor = executor79;
        builder45.sethttpExecutor(executor79);
        builder41.callbackExecutor = executor79;
        builder0.sethttpExecutor(executor79);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertNull(serializedObjectSupporter12);
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNull(provider20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNull(converter23);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(executor34);
        org.junit.Assert.assertNull(provider39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNull(converter42);
        org.junit.Assert.assertNull(profiler43);
        org.junit.Assert.assertNull(executor44);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider52);
        org.junit.Assert.assertNull(serializedObjectSupporter53);
        org.junit.Assert.assertNull(executor54);
        org.junit.Assert.assertNull(serializedObjectSupporter56);
        org.junit.Assert.assertNull(serializedObjectSupporter57);
        org.junit.Assert.assertNotNull(request61);
        org.junit.Assert.assertNotNull(gsonConverter62);
        org.junit.Assert.assertNull(provider65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNull(converter68);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(executor79);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter1();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Retrofit-" + "'", str5, "Retrofit-");
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = null;
        builder0.setcallbackExecutor(executor3);
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.FULL;
        builder0.logLevel = logLevel5;
        retrofit.client.Client.Provider provider7 = builder0.getclientProvider();
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = builder0.serializedObjectSupporter;
        java.util.concurrent.Executor executor9 = builder0.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor10 = builder0.requestInterceptor;
        retrofit.Server server11 = builder0.server;
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNull(requestInterceptor10);
        org.junit.Assert.assertNull(server11);
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        java.util.concurrent.Executor executor5 = builder0.callbackExecutor;
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        builder0.log = log6;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter8.deserializeObjectConverter3();
        java.lang.String str11 = serializedObjectSupporter8.deserializeObjectString4();
        retrofit.Server server12 = serializedObjectSupporter8.deserializeObjectServer1();
        retrofit.client.Client.Provider provider13 = null;
        java.util.concurrent.Executor executor14 = null;
        java.util.concurrent.Executor executor15 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor18 = serializedObjectSupporter16.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request20 = serializedObjectSupporter19.deserializeObjectRequest1();
        retrofit.client.Request request21 = serializedObjectSupporter19.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter19.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.ErrorHandler errorHandler24 = null;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor26 = null;
        builder25.sethttpExecutor(executor26);
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        builder25.log = log28;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter(server12, provider13, executor14, executor15, requestInterceptor18, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler24, log28, logLevel30);
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter31.getLogLevel();
        retrofit.converter.Converter converter33 = restAdapter31.getconverter();
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean35 = logLevel34.log();
        boolean boolean36 = logLevel34.log();
        restAdapter31.setLogLevel(logLevel34);
        retrofit.Server server38 = restAdapter31.getserver();
        retrofit.RestAdapter.Builder builder39 = builder0.setServer(server38);
        retrofit.client.Client client40 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder41 = builder39.setClient(client40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "GET" + "'", str9, "GET");
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "http://example.com/" + "'", str11, "http://example.com/");
        org.junit.Assert.assertNotNull(server12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Retrofit-" + "'", str17, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor18);
        org.junit.Assert.assertNotNull(request20);
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(server38);
        org.junit.Assert.assertNotNull(builder39);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter8();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest3();
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(typedOutput7);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.converter.Converter converter3 = builder0.converter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("GET");
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor7 = null;
        builder6.sethttpExecutor(executor7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter3();
        builder6.converter = gsonConverter11;
        retrofit.client.Client.Provider provider13 = null;
        builder6.clientProvider = provider13;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter3();
        java.lang.String str18 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter15.deserializeObjectConverter6();
        builder6.converter = gsonConverter19;
        builder0.converter = gsonConverter19;
        retrofit.RestAdapter restAdapter22 = builder0.build();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter2();
        retrofit.client.Request request26 = serializedObjectSupporter23.deserializeObjectRequest8();
        java.lang.String str27 = serializedObjectSupporter23.deserializeObjectString3();
        retrofit.client.Request request28 = serializedObjectSupporter23.deserializeObjectRequest5();
        restAdapter22.serializedObjectSupporter = serializedObjectSupporter23;
        java.lang.String str30 = serializedObjectSupporter23.deserializeObjectString1();
        retrofit.client.Request request31 = serializedObjectSupporter23.deserializeObjectRequest3();
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "GET" + "'", str10, "GET");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "GET" + "'", str16, "GET");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(request26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "GET" + "'", str27, "GET");
        org.junit.Assert.assertNotNull(request28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Retrofit-" + "'", str30, "Retrofit-");
        org.junit.Assert.assertNotNull(request31);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        java.lang.String str27 = restAdapter23.getTHREAD_PREFIX();
        java.util.concurrent.Executor executor28 = restAdapter23.callbackExecutor;
        java.lang.String str29 = restAdapter23.getTHREAD_PREFIX();
        java.lang.String str30 = restAdapter23.getTHREAD_PREFIX();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Retrofit-" + "'", str27, "Retrofit-");
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Retrofit-" + "'", str29, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Retrofit-" + "'", str30, "Retrofit-");
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.ErrorHandler errorHandler3 = builder0.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        java.lang.String str5 = serializedObjectSupporter4.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter4.deserializeObjectConverter3();
        java.lang.String str7 = serializedObjectSupporter4.deserializeObjectString4();
        retrofit.Server server8 = serializedObjectSupporter4.deserializeObjectServer1();
        retrofit.client.Client.Provider provider9 = null;
        java.util.concurrent.Executor executor10 = null;
        java.util.concurrent.Executor executor11 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor14 = serializedObjectSupporter12.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request16 = serializedObjectSupporter15.deserializeObjectRequest1();
        retrofit.client.Request request17 = serializedObjectSupporter15.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter15.deserializeObjectConverter5();
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor22 = null;
        builder21.sethttpExecutor(executor22);
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        builder21.log = log24;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter(server8, provider9, executor10, executor11, requestInterceptor14, (retrofit.converter.Converter) gsonConverter18, profiler19, errorHandler20, log24, logLevel26);
        java.util.concurrent.Executor executor28 = restAdapter27.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor29 = restAdapter27.requestInterceptor;
        retrofit.RestAdapter.Builder builder30 = builder0.setRequestInterceptor(requestInterceptor29);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor32 = null;
        builder31.setcallbackExecutor(executor32);
        java.util.concurrent.Executor executor34 = null;
        builder31.setcallbackExecutor(executor34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.FULL;
        builder31.logLevel = logLevel36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor39 = null;
        builder38.setcallbackExecutor(executor39);
        java.util.concurrent.Executor executor41 = null;
        builder38.setcallbackExecutor(executor41);
        builder38.ensureSaneDefaults();
        java.util.concurrent.Executor executor44 = builder38.callbackExecutor;
        builder31.sethttpExecutor(executor44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = builder46.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = builder46.serializedObjectSupporter;
        retrofit.client.Client.Provider provider49 = null;
        builder46.clientProvider = provider49;
        java.util.concurrent.Executor executor51 = null;
        builder46.callbackExecutor = executor51;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor54 = null;
        builder53.setcallbackExecutor(executor54);
        java.util.concurrent.Executor executor56 = null;
        builder53.setcallbackExecutor(executor56);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.FULL;
        builder53.logLevel = logLevel58;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor61 = null;
        builder60.setcallbackExecutor(executor61);
        java.util.concurrent.Executor executor63 = null;
        builder60.setcallbackExecutor(executor63);
        builder60.ensureSaneDefaults();
        java.util.concurrent.Executor executor66 = builder60.callbackExecutor;
        builder53.sethttpExecutor(executor66);
        builder46.httpExecutor = executor66;
        retrofit.RestAdapter.Builder builder69 = builder30.setExecutors(executor44, executor66);
        retrofit.RestAdapter.Builder builder71 = builder30.setServer("Retrofit-");
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "GET" + "'", str5, "GET");
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-" + "'", str13, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor14);
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNotNull(requestInterceptor29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(executor44);
        org.junit.Assert.assertNull(serializedObjectSupporter47);
        org.junit.Assert.assertNull(serializedObjectSupporter48);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(executor66);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder71);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = builder2.serializedObjectSupporter;
        retrofit.Profiler profiler4 = builder2.profiler;
        retrofit.RestAdapter.LogLevel logLevel5 = builder2.logLevel;
        builder0.logLevel = logLevel5;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request8 = serializedObjectSupporter7.deserializeObjectRequest1();
        retrofit.client.Request request9 = serializedObjectSupporter7.deserializeObjectRequest8();
        retrofit.client.Request request10 = serializedObjectSupporter7.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter7.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder12 = builder0.setConverter((retrofit.converter.Converter) gsonConverter11);
        retrofit.converter.Converter converter13 = builder0.converter;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(serializedObjectSupporter3);
        org.junit.Assert.assertNull(profiler4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(request9);
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(converter13);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter3();
        builder0.converter = gsonConverter5;
        retrofit.client.Client.Provider provider7 = null;
        builder0.clientProvider = provider7;
        retrofit.client.Client.Provider provider9 = null;
        builder0.setclientProvider(provider9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = builder11.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = builder11.serializedObjectSupporter;
        java.util.concurrent.Executor executor14 = null;
        builder11.httpExecutor = executor14;
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request17 = serializedObjectSupporter16.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter16.deserializeObjectConverter2();
        builder11.serializedObjectSupporter = serializedObjectSupporter16;
        retrofit.client.Request request20 = serializedObjectSupporter16.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter16.deserializeObjectConverter5();
        retrofit.Server server22 = serializedObjectSupporter16.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder23 = builder0.setServer(server22);
        retrofit.client.Client.Provider provider24 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        builder25.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler27 = builder25.errorHandler;
        java.util.concurrent.Executor executor28 = builder25.getcallbackExecutor();
        builder0.sethttpExecutor(executor28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor31 = null;
        builder30.sethttpExecutor(executor31);
        retrofit.RequestInterceptor requestInterceptor33 = null;
        builder30.requestInterceptor = requestInterceptor33;
        retrofit.converter.Converter converter35 = builder30.converter;
        java.util.concurrent.Executor executor36 = null;
        builder30.httpExecutor = executor36;
        java.util.concurrent.Executor executor38 = null;
        builder30.httpExecutor = executor38;
        retrofit.Profiler profiler40 = null;
        builder30.profiler = profiler40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider43 = builder42.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder45 = builder42.setLogLevel(logLevel44);
        retrofit.converter.Converter converter46 = builder45.converter;
        builder45.ensureSaneDefaults();
        retrofit.client.Client.Provider provider48 = builder45.clientProvider;
        retrofit.RestAdapter.Builder builder49 = builder30.setClient(provider48);
        builder0.clientProvider = provider48;
        java.util.concurrent.Executor executor51 = builder0.callbackExecutor;
        builder0.ensureSaneDefaults();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNull(serializedObjectSupporter12);
        org.junit.Assert.assertNull(serializedObjectSupporter13);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(request20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNotNull(server22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNotNull(errorHandler27);
        org.junit.Assert.assertNotNull(executor28);
        org.junit.Assert.assertNull(converter35);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNull(converter46);
        org.junit.Assert.assertNotNull(provider48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNull(executor51);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter1();
        retrofit.RequestInterceptor requestInterceptor5 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest7();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(requestInterceptor5);
        org.junit.Assert.assertNotNull(request6);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        java.lang.String str27 = restAdapter23.getTHREAD_PREFIX();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = restAdapter23.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter23.logLevel;
        java.lang.String str30 = restAdapter23.getTHREAD_PREFIX();
        retrofit.Profiler profiler31 = restAdapter23.getprofiler();
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter23.logLevel;
        retrofit.Server server33 = restAdapter23.server;
        retrofit.RequestInterceptor requestInterceptor34 = restAdapter23.requestInterceptor;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Retrofit-" + "'", str27, "Retrofit-");
        org.junit.Assert.assertNull(serializedObjectSupporter28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Retrofit-" + "'", str30, "Retrofit-");
        org.junit.Assert.assertNull(profiler31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(server33);
        org.junit.Assert.assertNotNull(requestInterceptor34);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        java.lang.String str26 = restAdapter23.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        retrofit.client.Client.Provider provider28 = restAdapter23.getclientProvider();
        java.lang.String str29 = restAdapter23.getIDLE_THREAD_NAME();
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter23.logLevel;
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter23.logLevel;
        java.lang.String str32 = restAdapter23.getIDLE_THREAD_NAME();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(provider28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Retrofit-Idle" + "'", str29, "Retrofit-Idle");
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Retrofit-Idle" + "'", str32, "Retrofit-Idle");
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.converter.Converter converter3 = builder0.converter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("GET");
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor7 = null;
        builder6.sethttpExecutor(executor7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter3();
        builder6.converter = gsonConverter11;
        retrofit.client.Client.Provider provider13 = null;
        builder6.clientProvider = provider13;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter3();
        java.lang.String str18 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter15.deserializeObjectConverter6();
        builder6.converter = gsonConverter19;
        builder0.converter = gsonConverter19;
        retrofit.RestAdapter restAdapter22 = builder0.build();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter2();
        retrofit.client.Request request26 = serializedObjectSupporter23.deserializeObjectRequest8();
        retrofit.RequestInterceptor requestInterceptor27 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        java.lang.String str28 = serializedObjectSupporter23.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter23.deserializeObjectConverter3();
        restAdapter22.serializedObjectSupporter = serializedObjectSupporter23;
        java.util.concurrent.Executor executor31 = restAdapter22.callbackExecutor;
        java.util.concurrent.Executor executor32 = restAdapter22.httpExecutor;
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "GET" + "'", str10, "GET");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "GET" + "'", str16, "GET");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(request26);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNotNull(executor32);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest5();
        java.lang.String str7 = serializedObjectSupporter0.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter0.deserializeObjectConverter1();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter0.deserializeObjectConverter6();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "POST" + "'", str7, "POST");
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertNotNull(gsonConverter9);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        java.util.concurrent.Executor executor5 = null;
        builder0.httpExecutor = executor5;
        java.util.concurrent.Executor executor7 = null;
        builder0.setcallbackExecutor(executor7);
        retrofit.client.Client.Provider provider9 = null;
        builder0.setclientProvider(provider9);
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest8();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter11.deserializeObjectConverter2();
        retrofit.ErrorHandler errorHandler14 = serializedObjectSupporter11.deserializeObjectErrorHandler1();
        builder0.errorHandler = errorHandler14;
        retrofit.Profiler profiler16 = null;
        builder0.profiler = profiler16;
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = builder0.serializedObjectSupporter;
        retrofit.client.Client.Provider provider19 = builder0.getclientProvider();
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertNotNull(errorHandler14);
        org.junit.Assert.assertNull(serializedObjectSupporter18);
        org.junit.Assert.assertNull(provider19);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = retrofit.RestAdapter.Log.NONE;
        builder0.log = log3;
        log3.log("");
        log3.log("POST");
        log3.log("GET");
        log3.log("http://example.com/");
        org.junit.Assert.assertNotNull(log3);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        java.lang.String str27 = restAdapter23.getTHREAD_PREFIX();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = restAdapter23.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter23.logLevel;
        java.lang.String str30 = restAdapter23.getTHREAD_PREFIX();
        retrofit.client.Client.Provider provider31 = restAdapter23.clientProvider;
        java.lang.Class<?> wildcardClass32 = restAdapter23.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Retrofit-" + "'", str27, "Retrofit-");
        org.junit.Assert.assertNull(serializedObjectSupporter28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Retrofit-" + "'", str30, "Retrofit-");
        org.junit.Assert.assertNull(provider31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter4();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter6 = serializedObjectSupporter0.deserializeObjectLogLevel1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "GET" + "'", str3, "GET");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(gsonConverter5);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        retrofit.converter.Converter converter5 = builder0.converter;
        java.util.concurrent.Executor executor6 = null;
        builder0.httpExecutor = executor6;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request9 = serializedObjectSupporter8.deserializeObjectRequest1();
        retrofit.Server server10 = serializedObjectSupporter8.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter8.deserializeObjectConverter3();
        builder0.converter = gsonConverter11;
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter13.deserializeObjectConverter3();
        java.lang.String str16 = serializedObjectSupporter13.deserializeObjectString4();
        retrofit.Server server17 = serializedObjectSupporter13.deserializeObjectServer1();
        retrofit.client.Client.Provider provider18 = null;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = new retrofit.SerializedObjectSupporter();
        java.lang.String str22 = serializedObjectSupporter21.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor23 = serializedObjectSupporter21.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request25 = serializedObjectSupporter24.deserializeObjectRequest1();
        retrofit.client.Request request26 = serializedObjectSupporter24.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter24.deserializeObjectConverter5();
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor31 = null;
        builder30.sethttpExecutor(executor31);
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        builder30.log = log33;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter(server17, provider18, executor19, executor20, requestInterceptor23, (retrofit.converter.Converter) gsonConverter27, profiler28, errorHandler29, log33, logLevel35);
        java.util.concurrent.Executor executor37 = restAdapter36.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor38 = restAdapter36.requestInterceptor;
        builder0.requestInterceptor = requestInterceptor38;
        retrofit.Server server40 = builder0.server;
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(request9);
        org.junit.Assert.assertNotNull(server10);
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "GET" + "'", str14, "GET");
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(server17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Retrofit-" + "'", str22, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor23);
        org.junit.Assert.assertNotNull(request25);
        org.junit.Assert.assertNotNull(request26);
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertNotNull(requestInterceptor38);
        org.junit.Assert.assertNull(server40);
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        java.util.concurrent.Executor executor3 = null;
        builder0.httpExecutor = executor3;
        retrofit.client.Client.Provider provider5 = null;
        builder0.setclientProvider(provider5);
        java.util.concurrent.Executor executor7 = builder0.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = builder0.serializedObjectSupporter;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        java.util.concurrent.Executor executor5 = null;
        builder0.httpExecutor = executor5;
        java.util.concurrent.Executor executor7 = null;
        builder0.setcallbackExecutor(executor7);
        java.util.concurrent.Executor executor9 = builder0.callbackExecutor;
        retrofit.Profiler profiler10 = builder0.profiler;
        retrofit.client.Client.Provider provider11 = builder0.clientProvider;
        retrofit.Server server12 = builder0.server;
        builder0.ensureSaneDefaults();
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNull(profiler10);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNull(server12);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.RequestInterceptor requestInterceptor3 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter6();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(requestInterceptor3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-Idle" + "'", str4, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(gsonConverter6);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.converter.Converter converter3 = builder0.converter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("GET");
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor7 = null;
        builder6.sethttpExecutor(executor7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter3();
        builder6.converter = gsonConverter11;
        retrofit.client.Client.Provider provider13 = null;
        builder6.clientProvider = provider13;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter3();
        java.lang.String str18 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter15.deserializeObjectConverter6();
        builder6.converter = gsonConverter19;
        builder0.converter = gsonConverter19;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor23 = null;
        builder22.sethttpExecutor(executor23);
        retrofit.RestAdapter.Log log25 = null;
        builder22.log = log25;
        java.util.concurrent.Executor executor27 = builder22.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = builder22.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = builder22.serializedObjectSupporter;
        builder22.ensureSaneDefaults();
        java.util.concurrent.Executor executor31 = builder22.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        java.lang.String str33 = serializedObjectSupporter32.deserializeObjectString4();
        retrofit.client.Request request34 = serializedObjectSupporter32.deserializeObjectRequest2();
        retrofit.ErrorHandler errorHandler35 = serializedObjectSupporter32.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder36 = builder22.setErrorHandler(errorHandler35);
        builder0.errorHandler = errorHandler35;
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "GET" + "'", str10, "GET");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "GET" + "'", str16, "GET");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(serializedObjectSupporter28);
        org.junit.Assert.assertNull(serializedObjectSupporter29);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNotNull(request34);
        org.junit.Assert.assertNotNull(errorHandler35);
        org.junit.Assert.assertNotNull(builder36);
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest5();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter7();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.client.Request request8 = serializedObjectSupporter0.deserializeObjectRequest4();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "POST" + "'", str3, "POST");
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(request8);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        java.util.concurrent.Executor executor3 = null;
        builder0.httpExecutor = executor3;
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request6 = serializedObjectSupporter5.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter5.deserializeObjectConverter2();
        builder0.serializedObjectSupporter = serializedObjectSupporter5;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider10 = builder9.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder12 = builder9.setLogLevel(logLevel11);
        retrofit.converter.Converter converter13 = builder12.converter;
        java.util.concurrent.Executor executor14 = null;
        builder12.sethttpExecutor(executor14);
        retrofit.RestAdapter.Builder builder17 = builder12.setServer("GET");
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor19 = null;
        builder18.setcallbackExecutor(executor19);
        java.util.concurrent.Executor executor21 = null;
        builder18.setcallbackExecutor(executor21);
        builder18.ensureSaneDefaults();
        java.util.concurrent.Executor executor24 = builder18.callbackExecutor;
        builder17.setcallbackExecutor(executor24);
        builder0.httpExecutor = executor24;
        retrofit.client.Client.Provider provider27 = builder0.getclientProvider();
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(executor24);
        org.junit.Assert.assertNull(provider27);
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter3();
        builder0.converter = gsonConverter5;
        retrofit.client.Client.Provider provider7 = null;
        builder0.clientProvider = provider7;
        retrofit.client.Client.Provider provider9 = null;
        builder0.setclientProvider(provider9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = builder11.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = builder11.serializedObjectSupporter;
        java.util.concurrent.Executor executor14 = null;
        builder11.httpExecutor = executor14;
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request17 = serializedObjectSupporter16.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter16.deserializeObjectConverter2();
        builder11.serializedObjectSupporter = serializedObjectSupporter16;
        retrofit.client.Request request20 = serializedObjectSupporter16.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter16.deserializeObjectConverter5();
        retrofit.Server server22 = serializedObjectSupporter16.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder23 = builder0.setServer(server22);
        retrofit.client.Client.Provider provider24 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor26 = null;
        builder25.setcallbackExecutor(executor26);
        java.util.concurrent.Executor executor28 = null;
        builder25.setcallbackExecutor(executor28);
        retrofit.client.Client.Provider provider30 = null;
        builder25.clientProvider = provider30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = builder32.serializedObjectSupporter;
        retrofit.Profiler profiler34 = builder32.profiler;
        retrofit.RestAdapter.LogLevel logLevel35 = builder32.logLevel;
        builder25.logLevel = logLevel35;
        retrofit.RestAdapter.Log log37 = null;
        builder25.log = log37;
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        java.lang.String str40 = serializedObjectSupporter39.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter39.deserializeObjectConverter3();
        java.lang.String str42 = serializedObjectSupporter39.deserializeObjectString4();
        retrofit.Server server43 = serializedObjectSupporter39.deserializeObjectServer1();
        retrofit.client.Client.Provider provider44 = null;
        java.util.concurrent.Executor executor45 = null;
        java.util.concurrent.Executor executor46 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        java.lang.String str48 = serializedObjectSupporter47.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor49 = serializedObjectSupporter47.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter50 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request51 = serializedObjectSupporter50.deserializeObjectRequest1();
        retrofit.client.Request request52 = serializedObjectSupporter50.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter53 = serializedObjectSupporter50.deserializeObjectConverter5();
        retrofit.Profiler profiler54 = null;
        retrofit.ErrorHandler errorHandler55 = null;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor57 = null;
        builder56.sethttpExecutor(executor57);
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        builder56.log = log59;
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter62 = new retrofit.RestAdapter(server43, provider44, executor45, executor46, requestInterceptor49, (retrofit.converter.Converter) gsonConverter53, profiler54, errorHandler55, log59, logLevel61);
        java.util.concurrent.Executor executor63 = restAdapter62.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor64 = restAdapter62.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor65 = restAdapter62.requestInterceptor;
        builder25.requestInterceptor = requestInterceptor65;
        builder0.requestInterceptor = requestInterceptor65;
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNull(serializedObjectSupporter12);
        org.junit.Assert.assertNull(serializedObjectSupporter13);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(request20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNotNull(server22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNull(serializedObjectSupporter33);
        org.junit.Assert.assertNull(profiler34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "GET" + "'", str40, "GET");
        org.junit.Assert.assertNotNull(gsonConverter41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "http://example.com/" + "'", str42, "http://example.com/");
        org.junit.Assert.assertNotNull(server43);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Retrofit-" + "'", str48, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNotNull(request51);
        org.junit.Assert.assertNotNull(request52);
        org.junit.Assert.assertNotNull(gsonConverter53);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor63);
        org.junit.Assert.assertNotNull(requestInterceptor64);
        org.junit.Assert.assertNotNull(requestInterceptor65);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        retrofit.RestAdapter.Log log5 = builder0.log;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider7 = builder6.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder9 = builder6.setLogLevel(logLevel8);
        retrofit.converter.Converter converter10 = builder9.converter;
        retrofit.Profiler profiler11 = builder9.profiler;
        java.util.concurrent.Executor executor12 = builder9.callbackExecutor;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor14 = null;
        builder13.setcallbackExecutor(executor14);
        java.util.concurrent.Executor executor16 = null;
        builder13.setcallbackExecutor(executor16);
        retrofit.client.Client.Provider provider18 = null;
        builder13.clientProvider = provider18;
        retrofit.Profiler profiler20 = null;
        builder13.profiler = profiler20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider23 = builder22.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder25 = builder22.setLogLevel(logLevel24);
        retrofit.converter.Converter converter26 = builder25.converter;
        builder25.ensureSaneDefaults();
        retrofit.client.Client.Provider provider28 = builder25.clientProvider;
        retrofit.RestAdapter.Builder builder29 = builder13.setClient(provider28);
        builder9.setclientProvider(provider28);
        builder0.clientProvider = provider28;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor33 = null;
        builder32.sethttpExecutor(executor33);
        retrofit.RestAdapter.Log log35 = null;
        builder32.log = log35;
        retrofit.RestAdapter.Log log37 = builder32.log;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor39 = null;
        builder38.sethttpExecutor(executor39);
        retrofit.RequestInterceptor requestInterceptor41 = null;
        builder38.requestInterceptor = requestInterceptor41;
        java.util.concurrent.Executor executor43 = null;
        builder38.httpExecutor = executor43;
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = new retrofit.SerializedObjectSupporter();
        java.lang.String str46 = serializedObjectSupporter45.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter47 = serializedObjectSupporter45.deserializeObjectConverter3();
        java.lang.String str48 = serializedObjectSupporter45.deserializeObjectString4();
        retrofit.client.Request request49 = serializedObjectSupporter45.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler50 = serializedObjectSupporter45.deserializeObjectErrorHandler1();
        builder38.errorHandler = errorHandler50;
        retrofit.RestAdapter.Builder builder52 = builder32.setErrorHandler(errorHandler50);
        retrofit.RestAdapter.Builder builder53 = builder0.setErrorHandler(errorHandler50);
        retrofit.RestAdapter.Builder builder55 = builder0.setServer("POST");
        retrofit.RestAdapter.Log log56 = builder55.log;
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(converter10);
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(executor12);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(converter26);
        org.junit.Assert.assertNotNull(provider28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNull(log37);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "GET" + "'", str46, "GET");
        org.junit.Assert.assertNotNull(gsonConverter47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "http://example.com/" + "'", str48, "http://example.com/");
        org.junit.Assert.assertNotNull(request49);
        org.junit.Assert.assertNotNull(errorHandler50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNull(log56);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.converter.Converter converter4 = builder3.converter;
        java.util.concurrent.Executor executor5 = builder3.callbackExecutor;
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNull(executor5);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString5();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest2();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString2();
        retrofit.client.Request request7 = serializedObjectSupporter0.deserializeObjectRequest3();
        retrofit.client.Request request8 = serializedObjectSupporter0.deserializeObjectRequest3();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "POST" + "'", str4, "POST");
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Retrofit-Idle" + "'", str6, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertNotNull(request8);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        retrofit.Profiler profiler27 = restAdapter23.getprofiler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        java.lang.String str29 = serializedObjectSupporter28.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter28.deserializeObjectConverter3();
        java.lang.String str31 = serializedObjectSupporter28.deserializeObjectString4();
        retrofit.Server server32 = serializedObjectSupporter28.deserializeObjectServer1();
        retrofit.client.Client.Provider provider33 = null;
        java.util.concurrent.Executor executor34 = null;
        java.util.concurrent.Executor executor35 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        java.lang.String str37 = serializedObjectSupporter36.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor38 = serializedObjectSupporter36.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request40 = serializedObjectSupporter39.deserializeObjectRequest1();
        retrofit.client.Request request41 = serializedObjectSupporter39.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter42 = serializedObjectSupporter39.deserializeObjectConverter5();
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor46 = null;
        builder45.sethttpExecutor(executor46);
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        builder45.log = log48;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter(server32, provider33, executor34, executor35, requestInterceptor38, (retrofit.converter.Converter) gsonConverter42, profiler43, errorHandler44, log48, logLevel50);
        retrofit.RestAdapter.LogLevel logLevel52 = restAdapter51.getLogLevel();
        java.lang.String str53 = restAdapter51.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor54 = restAdapter51.httpExecutor;
        retrofit.Profiler profiler55 = restAdapter51.getprofiler();
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor57 = null;
        builder56.setcallbackExecutor(executor57);
        java.util.concurrent.Executor executor59 = builder56.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel60 = builder56.logLevel;
        boolean boolean61 = logLevel60.log();
        restAdapter51.logLevel = logLevel60;
        restAdapter23.logLevel = logLevel60;
        java.util.concurrent.Executor executor64 = restAdapter23.getcallbackExecutor();
        retrofit.client.Response response66 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response68 = restAdapter23.logAndReplaceResponse("http://example.com/", response66, 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNull(profiler27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "GET" + "'", str29, "GET");
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "http://example.com/" + "'", str31, "http://example.com/");
        org.junit.Assert.assertNotNull(server32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-" + "'", str37, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor38);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(request41);
        org.junit.Assert.assertNotNull(gsonConverter42);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Retrofit-Idle" + "'", str53, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor54);
        org.junit.Assert.assertNull(profiler55);
        org.junit.Assert.assertNull(executor59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(executor64);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter3();
        builder0.converter = gsonConverter5;
        retrofit.client.Client.Provider provider7 = null;
        builder0.clientProvider = provider7;
        retrofit.client.Client.Provider provider9 = null;
        builder0.setclientProvider(provider9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = builder11.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = builder11.serializedObjectSupporter;
        java.util.concurrent.Executor executor14 = null;
        builder11.httpExecutor = executor14;
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request17 = serializedObjectSupporter16.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter16.deserializeObjectConverter2();
        builder11.serializedObjectSupporter = serializedObjectSupporter16;
        retrofit.client.Request request20 = serializedObjectSupporter16.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter16.deserializeObjectConverter5();
        retrofit.Server server22 = serializedObjectSupporter16.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder23 = builder0.setServer(server22);
        retrofit.client.Client.Provider provider24 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        builder25.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler27 = builder25.errorHandler;
        java.util.concurrent.Executor executor28 = builder25.getcallbackExecutor();
        builder0.sethttpExecutor(executor28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor31 = null;
        builder30.sethttpExecutor(executor31);
        retrofit.RequestInterceptor requestInterceptor33 = null;
        builder30.requestInterceptor = requestInterceptor33;
        retrofit.converter.Converter converter35 = builder30.converter;
        java.util.concurrent.Executor executor36 = null;
        builder30.httpExecutor = executor36;
        java.util.concurrent.Executor executor38 = null;
        builder30.httpExecutor = executor38;
        retrofit.Profiler profiler40 = null;
        builder30.profiler = profiler40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider43 = builder42.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder45 = builder42.setLogLevel(logLevel44);
        retrofit.converter.Converter converter46 = builder45.converter;
        builder45.ensureSaneDefaults();
        retrofit.client.Client.Provider provider48 = builder45.clientProvider;
        retrofit.RestAdapter.Builder builder49 = builder30.setClient(provider48);
        builder0.clientProvider = provider48;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = builder51.serializedObjectSupporter;
        retrofit.client.Client.Provider provider53 = null;
        builder51.setclientProvider(provider53);
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor56 = null;
        builder55.sethttpExecutor(executor56);
        retrofit.RestAdapter.Log log58 = null;
        builder55.log = log58;
        java.util.concurrent.Executor executor60 = builder55.callbackExecutor;
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        builder55.log = log61;
        retrofit.RestAdapter.Builder builder63 = builder51.setLog(log61);
        builder0.log = log61;
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNull(serializedObjectSupporter12);
        org.junit.Assert.assertNull(serializedObjectSupporter13);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(request20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNotNull(server22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNotNull(errorHandler27);
        org.junit.Assert.assertNotNull(executor28);
        org.junit.Assert.assertNull(converter35);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNull(converter46);
        org.junit.Assert.assertNotNull(provider48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNull(serializedObjectSupporter52);
        org.junit.Assert.assertNull(executor60);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder63);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter23.logLevel = logLevel25;
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = restAdapter23.serializedObjectSupporter;
        retrofit.RestAdapter.Log log28 = restAdapter23.log;
        retrofit.RequestInterceptor requestInterceptor29 = restAdapter23.requestInterceptor;
        retrofit.converter.Converter converter30 = restAdapter23.converter;
        retrofit.client.Client.Provider provider31 = restAdapter23.clientProvider;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(serializedObjectSupporter27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(requestInterceptor29);
        org.junit.Assert.assertNotNull(converter30);
        org.junit.Assert.assertNull(provider31);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.client.Request request7 = serializedObjectSupporter0.deserializeObjectRequest2();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter0.deserializeObjectConverter3();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertNotNull(gsonConverter8);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        java.lang.String str25 = restAdapter23.getIDLE_THREAD_NAME();
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider27 = builder26.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder29 = builder26.setLogLevel(logLevel28);
        retrofit.RestAdapter.Log log30 = builder29.log;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        builder29.logLevel = logLevel31;
        retrofit.ErrorHandler errorHandler33 = builder29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = new retrofit.SerializedObjectSupporter();
        java.lang.String str35 = serializedObjectSupporter34.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter34.deserializeObjectConverter3();
        java.lang.String str37 = serializedObjectSupporter34.deserializeObjectString4();
        retrofit.client.Request request38 = serializedObjectSupporter34.deserializeObjectRequest6();
        retrofit.Server server39 = serializedObjectSupporter34.deserializeObjectServer1();
        builder29.server = server39;
        java.util.concurrent.Executor executor41 = builder29.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel42 = builder29.logLevel;
        restAdapter23.logLevel = logLevel42;
        java.util.concurrent.Executor executor44 = restAdapter23.getcallbackExecutor();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Retrofit-Idle" + "'", str25, "Retrofit-Idle");
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(errorHandler33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "GET" + "'", str35, "GET");
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "http://example.com/" + "'", str37, "http://example.com/");
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNotNull(server39);
        org.junit.Assert.assertNull(executor41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor44);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest8();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "GET" + "'", str3, "GET");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(request5);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        retrofit.Profiler profiler27 = restAdapter23.getprofiler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        java.lang.String str29 = serializedObjectSupporter28.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter28.deserializeObjectConverter3();
        java.lang.String str31 = serializedObjectSupporter28.deserializeObjectString4();
        retrofit.Server server32 = serializedObjectSupporter28.deserializeObjectServer1();
        retrofit.client.Client.Provider provider33 = null;
        java.util.concurrent.Executor executor34 = null;
        java.util.concurrent.Executor executor35 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        java.lang.String str37 = serializedObjectSupporter36.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor38 = serializedObjectSupporter36.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request40 = serializedObjectSupporter39.deserializeObjectRequest1();
        retrofit.client.Request request41 = serializedObjectSupporter39.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter42 = serializedObjectSupporter39.deserializeObjectConverter5();
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor46 = null;
        builder45.sethttpExecutor(executor46);
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        builder45.log = log48;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter(server32, provider33, executor34, executor35, requestInterceptor38, (retrofit.converter.Converter) gsonConverter42, profiler43, errorHandler44, log48, logLevel50);
        retrofit.RestAdapter.LogLevel logLevel52 = restAdapter51.getLogLevel();
        java.lang.String str53 = restAdapter51.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor54 = restAdapter51.httpExecutor;
        retrofit.Profiler profiler55 = restAdapter51.getprofiler();
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor57 = null;
        builder56.setcallbackExecutor(executor57);
        java.util.concurrent.Executor executor59 = builder56.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel60 = builder56.logLevel;
        boolean boolean61 = logLevel60.log();
        restAdapter51.logLevel = logLevel60;
        restAdapter23.logLevel = logLevel60;
        retrofit.Profiler profiler64 = restAdapter23.profiler;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNull(profiler27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "GET" + "'", str29, "GET");
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "http://example.com/" + "'", str31, "http://example.com/");
        org.junit.Assert.assertNotNull(server32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-" + "'", str37, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor38);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(request41);
        org.junit.Assert.assertNotNull(gsonConverter42);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Retrofit-Idle" + "'", str53, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor54);
        org.junit.Assert.assertNull(profiler55);
        org.junit.Assert.assertNull(executor59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(profiler64);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.RequestInterceptor requestInterceptor4 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.mime.TypedString typedString7 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(requestInterceptor4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(typedString7);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        java.lang.String str26 = restAdapter23.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        retrofit.client.Client.Provider provider28 = restAdapter23.getclientProvider();
        java.lang.String str29 = restAdapter23.getIDLE_THREAD_NAME();
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter23.logLevel;
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter23.logLevel;
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter23.logLevel;
        retrofit.client.Response response34 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response36 = restAdapter23.logAndReplaceResponse("Retrofit-", response34, (long) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(provider28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Retrofit-Idle" + "'", str29, "Retrofit-Idle");
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        java.lang.String str27 = restAdapter23.getTHREAD_PREFIX();
        retrofit.converter.Converter converter28 = restAdapter23.getconverter();
        retrofit.RequestInterceptor requestInterceptor29 = restAdapter23.requestInterceptor;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Retrofit-" + "'", str27, "Retrofit-");
        org.junit.Assert.assertNotNull(converter28);
        org.junit.Assert.assertNotNull(requestInterceptor29);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.mime.TypedString typedString6 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter7 = serializedObjectSupporter0.deserializeObjectLogLevel1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(typedString6);
    }
}

