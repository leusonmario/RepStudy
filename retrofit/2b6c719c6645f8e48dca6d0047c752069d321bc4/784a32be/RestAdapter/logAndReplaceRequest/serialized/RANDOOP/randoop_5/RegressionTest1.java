import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0501");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.converter.Converter converter26 = restAdapter23.converter;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(converter26);
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0502");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.getconverter();
        java.util.concurrent.Executor executor26 = restAdapter23.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor27 = restAdapter23.getrequestInterceptor();
        java.lang.Throwable throwable28 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter23.logException(throwable28, "http://example.com/");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNotNull(requestInterceptor27);
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0503");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        java.util.concurrent.Executor executor5 = builder0.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = builder8.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = builder8.serializedObjectSupporter;
        java.util.concurrent.Executor executor11 = null;
        builder8.httpExecutor = executor11;
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request14 = serializedObjectSupporter13.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter13.deserializeObjectConverter2();
        builder8.serializedObjectSupporter = serializedObjectSupporter13;
        retrofit.client.Request request17 = serializedObjectSupporter13.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter13.deserializeObjectConverter5();
        retrofit.Server server19 = serializedObjectSupporter13.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter13.deserializeObjectConverter2();
        builder0.converter = gsonConverter20;
        java.util.concurrent.Executor executor22 = builder0.getcallbackExecutor();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder24 = builder0.setServer("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be blank.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(serializedObjectSupporter7);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertNull(serializedObjectSupporter10);
        org.junit.Assert.assertNotNull(request14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(server19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertNull(executor22);
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0504");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        java.util.concurrent.Executor executor5 = null;
        builder0.httpExecutor = executor5;
        java.util.concurrent.Executor executor7 = null;
        builder0.setcallbackExecutor(executor7);
        java.util.concurrent.Executor executor9 = builder0.callbackExecutor;
        retrofit.Profiler profiler10 = builder0.profiler;
        retrofit.converter.Converter converter11 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder12 = builder0.setConverter(converter11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNull(profiler10);
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0505");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        retrofit.RestAdapter.Log log5 = builder0.log;
        retrofit.Profiler profiler6 = builder0.profiler;
        retrofit.RestAdapter.Builder builder8 = builder0.setServer("http://example.com/");
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request10 = serializedObjectSupporter9.deserializeObjectRequest1();
        retrofit.client.Request request11 = serializedObjectSupporter9.deserializeObjectRequest5();
        java.lang.String str12 = serializedObjectSupporter9.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter9.deserializeObjectConverter7();
        builder0.converter = gsonConverter13;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor16 = null;
        builder15.sethttpExecutor(executor16);
        retrofit.RequestInterceptor requestInterceptor18 = null;
        builder15.requestInterceptor = requestInterceptor18;
        retrofit.converter.Converter converter20 = builder15.converter;
        java.util.concurrent.Executor executor21 = null;
        builder15.httpExecutor = executor21;
        java.util.concurrent.Executor executor23 = null;
        builder15.httpExecutor = executor23;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor26 = null;
        builder25.sethttpExecutor(executor26);
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        builder25.log = log28;
        log28.log("");
        log28.log("POST");
        builder15.log = log28;
        builder0.log = log28;
        retrofit.RestAdapter.LogLevel logLevel36 = builder0.logLevel;
        retrofit.client.Client client37 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder38 = builder0.setClient(client37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNull(profiler6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "POST" + "'", str12, "POST");
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertNull(converter20);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0506");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        retrofit.RestAdapter.Log log5 = builder0.log;
        retrofit.Profiler profiler6 = builder0.profiler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter7.deserializeObjectConverter3();
        java.lang.String str10 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.Server server11 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.client.Client.Provider provider12 = null;
        java.util.concurrent.Executor executor13 = null;
        java.util.concurrent.Executor executor14 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor17 = serializedObjectSupporter15.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request19 = serializedObjectSupporter18.deserializeObjectRequest1();
        retrofit.client.Request request20 = serializedObjectSupporter18.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter18.deserializeObjectConverter5();
        retrofit.Profiler profiler22 = null;
        retrofit.ErrorHandler errorHandler23 = null;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor25 = null;
        builder24.sethttpExecutor(executor25);
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        builder24.log = log27;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter(server11, provider12, executor13, executor14, requestInterceptor17, (retrofit.converter.Converter) gsonConverter21, profiler22, errorHandler23, log27, logLevel29);
        retrofit.RestAdapter.Builder builder31 = builder0.setConverter((retrofit.converter.Converter) gsonConverter21);
        retrofit.client.Client client32 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder33 = builder31.setClient(client32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNull(profiler6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "GET" + "'", str8, "GET");
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Retrofit-" + "'", str16, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor17);
        org.junit.Assert.assertNotNull(request19);
        org.junit.Assert.assertNotNull(request20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder31);
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0507");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        java.util.concurrent.Executor executor26 = restAdapter23.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = restAdapter23.serializedObjectSupporter;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNull(serializedObjectSupporter27);
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0508");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Retrofit-" + "'", str1, "Retrofit-");
        org.junit.Assert.assertNotNull(gsonConverter2);
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0509");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = builder0.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel4 = builder0.logLevel;
        retrofit.Profiler profiler5 = builder0.profiler;
        retrofit.RestAdapter.Builder builder7 = builder0.setServer("hi!");
        java.util.concurrent.Executor executor8 = builder7.callbackExecutor;
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(executor8);
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0510");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        retrofit.RestAdapter.Log log5 = builder0.log;
        retrofit.Profiler profiler6 = builder0.profiler;
        retrofit.RestAdapter.Builder builder8 = builder0.setServer("http://example.com/");
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request10 = serializedObjectSupporter9.deserializeObjectRequest1();
        retrofit.client.Request request11 = serializedObjectSupporter9.deserializeObjectRequest5();
        java.lang.String str12 = serializedObjectSupporter9.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter9.deserializeObjectConverter7();
        builder0.converter = gsonConverter13;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor16 = null;
        builder15.sethttpExecutor(executor16);
        retrofit.RequestInterceptor requestInterceptor18 = null;
        builder15.requestInterceptor = requestInterceptor18;
        retrofit.converter.Converter converter20 = builder15.converter;
        java.util.concurrent.Executor executor21 = null;
        builder15.httpExecutor = executor21;
        java.util.concurrent.Executor executor23 = null;
        builder15.httpExecutor = executor23;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor26 = null;
        builder25.sethttpExecutor(executor26);
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        builder25.log = log28;
        log28.log("");
        log28.log("POST");
        builder15.log = log28;
        builder0.log = log28;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = builder36.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = builder36.serializedObjectSupporter;
        java.util.concurrent.Executor executor39 = null;
        builder36.httpExecutor = executor39;
        retrofit.client.Client.Provider provider41 = null;
        builder36.setclientProvider(provider41);
        java.util.concurrent.Executor executor43 = builder36.gethttpExecutor();
        retrofit.Server server44 = builder36.server;
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = new retrofit.SerializedObjectSupporter();
        java.lang.String str46 = serializedObjectSupporter45.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter47 = serializedObjectSupporter45.deserializeObjectConverter3();
        java.lang.String str48 = serializedObjectSupporter45.deserializeObjectString4();
        retrofit.Server server49 = serializedObjectSupporter45.deserializeObjectServer1();
        retrofit.client.Client.Provider provider50 = null;
        java.util.concurrent.Executor executor51 = null;
        java.util.concurrent.Executor executor52 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter53 = new retrofit.SerializedObjectSupporter();
        java.lang.String str54 = serializedObjectSupporter53.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor55 = serializedObjectSupporter53.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request57 = serializedObjectSupporter56.deserializeObjectRequest1();
        retrofit.client.Request request58 = serializedObjectSupporter56.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter59 = serializedObjectSupporter56.deserializeObjectConverter5();
        retrofit.Profiler profiler60 = null;
        retrofit.ErrorHandler errorHandler61 = null;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor63 = null;
        builder62.sethttpExecutor(executor63);
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        builder62.log = log65;
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter(server49, provider50, executor51, executor52, requestInterceptor55, (retrofit.converter.Converter) gsonConverter59, profiler60, errorHandler61, log65, logLevel67);
        java.util.concurrent.Executor executor69 = restAdapter68.getcallbackExecutor();
        java.util.concurrent.Executor executor70 = restAdapter68.callbackExecutor;
        java.lang.String str71 = restAdapter68.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor72 = restAdapter68.httpExecutor;
        retrofit.Profiler profiler73 = restAdapter68.getprofiler();
        retrofit.Server server74 = restAdapter68.getserver();
        retrofit.RestAdapter.Builder builder75 = builder36.setServer(server74);
        builder0.server = server74;
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNull(profiler6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "POST" + "'", str12, "POST");
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertNull(converter20);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNull(serializedObjectSupporter37);
        org.junit.Assert.assertNull(serializedObjectSupporter38);
        org.junit.Assert.assertNull(executor43);
        org.junit.Assert.assertNull(server44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "GET" + "'", str46, "GET");
        org.junit.Assert.assertNotNull(gsonConverter47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "http://example.com/" + "'", str48, "http://example.com/");
        org.junit.Assert.assertNotNull(server49);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Retrofit-" + "'", str54, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor55);
        org.junit.Assert.assertNotNull(request57);
        org.junit.Assert.assertNotNull(request58);
        org.junit.Assert.assertNotNull(gsonConverter59);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor69);
        org.junit.Assert.assertNull(executor70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Retrofit-Idle" + "'", str71, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor72);
        org.junit.Assert.assertNull(profiler73);
        org.junit.Assert.assertNotNull(server74);
        org.junit.Assert.assertNotNull(builder75);
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0511");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        java.lang.String str26 = restAdapter23.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        retrofit.Profiler profiler28 = restAdapter23.getprofiler();
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter23.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        java.lang.String str31 = serializedObjectSupporter30.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter30.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter30.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter34 = serializedObjectSupporter30.deserializeObjectConverter8();
        java.lang.String str35 = serializedObjectSupporter30.deserializeObjectString2();
        restHandler29.serializedObjectSupporter = serializedObjectSupporter30;
        retrofit.client.Request request37 = serializedObjectSupporter30.deserializeObjectRequest2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Retrofit-" + "'", str31, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(gsonConverter34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Retrofit-Idle" + "'", str35, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(request37);
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0512");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.RequestInterceptor requestInterceptor4 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.RequestInterceptor requestInterceptor7 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(requestInterceptor4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(requestInterceptor7);
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0513");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.converter.Converter converter4 = builder3.converter;
        java.util.concurrent.Executor executor5 = null;
        builder3.sethttpExecutor(executor5);
        retrofit.RestAdapter.Builder builder8 = builder3.setServer("GET");
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter3();
        java.lang.String str12 = serializedObjectSupporter9.deserializeObjectString4();
        retrofit.Server server13 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter17.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request21 = serializedObjectSupporter20.deserializeObjectRequest1();
        retrofit.client.Request request22 = serializedObjectSupporter20.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler24 = null;
        retrofit.ErrorHandler errorHandler25 = null;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor27 = null;
        builder26.sethttpExecutor(executor27);
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        builder26.log = log29;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor19, (retrofit.converter.Converter) gsonConverter23, profiler24, errorHandler25, log29, logLevel31);
        retrofit.RestAdapter.Builder builder33 = builder3.setLog(log29);
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor35 = null;
        builder34.sethttpExecutor(executor35);
        retrofit.RestAdapter.Log log37 = null;
        builder34.log = log37;
        retrofit.RestAdapter.Log log39 = builder34.log;
        retrofit.Profiler profiler40 = builder34.profiler;
        retrofit.RestAdapter.Builder builder42 = builder34.setServer("http://example.com/");
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request44 = serializedObjectSupporter43.deserializeObjectRequest1();
        retrofit.client.Request request45 = serializedObjectSupporter43.deserializeObjectRequest5();
        java.lang.String str46 = serializedObjectSupporter43.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter47 = serializedObjectSupporter43.deserializeObjectConverter7();
        builder34.converter = gsonConverter47;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor50 = null;
        builder49.sethttpExecutor(executor50);
        retrofit.RequestInterceptor requestInterceptor52 = null;
        builder49.requestInterceptor = requestInterceptor52;
        retrofit.converter.Converter converter54 = builder49.converter;
        java.util.concurrent.Executor executor55 = null;
        builder49.httpExecutor = executor55;
        java.util.concurrent.Executor executor57 = null;
        builder49.httpExecutor = executor57;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor60 = null;
        builder59.sethttpExecutor(executor60);
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        builder59.log = log62;
        log62.log("");
        log62.log("POST");
        builder49.log = log62;
        builder34.log = log62;
        retrofit.RestAdapter.Builder builder70 = builder3.setLog(log62);
        retrofit.client.Client client71 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder72 = builder70.setClient(client71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "GET" + "'", str10, "GET");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Retrofit-" + "'", str18, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(request22);
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNull(log39);
        org.junit.Assert.assertNull(profiler40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(request44);
        org.junit.Assert.assertNotNull(request45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "POST" + "'", str46, "POST");
        org.junit.Assert.assertNotNull(gsonConverter47);
        org.junit.Assert.assertNull(converter54);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertNotNull(builder70);
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0514");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.getconverter();
        java.util.concurrent.Executor executor26 = restAdapter23.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor27 = restAdapter23.getrequestInterceptor();
        retrofit.Server server28 = restAdapter23.server;
        java.util.concurrent.Executor executor29 = restAdapter23.callbackExecutor;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNull(executor29);
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0515");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter23.logLevel;
        java.util.concurrent.Executor executor27 = restAdapter23.getcallbackExecutor();
        retrofit.Server server28 = restAdapter23.server;
        java.lang.String str29 = restAdapter23.getTHREAD_PREFIX();
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        java.lang.String str31 = serializedObjectSupporter30.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter32 = serializedObjectSupporter30.deserializeObjectConverter3();
        java.lang.String str33 = serializedObjectSupporter30.deserializeObjectString4();
        retrofit.Server server34 = serializedObjectSupporter30.deserializeObjectServer1();
        retrofit.client.Client.Provider provider35 = null;
        java.util.concurrent.Executor executor36 = null;
        java.util.concurrent.Executor executor37 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        java.lang.String str39 = serializedObjectSupporter38.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor40 = serializedObjectSupporter38.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request42 = serializedObjectSupporter41.deserializeObjectRequest1();
        retrofit.client.Request request43 = serializedObjectSupporter41.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter44 = serializedObjectSupporter41.deserializeObjectConverter5();
        retrofit.Profiler profiler45 = null;
        retrofit.ErrorHandler errorHandler46 = null;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor48 = null;
        builder47.sethttpExecutor(executor48);
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        builder47.log = log50;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server34, provider35, executor36, executor37, requestInterceptor40, (retrofit.converter.Converter) gsonConverter44, profiler45, errorHandler46, log50, logLevel52);
        java.util.concurrent.Executor executor54 = restAdapter53.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor55 = restAdapter53.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor56 = restAdapter53.requestInterceptor;
        java.lang.String str57 = restAdapter53.getTHREAD_PREFIX();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = restAdapter53.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel59 = restAdapter53.logLevel;
        java.lang.String str60 = restAdapter53.getTHREAD_PREFIX();
        retrofit.Profiler profiler61 = restAdapter53.getprofiler();
        retrofit.RestAdapter.LogLevel logLevel62 = restAdapter53.logLevel;
        restAdapter23.setLogLevel(logLevel62);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Retrofit-" + "'", str29, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "GET" + "'", str31, "GET");
        org.junit.Assert.assertNotNull(gsonConverter32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNotNull(server34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Retrofit-" + "'", str39, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor40);
        org.junit.Assert.assertNotNull(request42);
        org.junit.Assert.assertNotNull(request43);
        org.junit.Assert.assertNotNull(gsonConverter44);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor54);
        org.junit.Assert.assertNotNull(requestInterceptor55);
        org.junit.Assert.assertNotNull(requestInterceptor56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Retrofit-" + "'", str57, "Retrofit-");
        org.junit.Assert.assertNull(serializedObjectSupporter58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Retrofit-" + "'", str60, "Retrofit-");
        org.junit.Assert.assertNull(profiler61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0516");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        java.util.concurrent.Executor executor5 = null;
        builder0.httpExecutor = executor5;
        java.util.concurrent.Executor executor7 = null;
        builder0.setcallbackExecutor(executor7);
        retrofit.client.Client.Provider provider9 = null;
        builder0.setclientProvider(provider9);
        retrofit.client.Client.Provider provider11 = null;
        builder0.setclientProvider(provider11);
        retrofit.Profiler profiler13 = builder0.profiler;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = builder14.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder14.serializedObjectSupporter;
        java.util.concurrent.Executor executor17 = null;
        builder14.httpExecutor = executor17;
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request20 = serializedObjectSupporter19.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter19.deserializeObjectConverter2();
        builder14.serializedObjectSupporter = serializedObjectSupporter19;
        retrofit.client.Client.Provider provider23 = builder14.getclientProvider();
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = builder24.serializedObjectSupporter;
        retrofit.client.Client.Provider provider26 = null;
        builder24.setclientProvider(provider26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor29 = null;
        builder28.sethttpExecutor(executor29);
        retrofit.RestAdapter.Log log31 = null;
        builder28.log = log31;
        java.util.concurrent.Executor executor33 = builder28.callbackExecutor;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        builder28.log = log34;
        retrofit.RestAdapter.Builder builder36 = builder24.setLog(log34);
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = new retrofit.SerializedObjectSupporter();
        java.lang.String str38 = serializedObjectSupporter37.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter37.deserializeObjectConverter3();
        java.lang.String str40 = serializedObjectSupporter37.deserializeObjectString4();
        retrofit.client.Request request41 = serializedObjectSupporter37.deserializeObjectRequest6();
        retrofit.Server server42 = serializedObjectSupporter37.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder43 = builder36.setServer(server42);
        retrofit.client.Client.Provider provider44 = null;
        java.util.concurrent.Executor executor45 = null;
        java.util.concurrent.Executor executor46 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request48 = serializedObjectSupporter47.deserializeObjectRequest1();
        retrofit.client.Request request49 = serializedObjectSupporter47.deserializeObjectRequest5();
        retrofit.RequestInterceptor requestInterceptor50 = serializedObjectSupporter47.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter51 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request52 = serializedObjectSupporter51.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter53 = serializedObjectSupporter51.deserializeObjectConverter2();
        retrofit.Profiler profiler54 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        java.lang.String str56 = serializedObjectSupporter55.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter57 = serializedObjectSupporter55.deserializeObjectConverter3();
        java.lang.String str58 = serializedObjectSupporter55.deserializeObjectString4();
        retrofit.client.Request request59 = serializedObjectSupporter55.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler60 = serializedObjectSupporter55.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter62 = builder61.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter63 = builder61.serializedObjectSupporter;
        retrofit.client.Client.Provider provider64 = null;
        builder61.clientProvider = provider64;
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        builder61.log = log66;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor69 = null;
        builder68.setcallbackExecutor(executor69);
        java.util.concurrent.Executor executor71 = null;
        builder68.setcallbackExecutor(executor71);
        retrofit.client.Client.Provider provider73 = null;
        builder68.clientProvider = provider73;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter76 = builder75.serializedObjectSupporter;
        retrofit.Profiler profiler77 = builder75.profiler;
        retrofit.RestAdapter.LogLevel logLevel78 = builder75.logLevel;
        builder68.logLevel = logLevel78;
        retrofit.RestAdapter restAdapter80 = new retrofit.RestAdapter(server42, provider44, executor45, executor46, requestInterceptor50, (retrofit.converter.Converter) gsonConverter53, profiler54, errorHandler60, log66, logLevel78);
        retrofit.RestAdapter.Builder builder81 = builder14.setErrorHandler(errorHandler60);
        builder0.errorHandler = errorHandler60;
        org.junit.Assert.assertNull(profiler13);
        org.junit.Assert.assertNull(serializedObjectSupporter15);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(request20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNull(serializedObjectSupporter25);
        org.junit.Assert.assertNull(executor33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "GET" + "'", str38, "GET");
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "http://example.com/" + "'", str40, "http://example.com/");
        org.junit.Assert.assertNotNull(request41);
        org.junit.Assert.assertNotNull(server42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(request48);
        org.junit.Assert.assertNotNull(request49);
        org.junit.Assert.assertNotNull(requestInterceptor50);
        org.junit.Assert.assertNotNull(request52);
        org.junit.Assert.assertNotNull(gsonConverter53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "GET" + "'", str56, "GET");
        org.junit.Assert.assertNotNull(gsonConverter57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "http://example.com/" + "'", str58, "http://example.com/");
        org.junit.Assert.assertNotNull(request59);
        org.junit.Assert.assertNotNull(errorHandler60);
        org.junit.Assert.assertNull(serializedObjectSupporter62);
        org.junit.Assert.assertNull(serializedObjectSupporter63);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNull(serializedObjectSupporter76);
        org.junit.Assert.assertNull(profiler77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder81);
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0517");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        retrofit.RestAdapter.Log log5 = builder0.log;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request7 = serializedObjectSupporter6.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter6.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter6.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder10 = builder0.setConverter((retrofit.converter.Converter) gsonConverter9);
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter11.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter8();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter11.deserializeObjectConverter3();
        retrofit.RestAdapter.Builder builder16 = builder10.setConverter((retrofit.converter.Converter) gsonConverter15);
        retrofit.client.Client client17 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder18 = builder10.setClient(client17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0518");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString3();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "GET" + "'", str6, "GET");
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0519");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.converter;
        java.util.concurrent.Executor executor26 = restAdapter23.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel27 = restAdapter23.getLogLevel();
        retrofit.client.Client.Provider provider28 = restAdapter23.clientProvider;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider28);
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0520");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        retrofit.ErrorHandler errorHandler27 = restAdapter23.geterrorHandler();
        java.util.concurrent.Executor executor28 = restAdapter23.gethttpExecutor();
        java.lang.String str29 = restAdapter23.getTHREAD_PREFIX();
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request31 = serializedObjectSupporter30.deserializeObjectRequest1();
        retrofit.client.Request request32 = serializedObjectSupporter30.deserializeObjectRequest5();
        retrofit.client.Request request33 = restAdapter23.logAndReplaceRequest(request32);
        java.lang.String str34 = request33.getUrl();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNull(errorHandler27);
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Retrofit-" + "'", str29, "Retrofit-");
        org.junit.Assert.assertNotNull(request31);
        org.junit.Assert.assertNotNull(request32);
        org.junit.Assert.assertNotNull(request33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "http://example.com/" + "'", str34, "http://example.com/");
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0521");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = null;
        builder0.setcallbackExecutor(executor3);
        retrofit.client.Client.Provider provider5 = null;
        builder0.clientProvider = provider5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = builder7.serializedObjectSupporter;
        retrofit.Profiler profiler9 = builder7.profiler;
        retrofit.RestAdapter.LogLevel logLevel10 = builder7.logLevel;
        builder0.logLevel = logLevel10;
        retrofit.RestAdapter.Log log12 = null;
        builder0.log = log12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = builder14.serializedObjectSupporter;
        retrofit.client.Client.Provider provider16 = null;
        builder14.setclientProvider(provider16);
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor19 = null;
        builder18.sethttpExecutor(executor19);
        retrofit.RestAdapter.Log log21 = null;
        builder18.log = log21;
        java.util.concurrent.Executor executor23 = builder18.callbackExecutor;
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        builder18.log = log24;
        retrofit.RestAdapter.Builder builder26 = builder14.setLog(log24);
        retrofit.RestAdapter.Builder builder27 = builder0.setLog(log24);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = builder28.serializedObjectSupporter;
        retrofit.Profiler profiler30 = builder28.profiler;
        retrofit.ErrorHandler errorHandler31 = builder28.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        java.lang.String str33 = serializedObjectSupporter32.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter34 = serializedObjectSupporter32.deserializeObjectConverter3();
        java.lang.String str35 = serializedObjectSupporter32.deserializeObjectString4();
        retrofit.Server server36 = serializedObjectSupporter32.deserializeObjectServer1();
        retrofit.client.Client.Provider provider37 = null;
        java.util.concurrent.Executor executor38 = null;
        java.util.concurrent.Executor executor39 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = new retrofit.SerializedObjectSupporter();
        java.lang.String str41 = serializedObjectSupporter40.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor42 = serializedObjectSupporter40.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request44 = serializedObjectSupporter43.deserializeObjectRequest1();
        retrofit.client.Request request45 = serializedObjectSupporter43.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter43.deserializeObjectConverter5();
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor50 = null;
        builder49.sethttpExecutor(executor50);
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        builder49.log = log52;
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter(server36, provider37, executor38, executor39, requestInterceptor42, (retrofit.converter.Converter) gsonConverter46, profiler47, errorHandler48, log52, logLevel54);
        java.util.concurrent.Executor executor56 = restAdapter55.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor57 = restAdapter55.requestInterceptor;
        retrofit.RestAdapter.Builder builder58 = builder28.setRequestInterceptor(requestInterceptor57);
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider60 = builder59.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder62 = builder59.setLogLevel(logLevel61);
        retrofit.RestAdapter.Log log63 = builder62.log;
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.HEADERS;
        builder62.logLevel = logLevel64;
        retrofit.ErrorHandler errorHandler66 = builder62.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter67 = new retrofit.SerializedObjectSupporter();
        java.lang.String str68 = serializedObjectSupporter67.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter69 = serializedObjectSupporter67.deserializeObjectConverter3();
        java.lang.String str70 = serializedObjectSupporter67.deserializeObjectString4();
        retrofit.client.Request request71 = serializedObjectSupporter67.deserializeObjectRequest6();
        retrofit.Server server72 = serializedObjectSupporter67.deserializeObjectServer1();
        builder62.server = server72;
        retrofit.RestAdapter.Builder builder74 = builder58.setServer(server72);
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor76 = null;
        builder75.sethttpExecutor(executor76);
        builder75.ensureSaneDefaults();
        retrofit.client.Client.Provider provider79 = null;
        builder75.setclientProvider(provider79);
        retrofit.client.Client.Provider provider81 = null;
        builder75.setclientProvider(provider81);
        java.util.concurrent.Executor executor83 = builder75.httpExecutor;
        retrofit.RestAdapter.Builder builder84 = new retrofit.RestAdapter.Builder();
        builder84.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler86 = builder84.errorHandler;
        java.util.concurrent.Executor executor87 = builder84.getcallbackExecutor();
        retrofit.RestAdapter.Builder builder88 = builder74.setExecutors(executor83, executor87);
        builder0.setcallbackExecutor(executor87);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertNull(profiler9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(serializedObjectSupporter15);
        org.junit.Assert.assertNull(executor23);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNull(serializedObjectSupporter29);
        org.junit.Assert.assertNull(profiler30);
        org.junit.Assert.assertNull(errorHandler31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "GET" + "'", str33, "GET");
        org.junit.Assert.assertNotNull(gsonConverter34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "http://example.com/" + "'", str35, "http://example.com/");
        org.junit.Assert.assertNotNull(server36);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Retrofit-" + "'", str41, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor42);
        org.junit.Assert.assertNotNull(request44);
        org.junit.Assert.assertNotNull(request45);
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor56);
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNull(provider60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNull(log63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(errorHandler66);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "GET" + "'", str68, "GET");
        org.junit.Assert.assertNotNull(gsonConverter69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "http://example.com/" + "'", str70, "http://example.com/");
        org.junit.Assert.assertNotNull(request71);
        org.junit.Assert.assertNotNull(server72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(executor83);
        org.junit.Assert.assertNotNull(errorHandler86);
        org.junit.Assert.assertNotNull(executor87);
        org.junit.Assert.assertNotNull(builder88);
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0522");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = null;
        builder0.setcallbackExecutor(executor3);
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.FULL;
        builder0.logLevel = logLevel5;
        retrofit.client.Client.Provider provider7 = builder0.getclientProvider();
        retrofit.ErrorHandler errorHandler8 = null;
        builder0.errorHandler = errorHandler8;
        java.util.concurrent.Executor executor10 = builder0.gethttpExecutor();
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(executor10);
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0523");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter23.getLogLevel();
        retrofit.RestAdapter.Log log26 = restAdapter23.log;
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        retrofit.converter.Converter converter28 = restAdapter23.getconverter();
        java.lang.Throwable throwable29 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter23.logException(throwable29, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNotNull(converter28);
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0524");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        java.util.concurrent.Executor executor3 = null;
        builder0.httpExecutor = executor3;
        retrofit.client.Client.Provider provider5 = null;
        builder0.setclientProvider(provider5);
        java.util.concurrent.Executor executor7 = builder0.httpExecutor;
        retrofit.ErrorHandler errorHandler8 = builder0.errorHandler;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(errorHandler8);
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0525");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        java.util.concurrent.Executor executor5 = builder0.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = builder0.serializedObjectSupporter;
        java.util.concurrent.Executor executor7 = builder0.callbackExecutor;
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(executor7);
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0526");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest6();
        java.lang.String str4 = request3.method;
        retrofit.mime.TypedOutput typedOutput5 = request3.getBody();
        java.util.List<retrofit.client.Header> headerList6 = request3.getHeaders();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNotNull(headerList6);
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0527");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.RestAdapter.LogLevel logLevel4 = builder3.logLevel;
        java.util.concurrent.Executor executor5 = null;
        builder3.sethttpExecutor(executor5);
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter7.deserializeObjectConverter3();
        java.lang.String str10 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.Server server11 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.client.Client.Provider provider12 = null;
        java.util.concurrent.Executor executor13 = null;
        java.util.concurrent.Executor executor14 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor17 = serializedObjectSupporter15.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request19 = serializedObjectSupporter18.deserializeObjectRequest1();
        retrofit.client.Request request20 = serializedObjectSupporter18.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter18.deserializeObjectConverter5();
        retrofit.Profiler profiler22 = null;
        retrofit.ErrorHandler errorHandler23 = null;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor25 = null;
        builder24.sethttpExecutor(executor25);
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        builder24.log = log27;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter(server11, provider12, executor13, executor14, requestInterceptor17, (retrofit.converter.Converter) gsonConverter21, profiler22, errorHandler23, log27, logLevel29);
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter30.getLogLevel();
        java.lang.String str32 = restAdapter30.getIDLE_THREAD_NAME();
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider34 = builder33.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder36 = builder33.setLogLevel(logLevel35);
        retrofit.RestAdapter.Log log37 = builder36.log;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.HEADERS;
        builder36.logLevel = logLevel38;
        retrofit.ErrorHandler errorHandler40 = builder36.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = new retrofit.SerializedObjectSupporter();
        java.lang.String str42 = serializedObjectSupporter41.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter41.deserializeObjectConverter3();
        java.lang.String str44 = serializedObjectSupporter41.deserializeObjectString4();
        retrofit.client.Request request45 = serializedObjectSupporter41.deserializeObjectRequest6();
        retrofit.Server server46 = serializedObjectSupporter41.deserializeObjectServer1();
        builder36.server = server46;
        java.util.concurrent.Executor executor48 = builder36.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel49 = builder36.logLevel;
        restAdapter30.logLevel = logLevel49;
        retrofit.RestAdapter.Builder builder51 = builder3.setLogLevel(logLevel49);
        retrofit.converter.Converter converter52 = builder51.converter;
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "GET" + "'", str8, "GET");
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Retrofit-" + "'", str16, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor17);
        org.junit.Assert.assertNotNull(request19);
        org.junit.Assert.assertNotNull(request20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Retrofit-Idle" + "'", str32, "Retrofit-Idle");
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(errorHandler40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "GET" + "'", str42, "GET");
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "http://example.com/" + "'", str44, "http://example.com/");
        org.junit.Assert.assertNotNull(request45);
        org.junit.Assert.assertNotNull(server46);
        org.junit.Assert.assertNull(executor48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNull(converter52);
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0528");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        java.util.concurrent.Executor executor3 = null;
        builder0.httpExecutor = executor3;
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request6 = serializedObjectSupporter5.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter5.deserializeObjectConverter2();
        builder0.serializedObjectSupporter = serializedObjectSupporter5;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider10 = builder9.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder12 = builder9.setLogLevel(logLevel11);
        retrofit.converter.Converter converter13 = builder12.converter;
        java.util.concurrent.Executor executor14 = null;
        builder12.sethttpExecutor(executor14);
        retrofit.RestAdapter.Builder builder17 = builder12.setServer("GET");
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor19 = null;
        builder18.setcallbackExecutor(executor19);
        java.util.concurrent.Executor executor21 = null;
        builder18.setcallbackExecutor(executor21);
        builder18.ensureSaneDefaults();
        java.util.concurrent.Executor executor24 = builder18.callbackExecutor;
        builder17.setcallbackExecutor(executor24);
        builder0.httpExecutor = executor24;
        retrofit.Profiler profiler27 = builder0.profiler;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(executor24);
        org.junit.Assert.assertNull(profiler27);
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0529");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        java.lang.String str5 = serializedObjectSupporter4.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter4.deserializeObjectConverter3();
        java.lang.String str7 = serializedObjectSupporter4.deserializeObjectString4();
        retrofit.Server server8 = serializedObjectSupporter4.deserializeObjectServer1();
        retrofit.client.Client.Provider provider9 = null;
        java.util.concurrent.Executor executor10 = null;
        java.util.concurrent.Executor executor11 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor14 = serializedObjectSupporter12.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request16 = serializedObjectSupporter15.deserializeObjectRequest1();
        retrofit.client.Request request17 = serializedObjectSupporter15.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter15.deserializeObjectConverter5();
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor22 = null;
        builder21.sethttpExecutor(executor22);
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        builder21.log = log24;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter(server8, provider9, executor10, executor11, requestInterceptor14, (retrofit.converter.Converter) gsonConverter18, profiler19, errorHandler20, log24, logLevel26);
        java.util.concurrent.Executor executor28 = restAdapter27.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor29 = restAdapter27.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter27.logLevel;
        java.util.concurrent.Executor executor31 = restAdapter27.getcallbackExecutor();
        retrofit.Server server32 = restAdapter27.server;
        retrofit.RestAdapter.Builder builder33 = builder0.setServer(server32);
        retrofit.RestAdapter.Builder builder35 = builder0.setServer("hi!");
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        java.lang.String str37 = serializedObjectSupporter36.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter3();
        java.lang.String str39 = serializedObjectSupporter36.deserializeObjectString4();
        retrofit.Server server40 = serializedObjectSupporter36.deserializeObjectServer1();
        retrofit.client.Client.Provider provider41 = null;
        java.util.concurrent.Executor executor42 = null;
        java.util.concurrent.Executor executor43 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = new retrofit.SerializedObjectSupporter();
        java.lang.String str45 = serializedObjectSupporter44.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor46 = serializedObjectSupporter44.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request48 = serializedObjectSupporter47.deserializeObjectRequest1();
        retrofit.client.Request request49 = serializedObjectSupporter47.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter50 = serializedObjectSupporter47.deserializeObjectConverter5();
        retrofit.Profiler profiler51 = null;
        retrofit.ErrorHandler errorHandler52 = null;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor54 = null;
        builder53.sethttpExecutor(executor54);
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        builder53.log = log56;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter59 = new retrofit.RestAdapter(server40, provider41, executor42, executor43, requestInterceptor46, (retrofit.converter.Converter) gsonConverter50, profiler51, errorHandler52, log56, logLevel58);
        retrofit.RestAdapter.LogLevel logLevel60 = restAdapter59.getLogLevel();
        retrofit.converter.Converter converter61 = restAdapter59.converter;
        java.lang.String str62 = restAdapter59.getIDLE_THREAD_NAME();
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter64 = builder63.serializedObjectSupporter;
        retrofit.Profiler profiler65 = builder63.profiler;
        retrofit.RestAdapter.LogLevel logLevel66 = builder63.logLevel;
        restAdapter59.logLevel = logLevel66;
        retrofit.RestAdapter.Builder builder68 = builder35.setLogLevel(logLevel66);
        boolean boolean69 = logLevel66.log();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "GET" + "'", str5, "GET");
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-" + "'", str13, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor14);
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNotNull(requestInterceptor29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor31);
        org.junit.Assert.assertNotNull(server32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "GET" + "'", str37, "GET");
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "http://example.com/" + "'", str39, "http://example.com/");
        org.junit.Assert.assertNotNull(server40);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Retrofit-" + "'", str45, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor46);
        org.junit.Assert.assertNotNull(request48);
        org.junit.Assert.assertNotNull(request49);
        org.junit.Assert.assertNotNull(gsonConverter50);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Retrofit-Idle" + "'", str62, "Retrofit-Idle");
        org.junit.Assert.assertNull(serializedObjectSupporter64);
        org.junit.Assert.assertNull(profiler65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0530");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = builder0.requestInterceptor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        java.lang.String str5 = serializedObjectSupporter4.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter4.deserializeObjectConverter3();
        java.lang.String str7 = serializedObjectSupporter4.deserializeObjectString4();
        retrofit.client.Request request8 = serializedObjectSupporter4.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler9 = serializedObjectSupporter4.deserializeObjectErrorHandler1();
        builder0.errorHandler = errorHandler9;
        java.util.concurrent.Executor executor11 = builder0.getcallbackExecutor();
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor13 = null;
        builder12.setcallbackExecutor(executor13);
        java.util.concurrent.Executor executor15 = null;
        builder12.setcallbackExecutor(executor15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.FULL;
        builder12.logLevel = logLevel17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor20 = null;
        builder19.setcallbackExecutor(executor20);
        java.util.concurrent.Executor executor22 = null;
        builder19.setcallbackExecutor(executor22);
        builder19.ensureSaneDefaults();
        java.util.concurrent.Executor executor25 = builder19.callbackExecutor;
        builder12.sethttpExecutor(executor25);
        builder0.httpExecutor = executor25;
        java.util.concurrent.Executor executor28 = builder0.callbackExecutor;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor30 = null;
        builder29.sethttpExecutor(executor30);
        retrofit.RestAdapter.Log log32 = null;
        builder29.log = log32;
        java.util.concurrent.Executor executor34 = builder29.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = builder29.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler36 = builder29.errorHandler;
        builder29.ensureSaneDefaults();
        retrofit.RestAdapter.LogLevel logLevel38 = builder29.logLevel;
        retrofit.client.Client.Provider provider39 = builder29.getclientProvider();
        builder0.setclientProvider(provider39);
        retrofit.RestAdapter.LogLevel logLevel41 = builder0.logLevel;
        org.junit.Assert.assertNull(requestInterceptor3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "GET" + "'", str5, "GET");
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(errorHandler9);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(executor25);
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNull(executor34);
        org.junit.Assert.assertNull(serializedObjectSupporter35);
        org.junit.Assert.assertNull(errorHandler36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(provider39);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0531");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest2();
        retrofit.client.Request request7 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.client.Request request8 = serializedObjectSupporter0.deserializeObjectRequest7();
        java.lang.Class<?> wildcardClass9 = request8.getClass();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "GET" + "'", str3, "GET");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0532");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.converter.Converter converter3 = builder0.converter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("GET");
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor7 = null;
        builder6.sethttpExecutor(executor7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter3();
        builder6.converter = gsonConverter11;
        retrofit.client.Client.Provider provider13 = null;
        builder6.clientProvider = provider13;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter3();
        java.lang.String str18 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter15.deserializeObjectConverter6();
        builder6.converter = gsonConverter19;
        builder0.converter = gsonConverter19;
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        java.lang.String str23 = serializedObjectSupporter22.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter24 = serializedObjectSupporter22.deserializeObjectConverter3();
        java.lang.String str25 = serializedObjectSupporter22.deserializeObjectString4();
        retrofit.Server server26 = serializedObjectSupporter22.deserializeObjectServer1();
        retrofit.client.Client.Provider provider27 = null;
        java.util.concurrent.Executor executor28 = null;
        java.util.concurrent.Executor executor29 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        java.lang.String str31 = serializedObjectSupporter30.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter30.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request34 = serializedObjectSupporter33.deserializeObjectRequest1();
        retrofit.client.Request request35 = serializedObjectSupporter33.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter33.deserializeObjectConverter5();
        retrofit.Profiler profiler37 = null;
        retrofit.ErrorHandler errorHandler38 = null;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor40 = null;
        builder39.sethttpExecutor(executor40);
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        builder39.log = log42;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter(server26, provider27, executor28, executor29, requestInterceptor32, (retrofit.converter.Converter) gsonConverter36, profiler37, errorHandler38, log42, logLevel44);
        java.util.concurrent.Executor executor46 = restAdapter45.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor47 = restAdapter45.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor48 = restAdapter45.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor49 = restAdapter45.getrequestInterceptor();
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor51 = null;
        builder50.sethttpExecutor(executor51);
        retrofit.RequestInterceptor requestInterceptor53 = null;
        builder50.requestInterceptor = requestInterceptor53;
        retrofit.converter.Converter converter55 = builder50.converter;
        java.util.concurrent.Executor executor56 = null;
        builder50.httpExecutor = executor56;
        retrofit.RestAdapter.LogLevel logLevel58 = builder50.logLevel;
        restAdapter45.logLevel = logLevel58;
        builder0.logLevel = logLevel58;
        java.util.concurrent.Executor executor61 = builder0.getcallbackExecutor();
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter63 = builder62.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter64 = builder62.serializedObjectSupporter;
        retrofit.client.Client.Provider provider65 = null;
        builder62.clientProvider = provider65;
        java.util.concurrent.Executor executor67 = null;
        builder62.callbackExecutor = executor67;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor70 = null;
        builder69.setcallbackExecutor(executor70);
        java.util.concurrent.Executor executor72 = null;
        builder69.setcallbackExecutor(executor72);
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.FULL;
        builder69.logLevel = logLevel74;
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor77 = null;
        builder76.setcallbackExecutor(executor77);
        java.util.concurrent.Executor executor79 = null;
        builder76.setcallbackExecutor(executor79);
        builder76.ensureSaneDefaults();
        java.util.concurrent.Executor executor82 = builder76.callbackExecutor;
        builder69.sethttpExecutor(executor82);
        builder62.httpExecutor = executor82;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor86 = null;
        builder85.sethttpExecutor(executor86);
        retrofit.RestAdapter.Log log88 = null;
        builder85.log = log88;
        java.util.concurrent.Executor executor90 = builder85.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter91 = builder85.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter92 = builder85.serializedObjectSupporter;
        builder85.ensureSaneDefaults();
        java.util.concurrent.Executor executor94 = builder85.httpExecutor;
        retrofit.RestAdapter.Builder builder95 = builder0.setExecutors(executor82, executor94);
        retrofit.RestAdapter restAdapter96 = builder0.build();
        retrofit.converter.Converter converter97 = restAdapter96.getconverter();
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "GET" + "'", str10, "GET");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "GET" + "'", str16, "GET");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "GET" + "'", str23, "GET");
        org.junit.Assert.assertNotNull(gsonConverter24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "http://example.com/" + "'", str25, "http://example.com/");
        org.junit.Assert.assertNotNull(server26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Retrofit-" + "'", str31, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(request34);
        org.junit.Assert.assertNotNull(request35);
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor46);
        org.junit.Assert.assertNotNull(requestInterceptor47);
        org.junit.Assert.assertNotNull(requestInterceptor48);
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNull(converter55);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor61);
        org.junit.Assert.assertNull(serializedObjectSupporter63);
        org.junit.Assert.assertNull(serializedObjectSupporter64);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(executor82);
        org.junit.Assert.assertNull(executor90);
        org.junit.Assert.assertNull(serializedObjectSupporter91);
        org.junit.Assert.assertNull(serializedObjectSupporter92);
        org.junit.Assert.assertNotNull(executor94);
        org.junit.Assert.assertNotNull(builder95);
        org.junit.Assert.assertNotNull(restAdapter96);
        org.junit.Assert.assertNotNull(converter97);
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0533");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        java.lang.String str27 = restAdapter23.getTHREAD_PREFIX();
        java.util.concurrent.Executor executor28 = restAdapter23.httpExecutor;
        java.util.concurrent.Executor executor29 = restAdapter23.getcallbackExecutor();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Retrofit-" + "'", str27, "Retrofit-");
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNull(executor29);
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0534");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        retrofit.Server server26 = restAdapter23.server;
        retrofit.RequestInterceptor requestInterceptor27 = restAdapter23.getrequestInterceptor();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNotNull(server26);
        org.junit.Assert.assertNotNull(requestInterceptor27);
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0535");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.RestAdapter.LogLevel logLevel4 = builder3.logLevel;
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder6 = builder3.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor8 = null;
        builder7.sethttpExecutor(executor8);
        retrofit.RequestInterceptor requestInterceptor10 = null;
        builder7.requestInterceptor = requestInterceptor10;
        java.util.concurrent.Executor executor12 = null;
        builder7.httpExecutor = executor12;
        java.util.concurrent.Executor executor14 = null;
        builder7.setcallbackExecutor(executor14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor17 = null;
        builder16.sethttpExecutor(executor17);
        retrofit.RestAdapter.Log log19 = null;
        builder16.log = log19;
        java.util.concurrent.Executor executor21 = builder16.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = builder16.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler23 = builder16.errorHandler;
        builder16.ensureSaneDefaults();
        retrofit.RestAdapter.LogLevel logLevel25 = builder16.logLevel;
        retrofit.client.Client.Provider provider26 = builder16.getclientProvider();
        builder7.setclientProvider(provider26);
        builder3.setclientProvider(provider26);
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(executor21);
        org.junit.Assert.assertNull(serializedObjectSupporter22);
        org.junit.Assert.assertNull(errorHandler23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(provider26);
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0536");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        java.lang.String str27 = restAdapter23.getTHREAD_PREFIX();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = restAdapter23.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter23.logLevel;
        java.lang.String str30 = restAdapter23.getTHREAD_PREFIX();
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter23.logLevel;
        retrofit.Profiler profiler32 = restAdapter23.getprofiler();
        java.util.concurrent.Executor executor33 = restAdapter23.httpExecutor;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Retrofit-" + "'", str27, "Retrofit-");
        org.junit.Assert.assertNull(serializedObjectSupporter28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Retrofit-" + "'", str30, "Retrofit-");
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(profiler32);
        org.junit.Assert.assertNull(executor33);
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0537");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        retrofit.RestAdapter.Log log5 = builder0.log;
        retrofit.Profiler profiler6 = builder0.profiler;
        retrofit.RestAdapter.Builder builder8 = builder0.setServer("http://example.com/");
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request10 = serializedObjectSupporter9.deserializeObjectRequest1();
        retrofit.client.Request request11 = serializedObjectSupporter9.deserializeObjectRequest5();
        java.lang.String str12 = serializedObjectSupporter9.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter9.deserializeObjectConverter7();
        builder0.converter = gsonConverter13;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter3();
        java.lang.String str18 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.Server server19 = serializedObjectSupporter15.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter15.deserializeObjectConverter6();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter15.deserializeObjectConverter6();
        retrofit.client.Request request22 = serializedObjectSupporter15.deserializeObjectRequest7();
        builder0.serializedObjectSupporter = serializedObjectSupporter15;
        retrofit.client.Request request24 = serializedObjectSupporter15.deserializeObjectRequest8();
        java.util.List<retrofit.client.Header> headerList25 = request24.getHeaders();
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNull(profiler6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "POST" + "'", str12, "POST");
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "GET" + "'", str16, "GET");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(server19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNotNull(request22);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(headerList25);
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0538");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.client.Client.Provider provider2 = null;
        builder0.setclientProvider(provider2);
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor5 = null;
        builder4.sethttpExecutor(executor5);
        retrofit.RestAdapter.Log log7 = null;
        builder4.log = log7;
        java.util.concurrent.Executor executor9 = builder4.callbackExecutor;
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        builder4.log = log10;
        retrofit.RestAdapter.Builder builder12 = builder0.setLog(log10);
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter13.deserializeObjectConverter3();
        java.lang.String str16 = serializedObjectSupporter13.deserializeObjectString4();
        retrofit.client.Request request17 = serializedObjectSupporter13.deserializeObjectRequest6();
        retrofit.Server server18 = serializedObjectSupporter13.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder19 = builder12.setServer(server18);
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest1();
        retrofit.client.Request request25 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.RequestInterceptor requestInterceptor26 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request28 = serializedObjectSupporter27.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter27.deserializeObjectConverter2();
        retrofit.Profiler profiler30 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        java.lang.String str32 = serializedObjectSupporter31.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter3();
        java.lang.String str34 = serializedObjectSupporter31.deserializeObjectString4();
        retrofit.client.Request request35 = serializedObjectSupporter31.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler36 = serializedObjectSupporter31.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = builder37.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = builder37.serializedObjectSupporter;
        retrofit.client.Client.Provider provider40 = null;
        builder37.clientProvider = provider40;
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        builder37.log = log42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor45 = null;
        builder44.setcallbackExecutor(executor45);
        java.util.concurrent.Executor executor47 = null;
        builder44.setcallbackExecutor(executor47);
        retrofit.client.Client.Provider provider49 = null;
        builder44.clientProvider = provider49;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = builder51.serializedObjectSupporter;
        retrofit.Profiler profiler53 = builder51.profiler;
        retrofit.RestAdapter.LogLevel logLevel54 = builder51.logLevel;
        builder44.logLevel = logLevel54;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter(server18, provider20, executor21, executor22, requestInterceptor26, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler36, log42, logLevel54);
        retrofit.Server server57 = restAdapter56.server;
        retrofit.Profiler profiler58 = restAdapter56.getprofiler();
        java.util.concurrent.Executor executor59 = restAdapter56.callbackExecutor;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "GET" + "'", str14, "GET");
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(server18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(request25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNotNull(request28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "GET" + "'", str32, "GET");
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "http://example.com/" + "'", str34, "http://example.com/");
        org.junit.Assert.assertNotNull(request35);
        org.junit.Assert.assertNotNull(errorHandler36);
        org.junit.Assert.assertNull(serializedObjectSupporter38);
        org.junit.Assert.assertNull(serializedObjectSupporter39);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNull(serializedObjectSupporter52);
        org.junit.Assert.assertNull(profiler53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(server57);
        org.junit.Assert.assertNull(profiler58);
        org.junit.Assert.assertNull(executor59);
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0539");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.converter.Converter converter4 = builder3.converter;
        java.util.concurrent.Executor executor5 = null;
        builder3.sethttpExecutor(executor5);
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter7.deserializeObjectConverter3();
        java.lang.String str10 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.Server server11 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.client.Client.Provider provider12 = null;
        java.util.concurrent.Executor executor13 = null;
        java.util.concurrent.Executor executor14 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor17 = serializedObjectSupporter15.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request19 = serializedObjectSupporter18.deserializeObjectRequest1();
        retrofit.client.Request request20 = serializedObjectSupporter18.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter18.deserializeObjectConverter5();
        retrofit.Profiler profiler22 = null;
        retrofit.ErrorHandler errorHandler23 = null;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor25 = null;
        builder24.sethttpExecutor(executor25);
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        builder24.log = log27;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter(server11, provider12, executor13, executor14, requestInterceptor17, (retrofit.converter.Converter) gsonConverter21, profiler22, errorHandler23, log27, logLevel29);
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter30.getLogLevel();
        retrofit.converter.Converter converter32 = restAdapter30.getconverter();
        java.util.concurrent.Executor executor33 = restAdapter30.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor34 = restAdapter30.getrequestInterceptor();
        retrofit.Server server35 = restAdapter30.server;
        builder3.server = server35;
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "GET" + "'", str8, "GET");
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Retrofit-" + "'", str16, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor17);
        org.junit.Assert.assertNotNull(request19);
        org.junit.Assert.assertNotNull(request20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter32);
        org.junit.Assert.assertNull(executor33);
        org.junit.Assert.assertNotNull(requestInterceptor34);
        org.junit.Assert.assertNotNull(server35);
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0540");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.RequestInterceptor requestInterceptor3 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter5();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(requestInterceptor3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-Idle" + "'", str4, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(gsonConverter5);
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0541");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        java.lang.String str27 = restAdapter23.getTHREAD_PREFIX();
        retrofit.converter.Converter converter28 = restAdapter23.getconverter();
        retrofit.converter.Converter converter29 = restAdapter23.getconverter();
        java.util.concurrent.Executor executor30 = restAdapter23.httpExecutor;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Retrofit-" + "'", str27, "Retrofit-");
        org.junit.Assert.assertNotNull(converter28);
        org.junit.Assert.assertNotNull(converter29);
        org.junit.Assert.assertNull(executor30);
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0542");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter3();
        builder0.converter = gsonConverter5;
        retrofit.client.Client.Provider provider7 = null;
        builder0.clientProvider = provider7;
        retrofit.client.Client client9 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder10 = builder0.setClient(client9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(gsonConverter5);
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0543");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.converter.Converter converter4 = builder3.converter;
        java.util.concurrent.Executor executor5 = null;
        builder3.sethttpExecutor(executor5);
        retrofit.RestAdapter.Builder builder8 = builder3.setServer("GET");
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter3();
        java.lang.String str12 = serializedObjectSupporter9.deserializeObjectString4();
        retrofit.Server server13 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter17.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request21 = serializedObjectSupporter20.deserializeObjectRequest1();
        retrofit.client.Request request22 = serializedObjectSupporter20.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler24 = null;
        retrofit.ErrorHandler errorHandler25 = null;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor27 = null;
        builder26.sethttpExecutor(executor27);
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        builder26.log = log29;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor19, (retrofit.converter.Converter) gsonConverter23, profiler24, errorHandler25, log29, logLevel31);
        retrofit.RestAdapter.Builder builder33 = builder3.setLog(log29);
        java.util.concurrent.Executor executor34 = builder33.getcallbackExecutor();
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "GET" + "'", str10, "GET");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Retrofit-" + "'", str18, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(request22);
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNull(executor34);
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0544");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest3();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str7 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.client.Request request8 = serializedObjectSupporter0.deserializeObjectRequest4();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Retrofit-" + "'", str6, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Retrofit-" + "'", str7, "Retrofit-");
        org.junit.Assert.assertNotNull(request8);
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0545");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.RestAdapter.Log log4 = builder3.log;
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.HEADERS;
        builder3.logLevel = logLevel5;
        retrofit.ErrorHandler errorHandler7 = builder3.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter8.deserializeObjectConverter3();
        java.lang.String str11 = serializedObjectSupporter8.deserializeObjectString4();
        retrofit.client.Request request12 = serializedObjectSupporter8.deserializeObjectRequest6();
        retrofit.Server server13 = serializedObjectSupporter8.deserializeObjectServer1();
        builder3.server = server13;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor16 = null;
        builder15.setcallbackExecutor(executor16);
        java.util.concurrent.Executor executor18 = null;
        builder15.setcallbackExecutor(executor18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.FULL;
        builder15.logLevel = logLevel20;
        retrofit.client.Client.Provider provider22 = builder15.getclientProvider();
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor24 = null;
        builder23.sethttpExecutor(executor24);
        retrofit.RestAdapter.Log log26 = null;
        builder23.log = log26;
        retrofit.RestAdapter.Log log28 = builder23.log;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor30 = null;
        builder29.sethttpExecutor(executor30);
        retrofit.RequestInterceptor requestInterceptor32 = null;
        builder29.requestInterceptor = requestInterceptor32;
        java.util.concurrent.Executor executor34 = null;
        builder29.httpExecutor = executor34;
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        java.lang.String str37 = serializedObjectSupporter36.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter3();
        java.lang.String str39 = serializedObjectSupporter36.deserializeObjectString4();
        retrofit.client.Request request40 = serializedObjectSupporter36.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler41 = serializedObjectSupporter36.deserializeObjectErrorHandler1();
        builder29.errorHandler = errorHandler41;
        retrofit.RestAdapter.Builder builder43 = builder23.setErrorHandler(errorHandler41);
        retrofit.RestAdapter.Builder builder44 = builder15.setErrorHandler(errorHandler41);
        retrofit.RestAdapter.Builder builder45 = builder3.setErrorHandler(errorHandler41);
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(errorHandler7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "GET" + "'", str9, "GET");
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "http://example.com/" + "'", str11, "http://example.com/");
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider22);
        org.junit.Assert.assertNull(log28);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "GET" + "'", str37, "GET");
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "http://example.com/" + "'", str39, "http://example.com/");
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(errorHandler41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder45);
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0546");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.ErrorHandler errorHandler8 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        java.lang.String str9 = serializedObjectSupporter0.deserializeObjectString3();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(errorHandler8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "GET" + "'", str9, "GET");
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0547");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        java.lang.String str27 = restAdapter23.getTHREAD_PREFIX();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = restAdapter23.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter23.logLevel;
        retrofit.converter.Converter converter30 = restAdapter23.getconverter();
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = restAdapter23.serializedObjectSupporter;
        java.util.concurrent.Executor executor32 = restAdapter23.httpExecutor;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Retrofit-" + "'", str27, "Retrofit-");
        org.junit.Assert.assertNull(serializedObjectSupporter28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter30);
        org.junit.Assert.assertNull(serializedObjectSupporter31);
        org.junit.Assert.assertNull(executor32);
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0548");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest3();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(request5);
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0549");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.converter.Converter converter4 = builder3.converter;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor6 = null;
        builder5.sethttpExecutor(executor6);
        builder5.ensureSaneDefaults();
        retrofit.client.Client.Provider provider9 = null;
        builder5.setclientProvider(provider9);
        retrofit.client.Client.Provider provider11 = null;
        builder5.setclientProvider(provider11);
        java.util.concurrent.Executor executor13 = builder5.httpExecutor;
        builder3.callbackExecutor = executor13;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider16 = builder15.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder18 = builder15.setLogLevel(logLevel17);
        retrofit.converter.Converter converter19 = builder18.converter;
        java.util.concurrent.Executor executor20 = null;
        builder18.sethttpExecutor(executor20);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider23 = builder22.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder25 = builder22.setLogLevel(logLevel24);
        retrofit.converter.Converter converter26 = builder25.converter;
        java.util.concurrent.Executor executor27 = null;
        builder25.sethttpExecutor(executor27);
        retrofit.RestAdapter.Builder builder30 = builder25.setServer("GET");
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor32 = null;
        builder31.setcallbackExecutor(executor32);
        java.util.concurrent.Executor executor34 = null;
        builder31.setcallbackExecutor(executor34);
        builder31.ensureSaneDefaults();
        java.util.concurrent.Executor executor37 = builder31.callbackExecutor;
        builder30.setcallbackExecutor(executor37);
        builder18.httpExecutor = executor37;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider41 = builder40.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder43 = builder40.setLogLevel(logLevel42);
        retrofit.converter.Converter converter44 = builder43.converter;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor46 = null;
        builder45.sethttpExecutor(executor46);
        builder45.ensureSaneDefaults();
        retrofit.client.Client.Provider provider49 = null;
        builder45.setclientProvider(provider49);
        retrofit.client.Client.Provider provider51 = null;
        builder45.setclientProvider(provider51);
        java.util.concurrent.Executor executor53 = builder45.httpExecutor;
        builder43.callbackExecutor = executor53;
        retrofit.RestAdapter.Builder builder55 = builder3.setExecutors(executor37, executor53);
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNotNull(executor13);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(converter26);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(executor37);
        org.junit.Assert.assertNull(provider41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(converter44);
        org.junit.Assert.assertNotNull(executor53);
        org.junit.Assert.assertNotNull(builder55);
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0550");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest8();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter0.deserializeObjectConverter5();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(gsonConverter8);
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0551");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest3();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter4();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter5 = serializedObjectSupporter0.deserializeObjectLogLevel1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(gsonConverter4);
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0552");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.converter.Converter converter3 = builder0.converter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("GET");
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor7 = null;
        builder6.sethttpExecutor(executor7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter3();
        builder6.converter = gsonConverter11;
        retrofit.client.Client.Provider provider13 = null;
        builder6.clientProvider = provider13;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter3();
        java.lang.String str18 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter15.deserializeObjectConverter6();
        builder6.converter = gsonConverter19;
        builder0.converter = gsonConverter19;
        retrofit.RestAdapter restAdapter22 = builder0.build();
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor24 = null;
        builder23.sethttpExecutor(executor24);
        retrofit.RequestInterceptor requestInterceptor26 = null;
        builder23.requestInterceptor = requestInterceptor26;
        retrofit.Profiler profiler28 = null;
        builder23.profiler = profiler28;
        java.util.concurrent.Executor executor30 = builder23.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        java.lang.String str32 = serializedObjectSupporter31.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter3();
        java.lang.String str34 = serializedObjectSupporter31.deserializeObjectString4();
        retrofit.Server server35 = serializedObjectSupporter31.deserializeObjectServer1();
        retrofit.client.Client.Provider provider36 = null;
        java.util.concurrent.Executor executor37 = null;
        java.util.concurrent.Executor executor38 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        java.lang.String str40 = serializedObjectSupporter39.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor41 = serializedObjectSupporter39.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request43 = serializedObjectSupporter42.deserializeObjectRequest1();
        retrofit.client.Request request44 = serializedObjectSupporter42.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter45 = serializedObjectSupporter42.deserializeObjectConverter5();
        retrofit.Profiler profiler46 = null;
        retrofit.ErrorHandler errorHandler47 = null;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor49 = null;
        builder48.sethttpExecutor(executor49);
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        builder48.log = log51;
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter(server35, provider36, executor37, executor38, requestInterceptor41, (retrofit.converter.Converter) gsonConverter45, profiler46, errorHandler47, log51, logLevel53);
        java.util.concurrent.Executor executor55 = restAdapter54.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor56 = restAdapter54.requestInterceptor;
        retrofit.RestAdapter.Builder builder57 = builder23.setRequestInterceptor(requestInterceptor56);
        retrofit.RestAdapter.LogLevel logLevel58 = builder23.logLevel;
        restAdapter22.logLevel = logLevel58;
        java.lang.Throwable throwable60 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter22.logException(throwable60, "Retrofit-Idle");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "GET" + "'", str10, "GET");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "GET" + "'", str16, "GET");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNull(executor30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "GET" + "'", str32, "GET");
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "http://example.com/" + "'", str34, "http://example.com/");
        org.junit.Assert.assertNotNull(server35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Retrofit-" + "'", str40, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor41);
        org.junit.Assert.assertNotNull(request43);
        org.junit.Assert.assertNotNull(request44);
        org.junit.Assert.assertNotNull(gsonConverter45);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor55);
        org.junit.Assert.assertNotNull(requestInterceptor56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0553");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        java.util.concurrent.Executor executor3 = null;
        builder0.httpExecutor = executor3;
        retrofit.client.Client.Provider provider5 = null;
        builder0.setclientProvider(provider5);
        java.util.concurrent.Executor executor7 = builder0.gethttpExecutor();
        retrofit.Server server8 = builder0.server;
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter3();
        java.lang.String str12 = serializedObjectSupporter9.deserializeObjectString4();
        retrofit.Server server13 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter17.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request21 = serializedObjectSupporter20.deserializeObjectRequest1();
        retrofit.client.Request request22 = serializedObjectSupporter20.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler24 = null;
        retrofit.ErrorHandler errorHandler25 = null;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor27 = null;
        builder26.sethttpExecutor(executor27);
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        builder26.log = log29;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor19, (retrofit.converter.Converter) gsonConverter23, profiler24, errorHandler25, log29, logLevel31);
        java.util.concurrent.Executor executor33 = restAdapter32.getcallbackExecutor();
        java.util.concurrent.Executor executor34 = restAdapter32.callbackExecutor;
        java.lang.String str35 = restAdapter32.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor36 = restAdapter32.httpExecutor;
        retrofit.Profiler profiler37 = restAdapter32.getprofiler();
        retrofit.Server server38 = restAdapter32.getserver();
        retrofit.RestAdapter.Builder builder39 = builder0.setServer(server38);
        java.util.concurrent.Executor executor40 = null;
        builder39.callbackExecutor = executor40;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(server8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "GET" + "'", str10, "GET");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Retrofit-" + "'", str18, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(request22);
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor33);
        org.junit.Assert.assertNull(executor34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Retrofit-Idle" + "'", str35, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor36);
        org.junit.Assert.assertNull(profiler37);
        org.junit.Assert.assertNotNull(server38);
        org.junit.Assert.assertNotNull(builder39);
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0554");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        java.util.concurrent.Executor executor5 = null;
        builder0.httpExecutor = executor5;
        java.util.concurrent.Executor executor7 = null;
        builder0.setcallbackExecutor(executor7);
        retrofit.client.Client.Provider provider9 = null;
        builder0.setclientProvider(provider9);
        retrofit.converter.Converter converter11 = builder0.converter;
        builder0.ensureSaneDefaults();
        org.junit.Assert.assertNull(converter11);
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0555");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter7();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter4);
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0556");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request6 = serializedObjectSupporter5.deserializeObjectRequest1();
        retrofit.client.Request request7 = serializedObjectSupporter5.deserializeObjectRequest8();
        retrofit.client.Request request8 = serializedObjectSupporter5.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler9 = serializedObjectSupporter5.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder10 = builder0.setErrorHandler(errorHandler9);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(errorHandler9);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0557");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = retrofit.RestAdapter.Log.NONE;
        builder0.log = log3;
        retrofit.Profiler profiler5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder6 = builder0.setProfiler(profiler5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log3);
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0558");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.getconverter();
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean27 = logLevel26.log();
        boolean boolean28 = logLevel26.log();
        restAdapter23.setLogLevel(logLevel26);
        boolean boolean30 = logLevel26.log();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0559");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter7();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(gsonConverter6);
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0560");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor27 = restAdapter23.getrequestInterceptor();
        retrofit.converter.Converter converter28 = restAdapter23.getconverter();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = restAdapter23.serializedObjectSupporter;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(converter28);
        org.junit.Assert.assertNull(serializedObjectSupporter29);
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0561");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest4();
        java.lang.String str6 = request5.getMethod();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "GET" + "'", str6, "GET");
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0562");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter7();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.RequestInterceptor requestInterceptor6 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter8();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(requestInterceptor6);
        org.junit.Assert.assertNotNull(gsonConverter7);
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0563");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.converter.Converter converter4 = builder3.converter;
        retrofit.Profiler profiler5 = builder3.profiler;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor7 = null;
        builder6.setcallbackExecutor(executor7);
        retrofit.converter.Converter converter9 = builder6.converter;
        retrofit.RestAdapter.Builder builder11 = builder6.setServer("GET");
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor13 = null;
        builder12.sethttpExecutor(executor13);
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter3();
        builder12.converter = gsonConverter17;
        retrofit.client.Client.Provider provider19 = null;
        builder12.clientProvider = provider19;
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = new retrofit.SerializedObjectSupporter();
        java.lang.String str22 = serializedObjectSupporter21.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter21.deserializeObjectConverter3();
        java.lang.String str24 = serializedObjectSupporter21.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter21.deserializeObjectConverter6();
        builder12.converter = gsonConverter25;
        builder6.converter = gsonConverter25;
        retrofit.RestAdapter.Builder builder28 = builder3.setConverter((retrofit.converter.Converter) gsonConverter25);
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNull(profiler5);
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "GET" + "'", str16, "GET");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "GET" + "'", str22, "GET");
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(builder28);
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0564");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        retrofit.RestAdapter.Log log5 = builder0.log;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request7 = serializedObjectSupporter6.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter6.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter6.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder10 = builder0.setConverter((retrofit.converter.Converter) gsonConverter9);
        retrofit.ErrorHandler errorHandler11 = null;
        builder10.errorHandler = errorHandler11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor14 = null;
        builder13.sethttpExecutor(executor14);
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter16.deserializeObjectConverter3();
        builder13.converter = gsonConverter18;
        retrofit.client.Client.Provider provider20 = null;
        builder13.clientProvider = provider20;
        retrofit.client.Client.Provider provider22 = null;
        builder13.setclientProvider(provider22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = builder24.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = builder24.serializedObjectSupporter;
        java.util.concurrent.Executor executor27 = null;
        builder24.httpExecutor = executor27;
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request30 = serializedObjectSupporter29.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter2();
        builder24.serializedObjectSupporter = serializedObjectSupporter29;
        retrofit.client.Request request33 = serializedObjectSupporter29.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter34 = serializedObjectSupporter29.deserializeObjectConverter5();
        retrofit.Server server35 = serializedObjectSupporter29.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder36 = builder13.setServer(server35);
        retrofit.client.Client.Provider provider37 = builder13.clientProvider;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        builder38.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler40 = builder38.errorHandler;
        java.util.concurrent.Executor executor41 = builder38.getcallbackExecutor();
        builder13.sethttpExecutor(executor41);
        builder10.callbackExecutor = executor41;
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "GET" + "'", str17, "GET");
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNull(serializedObjectSupporter25);
        org.junit.Assert.assertNull(serializedObjectSupporter26);
        org.junit.Assert.assertNotNull(request30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(request33);
        org.junit.Assert.assertNotNull(gsonConverter34);
        org.junit.Assert.assertNotNull(server35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(provider37);
        org.junit.Assert.assertNotNull(errorHandler40);
        org.junit.Assert.assertNotNull(executor41);
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0565");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        java.lang.String str26 = serializedObjectSupporter25.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter25.deserializeObjectConverter3();
        java.lang.String str28 = serializedObjectSupporter25.deserializeObjectString4();
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter25;
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter23.getLogLevel();
        java.lang.String str31 = restAdapter23.getTHREAD_PREFIX();
        java.util.concurrent.Executor executor32 = restAdapter23.callbackExecutor;
        retrofit.converter.Converter converter33 = restAdapter23.getconverter();
        retrofit.client.Client.Provider provider34 = restAdapter23.getclientProvider();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter23.logLevel;
        boolean boolean36 = logLevel35.log();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "GET" + "'", str26, "GET");
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Retrofit-" + "'", str31, "Retrofit-");
        org.junit.Assert.assertNull(executor32);
        org.junit.Assert.assertNotNull(converter33);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0566");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.mime.TypedOutput typedOutput6 = request5.getBody();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNull(typedOutput6);
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0567");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest8();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest5();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString4();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0568");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = builder0.log;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor3 = null;
        builder2.setcallbackExecutor(executor3);
        java.util.concurrent.Executor executor5 = null;
        builder2.setcallbackExecutor(executor5);
        retrofit.client.Client.Provider provider7 = null;
        builder2.clientProvider = provider7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = builder9.serializedObjectSupporter;
        retrofit.Profiler profiler11 = builder9.profiler;
        retrofit.RestAdapter.LogLevel logLevel12 = builder9.logLevel;
        builder2.logLevel = logLevel12;
        builder0.logLevel = logLevel12;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter3();
        java.lang.String str18 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.Server server19 = serializedObjectSupporter15.deserializeObjectServer1();
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request27 = serializedObjectSupporter26.deserializeObjectRequest1();
        retrofit.client.Request request28 = serializedObjectSupporter26.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter5();
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor33 = null;
        builder32.sethttpExecutor(executor33);
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        builder32.log = log35;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor25, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler31, log35, logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = restAdapter38.getLogLevel();
        retrofit.converter.Converter converter40 = restAdapter38.getconverter();
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean42 = logLevel41.log();
        boolean boolean43 = logLevel41.log();
        restAdapter38.setLogLevel(logLevel41);
        builder0.logLevel = logLevel41;
        org.junit.Assert.assertNull(log1);
        org.junit.Assert.assertNull(serializedObjectSupporter10);
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "GET" + "'", str16, "GET");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(server19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Retrofit-" + "'", str24, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(request27);
        org.junit.Assert.assertNotNull(request28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0569");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        retrofit.Profiler profiler5 = null;
        builder0.profiler = profiler5;
        java.util.concurrent.Executor executor7 = builder0.callbackExecutor;
        retrofit.client.Client.Provider provider8 = builder0.getclientProvider();
        retrofit.RequestInterceptor requestInterceptor9 = builder0.requestInterceptor;
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(requestInterceptor9);
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0570");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        retrofit.ErrorHandler errorHandler27 = restAdapter23.geterrorHandler();
        java.util.concurrent.Executor executor28 = restAdapter23.gethttpExecutor();
        java.util.concurrent.Executor executor29 = restAdapter23.callbackExecutor;
        retrofit.converter.Converter converter30 = restAdapter23.converter;
        retrofit.Server server31 = restAdapter23.getserver();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNull(errorHandler27);
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNull(executor29);
        org.junit.Assert.assertNotNull(converter30);
        org.junit.Assert.assertNotNull(server31);
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0571");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter3();
        builder0.converter = gsonConverter5;
        retrofit.client.Client.Provider provider7 = null;
        builder0.clientProvider = provider7;
        retrofit.client.Client.Provider provider9 = null;
        builder0.setclientProvider(provider9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = builder11.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = builder11.serializedObjectSupporter;
        java.util.concurrent.Executor executor14 = null;
        builder11.httpExecutor = executor14;
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request17 = serializedObjectSupporter16.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter16.deserializeObjectConverter2();
        builder11.serializedObjectSupporter = serializedObjectSupporter16;
        retrofit.client.Request request20 = serializedObjectSupporter16.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter16.deserializeObjectConverter5();
        retrofit.Server server22 = serializedObjectSupporter16.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder23 = builder0.setServer(server22);
        retrofit.client.Client.Provider provider24 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor26 = null;
        builder25.setcallbackExecutor(executor26);
        retrofit.RequestInterceptor requestInterceptor28 = builder25.requestInterceptor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        java.lang.String str30 = serializedObjectSupporter29.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter3();
        java.lang.String str32 = serializedObjectSupporter29.deserializeObjectString4();
        retrofit.client.Request request33 = serializedObjectSupporter29.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler34 = serializedObjectSupporter29.deserializeObjectErrorHandler1();
        builder25.errorHandler = errorHandler34;
        retrofit.RestAdapter.Builder builder36 = builder0.setErrorHandler(errorHandler34);
        retrofit.RestAdapter.Builder builder38 = builder36.setServer("POST");
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = builder38.serializedObjectSupporter;
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNull(serializedObjectSupporter12);
        org.junit.Assert.assertNull(serializedObjectSupporter13);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(request20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNotNull(server22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNull(requestInterceptor28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "GET" + "'", str30, "GET");
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "http://example.com/" + "'", str32, "http://example.com/");
        org.junit.Assert.assertNotNull(request33);
        org.junit.Assert.assertNotNull(errorHandler34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(serializedObjectSupporter39);
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0572");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = retrofit.RestAdapter.Log.NONE;
        builder0.log = log3;
        log3.log("");
        log3.log("POST");
        log3.log("");
        org.junit.Assert.assertNotNull(log3);
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0573");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter23.logLevel = logLevel25;
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = restAdapter23.serializedObjectSupporter;
        retrofit.RestAdapter.Log log28 = restAdapter23.log;
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request30 = serializedObjectSupporter29.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter32 = serializedObjectSupporter29.deserializeObjectConverter8();
        java.lang.String str33 = serializedObjectSupporter29.deserializeObjectString4();
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter29;
        retrofit.RestAdapter.RestHandler restHandler35 = restAdapter23.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        java.lang.String str37 = serializedObjectSupporter36.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter3();
        java.lang.String str39 = serializedObjectSupporter36.deserializeObjectString4();
        retrofit.client.Request request40 = serializedObjectSupporter36.deserializeObjectRequest3();
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter36;
        retrofit.client.Request request42 = serializedObjectSupporter36.deserializeObjectRequest1();
        java.lang.String str43 = request42.method;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(serializedObjectSupporter27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(request30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(gsonConverter32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "GET" + "'", str37, "GET");
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "http://example.com/" + "'", str39, "http://example.com/");
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(request42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "GET" + "'", str43, "GET");
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0574");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter7();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(gsonConverter5);
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0575");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest3();
        java.lang.String str7 = request6.method;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "POST" + "'", str7, "POST");
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0576");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.getconverter();
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean27 = logLevel26.log();
        boolean boolean28 = logLevel26.log();
        restAdapter23.setLogLevel(logLevel26);
        retrofit.client.Client.Provider provider30 = restAdapter23.getclientProvider();
        retrofit.Server server31 = restAdapter23.getserver();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(provider30);
        org.junit.Assert.assertNotNull(server31);
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0577");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        java.lang.String str26 = serializedObjectSupporter25.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter25.deserializeObjectConverter3();
        java.lang.String str28 = serializedObjectSupporter25.deserializeObjectString4();
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter25;
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter23.getLogLevel();
        java.lang.String str31 = restAdapter23.getTHREAD_PREFIX();
        java.util.concurrent.Executor executor32 = restAdapter23.callbackExecutor;
        retrofit.converter.Converter converter33 = restAdapter23.getconverter();
        retrofit.client.Client.Provider provider34 = restAdapter23.getclientProvider();
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        java.lang.String str36 = serializedObjectSupporter35.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter3();
        java.lang.String str38 = serializedObjectSupporter35.deserializeObjectString4();
        retrofit.Server server39 = serializedObjectSupporter35.deserializeObjectServer1();
        retrofit.client.Client.Provider provider40 = null;
        java.util.concurrent.Executor executor41 = null;
        java.util.concurrent.Executor executor42 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        java.lang.String str44 = serializedObjectSupporter43.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor45 = serializedObjectSupporter43.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request47 = serializedObjectSupporter46.deserializeObjectRequest1();
        retrofit.client.Request request48 = serializedObjectSupporter46.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter49 = serializedObjectSupporter46.deserializeObjectConverter5();
        retrofit.Profiler profiler50 = null;
        retrofit.ErrorHandler errorHandler51 = null;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor53 = null;
        builder52.sethttpExecutor(executor53);
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        builder52.log = log55;
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter58 = new retrofit.RestAdapter(server39, provider40, executor41, executor42, requestInterceptor45, (retrofit.converter.Converter) gsonConverter49, profiler50, errorHandler51, log55, logLevel57);
        java.util.concurrent.Executor executor59 = restAdapter58.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor60 = restAdapter58.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor61 = restAdapter58.requestInterceptor;
        retrofit.ErrorHandler errorHandler62 = restAdapter58.geterrorHandler();
        java.util.concurrent.Executor executor63 = restAdapter58.gethttpExecutor();
        java.lang.String str64 = restAdapter58.getTHREAD_PREFIX();
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request66 = serializedObjectSupporter65.deserializeObjectRequest1();
        retrofit.client.Request request67 = serializedObjectSupporter65.deserializeObjectRequest5();
        retrofit.client.Request request68 = restAdapter58.logAndReplaceRequest(request67);
        retrofit.client.Request request69 = restAdapter23.logAndReplaceRequest(request68);
        java.lang.Class<?> wildcardClass70 = request69.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "GET" + "'", str26, "GET");
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Retrofit-" + "'", str31, "Retrofit-");
        org.junit.Assert.assertNull(executor32);
        org.junit.Assert.assertNotNull(converter33);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "GET" + "'", str36, "GET");
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "http://example.com/" + "'", str38, "http://example.com/");
        org.junit.Assert.assertNotNull(server39);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Retrofit-" + "'", str44, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor45);
        org.junit.Assert.assertNotNull(request47);
        org.junit.Assert.assertNotNull(request48);
        org.junit.Assert.assertNotNull(gsonConverter49);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor59);
        org.junit.Assert.assertNotNull(requestInterceptor60);
        org.junit.Assert.assertNotNull(requestInterceptor61);
        org.junit.Assert.assertNull(errorHandler62);
        org.junit.Assert.assertNull(executor63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Retrofit-" + "'", str64, "Retrofit-");
        org.junit.Assert.assertNotNull(request66);
        org.junit.Assert.assertNotNull(request67);
        org.junit.Assert.assertNotNull(request68);
        org.junit.Assert.assertNotNull(request69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0578");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        java.util.List<retrofit.client.Header> headerList2 = request1.headers;
        java.util.List<retrofit.client.Header> headerList3 = request1.headers;
        java.lang.String str4 = request1.getUrl();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(headerList2);
        org.junit.Assert.assertNotNull(headerList3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0579");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter8();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.Server server6 = serializedObjectSupporter0.deserializeObjectServer1();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(server6);
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0580");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "GET" + "'", str5, "GET");
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(gsonConverter7);
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0581");
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request3 = serializedObjectSupporter2.deserializeObjectRequest1();
        retrofit.client.Request request4 = serializedObjectSupporter2.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter2.deserializeObjectConverter5();
        retrofit.client.Request request6 = serializedObjectSupporter2.deserializeObjectRequest4();
        java.util.List<retrofit.client.Header> headerList7 = request6.headers;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = builder8.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = builder8.serializedObjectSupporter;
        java.util.concurrent.Executor executor11 = null;
        builder8.httpExecutor = executor11;
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request14 = serializedObjectSupporter13.deserializeObjectRequest1();
        retrofit.Server server15 = serializedObjectSupporter13.deserializeObjectServer1();
        java.lang.String str16 = serializedObjectSupporter13.deserializeObjectString3();
        builder8.serializedObjectSupporter = serializedObjectSupporter13;
        retrofit.mime.TypedString typedString18 = serializedObjectSupporter13.deserializeObjectTypedOutput2();
        retrofit.client.Request request19 = new retrofit.client.Request("GET", "", headerList7, (retrofit.mime.TypedOutput) typedString18);
        java.lang.String str20 = request19.url;
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertNull(serializedObjectSupporter10);
        org.junit.Assert.assertNotNull(request14);
        org.junit.Assert.assertNotNull(server15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "GET" + "'", str16, "GET");
        org.junit.Assert.assertNotNull(typedString18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0582");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        retrofit.RestAdapter.Log log5 = builder0.log;
        retrofit.Profiler profiler6 = builder0.profiler;
        retrofit.RestAdapter.Builder builder8 = builder0.setServer("http://example.com/");
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request10 = serializedObjectSupporter9.deserializeObjectRequest1();
        retrofit.client.Request request11 = serializedObjectSupporter9.deserializeObjectRequest5();
        java.lang.String str12 = serializedObjectSupporter9.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter9.deserializeObjectConverter7();
        builder0.converter = gsonConverter13;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter3();
        java.lang.String str18 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.Server server19 = serializedObjectSupporter15.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter15.deserializeObjectConverter6();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter15.deserializeObjectConverter6();
        retrofit.client.Request request22 = serializedObjectSupporter15.deserializeObjectRequest7();
        builder0.serializedObjectSupporter = serializedObjectSupporter15;
        retrofit.client.Request request24 = serializedObjectSupporter15.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter15.deserializeObjectConverter5();
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNull(profiler6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "POST" + "'", str12, "POST");
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "GET" + "'", str16, "GET");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(server19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNotNull(request22);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0583");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        java.util.concurrent.Executor executor5 = null;
        builder0.httpExecutor = executor5;
        java.util.concurrent.Executor executor7 = null;
        builder0.setcallbackExecutor(executor7);
        retrofit.client.Client.Provider provider9 = null;
        builder0.setclientProvider(provider9);
        retrofit.RestAdapter.Builder builder12 = builder0.setServer("Retrofit-Idle");
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request14 = serializedObjectSupporter13.deserializeObjectRequest1();
        retrofit.Server server15 = serializedObjectSupporter13.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder16 = builder12.setServer(server15);
        retrofit.client.Client.Provider provider17 = builder12.clientProvider;
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(request14);
        org.junit.Assert.assertNotNull(server15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNull(provider17);
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0584");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest4();
        java.util.List<retrofit.client.Header> headerList5 = request4.headers;
        java.util.List<retrofit.client.Header> headerList6 = request4.headers;
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(headerList5);
        org.junit.Assert.assertNotNull(headerList6);
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0585");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest8();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter4 = serializedObjectSupporter0.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0586");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        java.lang.String str27 = restAdapter23.getTHREAD_PREFIX();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = restAdapter23.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter23.logLevel;
        java.lang.String str30 = restAdapter23.getTHREAD_PREFIX();
        retrofit.client.Client.Provider provider31 = restAdapter23.clientProvider;
        retrofit.Server server32 = restAdapter23.getserver();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Retrofit-" + "'", str27, "Retrofit-");
        org.junit.Assert.assertNull(serializedObjectSupporter28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Retrofit-" + "'", str30, "Retrofit-");
        org.junit.Assert.assertNull(provider31);
        org.junit.Assert.assertNotNull(server32);
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0587");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.getconverter();
        java.util.concurrent.Executor executor26 = restAdapter23.httpExecutor;
        retrofit.client.Client.Provider provider27 = restAdapter23.clientProvider;
        retrofit.RequestInterceptor requestInterceptor28 = restAdapter23.getrequestInterceptor();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertNotNull(requestInterceptor28);
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0588");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter3();
        builder0.converter = gsonConverter5;
        retrofit.client.Client.Provider provider7 = null;
        builder0.clientProvider = provider7;
        retrofit.client.Client.Provider provider9 = null;
        builder0.setclientProvider(provider9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = builder11.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = builder11.serializedObjectSupporter;
        java.util.concurrent.Executor executor14 = null;
        builder11.httpExecutor = executor14;
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request17 = serializedObjectSupporter16.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter16.deserializeObjectConverter2();
        builder11.serializedObjectSupporter = serializedObjectSupporter16;
        retrofit.client.Request request20 = serializedObjectSupporter16.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter16.deserializeObjectConverter5();
        retrofit.Server server22 = serializedObjectSupporter16.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder23 = builder0.setServer(server22);
        retrofit.client.Client.Provider provider24 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor26 = null;
        builder25.setcallbackExecutor(executor26);
        retrofit.RequestInterceptor requestInterceptor28 = builder25.requestInterceptor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        java.lang.String str30 = serializedObjectSupporter29.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter3();
        java.lang.String str32 = serializedObjectSupporter29.deserializeObjectString4();
        retrofit.client.Request request33 = serializedObjectSupporter29.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler34 = serializedObjectSupporter29.deserializeObjectErrorHandler1();
        builder25.errorHandler = errorHandler34;
        retrofit.RestAdapter.Builder builder36 = builder0.setErrorHandler(errorHandler34);
        retrofit.RestAdapter.Builder builder38 = builder36.setServer("POST");
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor40 = null;
        builder39.sethttpExecutor(executor40);
        retrofit.RequestInterceptor requestInterceptor42 = null;
        builder39.requestInterceptor = requestInterceptor42;
        java.util.concurrent.Executor executor44 = null;
        builder39.httpExecutor = executor44;
        java.util.concurrent.Executor executor46 = null;
        builder39.setcallbackExecutor(executor46);
        java.util.concurrent.Executor executor48 = builder39.callbackExecutor;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor50 = null;
        builder49.sethttpExecutor(executor50);
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = new retrofit.SerializedObjectSupporter();
        java.lang.String str53 = serializedObjectSupporter52.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter54 = serializedObjectSupporter52.deserializeObjectConverter3();
        builder49.converter = gsonConverter54;
        retrofit.client.Client.Provider provider56 = null;
        builder49.clientProvider = provider56;
        retrofit.RestAdapter.LogLevel logLevel58 = builder49.logLevel;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor60 = null;
        builder59.sethttpExecutor(executor60);
        retrofit.RequestInterceptor requestInterceptor62 = null;
        builder59.requestInterceptor = requestInterceptor62;
        retrofit.converter.Converter converter64 = builder59.converter;
        java.util.concurrent.Executor executor65 = null;
        builder59.httpExecutor = executor65;
        retrofit.RestAdapter.LogLevel logLevel67 = builder59.logLevel;
        builder49.logLevel = logLevel67;
        java.util.concurrent.Executor executor69 = builder49.callbackExecutor;
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider71 = builder70.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder73 = builder70.setLogLevel(logLevel72);
        retrofit.converter.Converter converter74 = builder73.converter;
        builder73.ensureSaneDefaults();
        retrofit.client.Client.Provider provider76 = builder73.clientProvider;
        builder49.setclientProvider(provider76);
        builder39.setclientProvider(provider76);
        builder38.clientProvider = provider76;
        builder38.ensureSaneDefaults();
        retrofit.client.Client client81 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder82 = builder38.setClient(client81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNull(serializedObjectSupporter12);
        org.junit.Assert.assertNull(serializedObjectSupporter13);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(request20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNotNull(server22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNull(requestInterceptor28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "GET" + "'", str30, "GET");
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "http://example.com/" + "'", str32, "http://example.com/");
        org.junit.Assert.assertNotNull(request33);
        org.junit.Assert.assertNotNull(errorHandler34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(executor48);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "GET" + "'", str53, "GET");
        org.junit.Assert.assertNotNull(gsonConverter54);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter64);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor69);
        org.junit.Assert.assertNull(provider71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNull(converter74);
        org.junit.Assert.assertNotNull(provider76);
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0589");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        java.util.concurrent.Executor executor3 = null;
        builder0.httpExecutor = executor3;
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request6 = serializedObjectSupporter5.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter5.deserializeObjectConverter2();
        builder0.serializedObjectSupporter = serializedObjectSupporter5;
        retrofit.client.Request request9 = serializedObjectSupporter5.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter5.deserializeObjectConverter5();
        retrofit.client.Request request11 = serializedObjectSupporter5.deserializeObjectRequest1();
        retrofit.client.Request request12 = serializedObjectSupporter5.deserializeObjectRequest3();
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(request9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertNotNull(request12);
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0590");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        java.lang.String str26 = restAdapter23.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        retrofit.Profiler profiler28 = restAdapter23.getprofiler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = restAdapter23.serializedObjectSupporter;
        retrofit.Profiler profiler30 = restAdapter23.profiler;
        java.lang.String str31 = restAdapter23.getTHREAD_PREFIX();
        retrofit.RestAdapter.Log log32 = restAdapter23.log;
        log32.log("POST");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertNull(serializedObjectSupporter29);
        org.junit.Assert.assertNull(profiler30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Retrofit-" + "'", str31, "Retrofit-");
        org.junit.Assert.assertNotNull(log32);
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0591");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = builder4.serializedObjectSupporter;
        retrofit.client.Client.Provider provider6 = null;
        builder4.setclientProvider(provider6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor9 = null;
        builder8.sethttpExecutor(executor9);
        retrofit.RestAdapter.Log log11 = null;
        builder8.log = log11;
        java.util.concurrent.Executor executor13 = builder8.callbackExecutor;
        retrofit.RestAdapter.Log log14 = retrofit.RestAdapter.Log.NONE;
        builder8.log = log14;
        retrofit.RestAdapter.Builder builder16 = builder4.setLog(log14);
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter17.deserializeObjectConverter3();
        java.lang.String str20 = serializedObjectSupporter17.deserializeObjectString4();
        retrofit.client.Request request21 = serializedObjectSupporter17.deserializeObjectRequest6();
        retrofit.Server server22 = serializedObjectSupporter17.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder23 = builder16.setServer(server22);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer(server22);
        retrofit.Profiler profiler25 = builder0.profiler;
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(serializedObjectSupporter5);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNotNull(log14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "GET" + "'", str18, "GET");
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "http://example.com/" + "'", str20, "http://example.com/");
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(server22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(profiler25);
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0592");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter8();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString3();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0593");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        java.lang.String str27 = restAdapter23.getTHREAD_PREFIX();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = restAdapter23.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter23.logLevel;
        java.lang.String str30 = restAdapter23.getTHREAD_PREFIX();
        retrofit.Profiler profiler31 = restAdapter23.getprofiler();
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter23.logLevel;
        retrofit.Profiler profiler33 = restAdapter23.getprofiler();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Retrofit-" + "'", str27, "Retrofit-");
        org.junit.Assert.assertNull(serializedObjectSupporter28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Retrofit-" + "'", str30, "Retrofit-");
        org.junit.Assert.assertNull(profiler31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(profiler33);
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0594");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter7();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter7();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter7();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(gsonConverter5);
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0595");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        java.lang.String str26 = restAdapter23.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        java.util.concurrent.Executor executor28 = restAdapter23.httpExecutor;
        java.util.concurrent.Executor executor29 = restAdapter23.httpExecutor;
        java.lang.Class<?> wildcardClass30 = restAdapter23.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNull(executor29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0596");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = builder4.serializedObjectSupporter;
        retrofit.client.Client.Provider provider6 = null;
        builder4.setclientProvider(provider6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor9 = null;
        builder8.sethttpExecutor(executor9);
        retrofit.RestAdapter.Log log11 = null;
        builder8.log = log11;
        java.util.concurrent.Executor executor13 = builder8.callbackExecutor;
        retrofit.RestAdapter.Log log14 = retrofit.RestAdapter.Log.NONE;
        builder8.log = log14;
        retrofit.RestAdapter.Builder builder16 = builder4.setLog(log14);
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter17.deserializeObjectConverter3();
        java.lang.String str20 = serializedObjectSupporter17.deserializeObjectString4();
        retrofit.client.Request request21 = serializedObjectSupporter17.deserializeObjectRequest6();
        retrofit.Server server22 = serializedObjectSupporter17.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder23 = builder16.setServer(server22);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer(server22);
        retrofit.Profiler profiler25 = builder24.profiler;
        retrofit.RestAdapter.Builder builder27 = builder24.setServer("GET");
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor29 = null;
        builder28.sethttpExecutor(executor29);
        retrofit.RequestInterceptor requestInterceptor31 = null;
        builder28.requestInterceptor = requestInterceptor31;
        retrofit.converter.Converter converter33 = builder28.converter;
        java.util.concurrent.Executor executor34 = null;
        builder28.httpExecutor = executor34;
        java.util.concurrent.Executor executor36 = null;
        builder28.httpExecutor = executor36;
        retrofit.Profiler profiler38 = null;
        builder28.profiler = profiler38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider41 = builder40.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder43 = builder40.setLogLevel(logLevel42);
        retrofit.converter.Converter converter44 = builder43.converter;
        builder43.ensureSaneDefaults();
        retrofit.client.Client.Provider provider46 = builder43.clientProvider;
        retrofit.RestAdapter.Builder builder47 = builder28.setClient(provider46);
        retrofit.RestAdapter.Builder builder48 = builder24.setClient(provider46);
        retrofit.Profiler profiler49 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder50 = builder24.setProfiler(profiler49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(serializedObjectSupporter5);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNotNull(log14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "GET" + "'", str18, "GET");
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "http://example.com/" + "'", str20, "http://example.com/");
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(server22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(profiler25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNull(converter33);
        org.junit.Assert.assertNull(provider41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(converter44);
        org.junit.Assert.assertNotNull(provider46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0597");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        java.util.concurrent.Executor executor5 = null;
        builder0.httpExecutor = executor5;
        java.util.concurrent.Executor executor7 = null;
        builder0.setcallbackExecutor(executor7);
        retrofit.client.Client.Provider provider9 = null;
        builder0.setclientProvider(provider9);
        retrofit.RestAdapter.Builder builder12 = builder0.setServer("Retrofit-Idle");
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter13.deserializeObjectConverter3();
        java.lang.String str16 = serializedObjectSupporter13.deserializeObjectString4();
        retrofit.Server server17 = serializedObjectSupporter13.deserializeObjectServer1();
        retrofit.client.Client.Provider provider18 = null;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = new retrofit.SerializedObjectSupporter();
        java.lang.String str22 = serializedObjectSupporter21.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor23 = serializedObjectSupporter21.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request25 = serializedObjectSupporter24.deserializeObjectRequest1();
        retrofit.client.Request request26 = serializedObjectSupporter24.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter24.deserializeObjectConverter5();
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor31 = null;
        builder30.sethttpExecutor(executor31);
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        builder30.log = log33;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter(server17, provider18, executor19, executor20, requestInterceptor23, (retrofit.converter.Converter) gsonConverter27, profiler28, errorHandler29, log33, logLevel35);
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.converter.Converter converter38 = restAdapter36.converter;
        retrofit.RequestInterceptor requestInterceptor39 = restAdapter36.requestInterceptor;
        builder12.requestInterceptor = requestInterceptor39;
        retrofit.client.Client.Provider provider41 = builder12.clientProvider;
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "GET" + "'", str14, "GET");
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(server17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Retrofit-" + "'", str22, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor23);
        org.junit.Assert.assertNotNull(request25);
        org.junit.Assert.assertNotNull(request26);
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter38);
        org.junit.Assert.assertNotNull(requestInterceptor39);
        org.junit.Assert.assertNull(provider41);
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0598");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.client.Client.Provider provider2 = null;
        builder0.setclientProvider(provider2);
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor5 = null;
        builder4.sethttpExecutor(executor5);
        retrofit.RestAdapter.Log log7 = null;
        builder4.log = log7;
        java.util.concurrent.Executor executor9 = builder4.callbackExecutor;
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        builder4.log = log10;
        retrofit.RestAdapter.Builder builder12 = builder0.setLog(log10);
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter13.deserializeObjectConverter3();
        java.lang.String str16 = serializedObjectSupporter13.deserializeObjectString4();
        retrofit.client.Request request17 = serializedObjectSupporter13.deserializeObjectRequest6();
        retrofit.Server server18 = serializedObjectSupporter13.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder19 = builder12.setServer(server18);
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest1();
        retrofit.client.Request request25 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.RequestInterceptor requestInterceptor26 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request28 = serializedObjectSupporter27.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter27.deserializeObjectConverter2();
        retrofit.Profiler profiler30 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        java.lang.String str32 = serializedObjectSupporter31.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter3();
        java.lang.String str34 = serializedObjectSupporter31.deserializeObjectString4();
        retrofit.client.Request request35 = serializedObjectSupporter31.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler36 = serializedObjectSupporter31.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = builder37.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = builder37.serializedObjectSupporter;
        retrofit.client.Client.Provider provider40 = null;
        builder37.clientProvider = provider40;
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        builder37.log = log42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor45 = null;
        builder44.setcallbackExecutor(executor45);
        java.util.concurrent.Executor executor47 = null;
        builder44.setcallbackExecutor(executor47);
        retrofit.client.Client.Provider provider49 = null;
        builder44.clientProvider = provider49;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = builder51.serializedObjectSupporter;
        retrofit.Profiler profiler53 = builder51.profiler;
        retrofit.RestAdapter.LogLevel logLevel54 = builder51.logLevel;
        builder44.logLevel = logLevel54;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter(server18, provider20, executor21, executor22, requestInterceptor26, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler36, log42, logLevel54);
        retrofit.Server server57 = restAdapter56.server;
        java.util.concurrent.Executor executor58 = restAdapter56.callbackExecutor;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "GET" + "'", str14, "GET");
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(server18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(request25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNotNull(request28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "GET" + "'", str32, "GET");
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "http://example.com/" + "'", str34, "http://example.com/");
        org.junit.Assert.assertNotNull(request35);
        org.junit.Assert.assertNotNull(errorHandler36);
        org.junit.Assert.assertNull(serializedObjectSupporter38);
        org.junit.Assert.assertNull(serializedObjectSupporter39);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNull(serializedObjectSupporter52);
        org.junit.Assert.assertNull(profiler53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(server57);
        org.junit.Assert.assertNull(executor58);
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0599");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        java.util.concurrent.Executor executor26 = restAdapter23.httpExecutor;
        java.lang.String str27 = restAdapter23.getTHREAD_PREFIX();
        java.lang.String str28 = restAdapter23.getIDLE_THREAD_NAME();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Retrofit-" + "'", str27, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Retrofit-Idle" + "'", str28, "Retrofit-Idle");
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0600");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.ErrorHandler errorHandler4 = null;
        builder0.errorHandler = errorHandler4;
        java.util.concurrent.Executor executor6 = null;
        builder0.sethttpExecutor(executor6);
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter8.deserializeObjectConverter3();
        java.lang.String str11 = serializedObjectSupporter8.deserializeObjectString4();
        retrofit.Server server12 = serializedObjectSupporter8.deserializeObjectServer1();
        retrofit.client.Client.Provider provider13 = null;
        java.util.concurrent.Executor executor14 = null;
        java.util.concurrent.Executor executor15 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor18 = serializedObjectSupporter16.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request20 = serializedObjectSupporter19.deserializeObjectRequest1();
        retrofit.client.Request request21 = serializedObjectSupporter19.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter19.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.ErrorHandler errorHandler24 = null;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor26 = null;
        builder25.sethttpExecutor(executor26);
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        builder25.log = log28;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter(server12, provider13, executor14, executor15, requestInterceptor18, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler24, log28, logLevel30);
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter31.getLogLevel();
        retrofit.converter.Converter converter33 = restAdapter31.getconverter();
        retrofit.RestAdapter.Builder builder34 = builder0.setConverter(converter33);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor36 = null;
        builder35.sethttpExecutor(executor36);
        retrofit.RequestInterceptor requestInterceptor38 = null;
        builder35.requestInterceptor = requestInterceptor38;
        retrofit.converter.Converter converter40 = builder35.converter;
        java.util.concurrent.Executor executor41 = null;
        builder35.httpExecutor = executor41;
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request44 = serializedObjectSupporter43.deserializeObjectRequest1();
        retrofit.Server server45 = serializedObjectSupporter43.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter43.deserializeObjectConverter3();
        builder35.converter = gsonConverter46;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor49 = null;
        builder48.sethttpExecutor(executor49);
        retrofit.SerializedObjectSupporter serializedObjectSupporter51 = new retrofit.SerializedObjectSupporter();
        java.lang.String str52 = serializedObjectSupporter51.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter53 = serializedObjectSupporter51.deserializeObjectConverter3();
        builder48.converter = gsonConverter53;
        retrofit.client.Client.Provider provider55 = null;
        builder48.clientProvider = provider55;
        retrofit.RestAdapter.LogLevel logLevel57 = builder48.logLevel;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor59 = null;
        builder58.sethttpExecutor(executor59);
        retrofit.RequestInterceptor requestInterceptor61 = null;
        builder58.requestInterceptor = requestInterceptor61;
        retrofit.converter.Converter converter63 = builder58.converter;
        java.util.concurrent.Executor executor64 = null;
        builder58.httpExecutor = executor64;
        retrofit.RestAdapter.LogLevel logLevel66 = builder58.logLevel;
        builder48.logLevel = logLevel66;
        java.util.concurrent.Executor executor68 = builder48.callbackExecutor;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider70 = builder69.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder72 = builder69.setLogLevel(logLevel71);
        retrofit.converter.Converter converter73 = builder72.converter;
        builder72.ensureSaneDefaults();
        retrofit.client.Client.Provider provider75 = builder72.clientProvider;
        builder48.setclientProvider(provider75);
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor78 = null;
        builder77.sethttpExecutor(executor78);
        retrofit.RestAdapter.Log log80 = null;
        builder77.log = log80;
        java.util.concurrent.Executor executor82 = builder77.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter83 = builder77.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter84 = builder77.serializedObjectSupporter;
        builder77.ensureSaneDefaults();
        java.util.concurrent.Executor executor86 = builder77.httpExecutor;
        builder48.setcallbackExecutor(executor86);
        retrofit.RestAdapter.Builder builder88 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor89 = null;
        builder88.sethttpExecutor(executor89);
        builder88.ensureSaneDefaults();
        retrofit.client.Client.Provider provider92 = null;
        builder88.setclientProvider(provider92);
        retrofit.client.Client.Provider provider94 = null;
        builder88.setclientProvider(provider94);
        java.util.concurrent.Executor executor96 = builder88.httpExecutor;
        retrofit.RestAdapter.Builder builder97 = builder35.setExecutors(executor86, executor96);
        builder0.sethttpExecutor(executor96);
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "GET" + "'", str9, "GET");
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "http://example.com/" + "'", str11, "http://example.com/");
        org.junit.Assert.assertNotNull(server12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Retrofit-" + "'", str17, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor18);
        org.junit.Assert.assertNotNull(request20);
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNull(converter40);
        org.junit.Assert.assertNotNull(request44);
        org.junit.Assert.assertNotNull(server45);
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "GET" + "'", str52, "GET");
        org.junit.Assert.assertNotNull(gsonConverter53);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter63);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor68);
        org.junit.Assert.assertNull(provider70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNull(converter73);
        org.junit.Assert.assertNotNull(provider75);
        org.junit.Assert.assertNull(executor82);
        org.junit.Assert.assertNull(serializedObjectSupporter83);
        org.junit.Assert.assertNull(serializedObjectSupporter84);
        org.junit.Assert.assertNotNull(executor86);
        org.junit.Assert.assertNotNull(executor96);
        org.junit.Assert.assertNotNull(builder97);
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0601");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.converter.Converter converter4 = builder3.converter;
        java.util.concurrent.Executor executor5 = null;
        builder3.sethttpExecutor(executor5);
        retrofit.RestAdapter.Builder builder8 = builder3.setServer("GET");
        java.util.concurrent.Executor executor9 = builder3.callbackExecutor;
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(executor9);
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0602");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.client.Client.Provider provider2 = null;
        builder0.setclientProvider(provider2);
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor5 = null;
        builder4.sethttpExecutor(executor5);
        retrofit.RestAdapter.Log log7 = null;
        builder4.log = log7;
        java.util.concurrent.Executor executor9 = builder4.callbackExecutor;
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        builder4.log = log10;
        retrofit.RestAdapter.Builder builder12 = builder0.setLog(log10);
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter13.deserializeObjectConverter3();
        java.lang.String str16 = serializedObjectSupporter13.deserializeObjectString4();
        retrofit.client.Request request17 = serializedObjectSupporter13.deserializeObjectRequest6();
        retrofit.Server server18 = serializedObjectSupporter13.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder19 = builder12.setServer(server18);
        retrofit.Profiler profiler20 = null;
        builder12.profiler = profiler20;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "GET" + "'", str14, "GET");
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(server18);
        org.junit.Assert.assertNotNull(builder19);
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0603");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        java.lang.String str25 = restAdapter23.getIDLE_THREAD_NAME();
        java.lang.String str26 = restAdapter23.getTHREAD_PREFIX();
        java.util.concurrent.Executor executor27 = restAdapter23.getcallbackExecutor();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Retrofit-Idle" + "'", str25, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-" + "'", str26, "Retrofit-");
        org.junit.Assert.assertNull(executor27);
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0604");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.RestAdapter.Log log4 = builder3.log;
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.HEADERS;
        builder3.logLevel = logLevel5;
        retrofit.ErrorHandler errorHandler7 = builder3.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request9 = serializedObjectSupporter8.deserializeObjectRequest1();
        retrofit.Server server10 = serializedObjectSupporter8.deserializeObjectServer1();
        java.lang.String str11 = serializedObjectSupporter8.deserializeObjectString3();
        retrofit.client.Request request12 = serializedObjectSupporter8.deserializeObjectRequest4();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter8.deserializeObjectConverter4();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter8.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter8.deserializeObjectConverter1();
        java.lang.String str16 = serializedObjectSupporter8.deserializeObjectString2();
        retrofit.ErrorHandler errorHandler17 = serializedObjectSupporter8.deserializeObjectErrorHandler1();
        builder3.errorHandler = errorHandler17;
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(errorHandler7);
        org.junit.Assert.assertNotNull(request9);
        org.junit.Assert.assertNotNull(server10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "GET" + "'", str11, "GET");
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Retrofit-Idle" + "'", str16, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(errorHandler17);
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0605");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        retrofit.RestAdapter.Log log5 = builder0.log;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request7 = serializedObjectSupporter6.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter6.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter6.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder10 = builder0.setConverter((retrofit.converter.Converter) gsonConverter9);
        retrofit.Profiler profiler11 = builder10.profiler;
        retrofit.converter.Converter converter12 = builder10.converter;
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNotNull(converter12);
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0606");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = null;
        builder0.setcallbackExecutor(executor3);
        retrofit.client.Client.Provider provider5 = null;
        builder0.clientProvider = provider5;
        retrofit.Profiler profiler7 = null;
        builder0.profiler = profiler7;
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter3();
        java.lang.String str12 = serializedObjectSupporter9.deserializeObjectString4();
        retrofit.Server server13 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter17.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request21 = serializedObjectSupporter20.deserializeObjectRequest1();
        retrofit.client.Request request22 = serializedObjectSupporter20.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler24 = null;
        retrofit.ErrorHandler errorHandler25 = null;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor27 = null;
        builder26.sethttpExecutor(executor27);
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        builder26.log = log29;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor19, (retrofit.converter.Converter) gsonConverter23, profiler24, errorHandler25, log29, logLevel31);
        java.util.concurrent.Executor executor33 = restAdapter32.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter32.logLevel = logLevel34;
        retrofit.Profiler profiler36 = restAdapter32.profiler;
        retrofit.client.Client.Provider provider37 = restAdapter32.clientProvider;
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = restAdapter32.serializedObjectSupporter;
        retrofit.converter.Converter converter39 = restAdapter32.converter;
        retrofit.RequestInterceptor requestInterceptor40 = restAdapter32.requestInterceptor;
        retrofit.RestAdapter.Builder builder41 = builder0.setRequestInterceptor(requestInterceptor40);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "GET" + "'", str10, "GET");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Retrofit-" + "'", str18, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(request22);
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(profiler36);
        org.junit.Assert.assertNull(provider37);
        org.junit.Assert.assertNull(serializedObjectSupporter38);
        org.junit.Assert.assertNotNull(converter39);
        org.junit.Assert.assertNotNull(requestInterceptor40);
        org.junit.Assert.assertNotNull(builder41);
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0607");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest1();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.RequestInterceptor requestInterceptor7 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "GET" + "'", str6, "GET");
        org.junit.Assert.assertNotNull(requestInterceptor7);
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0608");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        java.lang.String str26 = restAdapter23.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        retrofit.Profiler profiler28 = restAdapter23.getprofiler();
        java.util.concurrent.Executor executor29 = restAdapter23.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request31 = serializedObjectSupporter30.deserializeObjectRequest1();
        retrofit.client.Request request32 = serializedObjectSupporter30.deserializeObjectRequest8();
        retrofit.client.Request request33 = serializedObjectSupporter30.deserializeObjectRequest1();
        retrofit.client.Request request34 = restAdapter23.logAndReplaceRequest(request33);
        java.lang.String str35 = request34.method;
        retrofit.mime.TypedOutput typedOutput36 = request34.getBody();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertNull(executor29);
        org.junit.Assert.assertNotNull(request31);
        org.junit.Assert.assertNotNull(request32);
        org.junit.Assert.assertNotNull(request33);
        org.junit.Assert.assertNotNull(request34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "GET" + "'", str35, "GET");
        org.junit.Assert.assertNull(typedOutput36);
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0609");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter3();
        builder0.converter = gsonConverter5;
        retrofit.client.Client.Provider provider7 = null;
        builder0.clientProvider = provider7;
        retrofit.client.Client.Provider provider9 = null;
        builder0.setclientProvider(provider9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = builder11.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = builder11.serializedObjectSupporter;
        java.util.concurrent.Executor executor14 = null;
        builder11.httpExecutor = executor14;
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request17 = serializedObjectSupporter16.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter16.deserializeObjectConverter2();
        builder11.serializedObjectSupporter = serializedObjectSupporter16;
        retrofit.client.Request request20 = serializedObjectSupporter16.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter16.deserializeObjectConverter5();
        retrofit.Server server22 = serializedObjectSupporter16.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder23 = builder0.setServer(server22);
        retrofit.client.Client.Provider provider24 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor26 = null;
        builder25.setcallbackExecutor(executor26);
        retrofit.RequestInterceptor requestInterceptor28 = builder25.requestInterceptor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        java.lang.String str30 = serializedObjectSupporter29.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter3();
        java.lang.String str32 = serializedObjectSupporter29.deserializeObjectString4();
        retrofit.client.Request request33 = serializedObjectSupporter29.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler34 = serializedObjectSupporter29.deserializeObjectErrorHandler1();
        builder25.errorHandler = errorHandler34;
        retrofit.RestAdapter.Builder builder36 = builder0.setErrorHandler(errorHandler34);
        retrofit.RestAdapter.Builder builder38 = builder36.setServer("POST");
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        java.lang.String str40 = serializedObjectSupporter39.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter39.deserializeObjectConverter3();
        java.lang.String str42 = serializedObjectSupporter39.deserializeObjectString4();
        retrofit.Server server43 = serializedObjectSupporter39.deserializeObjectServer1();
        retrofit.client.Client.Provider provider44 = null;
        java.util.concurrent.Executor executor45 = null;
        java.util.concurrent.Executor executor46 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        java.lang.String str48 = serializedObjectSupporter47.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor49 = serializedObjectSupporter47.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter50 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request51 = serializedObjectSupporter50.deserializeObjectRequest1();
        retrofit.client.Request request52 = serializedObjectSupporter50.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter53 = serializedObjectSupporter50.deserializeObjectConverter5();
        retrofit.Profiler profiler54 = null;
        retrofit.ErrorHandler errorHandler55 = null;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor57 = null;
        builder56.sethttpExecutor(executor57);
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        builder56.log = log59;
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter62 = new retrofit.RestAdapter(server43, provider44, executor45, executor46, requestInterceptor49, (retrofit.converter.Converter) gsonConverter53, profiler54, errorHandler55, log59, logLevel61);
        java.util.concurrent.Executor executor63 = restAdapter62.getcallbackExecutor();
        java.util.concurrent.Executor executor64 = restAdapter62.callbackExecutor;
        java.lang.String str65 = restAdapter62.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor66 = restAdapter62.httpExecutor;
        retrofit.Profiler profiler67 = restAdapter62.getprofiler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter68 = restAdapter62.serializedObjectSupporter;
        retrofit.Profiler profiler69 = restAdapter62.profiler;
        java.lang.String str70 = restAdapter62.getTHREAD_PREFIX();
        retrofit.RestAdapter.Log log71 = restAdapter62.log;
        builder38.log = log71;
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNull(serializedObjectSupporter12);
        org.junit.Assert.assertNull(serializedObjectSupporter13);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(request20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNotNull(server22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNull(requestInterceptor28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "GET" + "'", str30, "GET");
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "http://example.com/" + "'", str32, "http://example.com/");
        org.junit.Assert.assertNotNull(request33);
        org.junit.Assert.assertNotNull(errorHandler34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "GET" + "'", str40, "GET");
        org.junit.Assert.assertNotNull(gsonConverter41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "http://example.com/" + "'", str42, "http://example.com/");
        org.junit.Assert.assertNotNull(server43);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Retrofit-" + "'", str48, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNotNull(request51);
        org.junit.Assert.assertNotNull(request52);
        org.junit.Assert.assertNotNull(gsonConverter53);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor63);
        org.junit.Assert.assertNull(executor64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Retrofit-Idle" + "'", str65, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor66);
        org.junit.Assert.assertNull(profiler67);
        org.junit.Assert.assertNull(serializedObjectSupporter68);
        org.junit.Assert.assertNull(profiler69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Retrofit-" + "'", str70, "Retrofit-");
        org.junit.Assert.assertNotNull(log71);
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0610");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter3();
        builder0.converter = gsonConverter5;
        retrofit.client.Client.Provider provider7 = null;
        builder0.clientProvider = provider7;
        retrofit.RestAdapter.LogLevel logLevel9 = builder0.logLevel;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor11 = null;
        builder10.sethttpExecutor(executor11);
        retrofit.RequestInterceptor requestInterceptor13 = null;
        builder10.requestInterceptor = requestInterceptor13;
        retrofit.converter.Converter converter15 = builder10.converter;
        java.util.concurrent.Executor executor16 = null;
        builder10.httpExecutor = executor16;
        retrofit.RestAdapter.LogLevel logLevel18 = builder10.logLevel;
        builder0.logLevel = logLevel18;
        java.util.concurrent.Executor executor20 = builder0.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request22 = serializedObjectSupporter21.deserializeObjectRequest8();
        retrofit.client.Request request23 = serializedObjectSupporter21.deserializeObjectRequest7();
        java.lang.String str24 = serializedObjectSupporter21.deserializeObjectString1();
        java.lang.String str25 = serializedObjectSupporter21.deserializeObjectString5();
        retrofit.RequestInterceptor requestInterceptor26 = serializedObjectSupporter21.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder27 = builder0.setRequestInterceptor(requestInterceptor26);
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        java.lang.String str29 = serializedObjectSupporter28.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter28.deserializeObjectConverter3();
        java.lang.String str31 = serializedObjectSupporter28.deserializeObjectString4();
        retrofit.Server server32 = serializedObjectSupporter28.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter28.deserializeObjectConverter6();
        retrofit.client.Request request34 = serializedObjectSupporter28.deserializeObjectRequest7();
        retrofit.converter.GsonConverter gsonConverter35 = serializedObjectSupporter28.deserializeObjectConverter8();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter28.deserializeObjectConverter8();
        retrofit.mime.TypedString typedString37 = serializedObjectSupporter28.deserializeObjectTypedOutput2();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter28.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter28.deserializeObjectConverter3();
        retrofit.RestAdapter.Builder builder40 = builder27.setConverter((retrofit.converter.Converter) gsonConverter39);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor20);
        org.junit.Assert.assertNotNull(request22);
        org.junit.Assert.assertNotNull(request23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Retrofit-" + "'", str24, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "POST" + "'", str25, "POST");
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "GET" + "'", str29, "GET");
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "http://example.com/" + "'", str31, "http://example.com/");
        org.junit.Assert.assertNotNull(server32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(request34);
        org.junit.Assert.assertNotNull(gsonConverter35);
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertNotNull(typedString37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertNotNull(builder40);
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0611");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest6();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString2();
        retrofit.client.Request request7 = serializedObjectSupporter0.deserializeObjectRequest5();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Retrofit-Idle" + "'", str5, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Retrofit-Idle" + "'", str6, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(request7);
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0612");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.converter;
        java.util.concurrent.Executor executor26 = restAdapter23.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel27 = restAdapter23.getLogLevel();
        java.util.concurrent.Executor executor28 = restAdapter23.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        java.lang.String str30 = serializedObjectSupporter29.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter3();
        java.lang.String str32 = serializedObjectSupporter29.deserializeObjectString4();
        retrofit.Server server33 = serializedObjectSupporter29.deserializeObjectServer1();
        retrofit.client.Client.Provider provider34 = null;
        java.util.concurrent.Executor executor35 = null;
        java.util.concurrent.Executor executor36 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = new retrofit.SerializedObjectSupporter();
        java.lang.String str38 = serializedObjectSupporter37.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor39 = serializedObjectSupporter37.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request41 = serializedObjectSupporter40.deserializeObjectRequest1();
        retrofit.client.Request request42 = serializedObjectSupporter40.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter40.deserializeObjectConverter5();
        retrofit.Profiler profiler44 = null;
        retrofit.ErrorHandler errorHandler45 = null;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor47 = null;
        builder46.sethttpExecutor(executor47);
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        builder46.log = log49;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter(server33, provider34, executor35, executor36, requestInterceptor39, (retrofit.converter.Converter) gsonConverter43, profiler44, errorHandler45, log49, logLevel51);
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter52.getLogLevel();
        retrofit.converter.Converter converter54 = restAdapter52.converter;
        java.util.concurrent.Executor executor55 = restAdapter52.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel56 = restAdapter52.getLogLevel();
        restAdapter23.setLogLevel(logLevel56);
        java.lang.Throwable throwable58 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter23.logException(throwable58, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "GET" + "'", str30, "GET");
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "http://example.com/" + "'", str32, "http://example.com/");
        org.junit.Assert.assertNotNull(server33);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Retrofit-" + "'", str38, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor39);
        org.junit.Assert.assertNotNull(request41);
        org.junit.Assert.assertNotNull(request42);
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter54);
        org.junit.Assert.assertNull(executor55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0613");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = null;
        builder0.setcallbackExecutor(executor3);
        retrofit.client.Client.Provider provider5 = null;
        builder0.clientProvider = provider5;
        retrofit.Profiler profiler7 = null;
        builder0.profiler = profiler7;
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request10 = serializedObjectSupporter9.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter2();
        retrofit.client.Request request12 = serializedObjectSupporter9.deserializeObjectRequest8();
        retrofit.RequestInterceptor requestInterceptor13 = serializedObjectSupporter9.deserializeObjectRequestInterceptor1();
        builder0.serializedObjectSupporter = serializedObjectSupporter9;
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter9.deserializeObjectConverter1();
        retrofit.converter.GsonConverter gsonConverter16 = serializedObjectSupporter9.deserializeObjectConverter1();
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(gsonConverter16);
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0614");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = null;
        builder0.setcallbackExecutor(executor3);
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.FULL;
        builder0.logLevel = logLevel5;
        retrofit.client.Client.Provider provider7 = builder0.getclientProvider();
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter8.deserializeObjectConverter3();
        java.lang.String str11 = serializedObjectSupporter8.deserializeObjectString4();
        retrofit.Server server12 = serializedObjectSupporter8.deserializeObjectServer1();
        retrofit.client.Client.Provider provider13 = null;
        java.util.concurrent.Executor executor14 = null;
        java.util.concurrent.Executor executor15 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor18 = serializedObjectSupporter16.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request20 = serializedObjectSupporter19.deserializeObjectRequest1();
        retrofit.client.Request request21 = serializedObjectSupporter19.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter19.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.ErrorHandler errorHandler24 = null;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor26 = null;
        builder25.sethttpExecutor(executor26);
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        builder25.log = log28;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter(server12, provider13, executor14, executor15, requestInterceptor18, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler24, log28, logLevel30);
        builder0.requestInterceptor = requestInterceptor18;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        java.lang.String str34 = serializedObjectSupporter33.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter35 = serializedObjectSupporter33.deserializeObjectConverter3();
        java.lang.String str36 = serializedObjectSupporter33.deserializeObjectString4();
        retrofit.Server server37 = serializedObjectSupporter33.deserializeObjectServer1();
        retrofit.client.Client.Provider provider38 = null;
        java.util.concurrent.Executor executor39 = null;
        java.util.concurrent.Executor executor40 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = new retrofit.SerializedObjectSupporter();
        java.lang.String str42 = serializedObjectSupporter41.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor43 = serializedObjectSupporter41.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request45 = serializedObjectSupporter44.deserializeObjectRequest1();
        retrofit.client.Request request46 = serializedObjectSupporter44.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter47 = serializedObjectSupporter44.deserializeObjectConverter5();
        retrofit.Profiler profiler48 = null;
        retrofit.ErrorHandler errorHandler49 = null;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor51 = null;
        builder50.sethttpExecutor(executor51);
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        builder50.log = log53;
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter(server37, provider38, executor39, executor40, requestInterceptor43, (retrofit.converter.Converter) gsonConverter47, profiler48, errorHandler49, log53, logLevel55);
        java.util.concurrent.Executor executor57 = restAdapter56.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        java.lang.String str59 = serializedObjectSupporter58.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter60 = serializedObjectSupporter58.deserializeObjectConverter3();
        java.lang.String str61 = serializedObjectSupporter58.deserializeObjectString4();
        restAdapter56.serializedObjectSupporter = serializedObjectSupporter58;
        retrofit.RestAdapter.LogLevel logLevel63 = restAdapter56.getLogLevel();
        java.lang.String str64 = restAdapter56.getTHREAD_PREFIX();
        java.util.concurrent.Executor executor65 = restAdapter56.callbackExecutor;
        retrofit.converter.Converter converter66 = restAdapter56.getconverter();
        retrofit.client.Client.Provider provider67 = restAdapter56.getclientProvider();
        retrofit.RestAdapter.LogLevel logLevel68 = restAdapter56.logLevel;
        retrofit.RestAdapter.Log log69 = restAdapter56.log;
        retrofit.RestAdapter.Builder builder70 = builder0.setLog(log69);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "GET" + "'", str9, "GET");
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "http://example.com/" + "'", str11, "http://example.com/");
        org.junit.Assert.assertNotNull(server12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Retrofit-" + "'", str17, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor18);
        org.junit.Assert.assertNotNull(request20);
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "GET" + "'", str34, "GET");
        org.junit.Assert.assertNotNull(gsonConverter35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "http://example.com/" + "'", str36, "http://example.com/");
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Retrofit-" + "'", str42, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor43);
        org.junit.Assert.assertNotNull(request45);
        org.junit.Assert.assertNotNull(request46);
        org.junit.Assert.assertNotNull(gsonConverter47);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "GET" + "'", str59, "GET");
        org.junit.Assert.assertNotNull(gsonConverter60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "http://example.com/" + "'", str61, "http://example.com/");
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Retrofit-" + "'", str64, "Retrofit-");
        org.junit.Assert.assertNull(executor65);
        org.junit.Assert.assertNotNull(converter66);
        org.junit.Assert.assertNull(provider67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0615");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = builder0.requestInterceptor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        java.lang.String str5 = serializedObjectSupporter4.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter4.deserializeObjectConverter3();
        java.lang.String str7 = serializedObjectSupporter4.deserializeObjectString4();
        retrofit.client.Request request8 = serializedObjectSupporter4.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler9 = serializedObjectSupporter4.deserializeObjectErrorHandler1();
        builder0.errorHandler = errorHandler9;
        retrofit.RestAdapter.Log log11 = builder0.log;
        retrofit.Profiler profiler12 = null;
        builder0.profiler = profiler12;
        java.util.concurrent.Executor executor14 = builder0.gethttpExecutor();
        retrofit.client.Client.Provider provider15 = builder0.getclientProvider();
        org.junit.Assert.assertNull(requestInterceptor3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "GET" + "'", str5, "GET");
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(errorHandler9);
        org.junit.Assert.assertNull(log11);
        org.junit.Assert.assertNull(executor14);
        org.junit.Assert.assertNull(provider15);
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0616");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        java.lang.String str25 = restAdapter23.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor26 = restAdapter23.httpExecutor;
        retrofit.Profiler profiler27 = restAdapter23.getprofiler();
        java.lang.Class<?> wildcardClass28 = restAdapter23.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Retrofit-Idle" + "'", str25, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNull(profiler27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0617");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.converter;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = builder27.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = builder27.serializedObjectSupporter;
        java.util.concurrent.Executor executor30 = null;
        builder27.httpExecutor = executor30;
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request33 = serializedObjectSupporter32.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter34 = serializedObjectSupporter32.deserializeObjectConverter2();
        builder27.serializedObjectSupporter = serializedObjectSupporter32;
        retrofit.client.Request request36 = serializedObjectSupporter32.deserializeObjectRequest6();
        java.lang.String str37 = request36.method;
        java.lang.String str38 = request36.method;
        retrofit.client.Request request39 = restAdapter23.logAndReplaceRequest(request36);
        retrofit.mime.TypedOutput typedOutput40 = request36.getBody();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNull(serializedObjectSupporter28);
        org.junit.Assert.assertNull(serializedObjectSupporter29);
        org.junit.Assert.assertNotNull(request33);
        org.junit.Assert.assertNotNull(gsonConverter34);
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "GET" + "'", str37, "GET");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "GET" + "'", str38, "GET");
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertNull(typedOutput40);
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0618");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = builder0.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel4 = builder0.logLevel;
        retrofit.Profiler profiler5 = builder0.profiler;
        retrofit.RestAdapter.LogLevel logLevel6 = builder0.logLevel;
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0619");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest2();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections collections6 = serializedObjectSupporter0.deserializeObjectList1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Collections$UnmodifiableRandomAccessList cannot be cast to java.util.Collections");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(request5);
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0620");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        retrofit.RestAdapter.Log log5 = builder0.log;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = builder6.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = builder8.serializedObjectSupporter;
        retrofit.Profiler profiler10 = builder8.profiler;
        retrofit.RestAdapter.LogLevel logLevel11 = builder8.logLevel;
        builder6.logLevel = logLevel11;
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter13.deserializeObjectConverter3();
        java.lang.String str16 = serializedObjectSupporter13.deserializeObjectString4();
        retrofit.Server server17 = serializedObjectSupporter13.deserializeObjectServer1();
        retrofit.client.Client.Provider provider18 = null;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = new retrofit.SerializedObjectSupporter();
        java.lang.String str22 = serializedObjectSupporter21.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor23 = serializedObjectSupporter21.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request25 = serializedObjectSupporter24.deserializeObjectRequest1();
        retrofit.client.Request request26 = serializedObjectSupporter24.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter24.deserializeObjectConverter5();
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor31 = null;
        builder30.sethttpExecutor(executor31);
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        builder30.log = log33;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter(server17, provider18, executor19, executor20, requestInterceptor23, (retrofit.converter.Converter) gsonConverter27, profiler28, errorHandler29, log33, logLevel35);
        java.util.concurrent.Executor executor37 = restAdapter36.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter36.logLevel = logLevel38;
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = restAdapter36.serializedObjectSupporter;
        retrofit.RestAdapter.Log log41 = restAdapter36.log;
        builder6.log = log41;
        retrofit.RestAdapter.Builder builder43 = builder0.setLog(log41);
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = new retrofit.SerializedObjectSupporter();
        java.lang.String str45 = serializedObjectSupporter44.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter44.deserializeObjectConverter3();
        java.lang.String str47 = serializedObjectSupporter44.deserializeObjectString4();
        retrofit.Server server48 = serializedObjectSupporter44.deserializeObjectServer1();
        retrofit.client.Client.Provider provider49 = null;
        java.util.concurrent.Executor executor50 = null;
        java.util.concurrent.Executor executor51 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = new retrofit.SerializedObjectSupporter();
        java.lang.String str53 = serializedObjectSupporter52.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor54 = serializedObjectSupporter52.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request56 = serializedObjectSupporter55.deserializeObjectRequest1();
        retrofit.client.Request request57 = serializedObjectSupporter55.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter58 = serializedObjectSupporter55.deserializeObjectConverter5();
        retrofit.Profiler profiler59 = null;
        retrofit.ErrorHandler errorHandler60 = null;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor62 = null;
        builder61.sethttpExecutor(executor62);
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        builder61.log = log64;
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter67 = new retrofit.RestAdapter(server48, provider49, executor50, executor51, requestInterceptor54, (retrofit.converter.Converter) gsonConverter58, profiler59, errorHandler60, log64, logLevel66);
        java.util.concurrent.Executor executor68 = restAdapter67.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter67.logLevel = logLevel69;
        retrofit.SerializedObjectSupporter serializedObjectSupporter71 = restAdapter67.serializedObjectSupporter;
        retrofit.RestAdapter.Log log72 = restAdapter67.log;
        retrofit.RequestInterceptor requestInterceptor73 = restAdapter67.requestInterceptor;
        retrofit.Server server74 = restAdapter67.getserver();
        retrofit.RestAdapter.Builder builder75 = builder0.setServer(server74);
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNull(serializedObjectSupporter7);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertNull(profiler10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "GET" + "'", str14, "GET");
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(server17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Retrofit-" + "'", str22, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor23);
        org.junit.Assert.assertNotNull(request25);
        org.junit.Assert.assertNotNull(request26);
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(serializedObjectSupporter40);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "GET" + "'", str45, "GET");
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "http://example.com/" + "'", str47, "http://example.com/");
        org.junit.Assert.assertNotNull(server48);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Retrofit-" + "'", str53, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor54);
        org.junit.Assert.assertNotNull(request56);
        org.junit.Assert.assertNotNull(request57);
        org.junit.Assert.assertNotNull(gsonConverter58);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(serializedObjectSupporter71);
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertNotNull(requestInterceptor73);
        org.junit.Assert.assertNotNull(server74);
        org.junit.Assert.assertNotNull(builder75);
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0621");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.RestAdapter.Log log4 = builder3.log;
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.HEADERS;
        builder3.logLevel = logLevel5;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request8 = serializedObjectSupporter7.deserializeObjectRequest1();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str10 = serializedObjectSupporter7.deserializeObjectString3();
        retrofit.client.Request request11 = serializedObjectSupporter7.deserializeObjectRequest4();
        retrofit.client.Request request12 = serializedObjectSupporter7.deserializeObjectRequest6();
        builder3.serializedObjectSupporter = serializedObjectSupporter7;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = builder14.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = builder16.serializedObjectSupporter;
        retrofit.Profiler profiler18 = builder16.profiler;
        retrofit.RestAdapter.LogLevel logLevel19 = builder16.logLevel;
        builder14.logLevel = logLevel19;
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = new retrofit.SerializedObjectSupporter();
        java.lang.String str22 = serializedObjectSupporter21.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter21.deserializeObjectConverter3();
        java.lang.String str24 = serializedObjectSupporter21.deserializeObjectString4();
        retrofit.Server server25 = serializedObjectSupporter21.deserializeObjectServer1();
        retrofit.client.Client.Provider provider26 = null;
        java.util.concurrent.Executor executor27 = null;
        java.util.concurrent.Executor executor28 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        java.lang.String str30 = serializedObjectSupporter29.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor31 = serializedObjectSupporter29.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request33 = serializedObjectSupporter32.deserializeObjectRequest1();
        retrofit.client.Request request34 = serializedObjectSupporter32.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter35 = serializedObjectSupporter32.deserializeObjectConverter5();
        retrofit.Profiler profiler36 = null;
        retrofit.ErrorHandler errorHandler37 = null;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor39 = null;
        builder38.sethttpExecutor(executor39);
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        builder38.log = log41;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter(server25, provider26, executor27, executor28, requestInterceptor31, (retrofit.converter.Converter) gsonConverter35, profiler36, errorHandler37, log41, logLevel43);
        java.util.concurrent.Executor executor45 = restAdapter44.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter44.logLevel = logLevel46;
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = restAdapter44.serializedObjectSupporter;
        retrofit.RestAdapter.Log log49 = restAdapter44.log;
        builder14.log = log49;
        retrofit.RestAdapter.Builder builder51 = builder3.setLog(log49);
        retrofit.converter.Converter converter52 = builder51.converter;
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "GET" + "'", str10, "GET");
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNull(serializedObjectSupporter15);
        org.junit.Assert.assertNull(serializedObjectSupporter17);
        org.junit.Assert.assertNull(profiler18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "GET" + "'", str22, "GET");
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Retrofit-" + "'", str30, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor31);
        org.junit.Assert.assertNotNull(request33);
        org.junit.Assert.assertNotNull(request34);
        org.junit.Assert.assertNotNull(gsonConverter35);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(serializedObjectSupporter48);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNull(converter52);
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0622");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        java.lang.String str26 = serializedObjectSupporter25.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter25.deserializeObjectConverter3();
        java.lang.String str28 = serializedObjectSupporter25.deserializeObjectString4();
        retrofit.client.Request request29 = serializedObjectSupporter25.deserializeObjectRequest8();
        java.lang.String str30 = request29.method;
        java.lang.String str31 = request29.getUrl();
        retrofit.client.Request request32 = restAdapter23.logAndReplaceRequest(request29);
        retrofit.Profiler profiler33 = restAdapter23.profiler;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "GET" + "'", str26, "GET");
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertNotNull(request29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "GET" + "'", str30, "GET");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "http://example.com/" + "'", str31, "http://example.com/");
        org.junit.Assert.assertNotNull(request32);
        org.junit.Assert.assertNull(profiler33);
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0623");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        java.util.concurrent.Executor executor5 = builder0.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = builder8.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = builder8.serializedObjectSupporter;
        java.util.concurrent.Executor executor11 = null;
        builder8.httpExecutor = executor11;
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request14 = serializedObjectSupporter13.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter13.deserializeObjectConverter2();
        builder8.serializedObjectSupporter = serializedObjectSupporter13;
        retrofit.client.Request request17 = serializedObjectSupporter13.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter13.deserializeObjectConverter5();
        retrofit.Server server19 = serializedObjectSupporter13.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter13.deserializeObjectConverter2();
        builder0.converter = gsonConverter20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider23 = builder22.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder25 = builder22.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = builder26.serializedObjectSupporter;
        retrofit.client.Client.Provider provider28 = null;
        builder26.setclientProvider(provider28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor31 = null;
        builder30.sethttpExecutor(executor31);
        retrofit.RestAdapter.Log log33 = null;
        builder30.log = log33;
        java.util.concurrent.Executor executor35 = builder30.callbackExecutor;
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        builder30.log = log36;
        retrofit.RestAdapter.Builder builder38 = builder26.setLog(log36);
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        java.lang.String str40 = serializedObjectSupporter39.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter39.deserializeObjectConverter3();
        java.lang.String str42 = serializedObjectSupporter39.deserializeObjectString4();
        retrofit.client.Request request43 = serializedObjectSupporter39.deserializeObjectRequest6();
        retrofit.Server server44 = serializedObjectSupporter39.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder45 = builder38.setServer(server44);
        retrofit.RestAdapter.Builder builder46 = builder22.setServer(server44);
        retrofit.RestAdapter.Builder builder47 = builder0.setServer(server44);
        java.util.concurrent.Executor executor48 = builder0.callbackExecutor;
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(serializedObjectSupporter7);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertNull(serializedObjectSupporter10);
        org.junit.Assert.assertNotNull(request14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(server19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(serializedObjectSupporter27);
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "GET" + "'", str40, "GET");
        org.junit.Assert.assertNotNull(gsonConverter41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "http://example.com/" + "'", str42, "http://example.com/");
        org.junit.Assert.assertNotNull(request43);
        org.junit.Assert.assertNotNull(server44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(executor48);
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0624");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter4();
        java.lang.String str8 = serializedObjectSupporter0.deserializeObjectString5();
        retrofit.client.Request request9 = serializedObjectSupporter0.deserializeObjectRequest7();
        java.lang.String str10 = serializedObjectSupporter0.deserializeObjectString4();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "POST" + "'", str8, "POST");
        org.junit.Assert.assertNotNull(request9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0625");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.RequestInterceptor requestInterceptor4 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest4();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(requestInterceptor4);
        org.junit.Assert.assertNotNull(request5);
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0626");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = builder0.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel4 = builder0.logLevel;
        retrofit.Profiler profiler5 = builder0.profiler;
        retrofit.RestAdapter.Builder builder7 = builder0.setServer("hi!");
        retrofit.converter.Converter converter8 = builder7.converter;
        retrofit.RestAdapter restAdapter9 = builder7.build();
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = builder10.serializedObjectSupporter;
        retrofit.Profiler profiler12 = builder10.profiler;
        retrofit.ErrorHandler errorHandler13 = builder10.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter16 = serializedObjectSupporter14.deserializeObjectConverter3();
        java.lang.String str17 = serializedObjectSupporter14.deserializeObjectString4();
        retrofit.Server server18 = serializedObjectSupporter14.deserializeObjectServer1();
        retrofit.client.Client.Provider provider19 = null;
        java.util.concurrent.Executor executor20 = null;
        java.util.concurrent.Executor executor21 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        java.lang.String str23 = serializedObjectSupporter22.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor24 = serializedObjectSupporter22.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request26 = serializedObjectSupporter25.deserializeObjectRequest1();
        retrofit.client.Request request27 = serializedObjectSupporter25.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter25.deserializeObjectConverter5();
        retrofit.Profiler profiler29 = null;
        retrofit.ErrorHandler errorHandler30 = null;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor32 = null;
        builder31.sethttpExecutor(executor32);
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        builder31.log = log34;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server18, provider19, executor20, executor21, requestInterceptor24, (retrofit.converter.Converter) gsonConverter28, profiler29, errorHandler30, log34, logLevel36);
        java.util.concurrent.Executor executor38 = restAdapter37.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor39 = restAdapter37.requestInterceptor;
        retrofit.RestAdapter.Builder builder40 = builder10.setRequestInterceptor(requestInterceptor39);
        builder7.requestInterceptor = requestInterceptor39;
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(converter8);
        org.junit.Assert.assertNotNull(restAdapter9);
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertNull(errorHandler13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "GET" + "'", str15, "GET");
        org.junit.Assert.assertNotNull(gsonConverter16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "http://example.com/" + "'", str17, "http://example.com/");
        org.junit.Assert.assertNotNull(server18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Retrofit-" + "'", str23, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor24);
        org.junit.Assert.assertNotNull(request26);
        org.junit.Assert.assertNotNull(request27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor38);
        org.junit.Assert.assertNotNull(requestInterceptor39);
        org.junit.Assert.assertNotNull(builder40);
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0627");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest3();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString3();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "GET" + "'", str5, "GET");
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0628");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.converter.Converter converter3 = builder0.converter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("GET");
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor7 = null;
        builder6.sethttpExecutor(executor7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter3();
        builder6.converter = gsonConverter11;
        retrofit.client.Client.Provider provider13 = null;
        builder6.clientProvider = provider13;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter3();
        java.lang.String str18 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter15.deserializeObjectConverter6();
        builder6.converter = gsonConverter19;
        builder0.converter = gsonConverter19;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor23 = null;
        builder22.sethttpExecutor(executor23);
        retrofit.RequestInterceptor requestInterceptor25 = null;
        builder22.requestInterceptor = requestInterceptor25;
        retrofit.converter.Converter converter27 = builder22.converter;
        java.util.concurrent.Executor executor28 = null;
        builder22.httpExecutor = executor28;
        java.util.concurrent.Executor executor30 = null;
        builder22.httpExecutor = executor30;
        retrofit.Profiler profiler32 = null;
        builder22.profiler = profiler32;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider35 = builder34.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder37 = builder34.setLogLevel(logLevel36);
        retrofit.converter.Converter converter38 = builder37.converter;
        builder37.ensureSaneDefaults();
        retrofit.client.Client.Provider provider40 = builder37.clientProvider;
        retrofit.RestAdapter.Builder builder41 = builder22.setClient(provider40);
        retrofit.RestAdapter.Builder builder42 = builder0.setClient(provider40);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "GET" + "'", str10, "GET");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "GET" + "'", str16, "GET");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNull(converter27);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(converter38);
        org.junit.Assert.assertNotNull(provider40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0629");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter4();
        java.lang.String str8 = serializedObjectSupporter0.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter0.deserializeObjectConverter3();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "POST" + "'", str8, "POST");
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertNotNull(gsonConverter11);
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0630");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter1();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString5();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest8();
        java.lang.String str7 = request6.method;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "POST" + "'", str5, "POST");
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "GET" + "'", str7, "GET");
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0631");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.converter;
        retrofit.converter.Converter converter26 = restAdapter23.converter;
        retrofit.Server server27 = restAdapter23.server;
        java.lang.Throwable throwable28 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter23.logException(throwable28, "POST");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertNotNull(converter26);
        org.junit.Assert.assertNotNull(server27);
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0632");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.converter.Converter converter3 = builder0.converter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("GET");
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor7 = null;
        builder6.sethttpExecutor(executor7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter3();
        builder6.converter = gsonConverter11;
        retrofit.client.Client.Provider provider13 = null;
        builder6.clientProvider = provider13;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter3();
        java.lang.String str18 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter15.deserializeObjectConverter6();
        builder6.converter = gsonConverter19;
        builder0.converter = gsonConverter19;
        retrofit.RestAdapter restAdapter22 = builder0.build();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter2();
        retrofit.client.Request request26 = serializedObjectSupporter23.deserializeObjectRequest8();
        java.lang.String str27 = serializedObjectSupporter23.deserializeObjectString3();
        retrofit.client.Request request28 = serializedObjectSupporter23.deserializeObjectRequest5();
        restAdapter22.serializedObjectSupporter = serializedObjectSupporter23;
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter23.deserializeObjectConverter6();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter23.deserializeObjectConverter4();
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "GET" + "'", str10, "GET");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "GET" + "'", str16, "GET");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(request26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "GET" + "'", str27, "GET");
        org.junit.Assert.assertNotNull(request28);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(gsonConverter31);
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0633");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.RequestInterceptor requestInterceptor4 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(requestInterceptor4);
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0634");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.converter.Converter converter4 = builder3.converter;
        java.util.concurrent.Executor executor5 = null;
        builder3.sethttpExecutor(executor5);
        retrofit.RestAdapter.Builder builder8 = builder3.setServer("GET");
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter3();
        java.lang.String str12 = serializedObjectSupporter9.deserializeObjectString4();
        retrofit.Server server13 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter17.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request21 = serializedObjectSupporter20.deserializeObjectRequest1();
        retrofit.client.Request request22 = serializedObjectSupporter20.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler24 = null;
        retrofit.ErrorHandler errorHandler25 = null;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor27 = null;
        builder26.sethttpExecutor(executor27);
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        builder26.log = log29;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor19, (retrofit.converter.Converter) gsonConverter23, profiler24, errorHandler25, log29, logLevel31);
        retrofit.RestAdapter.Builder builder33 = builder3.setLog(log29);
        retrofit.RequestInterceptor requestInterceptor34 = builder33.requestInterceptor;
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "GET" + "'", str10, "GET");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Retrofit-" + "'", str18, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(request22);
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNull(requestInterceptor34);
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0635");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = builder0.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel4 = builder0.logLevel;
        retrofit.Profiler profiler5 = builder0.profiler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter6.deserializeObjectConverter3();
        java.lang.String str9 = serializedObjectSupporter6.deserializeObjectString4();
        retrofit.Server server10 = serializedObjectSupporter6.deserializeObjectServer1();
        retrofit.client.Client.Provider provider11 = null;
        java.util.concurrent.Executor executor12 = null;
        java.util.concurrent.Executor executor13 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor16 = serializedObjectSupporter14.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request18 = serializedObjectSupporter17.deserializeObjectRequest1();
        retrofit.client.Request request19 = serializedObjectSupporter17.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter17.deserializeObjectConverter5();
        retrofit.Profiler profiler21 = null;
        retrofit.ErrorHandler errorHandler22 = null;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor24 = null;
        builder23.sethttpExecutor(executor24);
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        builder23.log = log26;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server10, provider11, executor12, executor13, requestInterceptor16, (retrofit.converter.Converter) gsonConverter20, profiler21, errorHandler22, log26, logLevel28);
        java.util.concurrent.Executor executor30 = restAdapter29.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor31 = restAdapter29.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor32 = restAdapter29.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor33 = restAdapter29.getrequestInterceptor();
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor35 = null;
        builder34.sethttpExecutor(executor35);
        retrofit.RequestInterceptor requestInterceptor37 = null;
        builder34.requestInterceptor = requestInterceptor37;
        retrofit.converter.Converter converter39 = builder34.converter;
        java.util.concurrent.Executor executor40 = null;
        builder34.httpExecutor = executor40;
        retrofit.RestAdapter.LogLevel logLevel42 = builder34.logLevel;
        restAdapter29.logLevel = logLevel42;
        builder0.logLevel = logLevel42;
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "GET" + "'", str7, "GET");
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com/" + "'", str9, "http://example.com/");
        org.junit.Assert.assertNotNull(server10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Retrofit-" + "'", str15, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor16);
        org.junit.Assert.assertNotNull(request18);
        org.junit.Assert.assertNotNull(request19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor30);
        org.junit.Assert.assertNotNull(requestInterceptor31);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(requestInterceptor33);
        org.junit.Assert.assertNull(converter39);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0636");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        retrofit.converter.Converter converter5 = builder0.converter;
        java.util.concurrent.Executor executor6 = null;
        builder0.httpExecutor = executor6;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request9 = serializedObjectSupporter8.deserializeObjectRequest1();
        retrofit.Server server10 = serializedObjectSupporter8.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter8.deserializeObjectConverter3();
        builder0.converter = gsonConverter11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor14 = null;
        builder13.sethttpExecutor(executor14);
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter16.deserializeObjectConverter3();
        builder13.converter = gsonConverter18;
        retrofit.client.Client.Provider provider20 = null;
        builder13.clientProvider = provider20;
        retrofit.RestAdapter.LogLevel logLevel22 = builder13.logLevel;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor24 = null;
        builder23.sethttpExecutor(executor24);
        retrofit.RequestInterceptor requestInterceptor26 = null;
        builder23.requestInterceptor = requestInterceptor26;
        retrofit.converter.Converter converter28 = builder23.converter;
        java.util.concurrent.Executor executor29 = null;
        builder23.httpExecutor = executor29;
        retrofit.RestAdapter.LogLevel logLevel31 = builder23.logLevel;
        builder13.logLevel = logLevel31;
        java.util.concurrent.Executor executor33 = builder13.callbackExecutor;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider35 = builder34.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder37 = builder34.setLogLevel(logLevel36);
        retrofit.converter.Converter converter38 = builder37.converter;
        builder37.ensureSaneDefaults();
        retrofit.client.Client.Provider provider40 = builder37.clientProvider;
        builder13.setclientProvider(provider40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor43 = null;
        builder42.sethttpExecutor(executor43);
        retrofit.RestAdapter.Log log45 = null;
        builder42.log = log45;
        java.util.concurrent.Executor executor47 = builder42.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = builder42.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = builder42.serializedObjectSupporter;
        builder42.ensureSaneDefaults();
        java.util.concurrent.Executor executor51 = builder42.httpExecutor;
        builder13.setcallbackExecutor(executor51);
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor54 = null;
        builder53.sethttpExecutor(executor54);
        builder53.ensureSaneDefaults();
        retrofit.client.Client.Provider provider57 = null;
        builder53.setclientProvider(provider57);
        retrofit.client.Client.Provider provider59 = null;
        builder53.setclientProvider(provider59);
        java.util.concurrent.Executor executor61 = builder53.httpExecutor;
        retrofit.RestAdapter.Builder builder62 = builder0.setExecutors(executor51, executor61);
        retrofit.client.Client client63 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder64 = builder62.setClient(client63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(request9);
        org.junit.Assert.assertNotNull(server10);
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "GET" + "'", str17, "GET");
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter28);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor33);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(converter38);
        org.junit.Assert.assertNotNull(provider40);
        org.junit.Assert.assertNull(executor47);
        org.junit.Assert.assertNull(serializedObjectSupporter48);
        org.junit.Assert.assertNull(serializedObjectSupporter49);
        org.junit.Assert.assertNotNull(executor51);
        org.junit.Assert.assertNotNull(executor61);
        org.junit.Assert.assertNotNull(builder62);
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0637");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        retrofit.Profiler profiler5 = null;
        builder0.profiler = profiler5;
        java.util.concurrent.Executor executor7 = builder0.callbackExecutor;
        java.util.concurrent.Executor executor8 = builder0.callbackExecutor;
        retrofit.converter.Converter converter9 = builder0.converter;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = builder10.serializedObjectSupporter;
        retrofit.client.Client.Provider provider12 = null;
        builder10.setclientProvider(provider12);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor15 = null;
        builder14.sethttpExecutor(executor15);
        retrofit.RestAdapter.Log log17 = null;
        builder14.log = log17;
        java.util.concurrent.Executor executor19 = builder14.callbackExecutor;
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder14.log = log20;
        retrofit.RestAdapter.Builder builder22 = builder10.setLog(log20);
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter3();
        java.lang.String str26 = serializedObjectSupporter23.deserializeObjectString4();
        retrofit.client.Request request27 = serializedObjectSupporter23.deserializeObjectRequest6();
        retrofit.Server server28 = serializedObjectSupporter23.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder29 = builder22.setServer(server28);
        retrofit.client.Client.Provider provider30 = null;
        java.util.concurrent.Executor executor31 = null;
        java.util.concurrent.Executor executor32 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request34 = serializedObjectSupporter33.deserializeObjectRequest1();
        retrofit.client.Request request35 = serializedObjectSupporter33.deserializeObjectRequest5();
        retrofit.RequestInterceptor requestInterceptor36 = serializedObjectSupporter33.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request38 = serializedObjectSupporter37.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter37.deserializeObjectConverter2();
        retrofit.Profiler profiler40 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = new retrofit.SerializedObjectSupporter();
        java.lang.String str42 = serializedObjectSupporter41.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter41.deserializeObjectConverter3();
        java.lang.String str44 = serializedObjectSupporter41.deserializeObjectString4();
        retrofit.client.Request request45 = serializedObjectSupporter41.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler46 = serializedObjectSupporter41.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = builder47.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = builder47.serializedObjectSupporter;
        retrofit.client.Client.Provider provider50 = null;
        builder47.clientProvider = provider50;
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        builder47.log = log52;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor55 = null;
        builder54.setcallbackExecutor(executor55);
        java.util.concurrent.Executor executor57 = null;
        builder54.setcallbackExecutor(executor57);
        retrofit.client.Client.Provider provider59 = null;
        builder54.clientProvider = provider59;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter62 = builder61.serializedObjectSupporter;
        retrofit.Profiler profiler63 = builder61.profiler;
        retrofit.RestAdapter.LogLevel logLevel64 = builder61.logLevel;
        builder54.logLevel = logLevel64;
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter(server28, provider30, executor31, executor32, requestInterceptor36, (retrofit.converter.Converter) gsonConverter39, profiler40, errorHandler46, log52, logLevel64);
        builder0.log = log52;
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertNull(executor19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "GET" + "'", str24, "GET");
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "http://example.com/" + "'", str26, "http://example.com/");
        org.junit.Assert.assertNotNull(request27);
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(request34);
        org.junit.Assert.assertNotNull(request35);
        org.junit.Assert.assertNotNull(requestInterceptor36);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "GET" + "'", str42, "GET");
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "http://example.com/" + "'", str44, "http://example.com/");
        org.junit.Assert.assertNotNull(request45);
        org.junit.Assert.assertNotNull(errorHandler46);
        org.junit.Assert.assertNull(serializedObjectSupporter48);
        org.junit.Assert.assertNull(serializedObjectSupporter49);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNull(serializedObjectSupporter62);
        org.junit.Assert.assertNull(profiler63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0638");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter8();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.mime.TypedString typedString6 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter5();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(typedString6);
        org.junit.Assert.assertNotNull(gsonConverter7);
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0639");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        java.lang.String str25 = restAdapter23.getIDLE_THREAD_NAME();
        java.lang.String str26 = restAdapter23.getIDLE_THREAD_NAME();
        java.lang.Throwable throwable27 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter23.logException(throwable27, "Retrofit-");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Retrofit-Idle" + "'", str25, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0640");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter23.logLevel = logLevel25;
        retrofit.Profiler profiler27 = restAdapter23.profiler;
        retrofit.client.Client.Provider provider28 = restAdapter23.getclientProvider();
        retrofit.client.Response response30 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response32 = restAdapter23.logAndReplaceResponse("Retrofit-Idle", response30, 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(profiler27);
        org.junit.Assert.assertNull(provider28);
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0641");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.converter.Converter converter3 = builder0.converter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("GET");
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor7 = null;
        builder6.sethttpExecutor(executor7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter3();
        builder6.converter = gsonConverter11;
        retrofit.client.Client.Provider provider13 = null;
        builder6.clientProvider = provider13;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter3();
        java.lang.String str18 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter15.deserializeObjectConverter6();
        builder6.converter = gsonConverter19;
        builder0.converter = gsonConverter19;
        retrofit.RestAdapter restAdapter22 = builder0.build();
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor24 = null;
        builder23.sethttpExecutor(executor24);
        retrofit.RequestInterceptor requestInterceptor26 = null;
        builder23.requestInterceptor = requestInterceptor26;
        retrofit.Profiler profiler28 = null;
        builder23.profiler = profiler28;
        java.util.concurrent.Executor executor30 = builder23.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        java.lang.String str32 = serializedObjectSupporter31.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter3();
        java.lang.String str34 = serializedObjectSupporter31.deserializeObjectString4();
        retrofit.Server server35 = serializedObjectSupporter31.deserializeObjectServer1();
        retrofit.client.Client.Provider provider36 = null;
        java.util.concurrent.Executor executor37 = null;
        java.util.concurrent.Executor executor38 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        java.lang.String str40 = serializedObjectSupporter39.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor41 = serializedObjectSupporter39.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request43 = serializedObjectSupporter42.deserializeObjectRequest1();
        retrofit.client.Request request44 = serializedObjectSupporter42.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter45 = serializedObjectSupporter42.deserializeObjectConverter5();
        retrofit.Profiler profiler46 = null;
        retrofit.ErrorHandler errorHandler47 = null;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor49 = null;
        builder48.sethttpExecutor(executor49);
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        builder48.log = log51;
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter(server35, provider36, executor37, executor38, requestInterceptor41, (retrofit.converter.Converter) gsonConverter45, profiler46, errorHandler47, log51, logLevel53);
        java.util.concurrent.Executor executor55 = restAdapter54.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor56 = restAdapter54.requestInterceptor;
        retrofit.RestAdapter.Builder builder57 = builder23.setRequestInterceptor(requestInterceptor56);
        retrofit.RestAdapter.LogLevel logLevel58 = builder23.logLevel;
        restAdapter22.logLevel = logLevel58;
        retrofit.ErrorHandler errorHandler60 = restAdapter22.errorHandler;
        java.util.concurrent.Executor executor61 = restAdapter22.gethttpExecutor();
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "GET" + "'", str10, "GET");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "GET" + "'", str16, "GET");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNull(executor30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "GET" + "'", str32, "GET");
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "http://example.com/" + "'", str34, "http://example.com/");
        org.junit.Assert.assertNotNull(server35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Retrofit-" + "'", str40, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor41);
        org.junit.Assert.assertNotNull(request43);
        org.junit.Assert.assertNotNull(request44);
        org.junit.Assert.assertNotNull(gsonConverter45);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor55);
        org.junit.Assert.assertNotNull(requestInterceptor56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(errorHandler60);
        org.junit.Assert.assertNotNull(executor61);
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0642");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter3();
        builder0.converter = gsonConverter5;
        retrofit.client.Client.Provider provider7 = null;
        builder0.clientProvider = provider7;
        retrofit.client.Client.Provider provider9 = null;
        builder0.setclientProvider(provider9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = builder11.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = builder11.serializedObjectSupporter;
        java.util.concurrent.Executor executor14 = null;
        builder11.httpExecutor = executor14;
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request17 = serializedObjectSupporter16.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter16.deserializeObjectConverter2();
        builder11.serializedObjectSupporter = serializedObjectSupporter16;
        retrofit.client.Request request20 = serializedObjectSupporter16.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter16.deserializeObjectConverter5();
        retrofit.Server server22 = serializedObjectSupporter16.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder23 = builder0.setServer(server22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor25 = null;
        builder24.sethttpExecutor(executor25);
        builder24.ensureSaneDefaults();
        retrofit.client.Client.Provider provider28 = null;
        builder24.setclientProvider(provider28);
        retrofit.client.Client.Provider provider30 = null;
        builder24.setclientProvider(provider30);
        java.util.concurrent.Executor executor32 = builder24.httpExecutor;
        builder23.httpExecutor = executor32;
        retrofit.Profiler profiler34 = null;
        builder23.profiler = profiler34;
        java.util.concurrent.Executor executor36 = builder23.callbackExecutor;
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNull(serializedObjectSupporter12);
        org.junit.Assert.assertNull(serializedObjectSupporter13);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(request20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNotNull(server22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(executor32);
        org.junit.Assert.assertNull(executor36);
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0643");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.converter.Converter converter4 = builder3.converter;
        retrofit.Profiler profiler5 = builder3.profiler;
        java.util.concurrent.Executor executor6 = builder3.callbackExecutor;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor8 = null;
        builder7.setcallbackExecutor(executor8);
        java.util.concurrent.Executor executor10 = null;
        builder7.setcallbackExecutor(executor10);
        retrofit.client.Client.Provider provider12 = null;
        builder7.clientProvider = provider12;
        retrofit.Profiler profiler14 = null;
        builder7.profiler = profiler14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider17 = builder16.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder19 = builder16.setLogLevel(logLevel18);
        retrofit.converter.Converter converter20 = builder19.converter;
        builder19.ensureSaneDefaults();
        retrofit.client.Client.Provider provider22 = builder19.clientProvider;
        retrofit.RestAdapter.Builder builder23 = builder7.setClient(provider22);
        builder3.setclientProvider(provider22);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor26 = null;
        builder25.sethttpExecutor(executor26);
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        java.lang.String str29 = serializedObjectSupporter28.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter28.deserializeObjectConverter3();
        builder25.converter = gsonConverter30;
        retrofit.client.Client.Provider provider32 = null;
        builder25.clientProvider = provider32;
        retrofit.RestAdapter.LogLevel logLevel34 = builder25.logLevel;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor36 = null;
        builder35.sethttpExecutor(executor36);
        retrofit.RequestInterceptor requestInterceptor38 = null;
        builder35.requestInterceptor = requestInterceptor38;
        retrofit.converter.Converter converter40 = builder35.converter;
        java.util.concurrent.Executor executor41 = null;
        builder35.httpExecutor = executor41;
        retrofit.RestAdapter.LogLevel logLevel43 = builder35.logLevel;
        builder25.logLevel = logLevel43;
        java.util.concurrent.Executor executor45 = builder25.callbackExecutor;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider47 = builder46.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder49 = builder46.setLogLevel(logLevel48);
        retrofit.converter.Converter converter50 = builder49.converter;
        builder49.ensureSaneDefaults();
        retrofit.client.Client.Provider provider52 = builder49.clientProvider;
        builder25.setclientProvider(provider52);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor55 = null;
        builder54.sethttpExecutor(executor55);
        retrofit.RestAdapter.Log log57 = null;
        builder54.log = log57;
        java.util.concurrent.Executor executor59 = builder54.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = builder54.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter61 = builder54.serializedObjectSupporter;
        builder54.ensureSaneDefaults();
        java.util.concurrent.Executor executor63 = builder54.httpExecutor;
        builder25.setcallbackExecutor(executor63);
        builder3.setcallbackExecutor(executor63);
        builder3.ensureSaneDefaults();
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNull(profiler5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNull(converter20);
        org.junit.Assert.assertNotNull(provider22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "GET" + "'", str29, "GET");
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter40);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor45);
        org.junit.Assert.assertNull(provider47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNull(converter50);
        org.junit.Assert.assertNotNull(provider52);
        org.junit.Assert.assertNull(executor59);
        org.junit.Assert.assertNull(serializedObjectSupporter60);
        org.junit.Assert.assertNull(serializedObjectSupporter61);
        org.junit.Assert.assertNotNull(executor63);
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0644");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter23.getLogLevel();
        retrofit.RestAdapter.Log log26 = restAdapter23.log;
        retrofit.RequestInterceptor requestInterceptor27 = restAdapter23.getrequestInterceptor();
        retrofit.Profiler profiler28 = restAdapter23.profiler;
        java.util.concurrent.Executor executor29 = restAdapter23.gethttpExecutor();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertNull(executor29);
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0645");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        java.lang.String str5 = serializedObjectSupporter4.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter4.deserializeObjectConverter3();
        java.lang.String str7 = serializedObjectSupporter4.deserializeObjectString4();
        retrofit.client.Request request8 = serializedObjectSupporter4.deserializeObjectRequest1();
        retrofit.client.Request request9 = serializedObjectSupporter4.deserializeObjectRequest4();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter4.deserializeObjectConverter1();
        retrofit.RestAdapter.Builder builder11 = builder3.setConverter((retrofit.converter.Converter) gsonConverter10);
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "GET" + "'", str5, "GET");
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(request9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertNotNull(builder11);
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0646");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest5();
        java.util.List<retrofit.client.Header> headerList7 = request6.headers;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(headerList7);
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0647");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = builder0.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel4 = builder0.logLevel;
        retrofit.Profiler profiler5 = builder0.profiler;
        retrofit.RestAdapter.Builder builder7 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider9 = builder8.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder11 = builder8.setLogLevel(logLevel10);
        retrofit.RestAdapter.Log log12 = builder11.log;
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter13.deserializeObjectConverter3();
        java.lang.String str16 = serializedObjectSupporter13.deserializeObjectString4();
        retrofit.Server server17 = serializedObjectSupporter13.deserializeObjectServer1();
        retrofit.client.Client.Provider provider18 = null;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = new retrofit.SerializedObjectSupporter();
        java.lang.String str22 = serializedObjectSupporter21.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor23 = serializedObjectSupporter21.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request25 = serializedObjectSupporter24.deserializeObjectRequest1();
        retrofit.client.Request request26 = serializedObjectSupporter24.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter24.deserializeObjectConverter5();
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor31 = null;
        builder30.sethttpExecutor(executor31);
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        builder30.log = log33;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter(server17, provider18, executor19, executor20, requestInterceptor23, (retrofit.converter.Converter) gsonConverter27, profiler28, errorHandler29, log33, logLevel35);
        java.util.concurrent.Executor executor37 = restAdapter36.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor38 = restAdapter36.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel39 = restAdapter36.logLevel;
        builder11.logLevel = logLevel39;
        builder7.logLevel = logLevel39;
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "GET" + "'", str14, "GET");
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(server17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Retrofit-" + "'", str22, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor23);
        org.junit.Assert.assertNotNull(request25);
        org.junit.Assert.assertNotNull(request26);
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertNotNull(requestInterceptor38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0648");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter7();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(gsonConverter5);
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0649");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest7();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString5();
        retrofit.RequestInterceptor requestInterceptor5 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.mime.TypedString typedString6 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter6();
        java.lang.String str8 = serializedObjectSupporter0.deserializeObjectString3();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Retrofit-" + "'", str3, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "POST" + "'", str4, "POST");
        org.junit.Assert.assertNotNull(requestInterceptor5);
        org.junit.Assert.assertNotNull(typedString6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "GET" + "'", str8, "GET");
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0650");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.client.Client.Provider provider2 = null;
        builder0.setclientProvider(provider2);
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor5 = null;
        builder4.sethttpExecutor(executor5);
        retrofit.RestAdapter.Log log7 = null;
        builder4.log = log7;
        java.util.concurrent.Executor executor9 = builder4.callbackExecutor;
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        builder4.log = log10;
        retrofit.RestAdapter.Builder builder12 = builder0.setLog(log10);
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter13.deserializeObjectConverter3();
        java.lang.String str16 = serializedObjectSupporter13.deserializeObjectString4();
        retrofit.client.Request request17 = serializedObjectSupporter13.deserializeObjectRequest6();
        retrofit.Server server18 = serializedObjectSupporter13.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder19 = builder12.setServer(server18);
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter3();
        java.lang.String str26 = serializedObjectSupporter23.deserializeObjectString4();
        retrofit.Server server27 = serializedObjectSupporter23.deserializeObjectServer1();
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        java.lang.String str32 = serializedObjectSupporter31.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor33 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request35 = serializedObjectSupporter34.deserializeObjectRequest1();
        retrofit.client.Request request36 = serializedObjectSupporter34.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter34.deserializeObjectConverter5();
        retrofit.Profiler profiler38 = null;
        retrofit.ErrorHandler errorHandler39 = null;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor41 = null;
        builder40.sethttpExecutor(executor41);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        builder40.log = log43;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor33, (retrofit.converter.Converter) gsonConverter37, profiler38, errorHandler39, log43, logLevel45);
        retrofit.RestAdapter.LogLevel logLevel47 = restAdapter46.getLogLevel();
        retrofit.converter.Converter converter48 = restAdapter46.converter;
        retrofit.RequestInterceptor requestInterceptor49 = restAdapter46.requestInterceptor;
        retrofit.converter.Converter converter50 = null;
        retrofit.Profiler profiler51 = null;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor53 = null;
        builder52.sethttpExecutor(executor53);
        retrofit.RestAdapter.Log log55 = null;
        builder52.log = log55;
        retrofit.RestAdapter.Log log57 = builder52.log;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor59 = null;
        builder58.sethttpExecutor(executor59);
        retrofit.RequestInterceptor requestInterceptor61 = null;
        builder58.requestInterceptor = requestInterceptor61;
        java.util.concurrent.Executor executor63 = null;
        builder58.httpExecutor = executor63;
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = new retrofit.SerializedObjectSupporter();
        java.lang.String str66 = serializedObjectSupporter65.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter67 = serializedObjectSupporter65.deserializeObjectConverter3();
        java.lang.String str68 = serializedObjectSupporter65.deserializeObjectString4();
        retrofit.client.Request request69 = serializedObjectSupporter65.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler70 = serializedObjectSupporter65.deserializeObjectErrorHandler1();
        builder58.errorHandler = errorHandler70;
        retrofit.RestAdapter.Builder builder72 = builder52.setErrorHandler(errorHandler70);
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider75 = builder74.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder77 = builder74.setLogLevel(logLevel76);
        retrofit.RestAdapter.LogLevel logLevel78 = builder77.logLevel;
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder80 = builder77.setLogLevel(logLevel79);
        retrofit.RestAdapter restAdapter81 = new retrofit.RestAdapter(server18, provider20, executor21, executor22, requestInterceptor49, converter50, profiler51, errorHandler70, log73, logLevel79);
        java.lang.String str82 = restAdapter81.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor83 = restAdapter81.httpExecutor;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "GET" + "'", str14, "GET");
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(server18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "GET" + "'", str24, "GET");
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "http://example.com/" + "'", str26, "http://example.com/");
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Retrofit-" + "'", str32, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor33);
        org.junit.Assert.assertNotNull(request35);
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter48);
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNull(log57);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "GET" + "'", str66, "GET");
        org.junit.Assert.assertNotNull(gsonConverter67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "http://example.com/" + "'", str68, "http://example.com/");
        org.junit.Assert.assertNotNull(request69);
        org.junit.Assert.assertNotNull(errorHandler70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNull(provider75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Retrofit-Idle" + "'", str82, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor83);
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0651");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.converter.Converter converter3 = builder0.converter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("GET");
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor7 = null;
        builder6.sethttpExecutor(executor7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter3();
        builder6.converter = gsonConverter11;
        retrofit.client.Client.Provider provider13 = null;
        builder6.clientProvider = provider13;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter3();
        java.lang.String str18 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter15.deserializeObjectConverter6();
        builder6.converter = gsonConverter19;
        builder0.converter = gsonConverter19;
        retrofit.RestAdapter restAdapter22 = builder0.build();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter2();
        retrofit.client.Request request26 = serializedObjectSupporter23.deserializeObjectRequest8();
        retrofit.RequestInterceptor requestInterceptor27 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        java.lang.String str28 = serializedObjectSupporter23.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter23.deserializeObjectConverter3();
        restAdapter22.serializedObjectSupporter = serializedObjectSupporter23;
        java.util.concurrent.Executor executor31 = restAdapter22.callbackExecutor;
        java.lang.Throwable throwable32 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter22.logException(throwable32, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "GET" + "'", str10, "GET");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "GET" + "'", str16, "GET");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(request26);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNotNull(executor31);
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0652");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.RequestInterceptor requestInterceptor5 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter3();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(requestInterceptor5);
        org.junit.Assert.assertNotNull(gsonConverter6);
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0653");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.client.Client.Provider provider2 = null;
        builder0.setclientProvider(provider2);
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor5 = null;
        builder4.sethttpExecutor(executor5);
        retrofit.RestAdapter.Log log7 = null;
        builder4.log = log7;
        java.util.concurrent.Executor executor9 = builder4.callbackExecutor;
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        builder4.log = log10;
        retrofit.RestAdapter.Builder builder12 = builder0.setLog(log10);
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter13.deserializeObjectConverter3();
        java.lang.String str16 = serializedObjectSupporter13.deserializeObjectString4();
        retrofit.client.Request request17 = serializedObjectSupporter13.deserializeObjectRequest6();
        retrofit.Server server18 = serializedObjectSupporter13.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder19 = builder12.setServer(server18);
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter3();
        java.lang.String str26 = serializedObjectSupporter23.deserializeObjectString4();
        retrofit.Server server27 = serializedObjectSupporter23.deserializeObjectServer1();
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        java.lang.String str32 = serializedObjectSupporter31.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor33 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request35 = serializedObjectSupporter34.deserializeObjectRequest1();
        retrofit.client.Request request36 = serializedObjectSupporter34.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter34.deserializeObjectConverter5();
        retrofit.Profiler profiler38 = null;
        retrofit.ErrorHandler errorHandler39 = null;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor41 = null;
        builder40.sethttpExecutor(executor41);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        builder40.log = log43;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor33, (retrofit.converter.Converter) gsonConverter37, profiler38, errorHandler39, log43, logLevel45);
        retrofit.RestAdapter.LogLevel logLevel47 = restAdapter46.getLogLevel();
        retrofit.converter.Converter converter48 = restAdapter46.converter;
        retrofit.RequestInterceptor requestInterceptor49 = restAdapter46.requestInterceptor;
        retrofit.converter.Converter converter50 = null;
        retrofit.Profiler profiler51 = null;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor53 = null;
        builder52.sethttpExecutor(executor53);
        retrofit.RestAdapter.Log log55 = null;
        builder52.log = log55;
        retrofit.RestAdapter.Log log57 = builder52.log;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor59 = null;
        builder58.sethttpExecutor(executor59);
        retrofit.RequestInterceptor requestInterceptor61 = null;
        builder58.requestInterceptor = requestInterceptor61;
        java.util.concurrent.Executor executor63 = null;
        builder58.httpExecutor = executor63;
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = new retrofit.SerializedObjectSupporter();
        java.lang.String str66 = serializedObjectSupporter65.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter67 = serializedObjectSupporter65.deserializeObjectConverter3();
        java.lang.String str68 = serializedObjectSupporter65.deserializeObjectString4();
        retrofit.client.Request request69 = serializedObjectSupporter65.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler70 = serializedObjectSupporter65.deserializeObjectErrorHandler1();
        builder58.errorHandler = errorHandler70;
        retrofit.RestAdapter.Builder builder72 = builder52.setErrorHandler(errorHandler70);
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider75 = builder74.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder77 = builder74.setLogLevel(logLevel76);
        retrofit.RestAdapter.LogLevel logLevel78 = builder77.logLevel;
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder80 = builder77.setLogLevel(logLevel79);
        retrofit.RestAdapter restAdapter81 = new retrofit.RestAdapter(server18, provider20, executor21, executor22, requestInterceptor49, converter50, profiler51, errorHandler70, log73, logLevel79);
        retrofit.RequestInterceptor requestInterceptor82 = restAdapter81.getrequestInterceptor();
        retrofit.client.Client.Provider provider83 = restAdapter81.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel84 = restAdapter81.logLevel;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "GET" + "'", str14, "GET");
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(server18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "GET" + "'", str24, "GET");
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "http://example.com/" + "'", str26, "http://example.com/");
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Retrofit-" + "'", str32, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor33);
        org.junit.Assert.assertNotNull(request35);
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter48);
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNull(log57);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "GET" + "'", str66, "GET");
        org.junit.Assert.assertNotNull(gsonConverter67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "http://example.com/" + "'", str68, "http://example.com/");
        org.junit.Assert.assertNotNull(request69);
        org.junit.Assert.assertNotNull(errorHandler70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNull(provider75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(requestInterceptor82);
        org.junit.Assert.assertNull(provider83);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0654");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.ErrorHandler errorHandler3 = builder0.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        java.lang.String str5 = serializedObjectSupporter4.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter4.deserializeObjectConverter3();
        java.lang.String str7 = serializedObjectSupporter4.deserializeObjectString4();
        retrofit.Server server8 = serializedObjectSupporter4.deserializeObjectServer1();
        retrofit.client.Client.Provider provider9 = null;
        java.util.concurrent.Executor executor10 = null;
        java.util.concurrent.Executor executor11 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor14 = serializedObjectSupporter12.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request16 = serializedObjectSupporter15.deserializeObjectRequest1();
        retrofit.client.Request request17 = serializedObjectSupporter15.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter15.deserializeObjectConverter5();
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor22 = null;
        builder21.sethttpExecutor(executor22);
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        builder21.log = log24;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter(server8, provider9, executor10, executor11, requestInterceptor14, (retrofit.converter.Converter) gsonConverter18, profiler19, errorHandler20, log24, logLevel26);
        java.util.concurrent.Executor executor28 = restAdapter27.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor29 = restAdapter27.requestInterceptor;
        retrofit.RestAdapter.Builder builder30 = builder0.setRequestInterceptor(requestInterceptor29);
        retrofit.ErrorHandler errorHandler31 = builder30.errorHandler;
        retrofit.client.Client.Provider provider32 = null;
        builder30.setclientProvider(provider32);
        retrofit.client.Client client34 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder35 = builder30.setClient(client34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "GET" + "'", str5, "GET");
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-" + "'", str13, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor14);
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNotNull(requestInterceptor29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(errorHandler31);
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0655");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.RestAdapter.Log log4 = builder3.log;
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.HEADERS;
        builder3.logLevel = logLevel5;
        retrofit.ErrorHandler errorHandler7 = builder3.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter8.deserializeObjectConverter3();
        java.lang.String str11 = serializedObjectSupporter8.deserializeObjectString4();
        retrofit.client.Request request12 = serializedObjectSupporter8.deserializeObjectRequest6();
        retrofit.Server server13 = serializedObjectSupporter8.deserializeObjectServer1();
        builder3.server = server13;
        java.util.concurrent.Executor executor15 = builder3.getcallbackExecutor();
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = builder16.serializedObjectSupporter;
        retrofit.client.Client.Provider provider18 = null;
        builder16.setclientProvider(provider18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor21 = null;
        builder20.sethttpExecutor(executor21);
        retrofit.RestAdapter.Log log23 = null;
        builder20.log = log23;
        java.util.concurrent.Executor executor25 = builder20.callbackExecutor;
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        builder20.log = log26;
        retrofit.RestAdapter.Builder builder28 = builder16.setLog(log26);
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        java.lang.String str30 = serializedObjectSupporter29.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter3();
        java.lang.String str32 = serializedObjectSupporter29.deserializeObjectString4();
        retrofit.client.Request request33 = serializedObjectSupporter29.deserializeObjectRequest6();
        retrofit.Server server34 = serializedObjectSupporter29.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder35 = builder28.setServer(server34);
        retrofit.client.Client.Provider provider36 = null;
        java.util.concurrent.Executor executor37 = null;
        java.util.concurrent.Executor executor38 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request40 = serializedObjectSupporter39.deserializeObjectRequest1();
        retrofit.client.Request request41 = serializedObjectSupporter39.deserializeObjectRequest5();
        retrofit.RequestInterceptor requestInterceptor42 = serializedObjectSupporter39.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request44 = serializedObjectSupporter43.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter45 = serializedObjectSupporter43.deserializeObjectConverter2();
        retrofit.Profiler profiler46 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        java.lang.String str48 = serializedObjectSupporter47.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter49 = serializedObjectSupporter47.deserializeObjectConverter3();
        java.lang.String str50 = serializedObjectSupporter47.deserializeObjectString4();
        retrofit.client.Request request51 = serializedObjectSupporter47.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler52 = serializedObjectSupporter47.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter54 = builder53.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = builder53.serializedObjectSupporter;
        retrofit.client.Client.Provider provider56 = null;
        builder53.clientProvider = provider56;
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        builder53.log = log58;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor61 = null;
        builder60.setcallbackExecutor(executor61);
        java.util.concurrent.Executor executor63 = null;
        builder60.setcallbackExecutor(executor63);
        retrofit.client.Client.Provider provider65 = null;
        builder60.clientProvider = provider65;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter68 = builder67.serializedObjectSupporter;
        retrofit.Profiler profiler69 = builder67.profiler;
        retrofit.RestAdapter.LogLevel logLevel70 = builder67.logLevel;
        builder60.logLevel = logLevel70;
        retrofit.RestAdapter restAdapter72 = new retrofit.RestAdapter(server34, provider36, executor37, executor38, requestInterceptor42, (retrofit.converter.Converter) gsonConverter45, profiler46, errorHandler52, log58, logLevel70);
        builder3.requestInterceptor = requestInterceptor42;
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(errorHandler7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "GET" + "'", str9, "GET");
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "http://example.com/" + "'", str11, "http://example.com/");
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(serializedObjectSupporter17);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "GET" + "'", str30, "GET");
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "http://example.com/" + "'", str32, "http://example.com/");
        org.junit.Assert.assertNotNull(request33);
        org.junit.Assert.assertNotNull(server34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(request41);
        org.junit.Assert.assertNotNull(requestInterceptor42);
        org.junit.Assert.assertNotNull(request44);
        org.junit.Assert.assertNotNull(gsonConverter45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "GET" + "'", str48, "GET");
        org.junit.Assert.assertNotNull(gsonConverter49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "http://example.com/" + "'", str50, "http://example.com/");
        org.junit.Assert.assertNotNull(request51);
        org.junit.Assert.assertNotNull(errorHandler52);
        org.junit.Assert.assertNull(serializedObjectSupporter54);
        org.junit.Assert.assertNull(serializedObjectSupporter55);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNull(serializedObjectSupporter68);
        org.junit.Assert.assertNull(profiler69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0656");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest3();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "GET" + "'", str3, "GET");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(request6);
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0657");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.converter.Converter converter3 = builder0.converter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("GET");
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor7 = null;
        builder6.sethttpExecutor(executor7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter3();
        builder6.converter = gsonConverter11;
        retrofit.client.Client.Provider provider13 = null;
        builder6.clientProvider = provider13;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter3();
        java.lang.String str18 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter15.deserializeObjectConverter6();
        builder6.converter = gsonConverter19;
        builder0.converter = gsonConverter19;
        retrofit.RestAdapter restAdapter22 = builder0.build();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter2();
        retrofit.client.Request request26 = serializedObjectSupporter23.deserializeObjectRequest8();
        java.lang.String str27 = serializedObjectSupporter23.deserializeObjectString3();
        retrofit.client.Request request28 = serializedObjectSupporter23.deserializeObjectRequest5();
        restAdapter22.serializedObjectSupporter = serializedObjectSupporter23;
        retrofit.RestAdapter.RestHandler restHandler30 = restAdapter22.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = restHandler30.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = restHandler30.serializedObjectSupporter;
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "GET" + "'", str10, "GET");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "GET" + "'", str16, "GET");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(request26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "GET" + "'", str27, "GET");
        org.junit.Assert.assertNotNull(request28);
        org.junit.Assert.assertNull(serializedObjectSupporter31);
        org.junit.Assert.assertNull(serializedObjectSupporter32);
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0658");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        retrofit.RestAdapter.Log log5 = builder0.log;
        retrofit.Profiler profiler6 = builder0.profiler;
        retrofit.RestAdapter.Builder builder8 = builder0.setServer("http://example.com/");
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request10 = serializedObjectSupporter9.deserializeObjectRequest1();
        retrofit.client.Request request11 = serializedObjectSupporter9.deserializeObjectRequest5();
        java.lang.String str12 = serializedObjectSupporter9.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter9.deserializeObjectConverter7();
        builder0.converter = gsonConverter13;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor16 = null;
        builder15.sethttpExecutor(executor16);
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        java.lang.String str19 = serializedObjectSupporter18.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter18.deserializeObjectConverter3();
        builder15.converter = gsonConverter20;
        retrofit.client.Client.Provider provider22 = null;
        builder15.clientProvider = provider22;
        retrofit.client.Client.Provider provider24 = null;
        builder15.setclientProvider(provider24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = builder26.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = builder26.serializedObjectSupporter;
        java.util.concurrent.Executor executor29 = null;
        builder26.httpExecutor = executor29;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request32 = serializedObjectSupporter31.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter2();
        builder26.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.client.Request request35 = serializedObjectSupporter31.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter31.deserializeObjectConverter5();
        retrofit.Server server37 = serializedObjectSupporter31.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder38 = builder15.setServer(server37);
        retrofit.client.Client.Provider provider39 = builder15.clientProvider;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        builder40.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler42 = builder40.errorHandler;
        java.util.concurrent.Executor executor43 = builder40.getcallbackExecutor();
        builder15.sethttpExecutor(executor43);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor46 = null;
        builder45.sethttpExecutor(executor46);
        retrofit.RequestInterceptor requestInterceptor48 = null;
        builder45.requestInterceptor = requestInterceptor48;
        retrofit.converter.Converter converter50 = builder45.converter;
        java.util.concurrent.Executor executor51 = null;
        builder45.httpExecutor = executor51;
        java.util.concurrent.Executor executor53 = null;
        builder45.httpExecutor = executor53;
        retrofit.Profiler profiler55 = null;
        builder45.profiler = profiler55;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider58 = builder57.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder60 = builder57.setLogLevel(logLevel59);
        retrofit.converter.Converter converter61 = builder60.converter;
        builder60.ensureSaneDefaults();
        retrofit.client.Client.Provider provider63 = builder60.clientProvider;
        retrofit.RestAdapter.Builder builder64 = builder45.setClient(provider63);
        builder15.clientProvider = provider63;
        builder0.clientProvider = provider63;
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNull(profiler6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "POST" + "'", str12, "POST");
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "GET" + "'", str19, "GET");
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertNull(serializedObjectSupporter27);
        org.junit.Assert.assertNull(serializedObjectSupporter28);
        org.junit.Assert.assertNotNull(request32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(request35);
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(provider39);
        org.junit.Assert.assertNotNull(errorHandler42);
        org.junit.Assert.assertNotNull(executor43);
        org.junit.Assert.assertNull(converter50);
        org.junit.Assert.assertNull(provider58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNull(converter61);
        org.junit.Assert.assertNotNull(provider63);
        org.junit.Assert.assertNotNull(builder64);
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0659");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        retrofit.RestAdapter.Log log5 = builder0.log;
        retrofit.Profiler profiler6 = builder0.profiler;
        retrofit.RestAdapter.Builder builder8 = builder0.setServer("http://example.com/");
        java.util.concurrent.Executor executor9 = null;
        builder0.sethttpExecutor(executor9);
        retrofit.converter.Converter converter11 = builder0.converter;
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNull(profiler6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(converter11);
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0660");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.converter.Converter converter3 = builder0.converter;
        retrofit.RestAdapter.Log log4 = builder0.log;
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(log4);
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0661");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest4();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString1();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Retrofit-" + "'", str6, "Retrofit-");
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0662");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        java.util.concurrent.Executor executor3 = null;
        builder0.httpExecutor = executor3;
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request6 = serializedObjectSupporter5.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter5.deserializeObjectConverter2();
        builder0.serializedObjectSupporter = serializedObjectSupporter5;
        retrofit.client.Request request9 = serializedObjectSupporter5.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter5.deserializeObjectConverter5();
        retrofit.client.Request request11 = serializedObjectSupporter5.deserializeObjectRequest1();
        java.util.List<retrofit.client.Header> headerList12 = request11.getHeaders();
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(request9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertNotNull(headerList12);
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0663");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = builder0.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel4 = builder0.logLevel;
        retrofit.Profiler profiler5 = builder0.profiler;
        retrofit.RestAdapter.Builder builder7 = builder0.setServer("hi!");
        retrofit.converter.Converter converter8 = builder7.converter;
        retrofit.converter.Converter converter9 = builder7.converter;
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(converter8);
        org.junit.Assert.assertNull(converter9);
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0664");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter3();
        builder0.converter = gsonConverter5;
        retrofit.client.Client.Provider provider7 = null;
        builder0.clientProvider = provider7;
        retrofit.client.Client.Provider provider9 = builder0.getclientProvider();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNull(provider9);
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0665");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest2();
        retrofit.client.Request request7 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.client.Request request8 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter0.deserializeObjectConverter4();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "GET" + "'", str3, "GET");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(gsonConverter9);
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0666");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        java.lang.String str27 = restAdapter23.getTHREAD_PREFIX();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = restAdapter23.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter23.logLevel;
        retrofit.converter.Converter converter30 = restAdapter23.getconverter();
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = restAdapter23.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter23.logLevel;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Retrofit-" + "'", str27, "Retrofit-");
        org.junit.Assert.assertNull(serializedObjectSupporter28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter30);
        org.junit.Assert.assertNull(serializedObjectSupporter31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0667");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        java.lang.String str26 = restAdapter23.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        retrofit.client.Client.Provider provider28 = restAdapter23.getclientProvider();
        java.lang.String str29 = restAdapter23.getIDLE_THREAD_NAME();
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter23.logLevel;
        java.lang.Throwable throwable31 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter23.logException(throwable31, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(provider28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Retrofit-Idle" + "'", str29, "Retrofit-Idle");
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0668");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = null;
        builder0.setcallbackExecutor(executor3);
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.FULL;
        builder0.logLevel = logLevel5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor8 = null;
        builder7.setcallbackExecutor(executor8);
        java.util.concurrent.Executor executor10 = null;
        builder7.setcallbackExecutor(executor10);
        builder7.ensureSaneDefaults();
        java.util.concurrent.Executor executor13 = builder7.callbackExecutor;
        builder0.sethttpExecutor(executor13);
        java.util.concurrent.Executor executor15 = null;
        builder0.httpExecutor = executor15;
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(executor13);
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0669");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        java.util.concurrent.Executor executor5 = null;
        builder0.httpExecutor = executor5;
        java.util.concurrent.Executor executor7 = null;
        builder0.setcallbackExecutor(executor7);
        java.util.concurrent.Executor executor9 = null;
        builder0.httpExecutor = executor9;
        retrofit.Profiler profiler11 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder12 = builder0.setProfiler(profiler11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0670");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter23.getLogLevel();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0671");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.converter.Converter converter4 = builder3.converter;
        retrofit.Profiler profiler5 = builder3.profiler;
        java.util.concurrent.Executor executor6 = builder3.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request8 = serializedObjectSupporter7.deserializeObjectRequest1();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str10 = serializedObjectSupporter7.deserializeObjectString1();
        builder3.serializedObjectSupporter = serializedObjectSupporter7;
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter7.deserializeObjectConverter8();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter7.deserializeObjectConverter6();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter7.deserializeObjectConverter7();
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNull(profiler5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Retrofit-" + "'", str10, "Retrofit-");
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertNotNull(gsonConverter14);
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0672");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        java.lang.String str25 = restAdapter23.getIDLE_THREAD_NAME();
        retrofit.Profiler profiler26 = restAdapter23.profiler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        java.lang.String str28 = serializedObjectSupporter27.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter27.deserializeObjectConverter3();
        java.lang.String str30 = serializedObjectSupporter27.deserializeObjectString4();
        retrofit.Server server31 = serializedObjectSupporter27.deserializeObjectServer1();
        retrofit.client.Client.Provider provider32 = null;
        java.util.concurrent.Executor executor33 = null;
        java.util.concurrent.Executor executor34 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        java.lang.String str36 = serializedObjectSupporter35.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor37 = serializedObjectSupporter35.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request39 = serializedObjectSupporter38.deserializeObjectRequest1();
        retrofit.client.Request request40 = serializedObjectSupporter38.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter38.deserializeObjectConverter5();
        retrofit.Profiler profiler42 = null;
        retrofit.ErrorHandler errorHandler43 = null;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor45 = null;
        builder44.sethttpExecutor(executor45);
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        builder44.log = log47;
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter(server31, provider32, executor33, executor34, requestInterceptor37, (retrofit.converter.Converter) gsonConverter41, profiler42, errorHandler43, log47, logLevel49);
        java.util.concurrent.Executor executor51 = restAdapter50.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter50.logLevel = logLevel52;
        retrofit.SerializedObjectSupporter serializedObjectSupporter54 = restAdapter50.serializedObjectSupporter;
        retrofit.RestAdapter.Log log55 = restAdapter50.log;
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request57 = serializedObjectSupporter56.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter58 = serializedObjectSupporter56.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter59 = serializedObjectSupporter56.deserializeObjectConverter8();
        java.lang.String str60 = serializedObjectSupporter56.deserializeObjectString4();
        restAdapter50.serializedObjectSupporter = serializedObjectSupporter56;
        retrofit.client.Request request62 = serializedObjectSupporter56.deserializeObjectRequest7();
        retrofit.client.Request request63 = restAdapter23.logAndReplaceRequest(request62);
        retrofit.ErrorHandler errorHandler64 = restAdapter23.geterrorHandler();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Retrofit-Idle" + "'", str25, "Retrofit-Idle");
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "GET" + "'", str28, "GET");
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "http://example.com/" + "'", str30, "http://example.com/");
        org.junit.Assert.assertNotNull(server31);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Retrofit-" + "'", str36, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor37);
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(gsonConverter41);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(serializedObjectSupporter54);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(request57);
        org.junit.Assert.assertNotNull(gsonConverter58);
        org.junit.Assert.assertNotNull(gsonConverter59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "http://example.com/" + "'", str60, "http://example.com/");
        org.junit.Assert.assertNotNull(request62);
        org.junit.Assert.assertNotNull(request63);
        org.junit.Assert.assertNull(errorHandler64);
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0673");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.converter.Converter converter4 = builder3.converter;
        retrofit.Profiler profiler5 = builder3.profiler;
        java.util.concurrent.Executor executor6 = builder3.callbackExecutor;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor8 = null;
        builder7.setcallbackExecutor(executor8);
        java.util.concurrent.Executor executor10 = null;
        builder7.setcallbackExecutor(executor10);
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.FULL;
        builder7.logLevel = logLevel12;
        retrofit.client.Client.Provider provider14 = builder7.getclientProvider();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = builder7.serializedObjectSupporter;
        java.util.concurrent.Executor executor16 = builder7.callbackExecutor;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = builder17.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = builder17.serializedObjectSupporter;
        java.util.concurrent.Executor executor20 = null;
        builder17.httpExecutor = executor20;
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request23 = serializedObjectSupporter22.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter24 = serializedObjectSupporter22.deserializeObjectConverter2();
        builder17.serializedObjectSupporter = serializedObjectSupporter22;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider27 = builder26.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder29 = builder26.setLogLevel(logLevel28);
        retrofit.converter.Converter converter30 = builder29.converter;
        java.util.concurrent.Executor executor31 = null;
        builder29.sethttpExecutor(executor31);
        retrofit.RestAdapter.Builder builder34 = builder29.setServer("GET");
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor36 = null;
        builder35.setcallbackExecutor(executor36);
        java.util.concurrent.Executor executor38 = null;
        builder35.setcallbackExecutor(executor38);
        builder35.ensureSaneDefaults();
        java.util.concurrent.Executor executor41 = builder35.callbackExecutor;
        builder34.setcallbackExecutor(executor41);
        builder17.httpExecutor = executor41;
        builder7.sethttpExecutor(executor41);
        builder3.callbackExecutor = executor41;
        java.util.concurrent.Executor executor46 = builder3.httpExecutor;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor48 = null;
        builder47.setcallbackExecutor(executor48);
        java.util.concurrent.Executor executor50 = builder47.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel51 = builder47.logLevel;
        retrofit.Profiler profiler52 = builder47.profiler;
        retrofit.RestAdapter.Builder builder54 = builder47.setServer("hi!");
        retrofit.converter.Converter converter55 = builder54.converter;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider57 = builder56.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder59 = builder56.setLogLevel(logLevel58);
        retrofit.converter.Converter converter60 = builder59.converter;
        builder59.ensureSaneDefaults();
        retrofit.client.Client.Provider provider62 = builder59.clientProvider;
        builder54.clientProvider = provider62;
        builder3.setclientProvider(provider62);
        retrofit.Profiler profiler65 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder66 = builder3.setProfiler(profiler65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNull(profiler5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(serializedObjectSupporter15);
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertNull(serializedObjectSupporter18);
        org.junit.Assert.assertNull(serializedObjectSupporter19);
        org.junit.Assert.assertNotNull(request23);
        org.junit.Assert.assertNotNull(gsonConverter24);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNull(converter30);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(executor41);
        org.junit.Assert.assertNull(executor46);
        org.junit.Assert.assertNull(executor50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(converter55);
        org.junit.Assert.assertNull(provider57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNull(converter60);
        org.junit.Assert.assertNotNull(provider62);
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0674");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter3();
        builder0.converter = gsonConverter5;
        retrofit.client.Client.Provider provider7 = null;
        builder0.clientProvider = provider7;
        retrofit.client.Client.Provider provider9 = null;
        builder0.setclientProvider(provider9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider12 = builder11.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder14 = builder11.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log15 = builder14.log;
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.HEADERS;
        builder14.logLevel = logLevel16;
        retrofit.ErrorHandler errorHandler18 = builder14.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = new retrofit.SerializedObjectSupporter();
        java.lang.String str20 = serializedObjectSupporter19.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter19.deserializeObjectConverter3();
        java.lang.String str22 = serializedObjectSupporter19.deserializeObjectString4();
        retrofit.client.Request request23 = serializedObjectSupporter19.deserializeObjectRequest6();
        retrofit.Server server24 = serializedObjectSupporter19.deserializeObjectServer1();
        builder14.server = server24;
        java.util.concurrent.Executor executor26 = builder14.getcallbackExecutor();
        java.util.concurrent.Executor executor27 = builder14.callbackExecutor;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor29 = null;
        builder28.setcallbackExecutor(executor29);
        java.util.concurrent.Executor executor31 = null;
        builder28.setcallbackExecutor(executor31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.FULL;
        builder28.logLevel = logLevel33;
        retrofit.client.Client.Provider provider35 = builder28.getclientProvider();
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor37 = null;
        builder36.sethttpExecutor(executor37);
        retrofit.RestAdapter.Log log39 = null;
        builder36.log = log39;
        retrofit.RestAdapter.Log log41 = builder36.log;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor43 = null;
        builder42.sethttpExecutor(executor43);
        retrofit.RequestInterceptor requestInterceptor45 = null;
        builder42.requestInterceptor = requestInterceptor45;
        java.util.concurrent.Executor executor47 = null;
        builder42.httpExecutor = executor47;
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = new retrofit.SerializedObjectSupporter();
        java.lang.String str50 = serializedObjectSupporter49.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter51 = serializedObjectSupporter49.deserializeObjectConverter3();
        java.lang.String str52 = serializedObjectSupporter49.deserializeObjectString4();
        retrofit.client.Request request53 = serializedObjectSupporter49.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler54 = serializedObjectSupporter49.deserializeObjectErrorHandler1();
        builder42.errorHandler = errorHandler54;
        retrofit.RestAdapter.Builder builder56 = builder36.setErrorHandler(errorHandler54);
        retrofit.RestAdapter.Builder builder57 = builder28.setErrorHandler(errorHandler54);
        retrofit.RestAdapter.Builder builder58 = builder14.setErrorHandler(errorHandler54);
        retrofit.RestAdapter.Builder builder59 = builder0.setErrorHandler(errorHandler54);
        retrofit.converter.Converter converter60 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder61 = builder59.setConverter(converter60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(log15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(errorHandler18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "GET" + "'", str20, "GET");
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "http://example.com/" + "'", str22, "http://example.com/");
        org.junit.Assert.assertNotNull(request23);
        org.junit.Assert.assertNotNull(server24);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNull(log41);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "GET" + "'", str50, "GET");
        org.junit.Assert.assertNotNull(gsonConverter51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "http://example.com/" + "'", str52, "http://example.com/");
        org.junit.Assert.assertNotNull(request53);
        org.junit.Assert.assertNotNull(errorHandler54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0675");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter3();
        builder0.converter = gsonConverter5;
        retrofit.client.Client.Provider provider7 = null;
        builder0.clientProvider = provider7;
        retrofit.RestAdapter.LogLevel logLevel9 = builder0.logLevel;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor11 = null;
        builder10.sethttpExecutor(executor11);
        retrofit.RequestInterceptor requestInterceptor13 = null;
        builder10.requestInterceptor = requestInterceptor13;
        retrofit.converter.Converter converter15 = builder10.converter;
        java.util.concurrent.Executor executor16 = null;
        builder10.httpExecutor = executor16;
        retrofit.RestAdapter.LogLevel logLevel18 = builder10.logLevel;
        builder0.logLevel = logLevel18;
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        java.lang.String str21 = serializedObjectSupporter20.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter3();
        java.lang.String str23 = serializedObjectSupporter20.deserializeObjectString4();
        retrofit.Server server24 = serializedObjectSupporter20.deserializeObjectServer1();
        retrofit.client.Client.Provider provider25 = null;
        java.util.concurrent.Executor executor26 = null;
        java.util.concurrent.Executor executor27 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        java.lang.String str29 = serializedObjectSupporter28.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor30 = serializedObjectSupporter28.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request32 = serializedObjectSupporter31.deserializeObjectRequest1();
        retrofit.client.Request request33 = serializedObjectSupporter31.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter34 = serializedObjectSupporter31.deserializeObjectConverter5();
        retrofit.Profiler profiler35 = null;
        retrofit.ErrorHandler errorHandler36 = null;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor38 = null;
        builder37.sethttpExecutor(executor38);
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        builder37.log = log40;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter(server24, provider25, executor26, executor27, requestInterceptor30, (retrofit.converter.Converter) gsonConverter34, profiler35, errorHandler36, log40, logLevel42);
        java.util.concurrent.Executor executor44 = restAdapter43.getcallbackExecutor();
        java.util.concurrent.Executor executor45 = restAdapter43.callbackExecutor;
        java.lang.String str46 = restAdapter43.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor47 = restAdapter43.httpExecutor;
        java.util.concurrent.Executor executor48 = restAdapter43.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter43.logLevel = logLevel49;
        builder0.logLevel = logLevel49;
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "GET" + "'", str21, "GET");
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "http://example.com/" + "'", str23, "http://example.com/");
        org.junit.Assert.assertNotNull(server24);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Retrofit-" + "'", str29, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor30);
        org.junit.Assert.assertNotNull(request32);
        org.junit.Assert.assertNotNull(request33);
        org.junit.Assert.assertNotNull(gsonConverter34);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor44);
        org.junit.Assert.assertNull(executor45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Retrofit-Idle" + "'", str46, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor47);
        org.junit.Assert.assertNull(executor48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0676");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.RestAdapter.Log log4 = builder3.log;
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.HEADERS;
        builder3.logLevel = logLevel5;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request8 = serializedObjectSupporter7.deserializeObjectRequest1();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str10 = serializedObjectSupporter7.deserializeObjectString3();
        retrofit.client.Request request11 = serializedObjectSupporter7.deserializeObjectRequest4();
        retrofit.client.Request request12 = serializedObjectSupporter7.deserializeObjectRequest6();
        builder3.serializedObjectSupporter = serializedObjectSupporter7;
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor16 = serializedObjectSupporter14.deserializeObjectRequestInterceptor1();
        builder3.serializedObjectSupporter = serializedObjectSupporter14;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor19 = null;
        builder18.sethttpExecutor(executor19);
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = new retrofit.SerializedObjectSupporter();
        java.lang.String str22 = serializedObjectSupporter21.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter21.deserializeObjectConverter3();
        builder18.converter = gsonConverter23;
        retrofit.client.Client.Provider provider25 = null;
        builder18.clientProvider = provider25;
        retrofit.RestAdapter.LogLevel logLevel27 = builder18.logLevel;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor29 = null;
        builder28.sethttpExecutor(executor29);
        retrofit.RequestInterceptor requestInterceptor31 = null;
        builder28.requestInterceptor = requestInterceptor31;
        retrofit.converter.Converter converter33 = builder28.converter;
        java.util.concurrent.Executor executor34 = null;
        builder28.httpExecutor = executor34;
        retrofit.RestAdapter.LogLevel logLevel36 = builder28.logLevel;
        builder18.logLevel = logLevel36;
        java.util.concurrent.Executor executor38 = builder18.callbackExecutor;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider40 = builder39.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder42 = builder39.setLogLevel(logLevel41);
        retrofit.converter.Converter converter43 = builder42.converter;
        builder42.ensureSaneDefaults();
        retrofit.client.Client.Provider provider45 = builder42.clientProvider;
        builder18.setclientProvider(provider45);
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor48 = null;
        builder47.sethttpExecutor(executor48);
        retrofit.RestAdapter.Log log50 = null;
        builder47.log = log50;
        java.util.concurrent.Executor executor52 = builder47.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter53 = builder47.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter54 = builder47.serializedObjectSupporter;
        builder47.ensureSaneDefaults();
        java.util.concurrent.Executor executor56 = builder47.httpExecutor;
        builder18.setcallbackExecutor(executor56);
        builder3.httpExecutor = executor56;
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "GET" + "'", str10, "GET");
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Retrofit-" + "'", str15, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "GET" + "'", str22, "GET");
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter33);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor38);
        org.junit.Assert.assertNull(provider40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(converter43);
        org.junit.Assert.assertNotNull(provider45);
        org.junit.Assert.assertNull(executor52);
        org.junit.Assert.assertNull(serializedObjectSupporter53);
        org.junit.Assert.assertNull(serializedObjectSupporter54);
        org.junit.Assert.assertNotNull(executor56);
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0677");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        retrofit.RestAdapter.Log log5 = builder0.log;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = builder6.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = builder8.serializedObjectSupporter;
        retrofit.Profiler profiler10 = builder8.profiler;
        retrofit.RestAdapter.LogLevel logLevel11 = builder8.logLevel;
        builder6.logLevel = logLevel11;
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter13.deserializeObjectConverter3();
        java.lang.String str16 = serializedObjectSupporter13.deserializeObjectString4();
        retrofit.Server server17 = serializedObjectSupporter13.deserializeObjectServer1();
        retrofit.client.Client.Provider provider18 = null;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = new retrofit.SerializedObjectSupporter();
        java.lang.String str22 = serializedObjectSupporter21.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor23 = serializedObjectSupporter21.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request25 = serializedObjectSupporter24.deserializeObjectRequest1();
        retrofit.client.Request request26 = serializedObjectSupporter24.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter24.deserializeObjectConverter5();
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor31 = null;
        builder30.sethttpExecutor(executor31);
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        builder30.log = log33;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter(server17, provider18, executor19, executor20, requestInterceptor23, (retrofit.converter.Converter) gsonConverter27, profiler28, errorHandler29, log33, logLevel35);
        java.util.concurrent.Executor executor37 = restAdapter36.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter36.logLevel = logLevel38;
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = restAdapter36.serializedObjectSupporter;
        retrofit.RestAdapter.Log log41 = restAdapter36.log;
        builder6.log = log41;
        retrofit.RestAdapter.Builder builder43 = builder0.setLog(log41);
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor45 = null;
        builder44.sethttpExecutor(executor45);
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        java.lang.String str48 = serializedObjectSupporter47.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter49 = serializedObjectSupporter47.deserializeObjectConverter3();
        builder44.converter = gsonConverter49;
        retrofit.client.Client.Provider provider51 = null;
        builder44.clientProvider = provider51;
        retrofit.RestAdapter.LogLevel logLevel53 = builder44.logLevel;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor55 = null;
        builder54.sethttpExecutor(executor55);
        retrofit.RequestInterceptor requestInterceptor57 = null;
        builder54.requestInterceptor = requestInterceptor57;
        retrofit.converter.Converter converter59 = builder54.converter;
        java.util.concurrent.Executor executor60 = null;
        builder54.httpExecutor = executor60;
        retrofit.RestAdapter.LogLevel logLevel62 = builder54.logLevel;
        builder44.logLevel = logLevel62;
        java.util.concurrent.Executor executor64 = builder44.callbackExecutor;
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider66 = builder65.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder68 = builder65.setLogLevel(logLevel67);
        retrofit.converter.Converter converter69 = builder68.converter;
        builder68.ensureSaneDefaults();
        retrofit.client.Client.Provider provider71 = builder68.clientProvider;
        builder44.setclientProvider(provider71);
        builder43.setclientProvider(provider71);
        retrofit.Profiler profiler74 = null;
        builder43.profiler = profiler74;
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNull(serializedObjectSupporter7);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertNull(profiler10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "GET" + "'", str14, "GET");
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(server17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Retrofit-" + "'", str22, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor23);
        org.junit.Assert.assertNotNull(request25);
        org.junit.Assert.assertNotNull(request26);
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(serializedObjectSupporter40);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "GET" + "'", str48, "GET");
        org.junit.Assert.assertNotNull(gsonConverter49);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter59);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor64);
        org.junit.Assert.assertNull(provider66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNull(converter69);
        org.junit.Assert.assertNotNull(provider71);
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0678");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.Profiler profiler24 = restAdapter23.profiler;
        retrofit.converter.Converter converter25 = restAdapter23.getconverter();
        java.util.concurrent.Executor executor26 = restAdapter23.httpExecutor;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(profiler24);
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertNull(executor26);
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0679");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.converter.Converter converter3 = builder0.converter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("GET");
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor7 = null;
        builder6.sethttpExecutor(executor7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter3();
        builder6.converter = gsonConverter11;
        retrofit.client.Client.Provider provider13 = null;
        builder6.clientProvider = provider13;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter3();
        java.lang.String str18 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter15.deserializeObjectConverter6();
        builder6.converter = gsonConverter19;
        builder0.converter = gsonConverter19;
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        java.lang.String str23 = serializedObjectSupporter22.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter24 = serializedObjectSupporter22.deserializeObjectConverter3();
        java.lang.String str25 = serializedObjectSupporter22.deserializeObjectString4();
        retrofit.Server server26 = serializedObjectSupporter22.deserializeObjectServer1();
        retrofit.client.Client.Provider provider27 = null;
        java.util.concurrent.Executor executor28 = null;
        java.util.concurrent.Executor executor29 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        java.lang.String str31 = serializedObjectSupporter30.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter30.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request34 = serializedObjectSupporter33.deserializeObjectRequest1();
        retrofit.client.Request request35 = serializedObjectSupporter33.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter33.deserializeObjectConverter5();
        retrofit.Profiler profiler37 = null;
        retrofit.ErrorHandler errorHandler38 = null;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor40 = null;
        builder39.sethttpExecutor(executor40);
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        builder39.log = log42;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter(server26, provider27, executor28, executor29, requestInterceptor32, (retrofit.converter.Converter) gsonConverter36, profiler37, errorHandler38, log42, logLevel44);
        java.util.concurrent.Executor executor46 = restAdapter45.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor47 = restAdapter45.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor48 = restAdapter45.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor49 = restAdapter45.getrequestInterceptor();
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor51 = null;
        builder50.sethttpExecutor(executor51);
        retrofit.RequestInterceptor requestInterceptor53 = null;
        builder50.requestInterceptor = requestInterceptor53;
        retrofit.converter.Converter converter55 = builder50.converter;
        java.util.concurrent.Executor executor56 = null;
        builder50.httpExecutor = executor56;
        retrofit.RestAdapter.LogLevel logLevel58 = builder50.logLevel;
        restAdapter45.logLevel = logLevel58;
        builder0.logLevel = logLevel58;
        java.util.concurrent.Executor executor61 = builder0.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter62 = builder0.serializedObjectSupporter;
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "GET" + "'", str10, "GET");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "GET" + "'", str16, "GET");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "GET" + "'", str23, "GET");
        org.junit.Assert.assertNotNull(gsonConverter24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "http://example.com/" + "'", str25, "http://example.com/");
        org.junit.Assert.assertNotNull(server26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Retrofit-" + "'", str31, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(request34);
        org.junit.Assert.assertNotNull(request35);
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor46);
        org.junit.Assert.assertNotNull(requestInterceptor47);
        org.junit.Assert.assertNotNull(requestInterceptor48);
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNull(converter55);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor61);
        org.junit.Assert.assertNull(serializedObjectSupporter62);
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0680");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        retrofit.ErrorHandler errorHandler27 = restAdapter23.geterrorHandler();
        java.util.concurrent.Executor executor28 = restAdapter23.gethttpExecutor();
        java.lang.String str29 = restAdapter23.getTHREAD_PREFIX();
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request31 = serializedObjectSupporter30.deserializeObjectRequest1();
        retrofit.client.Request request32 = serializedObjectSupporter30.deserializeObjectRequest5();
        retrofit.client.Request request33 = restAdapter23.logAndReplaceRequest(request32);
        retrofit.RestAdapter.RestHandler restHandler34 = restAdapter23.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest8();
        java.lang.String str37 = request36.method;
        retrofit.mime.TypedOutput typedOutput38 = request36.getBody();
        java.lang.String str39 = request36.getUrl();
        java.lang.reflect.Method method40 = null;
        java.lang.Object[] objArray42 = new java.lang.Object[] { "Retrofit-" };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj43 = restHandler34.invoke((java.lang.Object) request36, method40, objArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNull(errorHandler27);
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Retrofit-" + "'", str29, "Retrofit-");
        org.junit.Assert.assertNotNull(request31);
        org.junit.Assert.assertNotNull(request32);
        org.junit.Assert.assertNotNull(request33);
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "GET" + "'", str37, "GET");
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "http://example.com/" + "'", str39, "http://example.com/");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[Retrofit-]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[Retrofit-]");
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0681");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        java.lang.String str26 = restAdapter23.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        retrofit.Profiler profiler28 = restAdapter23.getprofiler();
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter23.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        java.lang.String str31 = serializedObjectSupporter30.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter30.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter30.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter34 = serializedObjectSupporter30.deserializeObjectConverter8();
        java.lang.String str35 = serializedObjectSupporter30.deserializeObjectString2();
        restHandler29.serializedObjectSupporter = serializedObjectSupporter30;
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = restHandler29.serializedObjectSupporter;
        retrofit.client.Request request38 = serializedObjectSupporter37.deserializeObjectRequest7();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Retrofit-" + "'", str31, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(gsonConverter34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Retrofit-Idle" + "'", str35, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(serializedObjectSupporter37);
        org.junit.Assert.assertNotNull(request38);
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0682");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        builder0.ensureSaneDefaults();
        retrofit.client.Client.Provider provider4 = null;
        builder0.setclientProvider(provider4);
        retrofit.Server server6 = builder0.server;
        retrofit.client.Client client7 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder8 = builder0.setClient(client7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server6);
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0683");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.getconverter();
        java.util.concurrent.Executor executor26 = restAdapter23.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor27 = restAdapter23.getrequestInterceptor();
        retrofit.Server server28 = restAdapter23.server;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor30 = null;
        builder29.sethttpExecutor(executor30);
        retrofit.RequestInterceptor requestInterceptor32 = null;
        builder29.requestInterceptor = requestInterceptor32;
        retrofit.Profiler profiler34 = null;
        builder29.profiler = profiler34;
        java.util.concurrent.Executor executor36 = builder29.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = new retrofit.SerializedObjectSupporter();
        java.lang.String str38 = serializedObjectSupporter37.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter37.deserializeObjectConverter3();
        java.lang.String str40 = serializedObjectSupporter37.deserializeObjectString4();
        retrofit.Server server41 = serializedObjectSupporter37.deserializeObjectServer1();
        retrofit.client.Client.Provider provider42 = null;
        java.util.concurrent.Executor executor43 = null;
        java.util.concurrent.Executor executor44 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = new retrofit.SerializedObjectSupporter();
        java.lang.String str46 = serializedObjectSupporter45.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor47 = serializedObjectSupporter45.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request49 = serializedObjectSupporter48.deserializeObjectRequest1();
        retrofit.client.Request request50 = serializedObjectSupporter48.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter51 = serializedObjectSupporter48.deserializeObjectConverter5();
        retrofit.Profiler profiler52 = null;
        retrofit.ErrorHandler errorHandler53 = null;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor55 = null;
        builder54.sethttpExecutor(executor55);
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        builder54.log = log57;
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter(server41, provider42, executor43, executor44, requestInterceptor47, (retrofit.converter.Converter) gsonConverter51, profiler52, errorHandler53, log57, logLevel59);
        java.util.concurrent.Executor executor61 = restAdapter60.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor62 = restAdapter60.requestInterceptor;
        retrofit.RestAdapter.Builder builder63 = builder29.setRequestInterceptor(requestInterceptor62);
        retrofit.RestAdapter.LogLevel logLevel64 = builder29.logLevel;
        restAdapter23.logLevel = logLevel64;
        retrofit.RestAdapter.RestHandler restHandler66 = restAdapter23.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel67 = restAdapter23.logLevel;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNull(executor36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "GET" + "'", str38, "GET");
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "http://example.com/" + "'", str40, "http://example.com/");
        org.junit.Assert.assertNotNull(server41);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Retrofit-" + "'", str46, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor47);
        org.junit.Assert.assertNotNull(request49);
        org.junit.Assert.assertNotNull(request50);
        org.junit.Assert.assertNotNull(gsonConverter51);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor61);
        org.junit.Assert.assertNotNull(requestInterceptor62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0684");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = builder0.log;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor3 = null;
        builder2.sethttpExecutor(executor3);
        retrofit.RestAdapter.Log log5 = null;
        builder2.log = log5;
        java.util.concurrent.Executor executor7 = builder2.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = builder2.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = builder2.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = builder10.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = builder10.serializedObjectSupporter;
        java.util.concurrent.Executor executor13 = null;
        builder10.httpExecutor = executor13;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request16 = serializedObjectSupporter15.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter2();
        builder10.serializedObjectSupporter = serializedObjectSupporter15;
        retrofit.client.Request request19 = serializedObjectSupporter15.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter15.deserializeObjectConverter5();
        retrofit.Server server21 = serializedObjectSupporter15.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter15.deserializeObjectConverter2();
        builder2.converter = gsonConverter22;
        builder0.converter = gsonConverter22;
        retrofit.Server server25 = builder0.server;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter26 = builder0.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(log1);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertNull(serializedObjectSupporter12);
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNotNull(request19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNull(server25);
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0685");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        retrofit.converter.Converter converter5 = builder0.converter;
        java.util.concurrent.Executor executor6 = null;
        builder0.httpExecutor = executor6;
        java.util.concurrent.Executor executor8 = null;
        builder0.httpExecutor = executor8;
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter11.deserializeObjectConverter3();
        java.lang.String str14 = serializedObjectSupporter11.deserializeObjectString4();
        retrofit.client.Request request15 = serializedObjectSupporter11.deserializeObjectRequest6();
        retrofit.Server server16 = serializedObjectSupporter11.deserializeObjectServer1();
        retrofit.client.Client.Provider provider17 = null;
        java.util.concurrent.Executor executor18 = null;
        java.util.concurrent.Executor executor19 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        java.lang.String str21 = serializedObjectSupporter20.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor22 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor24 = null;
        builder23.sethttpExecutor(executor24);
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter26.deserializeObjectConverter3();
        builder23.converter = gsonConverter28;
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        java.lang.String str33 = serializedObjectSupporter32.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter34 = serializedObjectSupporter32.deserializeObjectConverter3();
        java.lang.String str35 = serializedObjectSupporter32.deserializeObjectString4();
        retrofit.Server server36 = serializedObjectSupporter32.deserializeObjectServer1();
        retrofit.client.Client.Provider provider37 = null;
        java.util.concurrent.Executor executor38 = null;
        java.util.concurrent.Executor executor39 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = new retrofit.SerializedObjectSupporter();
        java.lang.String str41 = serializedObjectSupporter40.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor42 = serializedObjectSupporter40.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request44 = serializedObjectSupporter43.deserializeObjectRequest1();
        retrofit.client.Request request45 = serializedObjectSupporter43.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter43.deserializeObjectConverter5();
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor50 = null;
        builder49.sethttpExecutor(executor50);
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        builder49.log = log52;
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter(server36, provider37, executor38, executor39, requestInterceptor42, (retrofit.converter.Converter) gsonConverter46, profiler47, errorHandler48, log52, logLevel54);
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        java.lang.String str57 = serializedObjectSupporter56.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter58 = serializedObjectSupporter56.deserializeObjectConverter3();
        java.lang.String str59 = serializedObjectSupporter56.deserializeObjectString4();
        retrofit.Server server60 = serializedObjectSupporter56.deserializeObjectServer1();
        retrofit.client.Client.Provider provider61 = null;
        java.util.concurrent.Executor executor62 = null;
        java.util.concurrent.Executor executor63 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter64 = new retrofit.SerializedObjectSupporter();
        java.lang.String str65 = serializedObjectSupporter64.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor66 = serializedObjectSupporter64.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter67 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request68 = serializedObjectSupporter67.deserializeObjectRequest1();
        retrofit.client.Request request69 = serializedObjectSupporter67.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter70 = serializedObjectSupporter67.deserializeObjectConverter5();
        retrofit.Profiler profiler71 = null;
        retrofit.ErrorHandler errorHandler72 = null;
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor74 = null;
        builder73.sethttpExecutor(executor74);
        retrofit.RestAdapter.Log log76 = retrofit.RestAdapter.Log.NONE;
        builder73.log = log76;
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter79 = new retrofit.RestAdapter(server60, provider61, executor62, executor63, requestInterceptor66, (retrofit.converter.Converter) gsonConverter70, profiler71, errorHandler72, log76, logLevel78);
        java.util.concurrent.Executor executor80 = restAdapter79.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor81 = restAdapter79.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor82 = restAdapter79.requestInterceptor;
        java.lang.String str83 = restAdapter79.getTHREAD_PREFIX();
        retrofit.SerializedObjectSupporter serializedObjectSupporter84 = restAdapter79.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel85 = restAdapter79.logLevel;
        retrofit.RestAdapter restAdapter86 = new retrofit.RestAdapter(server16, provider17, executor18, executor19, requestInterceptor22, (retrofit.converter.Converter) gsonConverter28, profiler30, errorHandler31, log52, logLevel85);
        retrofit.RestAdapter.Builder builder87 = builder0.setLogLevel(logLevel85);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNull(serializedObjectSupporter10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "GET" + "'", str12, "GET");
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "http://example.com/" + "'", str14, "http://example.com/");
        org.junit.Assert.assertNotNull(request15);
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Retrofit-" + "'", str21, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "GET" + "'", str27, "GET");
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "GET" + "'", str33, "GET");
        org.junit.Assert.assertNotNull(gsonConverter34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "http://example.com/" + "'", str35, "http://example.com/");
        org.junit.Assert.assertNotNull(server36);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Retrofit-" + "'", str41, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor42);
        org.junit.Assert.assertNotNull(request44);
        org.junit.Assert.assertNotNull(request45);
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "GET" + "'", str57, "GET");
        org.junit.Assert.assertNotNull(gsonConverter58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "http://example.com/" + "'", str59, "http://example.com/");
        org.junit.Assert.assertNotNull(server60);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Retrofit-" + "'", str65, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor66);
        org.junit.Assert.assertNotNull(request68);
        org.junit.Assert.assertNotNull(request69);
        org.junit.Assert.assertNotNull(gsonConverter70);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor80);
        org.junit.Assert.assertNotNull(requestInterceptor81);
        org.junit.Assert.assertNotNull(requestInterceptor82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Retrofit-" + "'", str83, "Retrofit-");
        org.junit.Assert.assertNull(serializedObjectSupporter84);
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder87);
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0686");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.converter.Converter converter3 = builder0.converter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("GET");
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor7 = null;
        builder6.sethttpExecutor(executor7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter3();
        builder6.converter = gsonConverter11;
        retrofit.client.Client.Provider provider13 = null;
        builder6.clientProvider = provider13;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter3();
        java.lang.String str18 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter15.deserializeObjectConverter6();
        builder6.converter = gsonConverter19;
        builder0.converter = gsonConverter19;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = builder22.serializedObjectSupporter;
        retrofit.Profiler profiler24 = null;
        builder22.profiler = profiler24;
        retrofit.RestAdapter.LogLevel logLevel26 = builder22.logLevel;
        java.util.concurrent.Executor executor27 = builder22.callbackExecutor;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor29 = null;
        builder28.setcallbackExecutor(executor29);
        java.util.concurrent.Executor executor31 = null;
        builder28.setcallbackExecutor(executor31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.FULL;
        builder28.logLevel = logLevel33;
        retrofit.ErrorHandler errorHandler35 = builder28.errorHandler;
        builder28.ensureSaneDefaults();
        java.util.concurrent.Executor executor37 = builder28.getcallbackExecutor();
        builder22.callbackExecutor = executor37;
        builder0.sethttpExecutor(executor37);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "GET" + "'", str10, "GET");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "GET" + "'", str16, "GET");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNull(serializedObjectSupporter23);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(errorHandler35);
        org.junit.Assert.assertNotNull(executor37);
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0687");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter7();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter4();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(gsonConverter7);
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0688");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        java.lang.String str25 = restAdapter23.getIDLE_THREAD_NAME();
        java.lang.String str26 = restAdapter23.getTHREAD_PREFIX();
        java.util.concurrent.Executor executor27 = restAdapter23.gethttpExecutor();
        java.lang.Throwable throwable28 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter23.logException(throwable28, "GET");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Retrofit-Idle" + "'", str25, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-" + "'", str26, "Retrofit-");
        org.junit.Assert.assertNull(executor27);
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0689");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = null;
        builder0.setcallbackExecutor(executor3);
        retrofit.client.Client.Provider provider5 = null;
        builder0.clientProvider = provider5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = builder7.serializedObjectSupporter;
        retrofit.Profiler profiler9 = builder7.profiler;
        retrofit.RestAdapter.LogLevel logLevel10 = builder7.logLevel;
        builder0.logLevel = logLevel10;
        retrofit.RestAdapter.Log log12 = null;
        builder0.log = log12;
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = builder0.serializedObjectSupporter;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder17 = builder0.setExecutors(executor15, executor16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertNull(profiler9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(serializedObjectSupporter14);
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0690");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter5.deserializeObjectConverter3();
        java.lang.String str8 = serializedObjectSupporter5.deserializeObjectString4();
        retrofit.client.Request request9 = serializedObjectSupporter5.deserializeObjectRequest6();
        retrofit.Server server10 = serializedObjectSupporter5.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter5.deserializeObjectConverter3();
        builder0.converter = gsonConverter11;
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "GET" + "'", str6, "GET");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(request9);
        org.junit.Assert.assertNotNull(server10);
        org.junit.Assert.assertNotNull(gsonConverter11);
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0691");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest5();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter7();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.Server server7 = serializedObjectSupporter0.deserializeObjectServer1();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "POST" + "'", str3, "POST");
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(server7);
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0692");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        java.lang.String str25 = restAdapter23.getIDLE_THREAD_NAME();
        retrofit.Profiler profiler26 = restAdapter23.profiler;
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor28 = restAdapter23.getrequestInterceptor();
        retrofit.converter.Converter converter29 = restAdapter23.converter;
        java.lang.Throwable throwable30 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter23.logException(throwable30, "Retrofit-");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Retrofit-Idle" + "'", str25, "Retrofit-Idle");
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(converter29);
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0693");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        java.lang.String str26 = restAdapter23.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        java.util.concurrent.Executor executor28 = restAdapter23.httpExecutor;
        java.util.concurrent.Executor executor29 = restAdapter23.httpExecutor;
        retrofit.ErrorHandler errorHandler30 = restAdapter23.errorHandler;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNull(executor29);
        org.junit.Assert.assertNull(errorHandler30);
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0694");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        java.lang.String str25 = restAdapter23.getIDLE_THREAD_NAME();
        retrofit.converter.Converter converter26 = restAdapter23.converter;
        retrofit.RestAdapter.RestHandler restHandler27 = restAdapter23.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        java.lang.String str29 = serializedObjectSupporter28.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter28.deserializeObjectConverter3();
        java.lang.String str31 = serializedObjectSupporter28.deserializeObjectString4();
        retrofit.Server server32 = serializedObjectSupporter28.deserializeObjectServer1();
        retrofit.client.Client.Provider provider33 = null;
        java.util.concurrent.Executor executor34 = null;
        java.util.concurrent.Executor executor35 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        java.lang.String str37 = serializedObjectSupporter36.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor38 = serializedObjectSupporter36.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request40 = serializedObjectSupporter39.deserializeObjectRequest1();
        retrofit.client.Request request41 = serializedObjectSupporter39.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter42 = serializedObjectSupporter39.deserializeObjectConverter5();
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor46 = null;
        builder45.sethttpExecutor(executor46);
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        builder45.log = log48;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter(server32, provider33, executor34, executor35, requestInterceptor38, (retrofit.converter.Converter) gsonConverter42, profiler43, errorHandler44, log48, logLevel50);
        java.util.concurrent.Executor executor52 = restAdapter51.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor53 = restAdapter51.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor54 = restAdapter51.requestInterceptor;
        java.lang.String str55 = restAdapter51.getTHREAD_PREFIX();
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = restAdapter51.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel57 = restAdapter51.logLevel;
        restAdapter23.logLevel = logLevel57;
        retrofit.client.Client.Provider provider59 = restAdapter23.getclientProvider();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Retrofit-Idle" + "'", str25, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(converter26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "GET" + "'", str29, "GET");
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "http://example.com/" + "'", str31, "http://example.com/");
        org.junit.Assert.assertNotNull(server32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-" + "'", str37, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor38);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(request41);
        org.junit.Assert.assertNotNull(gsonConverter42);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor52);
        org.junit.Assert.assertNotNull(requestInterceptor53);
        org.junit.Assert.assertNotNull(requestInterceptor54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Retrofit-" + "'", str55, "Retrofit-");
        org.junit.Assert.assertNull(serializedObjectSupporter56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider59);
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0695");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        java.lang.String str26 = serializedObjectSupporter25.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter25.deserializeObjectConverter3();
        java.lang.String str28 = serializedObjectSupporter25.deserializeObjectString4();
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter25;
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter23.getLogLevel();
        java.lang.String str31 = restAdapter23.getTHREAD_PREFIX();
        java.util.concurrent.Executor executor32 = restAdapter23.callbackExecutor;
        retrofit.converter.Converter converter33 = restAdapter23.getconverter();
        retrofit.client.Client.Provider provider34 = restAdapter23.getclientProvider();
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        java.lang.String str36 = serializedObjectSupporter35.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter3();
        java.lang.String str38 = serializedObjectSupporter35.deserializeObjectString4();
        retrofit.Server server39 = serializedObjectSupporter35.deserializeObjectServer1();
        retrofit.client.Client.Provider provider40 = null;
        java.util.concurrent.Executor executor41 = null;
        java.util.concurrent.Executor executor42 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        java.lang.String str44 = serializedObjectSupporter43.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor45 = serializedObjectSupporter43.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request47 = serializedObjectSupporter46.deserializeObjectRequest1();
        retrofit.client.Request request48 = serializedObjectSupporter46.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter49 = serializedObjectSupporter46.deserializeObjectConverter5();
        retrofit.Profiler profiler50 = null;
        retrofit.ErrorHandler errorHandler51 = null;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor53 = null;
        builder52.sethttpExecutor(executor53);
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        builder52.log = log55;
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter58 = new retrofit.RestAdapter(server39, provider40, executor41, executor42, requestInterceptor45, (retrofit.converter.Converter) gsonConverter49, profiler50, errorHandler51, log55, logLevel57);
        java.util.concurrent.Executor executor59 = restAdapter58.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor60 = restAdapter58.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor61 = restAdapter58.requestInterceptor;
        retrofit.ErrorHandler errorHandler62 = restAdapter58.geterrorHandler();
        java.util.concurrent.Executor executor63 = restAdapter58.gethttpExecutor();
        java.lang.String str64 = restAdapter58.getTHREAD_PREFIX();
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request66 = serializedObjectSupporter65.deserializeObjectRequest1();
        retrofit.client.Request request67 = serializedObjectSupporter65.deserializeObjectRequest5();
        retrofit.client.Request request68 = restAdapter58.logAndReplaceRequest(request67);
        retrofit.client.Request request69 = restAdapter23.logAndReplaceRequest(request68);
        retrofit.Server server70 = restAdapter23.server;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "GET" + "'", str26, "GET");
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Retrofit-" + "'", str31, "Retrofit-");
        org.junit.Assert.assertNull(executor32);
        org.junit.Assert.assertNotNull(converter33);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "GET" + "'", str36, "GET");
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "http://example.com/" + "'", str38, "http://example.com/");
        org.junit.Assert.assertNotNull(server39);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Retrofit-" + "'", str44, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor45);
        org.junit.Assert.assertNotNull(request47);
        org.junit.Assert.assertNotNull(request48);
        org.junit.Assert.assertNotNull(gsonConverter49);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor59);
        org.junit.Assert.assertNotNull(requestInterceptor60);
        org.junit.Assert.assertNotNull(requestInterceptor61);
        org.junit.Assert.assertNull(errorHandler62);
        org.junit.Assert.assertNull(executor63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Retrofit-" + "'", str64, "Retrofit-");
        org.junit.Assert.assertNotNull(request66);
        org.junit.Assert.assertNotNull(request67);
        org.junit.Assert.assertNotNull(request68);
        org.junit.Assert.assertNotNull(request69);
        org.junit.Assert.assertNotNull(server70);
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0696");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest4();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest2();
        retrofit.mime.TypedOutput typedOutput7 = request6.body;
        java.lang.String str8 = request6.getUrl();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "GET" + "'", str3, "GET");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "GET" + "'", str5, "GET");
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0697");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        retrofit.Server server26 = restAdapter23.server;
        retrofit.Server server27 = restAdapter23.server;
        retrofit.Profiler profiler28 = restAdapter23.profiler;
        retrofit.client.Response response30 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response32 = restAdapter23.logAndReplaceResponse("hi!", response30, (long) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNotNull(server26);
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertNull(profiler28);
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0698");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        java.util.concurrent.Executor executor5 = builder0.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = builder7.serializedObjectSupporter;
        retrofit.Profiler profiler9 = builder7.profiler;
        retrofit.ErrorHandler errorHandler10 = builder7.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter11.deserializeObjectConverter3();
        java.lang.String str14 = serializedObjectSupporter11.deserializeObjectString4();
        retrofit.Server server15 = serializedObjectSupporter11.deserializeObjectServer1();
        retrofit.client.Client.Provider provider16 = null;
        java.util.concurrent.Executor executor17 = null;
        java.util.concurrent.Executor executor18 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = new retrofit.SerializedObjectSupporter();
        java.lang.String str20 = serializedObjectSupporter19.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter19.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request23 = serializedObjectSupporter22.deserializeObjectRequest1();
        retrofit.client.Request request24 = serializedObjectSupporter22.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter22.deserializeObjectConverter5();
        retrofit.Profiler profiler26 = null;
        retrofit.ErrorHandler errorHandler27 = null;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor29 = null;
        builder28.sethttpExecutor(executor29);
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        builder28.log = log31;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server15, provider16, executor17, executor18, requestInterceptor21, (retrofit.converter.Converter) gsonConverter25, profiler26, errorHandler27, log31, logLevel33);
        java.util.concurrent.Executor executor35 = restAdapter34.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor36 = restAdapter34.requestInterceptor;
        retrofit.RestAdapter.Builder builder37 = builder7.setRequestInterceptor(requestInterceptor36);
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider39 = builder38.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder41 = builder38.setLogLevel(logLevel40);
        retrofit.RestAdapter.Log log42 = builder41.log;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.HEADERS;
        builder41.logLevel = logLevel43;
        retrofit.ErrorHandler errorHandler45 = builder41.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        java.lang.String str47 = serializedObjectSupporter46.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter48 = serializedObjectSupporter46.deserializeObjectConverter3();
        java.lang.String str49 = serializedObjectSupporter46.deserializeObjectString4();
        retrofit.client.Request request50 = serializedObjectSupporter46.deserializeObjectRequest6();
        retrofit.Server server51 = serializedObjectSupporter46.deserializeObjectServer1();
        builder41.server = server51;
        retrofit.RestAdapter.Builder builder53 = builder37.setServer(server51);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor55 = null;
        builder54.sethttpExecutor(executor55);
        builder54.ensureSaneDefaults();
        retrofit.client.Client.Provider provider58 = null;
        builder54.setclientProvider(provider58);
        retrofit.client.Client.Provider provider60 = null;
        builder54.setclientProvider(provider60);
        java.util.concurrent.Executor executor62 = builder54.httpExecutor;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        builder63.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler65 = builder63.errorHandler;
        java.util.concurrent.Executor executor66 = builder63.getcallbackExecutor();
        retrofit.RestAdapter.Builder builder67 = builder53.setExecutors(executor62, executor66);
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor69 = null;
        builder68.setcallbackExecutor(executor69);
        retrofit.RequestInterceptor requestInterceptor71 = builder68.requestInterceptor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter72 = new retrofit.SerializedObjectSupporter();
        java.lang.String str73 = serializedObjectSupporter72.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter74 = serializedObjectSupporter72.deserializeObjectConverter3();
        java.lang.String str75 = serializedObjectSupporter72.deserializeObjectString4();
        retrofit.client.Request request76 = serializedObjectSupporter72.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler77 = serializedObjectSupporter72.deserializeObjectErrorHandler1();
        builder68.errorHandler = errorHandler77;
        java.util.concurrent.Executor executor79 = builder68.getcallbackExecutor();
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor81 = null;
        builder80.setcallbackExecutor(executor81);
        java.util.concurrent.Executor executor83 = null;
        builder80.setcallbackExecutor(executor83);
        retrofit.RestAdapter.LogLevel logLevel85 = retrofit.RestAdapter.LogLevel.FULL;
        builder80.logLevel = logLevel85;
        retrofit.RestAdapter.Builder builder87 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor88 = null;
        builder87.setcallbackExecutor(executor88);
        java.util.concurrent.Executor executor90 = null;
        builder87.setcallbackExecutor(executor90);
        builder87.ensureSaneDefaults();
        java.util.concurrent.Executor executor93 = builder87.callbackExecutor;
        builder80.sethttpExecutor(executor93);
        builder68.httpExecutor = executor93;
        retrofit.RestAdapter.Builder builder96 = builder0.setExecutors(executor62, executor93);
        retrofit.Profiler profiler97 = builder0.profiler;
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertNull(profiler9);
        org.junit.Assert.assertNull(errorHandler10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "GET" + "'", str12, "GET");
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "http://example.com/" + "'", str14, "http://example.com/");
        org.junit.Assert.assertNotNull(server15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Retrofit-" + "'", str20, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(request23);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNotNull(requestInterceptor36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(provider39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNull(log42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(errorHandler45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "GET" + "'", str47, "GET");
        org.junit.Assert.assertNotNull(gsonConverter48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "http://example.com/" + "'", str49, "http://example.com/");
        org.junit.Assert.assertNotNull(request50);
        org.junit.Assert.assertNotNull(server51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(executor62);
        org.junit.Assert.assertNotNull(errorHandler65);
        org.junit.Assert.assertNotNull(executor66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNull(requestInterceptor71);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "GET" + "'", str73, "GET");
        org.junit.Assert.assertNotNull(gsonConverter74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "http://example.com/" + "'", str75, "http://example.com/");
        org.junit.Assert.assertNotNull(request76);
        org.junit.Assert.assertNotNull(errorHandler77);
        org.junit.Assert.assertNull(executor79);
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(executor93);
        org.junit.Assert.assertNotNull(builder96);
        org.junit.Assert.assertNull(profiler97);
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0699");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        java.lang.String str26 = restAdapter23.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        retrofit.Profiler profiler28 = restAdapter23.getprofiler();
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter23.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        java.lang.String str31 = serializedObjectSupporter30.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter32 = serializedObjectSupporter30.deserializeObjectConverter3();
        java.lang.String str33 = serializedObjectSupporter30.deserializeObjectString4();
        retrofit.client.Request request34 = serializedObjectSupporter30.deserializeObjectRequest6();
        retrofit.Server server35 = serializedObjectSupporter30.deserializeObjectServer1();
        restHandler29.serializedObjectSupporter = serializedObjectSupporter30;
        java.lang.String str37 = serializedObjectSupporter30.deserializeObjectString2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "GET" + "'", str31, "GET");
        org.junit.Assert.assertNotNull(gsonConverter32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNotNull(request34);
        org.junit.Assert.assertNotNull(server35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-Idle" + "'", str37, "Retrofit-Idle");
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0700");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        retrofit.Profiler profiler27 = restAdapter23.getprofiler();
        java.util.concurrent.Executor executor28 = restAdapter23.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter23.getLogLevel();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNull(profiler27);
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0701");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        java.lang.String str27 = restAdapter23.getTHREAD_PREFIX();
        retrofit.converter.Converter converter28 = restAdapter23.getconverter();
        retrofit.converter.Converter converter29 = restAdapter23.getconverter();
        retrofit.Server server30 = restAdapter23.getserver();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Retrofit-" + "'", str27, "Retrofit-");
        org.junit.Assert.assertNotNull(converter28);
        org.junit.Assert.assertNotNull(converter29);
        org.junit.Assert.assertNotNull(server30);
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0702");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter1();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(request6);
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0703");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest8();
        java.util.List<retrofit.client.Header> headerList2 = request1.getHeaders();
        retrofit.mime.TypedOutput typedOutput3 = request1.body;
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(headerList2);
        org.junit.Assert.assertNull(typedOutput3);
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0704");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = builder0.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel4 = builder0.logLevel;
        retrofit.Profiler profiler5 = builder0.profiler;
        java.util.concurrent.Executor executor6 = null;
        builder0.callbackExecutor = executor6;
        java.util.concurrent.Executor executor8 = builder0.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request10 = serializedObjectSupporter9.deserializeObjectRequest1();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        java.lang.String str12 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.client.Request request13 = serializedObjectSupporter9.deserializeObjectRequest3();
        java.lang.String str14 = serializedObjectSupporter9.deserializeObjectString2();
        builder0.serializedObjectSupporter = serializedObjectSupporter9;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter16 = serializedObjectSupporter9.deserializeObjectLogLevel1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler5);
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "GET" + "'", str12, "GET");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Retrofit-Idle" + "'", str14, "Retrofit-Idle");
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0705");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.RestAdapter.Log log4 = builder3.log;
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.HEADERS;
        builder3.logLevel = logLevel5;
        retrofit.ErrorHandler errorHandler7 = builder3.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter8.deserializeObjectConverter3();
        java.lang.String str11 = serializedObjectSupporter8.deserializeObjectString4();
        retrofit.client.Request request12 = serializedObjectSupporter8.deserializeObjectRequest6();
        retrofit.Server server13 = serializedObjectSupporter8.deserializeObjectServer1();
        builder3.server = server13;
        java.util.concurrent.Executor executor15 = builder3.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel16 = builder3.logLevel;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler19 = builder17.errorHandler;
        java.util.concurrent.Executor executor20 = builder17.getcallbackExecutor();
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider22 = builder21.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder24 = builder21.setLogLevel(logLevel23);
        retrofit.converter.Converter converter25 = builder24.converter;
        retrofit.Profiler profiler26 = builder24.profiler;
        java.util.concurrent.Executor executor27 = builder24.callbackExecutor;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor29 = null;
        builder28.setcallbackExecutor(executor29);
        java.util.concurrent.Executor executor31 = null;
        builder28.setcallbackExecutor(executor31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.FULL;
        builder28.logLevel = logLevel33;
        retrofit.client.Client.Provider provider35 = builder28.getclientProvider();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = builder28.serializedObjectSupporter;
        java.util.concurrent.Executor executor37 = builder28.callbackExecutor;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = builder38.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = builder38.serializedObjectSupporter;
        java.util.concurrent.Executor executor41 = null;
        builder38.httpExecutor = executor41;
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request44 = serializedObjectSupporter43.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter45 = serializedObjectSupporter43.deserializeObjectConverter2();
        builder38.serializedObjectSupporter = serializedObjectSupporter43;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider48 = builder47.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder50 = builder47.setLogLevel(logLevel49);
        retrofit.converter.Converter converter51 = builder50.converter;
        java.util.concurrent.Executor executor52 = null;
        builder50.sethttpExecutor(executor52);
        retrofit.RestAdapter.Builder builder55 = builder50.setServer("GET");
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor57 = null;
        builder56.setcallbackExecutor(executor57);
        java.util.concurrent.Executor executor59 = null;
        builder56.setcallbackExecutor(executor59);
        builder56.ensureSaneDefaults();
        java.util.concurrent.Executor executor62 = builder56.callbackExecutor;
        builder55.setcallbackExecutor(executor62);
        builder38.httpExecutor = executor62;
        builder28.sethttpExecutor(executor62);
        builder24.callbackExecutor = executor62;
        retrofit.RestAdapter.Builder builder67 = builder3.setExecutors(executor20, executor62);
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(errorHandler7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "GET" + "'", str9, "GET");
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "http://example.com/" + "'", str11, "http://example.com/");
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(errorHandler19);
        org.junit.Assert.assertNotNull(executor20);
        org.junit.Assert.assertNull(provider22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(converter25);
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNull(serializedObjectSupporter36);
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertNull(serializedObjectSupporter39);
        org.junit.Assert.assertNull(serializedObjectSupporter40);
        org.junit.Assert.assertNotNull(request44);
        org.junit.Assert.assertNotNull(gsonConverter45);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(converter51);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(executor62);
        org.junit.Assert.assertNotNull(builder67);
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0706");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = null;
        builder0.setcallbackExecutor(executor3);
        retrofit.client.Client.Provider provider5 = null;
        builder0.clientProvider = provider5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = builder7.serializedObjectSupporter;
        retrofit.Profiler profiler9 = builder7.profiler;
        retrofit.RestAdapter.LogLevel logLevel10 = builder7.logLevel;
        builder0.logLevel = logLevel10;
        retrofit.RestAdapter.Log log12 = null;
        builder0.log = log12;
        retrofit.RestAdapter.Builder builder15 = builder0.setServer("GET");
        retrofit.ErrorHandler errorHandler16 = builder0.errorHandler;
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertNull(profiler9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(errorHandler16);
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0707");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter1();
        java.lang.String str8 = serializedObjectSupporter0.deserializeObjectString2();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter0.deserializeObjectConverter8();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "GET" + "'", str3, "GET");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Retrofit-Idle" + "'", str8, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(gsonConverter9);
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0708");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        java.lang.String str25 = restAdapter23.getIDLE_THREAD_NAME();
        java.lang.String str26 = restAdapter23.getTHREAD_PREFIX();
        java.util.concurrent.Executor executor27 = restAdapter23.gethttpExecutor();
        java.lang.String str28 = restAdapter23.getTHREAD_PREFIX();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Retrofit-Idle" + "'", str25, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-" + "'", str26, "Retrofit-");
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Retrofit-" + "'", str28, "Retrofit-");
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0709");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor2 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.Server server7 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str8 = serializedObjectSupporter0.deserializeObjectString2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Retrofit-" + "'", str1, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(server7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Retrofit-Idle" + "'", str8, "Retrofit-Idle");
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0710");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest4();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.client.Request request7 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.client.Request request8 = serializedObjectSupporter0.deserializeObjectRequest7();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "GET" + "'", str3, "GET");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "GET" + "'", str5, "GET");
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertNotNull(request8);
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0711");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        java.util.concurrent.Executor executor3 = null;
        builder0.httpExecutor = executor3;
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request6 = serializedObjectSupporter5.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter5.deserializeObjectConverter2();
        builder0.serializedObjectSupporter = serializedObjectSupporter5;
        retrofit.client.Request request9 = serializedObjectSupporter5.deserializeObjectRequest6();
        retrofit.client.Request request10 = serializedObjectSupporter5.deserializeObjectRequest4();
        retrofit.mime.TypedString typedString11 = serializedObjectSupporter5.deserializeObjectTypedOutput2();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter5.deserializeObjectConverter2();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter13 = serializedObjectSupporter5.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(request9);
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertNotNull(typedString11);
        org.junit.Assert.assertNotNull(gsonConverter12);
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0712");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor2 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Retrofit-" + "'", str1, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(request6);
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0713");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.mime.TypedString typedString3 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(typedString3);
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0714");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter1();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString5();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest8();
        java.lang.String str7 = request6.getMethod();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "POST" + "'", str5, "POST");
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "GET" + "'", str7, "GET");
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0715");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest2();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(request6);
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0716");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        retrofit.RestAdapter.Log log5 = builder0.log;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider7 = builder6.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder9 = builder6.setLogLevel(logLevel8);
        retrofit.converter.Converter converter10 = builder9.converter;
        retrofit.Profiler profiler11 = builder9.profiler;
        java.util.concurrent.Executor executor12 = builder9.callbackExecutor;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor14 = null;
        builder13.setcallbackExecutor(executor14);
        java.util.concurrent.Executor executor16 = null;
        builder13.setcallbackExecutor(executor16);
        retrofit.client.Client.Provider provider18 = null;
        builder13.clientProvider = provider18;
        retrofit.Profiler profiler20 = null;
        builder13.profiler = profiler20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider23 = builder22.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder25 = builder22.setLogLevel(logLevel24);
        retrofit.converter.Converter converter26 = builder25.converter;
        builder25.ensureSaneDefaults();
        retrofit.client.Client.Provider provider28 = builder25.clientProvider;
        retrofit.RestAdapter.Builder builder29 = builder13.setClient(provider28);
        builder9.setclientProvider(provider28);
        builder0.clientProvider = provider28;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor33 = null;
        builder32.sethttpExecutor(executor33);
        retrofit.RestAdapter.Log log35 = null;
        builder32.log = log35;
        retrofit.RestAdapter.Log log37 = builder32.log;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor39 = null;
        builder38.sethttpExecutor(executor39);
        retrofit.RequestInterceptor requestInterceptor41 = null;
        builder38.requestInterceptor = requestInterceptor41;
        java.util.concurrent.Executor executor43 = null;
        builder38.httpExecutor = executor43;
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = new retrofit.SerializedObjectSupporter();
        java.lang.String str46 = serializedObjectSupporter45.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter47 = serializedObjectSupporter45.deserializeObjectConverter3();
        java.lang.String str48 = serializedObjectSupporter45.deserializeObjectString4();
        retrofit.client.Request request49 = serializedObjectSupporter45.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler50 = serializedObjectSupporter45.deserializeObjectErrorHandler1();
        builder38.errorHandler = errorHandler50;
        retrofit.RestAdapter.Builder builder52 = builder32.setErrorHandler(errorHandler50);
        retrofit.RestAdapter.Builder builder53 = builder0.setErrorHandler(errorHandler50);
        retrofit.RestAdapter.Builder builder55 = builder0.setServer("POST");
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter57 = builder56.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = builder56.serializedObjectSupporter;
        java.util.concurrent.Executor executor59 = null;
        builder56.httpExecutor = executor59;
        retrofit.SerializedObjectSupporter serializedObjectSupporter61 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request62 = serializedObjectSupporter61.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter63 = serializedObjectSupporter61.deserializeObjectConverter2();
        builder56.serializedObjectSupporter = serializedObjectSupporter61;
        retrofit.client.Request request65 = serializedObjectSupporter61.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter66 = serializedObjectSupporter61.deserializeObjectConverter5();
        retrofit.Server server67 = serializedObjectSupporter61.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter68 = serializedObjectSupporter61.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter69 = serializedObjectSupporter61.deserializeObjectConverter5();
        builder0.converter = gsonConverter69;
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(converter10);
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(executor12);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(converter26);
        org.junit.Assert.assertNotNull(provider28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNull(log37);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "GET" + "'", str46, "GET");
        org.junit.Assert.assertNotNull(gsonConverter47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "http://example.com/" + "'", str48, "http://example.com/");
        org.junit.Assert.assertNotNull(request49);
        org.junit.Assert.assertNotNull(errorHandler50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNull(serializedObjectSupporter57);
        org.junit.Assert.assertNull(serializedObjectSupporter58);
        org.junit.Assert.assertNotNull(request62);
        org.junit.Assert.assertNotNull(gsonConverter63);
        org.junit.Assert.assertNotNull(request65);
        org.junit.Assert.assertNotNull(gsonConverter66);
        org.junit.Assert.assertNotNull(server67);
        org.junit.Assert.assertNotNull(gsonConverter68);
        org.junit.Assert.assertNotNull(gsonConverter69);
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0717");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter5 = serializedObjectSupporter0.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(server4);
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0718");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        java.lang.String str25 = restAdapter23.getIDLE_THREAD_NAME();
        retrofit.Profiler profiler26 = restAdapter23.profiler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        java.lang.String str28 = serializedObjectSupporter27.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter27.deserializeObjectConverter3();
        java.lang.String str30 = serializedObjectSupporter27.deserializeObjectString4();
        retrofit.Server server31 = serializedObjectSupporter27.deserializeObjectServer1();
        retrofit.client.Client.Provider provider32 = null;
        java.util.concurrent.Executor executor33 = null;
        java.util.concurrent.Executor executor34 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        java.lang.String str36 = serializedObjectSupporter35.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor37 = serializedObjectSupporter35.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request39 = serializedObjectSupporter38.deserializeObjectRequest1();
        retrofit.client.Request request40 = serializedObjectSupporter38.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter38.deserializeObjectConverter5();
        retrofit.Profiler profiler42 = null;
        retrofit.ErrorHandler errorHandler43 = null;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor45 = null;
        builder44.sethttpExecutor(executor45);
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        builder44.log = log47;
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter(server31, provider32, executor33, executor34, requestInterceptor37, (retrofit.converter.Converter) gsonConverter41, profiler42, errorHandler43, log47, logLevel49);
        java.util.concurrent.Executor executor51 = restAdapter50.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter50.logLevel = logLevel52;
        retrofit.SerializedObjectSupporter serializedObjectSupporter54 = restAdapter50.serializedObjectSupporter;
        retrofit.RestAdapter.Log log55 = restAdapter50.log;
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request57 = serializedObjectSupporter56.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter58 = serializedObjectSupporter56.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter59 = serializedObjectSupporter56.deserializeObjectConverter8();
        java.lang.String str60 = serializedObjectSupporter56.deserializeObjectString4();
        restAdapter50.serializedObjectSupporter = serializedObjectSupporter56;
        retrofit.client.Request request62 = serializedObjectSupporter56.deserializeObjectRequest7();
        retrofit.client.Request request63 = restAdapter23.logAndReplaceRequest(request62);
        java.util.concurrent.Executor executor64 = restAdapter23.gethttpExecutor();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Retrofit-Idle" + "'", str25, "Retrofit-Idle");
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "GET" + "'", str28, "GET");
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "http://example.com/" + "'", str30, "http://example.com/");
        org.junit.Assert.assertNotNull(server31);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Retrofit-" + "'", str36, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor37);
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(gsonConverter41);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(serializedObjectSupporter54);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(request57);
        org.junit.Assert.assertNotNull(gsonConverter58);
        org.junit.Assert.assertNotNull(gsonConverter59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "http://example.com/" + "'", str60, "http://example.com/");
        org.junit.Assert.assertNotNull(request62);
        org.junit.Assert.assertNotNull(request63);
        org.junit.Assert.assertNull(executor64);
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0719");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        java.lang.String str26 = restAdapter23.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        retrofit.Profiler profiler28 = restAdapter23.getprofiler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = restAdapter23.serializedObjectSupporter;
        retrofit.Profiler profiler30 = restAdapter23.profiler;
        java.lang.String str31 = restAdapter23.getTHREAD_PREFIX();
        retrofit.RestAdapter.Log log32 = restAdapter23.log;
        retrofit.RequestInterceptor requestInterceptor33 = restAdapter23.getrequestInterceptor();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertNull(serializedObjectSupporter29);
        org.junit.Assert.assertNull(profiler30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Retrofit-" + "'", str31, "Retrofit-");
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(requestInterceptor33);
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0720");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.client.Request request7 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        java.lang.String str9 = serializedObjectSupporter0.deserializeObjectString5();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "POST" + "'", str9, "POST");
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0721");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest8();
        java.util.List<retrofit.client.Header> headerList3 = request2.headers;
        java.lang.String str4 = request2.getMethod();
        java.lang.String str5 = request2.getMethod();
        retrofit.mime.TypedOutput typedOutput6 = request2.body;
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(headerList3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "GET" + "'", str5, "GET");
        org.junit.Assert.assertNull(typedOutput6);
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0722");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.converter;
        java.util.concurrent.Executor executor26 = restAdapter23.callbackExecutor;
        retrofit.Profiler profiler27 = restAdapter23.getprofiler();
        retrofit.client.Client.Provider provider28 = restAdapter23.getclientProvider();
        retrofit.Profiler profiler29 = restAdapter23.profiler;
        java.util.concurrent.Executor executor30 = restAdapter23.gethttpExecutor();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNull(profiler27);
        org.junit.Assert.assertNull(provider28);
        org.junit.Assert.assertNull(profiler29);
        org.junit.Assert.assertNull(executor30);
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0723");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        retrofit.client.Client.Provider provider3 = null;
        builder0.clientProvider = provider3;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor6 = null;
        builder5.setcallbackExecutor(executor6);
        java.util.concurrent.Executor executor8 = null;
        builder5.setcallbackExecutor(executor8);
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.FULL;
        builder5.logLevel = logLevel10;
        retrofit.client.Client.Provider provider12 = builder5.getclientProvider();
        java.util.concurrent.Executor executor13 = builder5.getcallbackExecutor();
        java.util.concurrent.Executor executor14 = builder5.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter3();
        java.lang.String str18 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.Server server19 = serializedObjectSupporter15.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter15.deserializeObjectConverter6();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter15.deserializeObjectConverter6();
        retrofit.client.Request request22 = serializedObjectSupporter15.deserializeObjectRequest7();
        retrofit.RequestInterceptor requestInterceptor23 = serializedObjectSupporter15.deserializeObjectRequestInterceptor1();
        builder5.requestInterceptor = requestInterceptor23;
        builder0.requestInterceptor = requestInterceptor23;
        retrofit.Profiler profiler26 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder27 = builder0.setProfiler(profiler26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNull(executor14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "GET" + "'", str16, "GET");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(server19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNotNull(request22);
        org.junit.Assert.assertNotNull(requestInterceptor23);
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0724");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        java.lang.String str26 = restAdapter23.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        retrofit.Profiler profiler28 = restAdapter23.getprofiler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = restAdapter23.serializedObjectSupporter;
        retrofit.Profiler profiler30 = restAdapter23.profiler;
        java.lang.String str31 = restAdapter23.getTHREAD_PREFIX();
        java.util.concurrent.Executor executor32 = restAdapter23.getcallbackExecutor();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertNull(serializedObjectSupporter29);
        org.junit.Assert.assertNull(profiler30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Retrofit-" + "'", str31, "Retrofit-");
        org.junit.Assert.assertNull(executor32);
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0725");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = null;
        builder0.setcallbackExecutor(executor3);
        retrofit.client.Client.Provider provider5 = null;
        builder0.clientProvider = provider5;
        retrofit.Profiler profiler7 = null;
        builder0.profiler = profiler7;
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request10 = serializedObjectSupporter9.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter2();
        retrofit.client.Request request12 = serializedObjectSupporter9.deserializeObjectRequest8();
        retrofit.RequestInterceptor requestInterceptor13 = serializedObjectSupporter9.deserializeObjectRequestInterceptor1();
        builder0.serializedObjectSupporter = serializedObjectSupporter9;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider16 = builder15.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder18 = builder15.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider20 = builder19.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder22 = builder19.setLogLevel(logLevel21);
        retrofit.converter.Converter converter23 = builder22.converter;
        java.util.concurrent.Executor executor24 = null;
        builder22.sethttpExecutor(executor24);
        retrofit.RestAdapter.Builder builder27 = builder22.setServer("GET");
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor29 = null;
        builder28.setcallbackExecutor(executor29);
        java.util.concurrent.Executor executor31 = null;
        builder28.setcallbackExecutor(executor31);
        builder28.ensureSaneDefaults();
        java.util.concurrent.Executor executor34 = builder28.callbackExecutor;
        builder27.setcallbackExecutor(executor34);
        builder15.setcallbackExecutor(executor34);
        builder0.httpExecutor = executor34;
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(provider20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNull(converter23);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(executor34);
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0726");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = builder0.log;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor3 = null;
        builder2.setcallbackExecutor(executor3);
        java.util.concurrent.Executor executor5 = null;
        builder2.setcallbackExecutor(executor5);
        retrofit.client.Client.Provider provider7 = null;
        builder2.clientProvider = provider7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = builder9.serializedObjectSupporter;
        retrofit.Profiler profiler11 = builder9.profiler;
        retrofit.RestAdapter.LogLevel logLevel12 = builder9.logLevel;
        builder2.logLevel = logLevel12;
        builder0.logLevel = logLevel12;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter3();
        java.lang.String str18 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.Server server19 = serializedObjectSupporter15.deserializeObjectServer1();
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request27 = serializedObjectSupporter26.deserializeObjectRequest1();
        retrofit.client.Request request28 = serializedObjectSupporter26.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter5();
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor33 = null;
        builder32.sethttpExecutor(executor33);
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        builder32.log = log35;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor25, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler31, log35, logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = restAdapter38.getLogLevel();
        retrofit.converter.Converter converter40 = restAdapter38.getconverter();
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean42 = logLevel41.log();
        boolean boolean43 = logLevel41.log();
        restAdapter38.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder45 = builder0.setLogLevel(logLevel41);
        retrofit.Server server46 = builder45.server;
        retrofit.Profiler profiler47 = builder45.profiler;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        builder48.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler50 = builder48.errorHandler;
        java.util.concurrent.Executor executor51 = builder48.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = new retrofit.SerializedObjectSupporter();
        java.lang.String str53 = serializedObjectSupporter52.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter54 = serializedObjectSupporter52.deserializeObjectConverter3();
        java.lang.String str55 = serializedObjectSupporter52.deserializeObjectString4();
        retrofit.Server server56 = serializedObjectSupporter52.deserializeObjectServer1();
        retrofit.client.Client.Provider provider57 = null;
        java.util.concurrent.Executor executor58 = null;
        java.util.concurrent.Executor executor59 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = new retrofit.SerializedObjectSupporter();
        java.lang.String str61 = serializedObjectSupporter60.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor62 = serializedObjectSupporter60.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter63 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request64 = serializedObjectSupporter63.deserializeObjectRequest1();
        retrofit.client.Request request65 = serializedObjectSupporter63.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter66 = serializedObjectSupporter63.deserializeObjectConverter5();
        retrofit.Profiler profiler67 = null;
        retrofit.ErrorHandler errorHandler68 = null;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor70 = null;
        builder69.sethttpExecutor(executor70);
        retrofit.RestAdapter.Log log72 = retrofit.RestAdapter.Log.NONE;
        builder69.log = log72;
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter75 = new retrofit.RestAdapter(server56, provider57, executor58, executor59, requestInterceptor62, (retrofit.converter.Converter) gsonConverter66, profiler67, errorHandler68, log72, logLevel74);
        java.util.concurrent.Executor executor76 = restAdapter75.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor77 = restAdapter75.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor78 = restAdapter75.requestInterceptor;
        retrofit.RestAdapter.Builder builder79 = builder48.setRequestInterceptor(requestInterceptor78);
        java.util.concurrent.Executor executor80 = builder48.getcallbackExecutor();
        builder45.sethttpExecutor(executor80);
        java.util.concurrent.Executor executor82 = builder45.gethttpExecutor();
        org.junit.Assert.assertNull(log1);
        org.junit.Assert.assertNull(serializedObjectSupporter10);
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "GET" + "'", str16, "GET");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(server19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Retrofit-" + "'", str24, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(request27);
        org.junit.Assert.assertNotNull(request28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNull(server46);
        org.junit.Assert.assertNull(profiler47);
        org.junit.Assert.assertNotNull(errorHandler50);
        org.junit.Assert.assertNotNull(executor51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "GET" + "'", str53, "GET");
        org.junit.Assert.assertNotNull(gsonConverter54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "http://example.com/" + "'", str55, "http://example.com/");
        org.junit.Assert.assertNotNull(server56);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Retrofit-" + "'", str61, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor62);
        org.junit.Assert.assertNotNull(request64);
        org.junit.Assert.assertNotNull(request65);
        org.junit.Assert.assertNotNull(gsonConverter66);
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor76);
        org.junit.Assert.assertNotNull(requestInterceptor77);
        org.junit.Assert.assertNotNull(requestInterceptor78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(executor80);
        org.junit.Assert.assertNotNull(executor82);
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0727");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest4();
        java.lang.String str5 = request4.url;
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0728");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.converter.Converter converter3 = builder0.converter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("GET");
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor7 = null;
        builder6.sethttpExecutor(executor7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter3();
        builder6.converter = gsonConverter11;
        retrofit.client.Client.Provider provider13 = null;
        builder6.clientProvider = provider13;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter3();
        java.lang.String str18 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter15.deserializeObjectConverter6();
        builder6.converter = gsonConverter19;
        builder0.converter = gsonConverter19;
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        java.lang.String str23 = serializedObjectSupporter22.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter24 = serializedObjectSupporter22.deserializeObjectConverter3();
        java.lang.String str25 = serializedObjectSupporter22.deserializeObjectString4();
        retrofit.Server server26 = serializedObjectSupporter22.deserializeObjectServer1();
        retrofit.client.Client.Provider provider27 = null;
        java.util.concurrent.Executor executor28 = null;
        java.util.concurrent.Executor executor29 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        java.lang.String str31 = serializedObjectSupporter30.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter30.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request34 = serializedObjectSupporter33.deserializeObjectRequest1();
        retrofit.client.Request request35 = serializedObjectSupporter33.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter33.deserializeObjectConverter5();
        retrofit.Profiler profiler37 = null;
        retrofit.ErrorHandler errorHandler38 = null;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor40 = null;
        builder39.sethttpExecutor(executor40);
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        builder39.log = log42;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter(server26, provider27, executor28, executor29, requestInterceptor32, (retrofit.converter.Converter) gsonConverter36, profiler37, errorHandler38, log42, logLevel44);
        java.util.concurrent.Executor executor46 = restAdapter45.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor47 = restAdapter45.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor48 = restAdapter45.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor49 = restAdapter45.getrequestInterceptor();
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor51 = null;
        builder50.sethttpExecutor(executor51);
        retrofit.RequestInterceptor requestInterceptor53 = null;
        builder50.requestInterceptor = requestInterceptor53;
        retrofit.converter.Converter converter55 = builder50.converter;
        java.util.concurrent.Executor executor56 = null;
        builder50.httpExecutor = executor56;
        retrofit.RestAdapter.LogLevel logLevel58 = builder50.logLevel;
        restAdapter45.logLevel = logLevel58;
        builder0.logLevel = logLevel58;
        java.util.concurrent.Executor executor61 = builder0.getcallbackExecutor();
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter63 = builder62.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter64 = builder62.serializedObjectSupporter;
        retrofit.client.Client.Provider provider65 = null;
        builder62.clientProvider = provider65;
        java.util.concurrent.Executor executor67 = null;
        builder62.callbackExecutor = executor67;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor70 = null;
        builder69.setcallbackExecutor(executor70);
        java.util.concurrent.Executor executor72 = null;
        builder69.setcallbackExecutor(executor72);
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.FULL;
        builder69.logLevel = logLevel74;
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor77 = null;
        builder76.setcallbackExecutor(executor77);
        java.util.concurrent.Executor executor79 = null;
        builder76.setcallbackExecutor(executor79);
        builder76.ensureSaneDefaults();
        java.util.concurrent.Executor executor82 = builder76.callbackExecutor;
        builder69.sethttpExecutor(executor82);
        builder62.httpExecutor = executor82;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor86 = null;
        builder85.sethttpExecutor(executor86);
        retrofit.RestAdapter.Log log88 = null;
        builder85.log = log88;
        java.util.concurrent.Executor executor90 = builder85.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter91 = builder85.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter92 = builder85.serializedObjectSupporter;
        builder85.ensureSaneDefaults();
        java.util.concurrent.Executor executor94 = builder85.httpExecutor;
        retrofit.RestAdapter.Builder builder95 = builder0.setExecutors(executor82, executor94);
        retrofit.RestAdapter restAdapter96 = builder0.build();
        java.util.concurrent.Executor executor97 = restAdapter96.getcallbackExecutor();
        retrofit.converter.Converter converter98 = restAdapter96.converter;
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "GET" + "'", str10, "GET");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "GET" + "'", str16, "GET");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "GET" + "'", str23, "GET");
        org.junit.Assert.assertNotNull(gsonConverter24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "http://example.com/" + "'", str25, "http://example.com/");
        org.junit.Assert.assertNotNull(server26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Retrofit-" + "'", str31, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(request34);
        org.junit.Assert.assertNotNull(request35);
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor46);
        org.junit.Assert.assertNotNull(requestInterceptor47);
        org.junit.Assert.assertNotNull(requestInterceptor48);
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNull(converter55);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor61);
        org.junit.Assert.assertNull(serializedObjectSupporter63);
        org.junit.Assert.assertNull(serializedObjectSupporter64);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(executor82);
        org.junit.Assert.assertNull(executor90);
        org.junit.Assert.assertNull(serializedObjectSupporter91);
        org.junit.Assert.assertNull(serializedObjectSupporter92);
        org.junit.Assert.assertNotNull(executor94);
        org.junit.Assert.assertNotNull(builder95);
        org.junit.Assert.assertNotNull(restAdapter96);
        org.junit.Assert.assertNotNull(executor97);
        org.junit.Assert.assertNotNull(converter98);
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0729");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter3();
        builder0.converter = gsonConverter5;
        retrofit.client.Client.Provider provider7 = null;
        builder0.clientProvider = provider7;
        retrofit.client.Client.Provider provider9 = null;
        builder0.setclientProvider(provider9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = builder11.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = builder11.serializedObjectSupporter;
        java.util.concurrent.Executor executor14 = null;
        builder11.httpExecutor = executor14;
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request17 = serializedObjectSupporter16.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter16.deserializeObjectConverter2();
        builder11.serializedObjectSupporter = serializedObjectSupporter16;
        retrofit.client.Request request20 = serializedObjectSupporter16.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter16.deserializeObjectConverter5();
        retrofit.Server server22 = serializedObjectSupporter16.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder23 = builder0.setServer(server22);
        retrofit.client.Client.Provider provider24 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        builder25.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler27 = builder25.errorHandler;
        java.util.concurrent.Executor executor28 = builder25.getcallbackExecutor();
        builder0.sethttpExecutor(executor28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor31 = null;
        builder30.sethttpExecutor(executor31);
        retrofit.RequestInterceptor requestInterceptor33 = null;
        builder30.requestInterceptor = requestInterceptor33;
        retrofit.converter.Converter converter35 = builder30.converter;
        java.util.concurrent.Executor executor36 = null;
        builder30.httpExecutor = executor36;
        java.util.concurrent.Executor executor38 = null;
        builder30.httpExecutor = executor38;
        retrofit.Profiler profiler40 = null;
        builder30.profiler = profiler40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider43 = builder42.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder45 = builder42.setLogLevel(logLevel44);
        retrofit.converter.Converter converter46 = builder45.converter;
        builder45.ensureSaneDefaults();
        retrofit.client.Client.Provider provider48 = builder45.clientProvider;
        retrofit.RestAdapter.Builder builder49 = builder30.setClient(provider48);
        builder0.clientProvider = provider48;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor52 = null;
        builder51.setcallbackExecutor(executor52);
        java.util.concurrent.Executor executor54 = null;
        builder51.setcallbackExecutor(executor54);
        builder51.ensureSaneDefaults();
        java.util.concurrent.Executor executor57 = builder51.callbackExecutor;
        builder0.callbackExecutor = executor57;
        retrofit.RestAdapter.LogLevel logLevel59 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder60 = builder0.setLogLevel(logLevel59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Log level may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNull(serializedObjectSupporter12);
        org.junit.Assert.assertNull(serializedObjectSupporter13);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(request20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNotNull(server22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNotNull(errorHandler27);
        org.junit.Assert.assertNotNull(executor28);
        org.junit.Assert.assertNull(converter35);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNull(converter46);
        org.junit.Assert.assertNotNull(provider48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(executor57);
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0730");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor2 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.client.Request request7 = serializedObjectSupporter0.deserializeObjectRequest8();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Retrofit-" + "'", str1, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(request7);
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0731");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = builder4.serializedObjectSupporter;
        retrofit.client.Client.Provider provider6 = null;
        builder4.setclientProvider(provider6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor9 = null;
        builder8.sethttpExecutor(executor9);
        retrofit.RestAdapter.Log log11 = null;
        builder8.log = log11;
        java.util.concurrent.Executor executor13 = builder8.callbackExecutor;
        retrofit.RestAdapter.Log log14 = retrofit.RestAdapter.Log.NONE;
        builder8.log = log14;
        retrofit.RestAdapter.Builder builder16 = builder4.setLog(log14);
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter17.deserializeObjectConverter3();
        java.lang.String str20 = serializedObjectSupporter17.deserializeObjectString4();
        retrofit.client.Request request21 = serializedObjectSupporter17.deserializeObjectRequest6();
        retrofit.Server server22 = serializedObjectSupporter17.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder23 = builder16.setServer(server22);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer(server22);
        retrofit.Profiler profiler25 = builder24.profiler;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor27 = null;
        builder26.setcallbackExecutor(executor27);
        java.util.concurrent.Executor executor29 = null;
        builder26.setcallbackExecutor(executor29);
        retrofit.client.Client.Provider provider31 = null;
        builder26.clientProvider = provider31;
        retrofit.Profiler profiler33 = null;
        builder26.profiler = profiler33;
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter2();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest8();
        retrofit.RequestInterceptor requestInterceptor39 = serializedObjectSupporter35.deserializeObjectRequestInterceptor1();
        builder26.serializedObjectSupporter = serializedObjectSupporter35;
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter35.deserializeObjectConverter1();
        retrofit.RestAdapter.Builder builder42 = builder24.setConverter((retrofit.converter.Converter) gsonConverter41);
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request44 = serializedObjectSupporter43.deserializeObjectRequest1();
        retrofit.client.Request request45 = serializedObjectSupporter43.deserializeObjectRequest5();
        retrofit.RequestInterceptor requestInterceptor46 = serializedObjectSupporter43.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder47 = builder42.setRequestInterceptor(requestInterceptor46);
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(serializedObjectSupporter5);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNotNull(log14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "GET" + "'", str18, "GET");
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "http://example.com/" + "'", str20, "http://example.com/");
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(server22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(profiler25);
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNotNull(requestInterceptor39);
        org.junit.Assert.assertNotNull(gsonConverter41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(request44);
        org.junit.Assert.assertNotNull(request45);
        org.junit.Assert.assertNotNull(requestInterceptor46);
        org.junit.Assert.assertNotNull(builder47);
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0732");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.client.Request request8 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.ErrorHandler errorHandler9 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(errorHandler9);
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0733");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = builder4.serializedObjectSupporter;
        retrofit.client.Client.Provider provider6 = null;
        builder4.setclientProvider(provider6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor9 = null;
        builder8.sethttpExecutor(executor9);
        retrofit.RestAdapter.Log log11 = null;
        builder8.log = log11;
        java.util.concurrent.Executor executor13 = builder8.callbackExecutor;
        retrofit.RestAdapter.Log log14 = retrofit.RestAdapter.Log.NONE;
        builder8.log = log14;
        retrofit.RestAdapter.Builder builder16 = builder4.setLog(log14);
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter17.deserializeObjectConverter3();
        java.lang.String str20 = serializedObjectSupporter17.deserializeObjectString4();
        retrofit.client.Request request21 = serializedObjectSupporter17.deserializeObjectRequest6();
        retrofit.Server server22 = serializedObjectSupporter17.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder23 = builder16.setServer(server22);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer(server22);
        retrofit.Profiler profiler25 = builder24.profiler;
        retrofit.RestAdapter.Builder builder27 = builder24.setServer("GET");
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor29 = null;
        builder28.sethttpExecutor(executor29);
        retrofit.RequestInterceptor requestInterceptor31 = null;
        builder28.requestInterceptor = requestInterceptor31;
        retrofit.converter.Converter converter33 = builder28.converter;
        java.util.concurrent.Executor executor34 = null;
        builder28.httpExecutor = executor34;
        java.util.concurrent.Executor executor36 = null;
        builder28.httpExecutor = executor36;
        retrofit.Profiler profiler38 = null;
        builder28.profiler = profiler38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider41 = builder40.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder43 = builder40.setLogLevel(logLevel42);
        retrofit.converter.Converter converter44 = builder43.converter;
        builder43.ensureSaneDefaults();
        retrofit.client.Client.Provider provider46 = builder43.clientProvider;
        retrofit.RestAdapter.Builder builder47 = builder28.setClient(provider46);
        retrofit.RestAdapter.Builder builder48 = builder24.setClient(provider46);
        retrofit.RestAdapter restAdapter49 = builder24.build();
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(serializedObjectSupporter5);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNotNull(log14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "GET" + "'", str18, "GET");
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "http://example.com/" + "'", str20, "http://example.com/");
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(server22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(profiler25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNull(converter33);
        org.junit.Assert.assertNull(provider41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(converter44);
        org.junit.Assert.assertNotNull(provider46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(restAdapter49);
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0734");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.client.Request request7 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter0.deserializeObjectConverter3();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertNotNull(gsonConverter8);
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0735");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        java.lang.String str25 = restAdapter23.getIDLE_THREAD_NAME();
        retrofit.Profiler profiler26 = restAdapter23.profiler;
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel28 = null;
        restAdapter23.setLogLevel(logLevel28);
        retrofit.RestAdapter.Log log30 = restAdapter23.log;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Retrofit-Idle" + "'", str25, "Retrofit-Idle");
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNotNull(log30);
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0736");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter1();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest6();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(request5);
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0737");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor27 = restAdapter23.getrequestInterceptor();
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor29 = null;
        builder28.sethttpExecutor(executor29);
        retrofit.RequestInterceptor requestInterceptor31 = null;
        builder28.requestInterceptor = requestInterceptor31;
        retrofit.converter.Converter converter33 = builder28.converter;
        java.util.concurrent.Executor executor34 = null;
        builder28.httpExecutor = executor34;
        retrofit.RestAdapter.LogLevel logLevel36 = builder28.logLevel;
        restAdapter23.logLevel = logLevel36;
        retrofit.Server server38 = restAdapter23.getserver();
        retrofit.RestAdapter.RestHandler restHandler39 = restAdapter23.new RestHandler();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNull(converter33);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(server38);
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0738");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        java.util.concurrent.Executor executor26 = restAdapter23.httpExecutor;
        retrofit.client.Response response28 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response30 = restAdapter23.logAndReplaceResponse("GET", response28, (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNull(executor26);
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0739");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        retrofit.RestAdapter.Log log5 = builder0.log;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor7 = null;
        builder6.sethttpExecutor(executor7);
        retrofit.RequestInterceptor requestInterceptor9 = null;
        builder6.requestInterceptor = requestInterceptor9;
        java.util.concurrent.Executor executor11 = null;
        builder6.httpExecutor = executor11;
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter13.deserializeObjectConverter3();
        java.lang.String str16 = serializedObjectSupporter13.deserializeObjectString4();
        retrofit.client.Request request17 = serializedObjectSupporter13.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler18 = serializedObjectSupporter13.deserializeObjectErrorHandler1();
        builder6.errorHandler = errorHandler18;
        retrofit.RestAdapter.Builder builder20 = builder0.setErrorHandler(errorHandler18);
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = new retrofit.SerializedObjectSupporter();
        java.lang.String str22 = serializedObjectSupporter21.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter21.deserializeObjectConverter3();
        java.lang.String str24 = serializedObjectSupporter21.deserializeObjectString4();
        retrofit.Server server25 = serializedObjectSupporter21.deserializeObjectServer1();
        retrofit.client.Client.Provider provider26 = null;
        java.util.concurrent.Executor executor27 = null;
        java.util.concurrent.Executor executor28 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        java.lang.String str30 = serializedObjectSupporter29.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor31 = serializedObjectSupporter29.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request33 = serializedObjectSupporter32.deserializeObjectRequest1();
        retrofit.client.Request request34 = serializedObjectSupporter32.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter35 = serializedObjectSupporter32.deserializeObjectConverter5();
        retrofit.Profiler profiler36 = null;
        retrofit.ErrorHandler errorHandler37 = null;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor39 = null;
        builder38.sethttpExecutor(executor39);
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        builder38.log = log41;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter(server25, provider26, executor27, executor28, requestInterceptor31, (retrofit.converter.Converter) gsonConverter35, profiler36, errorHandler37, log41, logLevel43);
        java.util.concurrent.Executor executor45 = restAdapter44.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor46 = restAdapter44.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel47 = restAdapter44.logLevel;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = builder48.serializedObjectSupporter;
        retrofit.Profiler profiler50 = builder48.profiler;
        retrofit.RestAdapter.LogLevel logLevel51 = builder48.logLevel;
        boolean boolean52 = logLevel51.log();
        restAdapter44.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder54 = builder20.setLogLevel(logLevel51);
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "GET" + "'", str14, "GET");
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(errorHandler18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "GET" + "'", str22, "GET");
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Retrofit-" + "'", str30, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor31);
        org.junit.Assert.assertNotNull(request33);
        org.junit.Assert.assertNotNull(request34);
        org.junit.Assert.assertNotNull(gsonConverter35);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor45);
        org.junit.Assert.assertNotNull(requestInterceptor46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(serializedObjectSupporter49);
        org.junit.Assert.assertNull(profiler50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(builder54);
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0740");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter3();
        builder0.converter = gsonConverter5;
        retrofit.client.Client.Provider provider7 = null;
        builder0.clientProvider = provider7;
        retrofit.client.Client.Provider provider9 = null;
        builder0.setclientProvider(provider9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = builder11.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = builder11.serializedObjectSupporter;
        java.util.concurrent.Executor executor14 = null;
        builder11.httpExecutor = executor14;
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request17 = serializedObjectSupporter16.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter16.deserializeObjectConverter2();
        builder11.serializedObjectSupporter = serializedObjectSupporter16;
        retrofit.client.Request request20 = serializedObjectSupporter16.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter16.deserializeObjectConverter5();
        retrofit.Server server22 = serializedObjectSupporter16.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder23 = builder0.setServer(server22);
        retrofit.client.Client.Provider provider24 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor26 = null;
        builder25.setcallbackExecutor(executor26);
        retrofit.RequestInterceptor requestInterceptor28 = builder25.requestInterceptor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        java.lang.String str30 = serializedObjectSupporter29.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter3();
        java.lang.String str32 = serializedObjectSupporter29.deserializeObjectString4();
        retrofit.client.Request request33 = serializedObjectSupporter29.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler34 = serializedObjectSupporter29.deserializeObjectErrorHandler1();
        builder25.errorHandler = errorHandler34;
        retrofit.RestAdapter.Builder builder36 = builder0.setErrorHandler(errorHandler34);
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = builder0.serializedObjectSupporter;
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNull(serializedObjectSupporter12);
        org.junit.Assert.assertNull(serializedObjectSupporter13);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(request20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNotNull(server22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNull(requestInterceptor28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "GET" + "'", str30, "GET");
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "http://example.com/" + "'", str32, "http://example.com/");
        org.junit.Assert.assertNotNull(request33);
        org.junit.Assert.assertNotNull(errorHandler34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(serializedObjectSupporter37);
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0741");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest5();
        java.lang.String str7 = serializedObjectSupporter0.deserializeObjectString5();
        java.lang.String str8 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.client.Request request9 = serializedObjectSupporter0.deserializeObjectRequest1();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "POST" + "'", str7, "POST");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Retrofit-" + "'", str8, "Retrofit-");
        org.junit.Assert.assertNotNull(request9);
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0742");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = null;
        builder0.setcallbackExecutor(executor3);
        retrofit.client.Client.Provider provider5 = null;
        builder0.clientProvider = provider5;
        retrofit.Profiler profiler7 = null;
        builder0.profiler = profiler7;
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor11 = null;
        builder10.setcallbackExecutor(executor11);
        java.util.concurrent.Executor executor13 = null;
        builder10.setcallbackExecutor(executor13);
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.FULL;
        builder10.logLevel = logLevel15;
        retrofit.client.Client.Provider provider17 = builder10.getclientProvider();
        retrofit.RequestInterceptor requestInterceptor18 = builder10.requestInterceptor;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider20 = builder19.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder22 = builder19.setLogLevel(logLevel21);
        retrofit.converter.Converter converter23 = builder22.converter;
        java.util.concurrent.Executor executor24 = null;
        builder22.sethttpExecutor(executor24);
        retrofit.RestAdapter.Builder builder27 = builder22.setServer("GET");
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        java.lang.String str29 = serializedObjectSupporter28.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter28.deserializeObjectConverter3();
        java.lang.String str31 = serializedObjectSupporter28.deserializeObjectString4();
        retrofit.Server server32 = serializedObjectSupporter28.deserializeObjectServer1();
        retrofit.client.Client.Provider provider33 = null;
        java.util.concurrent.Executor executor34 = null;
        java.util.concurrent.Executor executor35 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        java.lang.String str37 = serializedObjectSupporter36.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor38 = serializedObjectSupporter36.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request40 = serializedObjectSupporter39.deserializeObjectRequest1();
        retrofit.client.Request request41 = serializedObjectSupporter39.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter42 = serializedObjectSupporter39.deserializeObjectConverter5();
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor46 = null;
        builder45.sethttpExecutor(executor46);
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        builder45.log = log48;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter(server32, provider33, executor34, executor35, requestInterceptor38, (retrofit.converter.Converter) gsonConverter42, profiler43, errorHandler44, log48, logLevel50);
        retrofit.RestAdapter.Builder builder52 = builder22.setLog(log48);
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor54 = null;
        builder53.sethttpExecutor(executor54);
        retrofit.RestAdapter.Log log56 = null;
        builder53.log = log56;
        retrofit.RestAdapter.Log log58 = builder53.log;
        retrofit.Profiler profiler59 = builder53.profiler;
        retrofit.RestAdapter.Builder builder61 = builder53.setServer("http://example.com/");
        retrofit.SerializedObjectSupporter serializedObjectSupporter62 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request63 = serializedObjectSupporter62.deserializeObjectRequest1();
        retrofit.client.Request request64 = serializedObjectSupporter62.deserializeObjectRequest5();
        java.lang.String str65 = serializedObjectSupporter62.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter66 = serializedObjectSupporter62.deserializeObjectConverter7();
        builder53.converter = gsonConverter66;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor69 = null;
        builder68.sethttpExecutor(executor69);
        retrofit.RequestInterceptor requestInterceptor71 = null;
        builder68.requestInterceptor = requestInterceptor71;
        retrofit.converter.Converter converter73 = builder68.converter;
        java.util.concurrent.Executor executor74 = null;
        builder68.httpExecutor = executor74;
        java.util.concurrent.Executor executor76 = null;
        builder68.httpExecutor = executor76;
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor79 = null;
        builder78.sethttpExecutor(executor79);
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        builder78.log = log81;
        log81.log("");
        log81.log("POST");
        builder68.log = log81;
        builder53.log = log81;
        retrofit.RestAdapter.Builder builder89 = builder22.setLog(log81);
        log81.log("POST");
        builder10.log = log81;
        builder0.log = log81;
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNull(requestInterceptor18);
        org.junit.Assert.assertNull(provider20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNull(converter23);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "GET" + "'", str29, "GET");
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "http://example.com/" + "'", str31, "http://example.com/");
        org.junit.Assert.assertNotNull(server32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-" + "'", str37, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor38);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(request41);
        org.junit.Assert.assertNotNull(gsonConverter42);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNull(log58);
        org.junit.Assert.assertNull(profiler59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(request63);
        org.junit.Assert.assertNotNull(request64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "POST" + "'", str65, "POST");
        org.junit.Assert.assertNotNull(gsonConverter66);
        org.junit.Assert.assertNull(converter73);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder89);
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0743");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString5();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest2();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter6();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "POST" + "'", str4, "POST");
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "GET" + "'", str6, "GET");
        org.junit.Assert.assertNotNull(gsonConverter7);
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0744");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest8();
        java.lang.String str5 = request4.method;
        java.lang.String str6 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList7 = request4.getHeaders();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "GET" + "'", str5, "GET");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(headerList7);
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0745");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = new retrofit.SerializedObjectSupporter();
        java.lang.String str3 = serializedObjectSupporter2.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter2.deserializeObjectConverter3();
        java.lang.String str5 = serializedObjectSupporter2.deserializeObjectString4();
        retrofit.client.Request request6 = serializedObjectSupporter2.deserializeObjectRequest6();
        retrofit.Server server7 = serializedObjectSupporter2.deserializeObjectServer1();
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor13 = serializedObjectSupporter11.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor15 = null;
        builder14.sethttpExecutor(executor15);
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter17.deserializeObjectConverter3();
        builder14.converter = gsonConverter19;
        retrofit.Profiler profiler21 = null;
        retrofit.ErrorHandler errorHandler22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter3();
        java.lang.String str26 = serializedObjectSupporter23.deserializeObjectString4();
        retrofit.Server server27 = serializedObjectSupporter23.deserializeObjectServer1();
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        java.lang.String str32 = serializedObjectSupporter31.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor33 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request35 = serializedObjectSupporter34.deserializeObjectRequest1();
        retrofit.client.Request request36 = serializedObjectSupporter34.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter34.deserializeObjectConverter5();
        retrofit.Profiler profiler38 = null;
        retrofit.ErrorHandler errorHandler39 = null;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor41 = null;
        builder40.sethttpExecutor(executor41);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        builder40.log = log43;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor33, (retrofit.converter.Converter) gsonConverter37, profiler38, errorHandler39, log43, logLevel45);
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        java.lang.String str48 = serializedObjectSupporter47.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter49 = serializedObjectSupporter47.deserializeObjectConverter3();
        java.lang.String str50 = serializedObjectSupporter47.deserializeObjectString4();
        retrofit.Server server51 = serializedObjectSupporter47.deserializeObjectServer1();
        retrofit.client.Client.Provider provider52 = null;
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        java.lang.String str56 = serializedObjectSupporter55.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor57 = serializedObjectSupporter55.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request59 = serializedObjectSupporter58.deserializeObjectRequest1();
        retrofit.client.Request request60 = serializedObjectSupporter58.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter58.deserializeObjectConverter5();
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor65 = null;
        builder64.sethttpExecutor(executor65);
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        builder64.log = log67;
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter70 = new retrofit.RestAdapter(server51, provider52, executor53, executor54, requestInterceptor57, (retrofit.converter.Converter) gsonConverter61, profiler62, errorHandler63, log67, logLevel69);
        java.util.concurrent.Executor executor71 = restAdapter70.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor72 = restAdapter70.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor73 = restAdapter70.requestInterceptor;
        java.lang.String str74 = restAdapter70.getTHREAD_PREFIX();
        retrofit.SerializedObjectSupporter serializedObjectSupporter75 = restAdapter70.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel76 = restAdapter70.logLevel;
        retrofit.RestAdapter restAdapter77 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor13, (retrofit.converter.Converter) gsonConverter19, profiler21, errorHandler22, log43, logLevel76);
        builder0.log = log43;
        log43.log("GET");
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "GET" + "'", str3, "GET");
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(server7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Retrofit-" + "'", str12, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "GET" + "'", str18, "GET");
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "GET" + "'", str24, "GET");
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "http://example.com/" + "'", str26, "http://example.com/");
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Retrofit-" + "'", str32, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor33);
        org.junit.Assert.assertNotNull(request35);
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "GET" + "'", str48, "GET");
        org.junit.Assert.assertNotNull(gsonConverter49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "http://example.com/" + "'", str50, "http://example.com/");
        org.junit.Assert.assertNotNull(server51);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Retrofit-" + "'", str56, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertNotNull(request59);
        org.junit.Assert.assertNotNull(request60);
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor71);
        org.junit.Assert.assertNotNull(requestInterceptor72);
        org.junit.Assert.assertNotNull(requestInterceptor73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Retrofit-" + "'", str74, "Retrofit-");
        org.junit.Assert.assertNull(serializedObjectSupporter75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0746");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.mime.TypedString typedString4 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter6();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(typedString4);
        org.junit.Assert.assertNotNull(gsonConverter5);
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0747");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        java.lang.String str25 = restAdapter23.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor26 = restAdapter23.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter23.logLevel = logLevel27;
        retrofit.converter.Converter converter29 = restAdapter23.getconverter();
        java.util.concurrent.Executor executor30 = restAdapter23.getcallbackExecutor();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Retrofit-Idle" + "'", str25, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(converter29);
        org.junit.Assert.assertNull(executor30);
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0748");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        java.util.concurrent.Executor executor5 = null;
        builder0.httpExecutor = executor5;
        java.util.concurrent.Executor executor7 = null;
        builder0.setcallbackExecutor(executor7);
        java.util.concurrent.Executor executor9 = null;
        builder0.httpExecutor = executor9;
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter11.deserializeObjectConverter3();
        java.lang.String str14 = serializedObjectSupporter11.deserializeObjectString4();
        retrofit.Server server15 = serializedObjectSupporter11.deserializeObjectServer1();
        retrofit.client.Client.Provider provider16 = null;
        java.util.concurrent.Executor executor17 = null;
        java.util.concurrent.Executor executor18 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = new retrofit.SerializedObjectSupporter();
        java.lang.String str20 = serializedObjectSupporter19.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter19.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request23 = serializedObjectSupporter22.deserializeObjectRequest1();
        retrofit.client.Request request24 = serializedObjectSupporter22.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter22.deserializeObjectConverter5();
        retrofit.Profiler profiler26 = null;
        retrofit.ErrorHandler errorHandler27 = null;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor29 = null;
        builder28.sethttpExecutor(executor29);
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        builder28.log = log31;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server15, provider16, executor17, executor18, requestInterceptor21, (retrofit.converter.Converter) gsonConverter25, profiler26, errorHandler27, log31, logLevel33);
        java.util.concurrent.Executor executor35 = restAdapter34.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor36 = restAdapter34.requestInterceptor;
        builder0.requestInterceptor = requestInterceptor36;
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        java.lang.String str39 = serializedObjectSupporter38.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor40 = serializedObjectSupporter38.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter38.deserializeObjectConverter5();
        builder0.converter = gsonConverter41;
        java.util.concurrent.Executor executor43 = builder0.getcallbackExecutor();
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "GET" + "'", str12, "GET");
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "http://example.com/" + "'", str14, "http://example.com/");
        org.junit.Assert.assertNotNull(server15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Retrofit-" + "'", str20, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(request23);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNotNull(requestInterceptor36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Retrofit-" + "'", str39, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor40);
        org.junit.Assert.assertNotNull(gsonConverter41);
        org.junit.Assert.assertNull(executor43);
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0749");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor2 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter2();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString5();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString5();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Retrofit-" + "'", str1, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "POST" + "'", str5, "POST");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "POST" + "'", str6, "POST");
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0750");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        java.util.concurrent.Executor executor26 = restAdapter23.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel27 = restAdapter23.getLogLevel();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0751");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        retrofit.ErrorHandler errorHandler27 = restAdapter23.geterrorHandler();
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter23.getLogLevel();
        java.lang.Throwable throwable29 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter23.logException(throwable29, "http://example.com/");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNull(errorHandler27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0752");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.getconverter();
        retrofit.Profiler profiler26 = restAdapter23.getprofiler();
        retrofit.Profiler profiler27 = restAdapter23.getprofiler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        java.lang.String str29 = serializedObjectSupporter28.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter28.deserializeObjectConverter3();
        java.lang.String str31 = serializedObjectSupporter28.deserializeObjectString4();
        retrofit.Server server32 = serializedObjectSupporter28.deserializeObjectServer1();
        retrofit.client.Client.Provider provider33 = null;
        java.util.concurrent.Executor executor34 = null;
        java.util.concurrent.Executor executor35 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        java.lang.String str37 = serializedObjectSupporter36.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor38 = serializedObjectSupporter36.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request40 = serializedObjectSupporter39.deserializeObjectRequest1();
        retrofit.client.Request request41 = serializedObjectSupporter39.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter42 = serializedObjectSupporter39.deserializeObjectConverter5();
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor46 = null;
        builder45.sethttpExecutor(executor46);
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        builder45.log = log48;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter(server32, provider33, executor34, executor35, requestInterceptor38, (retrofit.converter.Converter) gsonConverter42, profiler43, errorHandler44, log48, logLevel50);
        java.util.concurrent.Executor executor52 = restAdapter51.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter53 = new retrofit.SerializedObjectSupporter();
        java.lang.String str54 = serializedObjectSupporter53.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter55 = serializedObjectSupporter53.deserializeObjectConverter3();
        java.lang.String str56 = serializedObjectSupporter53.deserializeObjectString4();
        restAdapter51.serializedObjectSupporter = serializedObjectSupporter53;
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter53;
        java.lang.String str59 = restAdapter23.getIDLE_THREAD_NAME();
        java.lang.Throwable throwable60 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter23.logException(throwable60, "http://example.com/");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertNull(profiler27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "GET" + "'", str29, "GET");
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "http://example.com/" + "'", str31, "http://example.com/");
        org.junit.Assert.assertNotNull(server32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-" + "'", str37, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor38);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(request41);
        org.junit.Assert.assertNotNull(gsonConverter42);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "GET" + "'", str54, "GET");
        org.junit.Assert.assertNotNull(gsonConverter55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "http://example.com/" + "'", str56, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Retrofit-Idle" + "'", str59, "Retrofit-Idle");
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0753");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.RestAdapter.Log log25 = restAdapter23.log;
        retrofit.Server server26 = restAdapter23.server;
        retrofit.RestAdapter.Log log27 = restAdapter23.log;
        java.lang.Throwable throwable28 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter23.logException(throwable28, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(server26);
        org.junit.Assert.assertNotNull(log27);
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0754");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("http://example.com/", "", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.lang.String str7 = request6.getMethod();
        java.util.List<retrofit.client.Header> headerList8 = request6.headers;
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(headerList8);
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0755");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        builder0.ensureSaneDefaults();
        retrofit.client.Client.Provider provider4 = null;
        builder0.setclientProvider(provider4);
        java.util.concurrent.Executor executor6 = null;
        builder0.httpExecutor = executor6;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider10 = builder9.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder12 = builder9.setLogLevel(logLevel11);
        retrofit.converter.Converter converter13 = builder12.converter;
        java.util.concurrent.Executor executor14 = null;
        builder12.sethttpExecutor(executor14);
        retrofit.RestAdapter.Builder builder17 = builder12.setServer("GET");
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor19 = null;
        builder18.setcallbackExecutor(executor19);
        java.util.concurrent.Executor executor21 = null;
        builder18.setcallbackExecutor(executor21);
        builder18.ensureSaneDefaults();
        java.util.concurrent.Executor executor24 = builder18.callbackExecutor;
        builder17.setcallbackExecutor(executor24);
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter26.deserializeObjectConverter3();
        java.lang.String str29 = serializedObjectSupporter26.deserializeObjectString4();
        retrofit.Server server30 = serializedObjectSupporter26.deserializeObjectServer1();
        retrofit.client.Client.Provider provider31 = null;
        java.util.concurrent.Executor executor32 = null;
        java.util.concurrent.Executor executor33 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = new retrofit.SerializedObjectSupporter();
        java.lang.String str35 = serializedObjectSupporter34.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor36 = serializedObjectSupporter34.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request38 = serializedObjectSupporter37.deserializeObjectRequest1();
        retrofit.client.Request request39 = serializedObjectSupporter37.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter40 = serializedObjectSupporter37.deserializeObjectConverter5();
        retrofit.Profiler profiler41 = null;
        retrofit.ErrorHandler errorHandler42 = null;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor44 = null;
        builder43.sethttpExecutor(executor44);
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        builder43.log = log46;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server30, provider31, executor32, executor33, requestInterceptor36, (retrofit.converter.Converter) gsonConverter40, profiler41, errorHandler42, log46, logLevel48);
        retrofit.RestAdapter.LogLevel logLevel50 = restAdapter49.getLogLevel();
        java.lang.String str51 = restAdapter49.getIDLE_THREAD_NAME();
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = restAdapter49.serializedObjectSupporter;
        retrofit.RestAdapter.Log log53 = restAdapter49.log;
        retrofit.Server server54 = restAdapter49.getserver();
        builder17.server = server54;
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        java.lang.String str57 = serializedObjectSupporter56.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter58 = serializedObjectSupporter56.deserializeObjectConverter3();
        java.lang.String str59 = serializedObjectSupporter56.deserializeObjectString4();
        retrofit.Server server60 = serializedObjectSupporter56.deserializeObjectServer1();
        retrofit.client.Client.Provider provider61 = null;
        java.util.concurrent.Executor executor62 = null;
        java.util.concurrent.Executor executor63 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter64 = new retrofit.SerializedObjectSupporter();
        java.lang.String str65 = serializedObjectSupporter64.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor66 = serializedObjectSupporter64.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter67 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request68 = serializedObjectSupporter67.deserializeObjectRequest1();
        retrofit.client.Request request69 = serializedObjectSupporter67.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter70 = serializedObjectSupporter67.deserializeObjectConverter5();
        retrofit.Profiler profiler71 = null;
        retrofit.ErrorHandler errorHandler72 = null;
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor74 = null;
        builder73.sethttpExecutor(executor74);
        retrofit.RestAdapter.Log log76 = retrofit.RestAdapter.Log.NONE;
        builder73.log = log76;
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter79 = new retrofit.RestAdapter(server60, provider61, executor62, executor63, requestInterceptor66, (retrofit.converter.Converter) gsonConverter70, profiler71, errorHandler72, log76, logLevel78);
        java.util.concurrent.Executor executor80 = restAdapter79.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor81 = restAdapter79.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel82 = restAdapter79.logLevel;
        retrofit.RestAdapter.Builder builder83 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter84 = builder83.serializedObjectSupporter;
        retrofit.Profiler profiler85 = builder83.profiler;
        retrofit.RestAdapter.LogLevel logLevel86 = builder83.logLevel;
        boolean boolean87 = logLevel86.log();
        restAdapter79.setLogLevel(logLevel86);
        retrofit.RequestInterceptor requestInterceptor89 = restAdapter79.getrequestInterceptor();
        retrofit.RestAdapter.Builder builder90 = builder17.setRequestInterceptor(requestInterceptor89);
        retrofit.RestAdapter.Builder builder91 = builder0.setRequestInterceptor(requestInterceptor89);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(executor24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "GET" + "'", str27, "GET");
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "http://example.com/" + "'", str29, "http://example.com/");
        org.junit.Assert.assertNotNull(server30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Retrofit-" + "'", str35, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor36);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertNotNull(gsonConverter40);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Retrofit-Idle" + "'", str51, "Retrofit-Idle");
        org.junit.Assert.assertNull(serializedObjectSupporter52);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(server54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "GET" + "'", str57, "GET");
        org.junit.Assert.assertNotNull(gsonConverter58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "http://example.com/" + "'", str59, "http://example.com/");
        org.junit.Assert.assertNotNull(server60);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Retrofit-" + "'", str65, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor66);
        org.junit.Assert.assertNotNull(request68);
        org.junit.Assert.assertNotNull(request69);
        org.junit.Assert.assertNotNull(gsonConverter70);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor80);
        org.junit.Assert.assertNotNull(requestInterceptor81);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(serializedObjectSupporter84);
        org.junit.Assert.assertNull(profiler85);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(requestInterceptor89);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(builder91);
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0756");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter3();
        builder0.converter = gsonConverter5;
        retrofit.client.Client.Provider provider7 = null;
        builder0.clientProvider = provider7;
        retrofit.client.Client.Provider provider9 = null;
        builder0.setclientProvider(provider9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = builder11.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = builder11.serializedObjectSupporter;
        java.util.concurrent.Executor executor14 = null;
        builder11.httpExecutor = executor14;
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request17 = serializedObjectSupporter16.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter16.deserializeObjectConverter2();
        builder11.serializedObjectSupporter = serializedObjectSupporter16;
        retrofit.client.Request request20 = serializedObjectSupporter16.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter16.deserializeObjectConverter5();
        retrofit.Server server22 = serializedObjectSupporter16.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder23 = builder0.setServer(server22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor25 = null;
        builder24.sethttpExecutor(executor25);
        builder24.ensureSaneDefaults();
        retrofit.client.Client.Provider provider28 = null;
        builder24.setclientProvider(provider28);
        retrofit.client.Client.Provider provider30 = null;
        builder24.setclientProvider(provider30);
        java.util.concurrent.Executor executor32 = builder24.httpExecutor;
        builder23.httpExecutor = executor32;
        retrofit.Profiler profiler34 = null;
        builder23.profiler = profiler34;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor37 = null;
        builder36.setcallbackExecutor(executor37);
        retrofit.converter.Converter converter39 = builder36.converter;
        retrofit.RestAdapter.Builder builder41 = builder36.setServer("GET");
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor43 = null;
        builder42.sethttpExecutor(executor43);
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = new retrofit.SerializedObjectSupporter();
        java.lang.String str46 = serializedObjectSupporter45.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter47 = serializedObjectSupporter45.deserializeObjectConverter3();
        builder42.converter = gsonConverter47;
        retrofit.client.Client.Provider provider49 = null;
        builder42.clientProvider = provider49;
        retrofit.SerializedObjectSupporter serializedObjectSupporter51 = new retrofit.SerializedObjectSupporter();
        java.lang.String str52 = serializedObjectSupporter51.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter53 = serializedObjectSupporter51.deserializeObjectConverter3();
        java.lang.String str54 = serializedObjectSupporter51.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter55 = serializedObjectSupporter51.deserializeObjectConverter6();
        builder42.converter = gsonConverter55;
        builder36.converter = gsonConverter55;
        retrofit.RestAdapter restAdapter58 = builder36.build();
        retrofit.SerializedObjectSupporter serializedObjectSupporter59 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request60 = serializedObjectSupporter59.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter59.deserializeObjectConverter2();
        retrofit.client.Request request62 = serializedObjectSupporter59.deserializeObjectRequest8();
        retrofit.RequestInterceptor requestInterceptor63 = serializedObjectSupporter59.deserializeObjectRequestInterceptor1();
        java.lang.String str64 = serializedObjectSupporter59.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter65 = serializedObjectSupporter59.deserializeObjectConverter3();
        restAdapter58.serializedObjectSupporter = serializedObjectSupporter59;
        java.util.concurrent.Executor executor67 = restAdapter58.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor68 = restAdapter58.getrequestInterceptor();
        retrofit.RestAdapter.LogLevel logLevel69 = restAdapter58.getLogLevel();
        builder23.logLevel = logLevel69;
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNull(serializedObjectSupporter12);
        org.junit.Assert.assertNull(serializedObjectSupporter13);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(request20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNotNull(server22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(executor32);
        org.junit.Assert.assertNull(converter39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "GET" + "'", str46, "GET");
        org.junit.Assert.assertNotNull(gsonConverter47);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "GET" + "'", str52, "GET");
        org.junit.Assert.assertNotNull(gsonConverter53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "http://example.com/" + "'", str54, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter55);
        org.junit.Assert.assertNotNull(restAdapter58);
        org.junit.Assert.assertNotNull(request60);
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertNotNull(request62);
        org.junit.Assert.assertNotNull(requestInterceptor63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "http://example.com/" + "'", str64, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter65);
        org.junit.Assert.assertNotNull(executor67);
        org.junit.Assert.assertNotNull(requestInterceptor68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0757");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        java.lang.String str25 = restAdapter23.getIDLE_THREAD_NAME();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter26.deserializeObjectConverter3();
        java.lang.String str29 = serializedObjectSupporter26.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter26.deserializeObjectConverter3();
        retrofit.client.Request request31 = serializedObjectSupporter26.deserializeObjectRequest5();
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter26;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Retrofit-Idle" + "'", str25, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "GET" + "'", str27, "GET");
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "http://example.com/" + "'", str29, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(request31);
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0758");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.client.Client.Provider provider2 = null;
        builder0.setclientProvider(provider2);
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("hi!");
        retrofit.Profiler profiler6 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder7 = builder5.setProfiler(profiler6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNotNull(builder5);
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0759");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter3();
        builder0.converter = gsonConverter5;
        retrofit.client.Client.Provider provider7 = null;
        builder0.clientProvider = provider7;
        retrofit.RestAdapter.LogLevel logLevel9 = builder0.logLevel;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor11 = null;
        builder10.sethttpExecutor(executor11);
        retrofit.RequestInterceptor requestInterceptor13 = null;
        builder10.requestInterceptor = requestInterceptor13;
        retrofit.converter.Converter converter15 = builder10.converter;
        java.util.concurrent.Executor executor16 = null;
        builder10.httpExecutor = executor16;
        retrofit.RestAdapter.LogLevel logLevel18 = builder10.logLevel;
        builder0.logLevel = logLevel18;
        java.util.concurrent.Executor executor20 = builder0.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request22 = serializedObjectSupporter21.deserializeObjectRequest8();
        retrofit.client.Request request23 = serializedObjectSupporter21.deserializeObjectRequest7();
        java.lang.String str24 = serializedObjectSupporter21.deserializeObjectString1();
        java.lang.String str25 = serializedObjectSupporter21.deserializeObjectString5();
        retrofit.RequestInterceptor requestInterceptor26 = serializedObjectSupporter21.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder27 = builder0.setRequestInterceptor(requestInterceptor26);
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        java.lang.String str29 = serializedObjectSupporter28.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter28.deserializeObjectConverter3();
        java.lang.String str31 = serializedObjectSupporter28.deserializeObjectString4();
        retrofit.Server server32 = serializedObjectSupporter28.deserializeObjectServer1();
        retrofit.client.Client.Provider provider33 = null;
        java.util.concurrent.Executor executor34 = null;
        java.util.concurrent.Executor executor35 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        java.lang.String str37 = serializedObjectSupporter36.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor38 = serializedObjectSupporter36.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request40 = serializedObjectSupporter39.deserializeObjectRequest1();
        retrofit.client.Request request41 = serializedObjectSupporter39.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter42 = serializedObjectSupporter39.deserializeObjectConverter5();
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor46 = null;
        builder45.sethttpExecutor(executor46);
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        builder45.log = log48;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter(server32, provider33, executor34, executor35, requestInterceptor38, (retrofit.converter.Converter) gsonConverter42, profiler43, errorHandler44, log48, logLevel50);
        retrofit.RestAdapter.LogLevel logLevel52 = restAdapter51.getLogLevel();
        retrofit.converter.Converter converter53 = restAdapter51.getconverter();
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean55 = logLevel54.log();
        boolean boolean56 = logLevel54.log();
        restAdapter51.setLogLevel(logLevel54);
        retrofit.Server server58 = restAdapter51.getserver();
        builder27.server = server58;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log61 = builder60.log;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor63 = null;
        builder62.setcallbackExecutor(executor63);
        java.util.concurrent.Executor executor65 = null;
        builder62.setcallbackExecutor(executor65);
        retrofit.client.Client.Provider provider67 = null;
        builder62.clientProvider = provider67;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter70 = builder69.serializedObjectSupporter;
        retrofit.Profiler profiler71 = builder69.profiler;
        retrofit.RestAdapter.LogLevel logLevel72 = builder69.logLevel;
        builder62.logLevel = logLevel72;
        builder60.logLevel = logLevel72;
        builder27.logLevel = logLevel72;
        retrofit.client.Client client76 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder77 = builder27.setClient(client76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor20);
        org.junit.Assert.assertNotNull(request22);
        org.junit.Assert.assertNotNull(request23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Retrofit-" + "'", str24, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "POST" + "'", str25, "POST");
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "GET" + "'", str29, "GET");
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "http://example.com/" + "'", str31, "http://example.com/");
        org.junit.Assert.assertNotNull(server32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-" + "'", str37, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor38);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(request41);
        org.junit.Assert.assertNotNull(gsonConverter42);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(server58);
        org.junit.Assert.assertNull(log61);
        org.junit.Assert.assertNull(serializedObjectSupporter70);
        org.junit.Assert.assertNull(profiler71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0760");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        builder0.ensureSaneDefaults();
        retrofit.client.Client.Provider provider4 = null;
        builder0.setclientProvider(provider4);
        java.util.concurrent.Executor executor6 = null;
        builder0.httpExecutor = executor6;
        retrofit.client.Client.Provider provider8 = null;
        builder0.clientProvider = provider8;
        retrofit.converter.Converter converter10 = builder0.converter;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor12 = null;
        builder11.sethttpExecutor(executor12);
        retrofit.RequestInterceptor requestInterceptor14 = null;
        builder11.requestInterceptor = requestInterceptor14;
        java.util.concurrent.Executor executor16 = null;
        builder11.httpExecutor = executor16;
        java.util.concurrent.Executor executor18 = null;
        builder11.setcallbackExecutor(executor18);
        retrofit.client.Client.Provider provider20 = null;
        builder11.setclientProvider(provider20);
        retrofit.client.Client.Provider provider22 = null;
        builder11.setclientProvider(provider22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor25 = null;
        builder24.setcallbackExecutor(executor25);
        java.util.concurrent.Executor executor27 = null;
        builder24.setcallbackExecutor(executor27);
        builder24.ensureSaneDefaults();
        java.util.concurrent.Executor executor30 = builder24.callbackExecutor;
        builder11.httpExecutor = executor30;
        builder0.setcallbackExecutor(executor30);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor34 = null;
        builder33.setcallbackExecutor(executor34);
        java.util.concurrent.Executor executor36 = null;
        builder33.setcallbackExecutor(executor36);
        retrofit.client.Client.Provider provider38 = null;
        builder33.clientProvider = provider38;
        retrofit.Profiler profiler40 = null;
        builder33.profiler = profiler40;
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request43 = serializedObjectSupporter42.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter44 = serializedObjectSupporter42.deserializeObjectConverter2();
        retrofit.client.Request request45 = serializedObjectSupporter42.deserializeObjectRequest8();
        retrofit.RequestInterceptor requestInterceptor46 = serializedObjectSupporter42.deserializeObjectRequestInterceptor1();
        builder33.serializedObjectSupporter = serializedObjectSupporter42;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider49 = builder48.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder51 = builder48.setLogLevel(logLevel50);
        retrofit.RestAdapter.LogLevel logLevel52 = builder51.logLevel;
        retrofit.RestAdapter.Log log53 = builder51.log;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor55 = null;
        builder54.sethttpExecutor(executor55);
        retrofit.RestAdapter.Log log57 = null;
        builder54.log = log57;
        retrofit.RestAdapter.Log log59 = builder54.log;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider61 = builder60.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder63 = builder60.setLogLevel(logLevel62);
        retrofit.converter.Converter converter64 = builder63.converter;
        retrofit.Profiler profiler65 = builder63.profiler;
        java.util.concurrent.Executor executor66 = builder63.callbackExecutor;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor68 = null;
        builder67.setcallbackExecutor(executor68);
        java.util.concurrent.Executor executor70 = null;
        builder67.setcallbackExecutor(executor70);
        retrofit.client.Client.Provider provider72 = null;
        builder67.clientProvider = provider72;
        retrofit.Profiler profiler74 = null;
        builder67.profiler = profiler74;
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider77 = builder76.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder79 = builder76.setLogLevel(logLevel78);
        retrofit.converter.Converter converter80 = builder79.converter;
        builder79.ensureSaneDefaults();
        retrofit.client.Client.Provider provider82 = builder79.clientProvider;
        retrofit.RestAdapter.Builder builder83 = builder67.setClient(provider82);
        builder63.setclientProvider(provider82);
        builder54.clientProvider = provider82;
        builder51.setclientProvider(provider82);
        builder33.setclientProvider(provider82);
        builder0.clientProvider = provider82;
        org.junit.Assert.assertNotNull(converter10);
        org.junit.Assert.assertNotNull(executor30);
        org.junit.Assert.assertNotNull(request43);
        org.junit.Assert.assertNotNull(gsonConverter44);
        org.junit.Assert.assertNotNull(request45);
        org.junit.Assert.assertNotNull(requestInterceptor46);
        org.junit.Assert.assertNull(provider49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(log53);
        org.junit.Assert.assertNull(log59);
        org.junit.Assert.assertNull(provider61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNull(converter64);
        org.junit.Assert.assertNull(profiler65);
        org.junit.Assert.assertNull(executor66);
        org.junit.Assert.assertNull(provider77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNull(converter80);
        org.junit.Assert.assertNotNull(provider82);
        org.junit.Assert.assertNotNull(builder83);
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0761");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter7();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest2();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Retrofit-" + "'", str2, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Retrofit-Idle" + "'", str3, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(request5);
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0762");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter23.getLogLevel();
        retrofit.RestAdapter.Log log26 = restAdapter23.log;
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        retrofit.converter.Converter converter28 = restAdapter23.getconverter();
        retrofit.ErrorHandler errorHandler29 = restAdapter23.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter23.getLogLevel();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNotNull(converter28);
        org.junit.Assert.assertNull(errorHandler29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0763");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = builder0.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel4 = builder0.logLevel;
        retrofit.Profiler profiler5 = builder0.profiler;
        retrofit.client.Client.Provider provider6 = builder0.getclientProvider();
        java.util.concurrent.Executor executor7 = builder0.gethttpExecutor();
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler5);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNull(executor7);
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0764");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter3();
        builder0.converter = gsonConverter5;
        retrofit.client.Client.Provider provider7 = null;
        builder0.clientProvider = provider7;
        retrofit.client.Client.Provider provider9 = null;
        builder0.setclientProvider(provider9);
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter11.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter11.deserializeObjectConverter7();
        java.lang.String str16 = serializedObjectSupporter11.deserializeObjectString2();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter11.deserializeObjectConverter1();
        builder0.serializedObjectSupporter = serializedObjectSupporter11;
        retrofit.client.Client.Provider provider19 = builder0.clientProvider;
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "GET" + "'", str12, "GET");
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Retrofit-Idle" + "'", str16, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNull(provider19);
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0765");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        java.util.concurrent.Executor executor3 = null;
        builder0.httpExecutor = executor3;
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request6 = serializedObjectSupporter5.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter5.deserializeObjectConverter2();
        builder0.serializedObjectSupporter = serializedObjectSupporter5;
        retrofit.client.Request request9 = serializedObjectSupporter5.deserializeObjectRequest6();
        retrofit.client.Request request10 = serializedObjectSupporter5.deserializeObjectRequest4();
        retrofit.mime.TypedString typedString11 = serializedObjectSupporter5.deserializeObjectTypedOutput2();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter5.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter5.deserializeObjectConverter1();
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(request9);
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertNotNull(typedString11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNotNull(gsonConverter13);
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0766");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.converter.Converter converter3 = builder0.converter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("GET");
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor7 = null;
        builder6.sethttpExecutor(executor7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter3();
        builder6.converter = gsonConverter11;
        retrofit.client.Client.Provider provider13 = null;
        builder6.clientProvider = provider13;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter3();
        java.lang.String str18 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter15.deserializeObjectConverter6();
        builder6.converter = gsonConverter19;
        builder0.converter = gsonConverter19;
        retrofit.RestAdapter restAdapter22 = builder0.build();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter2();
        retrofit.client.Request request26 = serializedObjectSupporter23.deserializeObjectRequest8();
        retrofit.RequestInterceptor requestInterceptor27 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        java.lang.String str28 = serializedObjectSupporter23.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter23.deserializeObjectConverter3();
        restAdapter22.serializedObjectSupporter = serializedObjectSupporter23;
        java.util.concurrent.Executor executor31 = restAdapter22.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor32 = restAdapter22.getrequestInterceptor();
        retrofit.RestAdapter.RestHandler restHandler33 = restAdapter22.new RestHandler();
        java.util.concurrent.Executor executor34 = restAdapter22.callbackExecutor;
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "GET" + "'", str10, "GET");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "GET" + "'", str16, "GET");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(request26);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(executor34);
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0767");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        builder0.ensureSaneDefaults();
        retrofit.client.Client.Provider provider4 = null;
        builder0.setclientProvider(provider4);
        retrofit.client.Client.Provider provider6 = null;
        builder0.setclientProvider(provider6);
        retrofit.client.Client.Provider provider8 = null;
        builder0.clientProvider = provider8;
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request11 = serializedObjectSupporter10.deserializeObjectRequest1();
        retrofit.client.Request request12 = serializedObjectSupporter10.deserializeObjectRequest5();
        java.lang.String str13 = serializedObjectSupporter10.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter10.deserializeObjectConverter7();
        retrofit.Server server15 = serializedObjectSupporter10.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder16 = builder0.setServer(server15);
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request18 = serializedObjectSupporter17.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter17.deserializeObjectConverter2();
        retrofit.client.Request request20 = serializedObjectSupporter17.deserializeObjectRequest2();
        retrofit.client.Request request21 = serializedObjectSupporter17.deserializeObjectRequest7();
        retrofit.ErrorHandler errorHandler22 = serializedObjectSupporter17.deserializeObjectErrorHandler1();
        builder16.errorHandler = errorHandler22;
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "POST" + "'", str13, "POST");
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(server15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(request18);
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(request20);
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(errorHandler22);
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0768");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.converter.Converter converter3 = builder0.converter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("GET");
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor7 = null;
        builder6.sethttpExecutor(executor7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter3();
        builder6.converter = gsonConverter11;
        retrofit.client.Client.Provider provider13 = null;
        builder6.clientProvider = provider13;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter3();
        java.lang.String str18 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter15.deserializeObjectConverter6();
        builder6.converter = gsonConverter19;
        builder0.converter = gsonConverter19;
        retrofit.RestAdapter restAdapter22 = builder0.build();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter2();
        retrofit.client.Request request26 = serializedObjectSupporter23.deserializeObjectRequest8();
        retrofit.RequestInterceptor requestInterceptor27 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        java.lang.String str28 = serializedObjectSupporter23.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter23.deserializeObjectConverter3();
        restAdapter22.serializedObjectSupporter = serializedObjectSupporter23;
        java.util.concurrent.Executor executor31 = restAdapter22.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter22.logLevel;
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "GET" + "'", str10, "GET");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "GET" + "'", str16, "GET");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(request26);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0769");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest3();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest7();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(request6);
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0770");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        retrofit.Profiler profiler27 = restAdapter23.getprofiler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        java.lang.String str29 = serializedObjectSupporter28.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter28.deserializeObjectConverter3();
        java.lang.String str31 = serializedObjectSupporter28.deserializeObjectString4();
        retrofit.Server server32 = serializedObjectSupporter28.deserializeObjectServer1();
        retrofit.client.Client.Provider provider33 = null;
        java.util.concurrent.Executor executor34 = null;
        java.util.concurrent.Executor executor35 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        java.lang.String str37 = serializedObjectSupporter36.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor38 = serializedObjectSupporter36.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request40 = serializedObjectSupporter39.deserializeObjectRequest1();
        retrofit.client.Request request41 = serializedObjectSupporter39.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter42 = serializedObjectSupporter39.deserializeObjectConverter5();
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor46 = null;
        builder45.sethttpExecutor(executor46);
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        builder45.log = log48;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter(server32, provider33, executor34, executor35, requestInterceptor38, (retrofit.converter.Converter) gsonConverter42, profiler43, errorHandler44, log48, logLevel50);
        retrofit.RestAdapter.LogLevel logLevel52 = restAdapter51.getLogLevel();
        java.lang.String str53 = restAdapter51.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor54 = restAdapter51.httpExecutor;
        retrofit.Profiler profiler55 = restAdapter51.getprofiler();
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor57 = null;
        builder56.setcallbackExecutor(executor57);
        java.util.concurrent.Executor executor59 = builder56.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel60 = builder56.logLevel;
        boolean boolean61 = logLevel60.log();
        restAdapter51.logLevel = logLevel60;
        restAdapter23.logLevel = logLevel60;
        java.util.concurrent.Executor executor64 = restAdapter23.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request66 = serializedObjectSupporter65.deserializeObjectRequest1();
        retrofit.Server server67 = serializedObjectSupporter65.deserializeObjectServer1();
        java.lang.String str68 = serializedObjectSupporter65.deserializeObjectString3();
        retrofit.client.Request request69 = serializedObjectSupporter65.deserializeObjectRequest7();
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter65;
        java.util.concurrent.Executor executor71 = restAdapter23.httpExecutor;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNull(profiler27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "GET" + "'", str29, "GET");
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "http://example.com/" + "'", str31, "http://example.com/");
        org.junit.Assert.assertNotNull(server32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-" + "'", str37, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor38);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(request41);
        org.junit.Assert.assertNotNull(gsonConverter42);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Retrofit-Idle" + "'", str53, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor54);
        org.junit.Assert.assertNull(profiler55);
        org.junit.Assert.assertNull(executor59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(executor64);
        org.junit.Assert.assertNotNull(request66);
        org.junit.Assert.assertNotNull(server67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "GET" + "'", str68, "GET");
        org.junit.Assert.assertNotNull(request69);
        org.junit.Assert.assertNull(executor71);
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0771");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.ErrorHandler errorHandler3 = builder0.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        java.lang.String str5 = serializedObjectSupporter4.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter4.deserializeObjectConverter3();
        java.lang.String str7 = serializedObjectSupporter4.deserializeObjectString4();
        retrofit.Server server8 = serializedObjectSupporter4.deserializeObjectServer1();
        retrofit.client.Client.Provider provider9 = null;
        java.util.concurrent.Executor executor10 = null;
        java.util.concurrent.Executor executor11 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor14 = serializedObjectSupporter12.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request16 = serializedObjectSupporter15.deserializeObjectRequest1();
        retrofit.client.Request request17 = serializedObjectSupporter15.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter15.deserializeObjectConverter5();
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor22 = null;
        builder21.sethttpExecutor(executor22);
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        builder21.log = log24;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter(server8, provider9, executor10, executor11, requestInterceptor14, (retrofit.converter.Converter) gsonConverter18, profiler19, errorHandler20, log24, logLevel26);
        java.util.concurrent.Executor executor28 = restAdapter27.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor29 = restAdapter27.requestInterceptor;
        retrofit.RestAdapter.Builder builder30 = builder0.setRequestInterceptor(requestInterceptor29);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider32 = builder31.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder34 = builder31.setLogLevel(logLevel33);
        retrofit.RestAdapter.Log log35 = builder34.log;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.HEADERS;
        builder34.logLevel = logLevel36;
        retrofit.ErrorHandler errorHandler38 = builder34.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        java.lang.String str40 = serializedObjectSupporter39.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter39.deserializeObjectConverter3();
        java.lang.String str42 = serializedObjectSupporter39.deserializeObjectString4();
        retrofit.client.Request request43 = serializedObjectSupporter39.deserializeObjectRequest6();
        retrofit.Server server44 = serializedObjectSupporter39.deserializeObjectServer1();
        builder34.server = server44;
        retrofit.RestAdapter.Builder builder46 = builder30.setServer(server44);
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor48 = null;
        builder47.sethttpExecutor(executor48);
        builder47.ensureSaneDefaults();
        retrofit.client.Client.Provider provider51 = null;
        builder47.setclientProvider(provider51);
        retrofit.client.Client.Provider provider53 = null;
        builder47.setclientProvider(provider53);
        java.util.concurrent.Executor executor55 = builder47.httpExecutor;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        builder56.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler58 = builder56.errorHandler;
        java.util.concurrent.Executor executor59 = builder56.getcallbackExecutor();
        retrofit.RestAdapter.Builder builder60 = builder46.setExecutors(executor55, executor59);
        retrofit.Profiler profiler61 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder62 = builder60.setProfiler(profiler61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "GET" + "'", str5, "GET");
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-" + "'", str13, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor14);
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNotNull(requestInterceptor29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(errorHandler38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "GET" + "'", str40, "GET");
        org.junit.Assert.assertNotNull(gsonConverter41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "http://example.com/" + "'", str42, "http://example.com/");
        org.junit.Assert.assertNotNull(request43);
        org.junit.Assert.assertNotNull(server44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(executor55);
        org.junit.Assert.assertNotNull(errorHandler58);
        org.junit.Assert.assertNotNull(executor59);
        org.junit.Assert.assertNotNull(builder60);
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0772");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        retrofit.Profiler profiler5 = null;
        builder0.profiler = profiler5;
        java.util.concurrent.Executor executor7 = builder0.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter8.deserializeObjectConverter3();
        java.lang.String str11 = serializedObjectSupporter8.deserializeObjectString4();
        retrofit.Server server12 = serializedObjectSupporter8.deserializeObjectServer1();
        retrofit.client.Client.Provider provider13 = null;
        java.util.concurrent.Executor executor14 = null;
        java.util.concurrent.Executor executor15 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor18 = serializedObjectSupporter16.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request20 = serializedObjectSupporter19.deserializeObjectRequest1();
        retrofit.client.Request request21 = serializedObjectSupporter19.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter19.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.ErrorHandler errorHandler24 = null;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor26 = null;
        builder25.sethttpExecutor(executor26);
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        builder25.log = log28;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter(server12, provider13, executor14, executor15, requestInterceptor18, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler24, log28, logLevel30);
        java.util.concurrent.Executor executor32 = restAdapter31.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor33 = restAdapter31.requestInterceptor;
        retrofit.RestAdapter.Builder builder34 = builder0.setRequestInterceptor(requestInterceptor33);
        retrofit.Server server35 = builder34.server;
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "GET" + "'", str9, "GET");
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "http://example.com/" + "'", str11, "http://example.com/");
        org.junit.Assert.assertNotNull(server12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Retrofit-" + "'", str17, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor18);
        org.junit.Assert.assertNotNull(request20);
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor32);
        org.junit.Assert.assertNotNull(requestInterceptor33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNull(server35);
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0773");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter7();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter4();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0774");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        java.lang.String str26 = serializedObjectSupporter25.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter25.deserializeObjectConverter3();
        java.lang.String str28 = serializedObjectSupporter25.deserializeObjectString4();
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter25;
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter23.getLogLevel();
        java.lang.String str31 = restAdapter23.getTHREAD_PREFIX();
        java.util.concurrent.Executor executor32 = restAdapter23.callbackExecutor;
        retrofit.converter.Converter converter33 = restAdapter23.getconverter();
        retrofit.client.Client.Provider provider34 = restAdapter23.getclientProvider();
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        java.lang.String str36 = serializedObjectSupporter35.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter3();
        java.lang.String str38 = serializedObjectSupporter35.deserializeObjectString4();
        retrofit.Server server39 = serializedObjectSupporter35.deserializeObjectServer1();
        retrofit.client.Client.Provider provider40 = null;
        java.util.concurrent.Executor executor41 = null;
        java.util.concurrent.Executor executor42 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        java.lang.String str44 = serializedObjectSupporter43.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor45 = serializedObjectSupporter43.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request47 = serializedObjectSupporter46.deserializeObjectRequest1();
        retrofit.client.Request request48 = serializedObjectSupporter46.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter49 = serializedObjectSupporter46.deserializeObjectConverter5();
        retrofit.Profiler profiler50 = null;
        retrofit.ErrorHandler errorHandler51 = null;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor53 = null;
        builder52.sethttpExecutor(executor53);
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        builder52.log = log55;
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter58 = new retrofit.RestAdapter(server39, provider40, executor41, executor42, requestInterceptor45, (retrofit.converter.Converter) gsonConverter49, profiler50, errorHandler51, log55, logLevel57);
        java.util.concurrent.Executor executor59 = restAdapter58.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor60 = restAdapter58.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor61 = restAdapter58.requestInterceptor;
        retrofit.ErrorHandler errorHandler62 = restAdapter58.geterrorHandler();
        java.util.concurrent.Executor executor63 = restAdapter58.gethttpExecutor();
        java.lang.String str64 = restAdapter58.getTHREAD_PREFIX();
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request66 = serializedObjectSupporter65.deserializeObjectRequest1();
        retrofit.client.Request request67 = serializedObjectSupporter65.deserializeObjectRequest5();
        retrofit.client.Request request68 = restAdapter58.logAndReplaceRequest(request67);
        retrofit.client.Request request69 = restAdapter23.logAndReplaceRequest(request68);
        retrofit.RequestInterceptor requestInterceptor70 = restAdapter23.requestInterceptor;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "GET" + "'", str26, "GET");
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Retrofit-" + "'", str31, "Retrofit-");
        org.junit.Assert.assertNull(executor32);
        org.junit.Assert.assertNotNull(converter33);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "GET" + "'", str36, "GET");
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "http://example.com/" + "'", str38, "http://example.com/");
        org.junit.Assert.assertNotNull(server39);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Retrofit-" + "'", str44, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor45);
        org.junit.Assert.assertNotNull(request47);
        org.junit.Assert.assertNotNull(request48);
        org.junit.Assert.assertNotNull(gsonConverter49);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor59);
        org.junit.Assert.assertNotNull(requestInterceptor60);
        org.junit.Assert.assertNotNull(requestInterceptor61);
        org.junit.Assert.assertNull(errorHandler62);
        org.junit.Assert.assertNull(executor63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Retrofit-" + "'", str64, "Retrofit-");
        org.junit.Assert.assertNotNull(request66);
        org.junit.Assert.assertNotNull(request67);
        org.junit.Assert.assertNotNull(request68);
        org.junit.Assert.assertNotNull(request69);
        org.junit.Assert.assertNotNull(requestInterceptor70);
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0775");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.ErrorHandler errorHandler3 = builder0.errorHandler;
        retrofit.client.Client.Provider provider4 = builder0.getclientProvider();
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider6 = builder5.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel7 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder8 = builder5.setLogLevel(logLevel7);
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        java.util.concurrent.Executor executor10 = null;
        builder8.sethttpExecutor(executor10);
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter3();
        java.lang.String str15 = serializedObjectSupporter12.deserializeObjectString4();
        retrofit.Server server16 = serializedObjectSupporter12.deserializeObjectServer1();
        retrofit.client.Client.Provider provider17 = null;
        java.util.concurrent.Executor executor18 = null;
        java.util.concurrent.Executor executor19 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        java.lang.String str21 = serializedObjectSupporter20.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor22 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest1();
        retrofit.client.Request request25 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor30 = null;
        builder29.sethttpExecutor(executor30);
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        builder29.log = log32;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter(server16, provider17, executor18, executor19, requestInterceptor22, (retrofit.converter.Converter) gsonConverter26, profiler27, errorHandler28, log32, logLevel34);
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter35.getLogLevel();
        java.lang.String str37 = restAdapter35.getIDLE_THREAD_NAME();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider39 = builder38.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder41 = builder38.setLogLevel(logLevel40);
        retrofit.RestAdapter.Log log42 = builder41.log;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.HEADERS;
        builder41.logLevel = logLevel43;
        retrofit.ErrorHandler errorHandler45 = builder41.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        java.lang.String str47 = serializedObjectSupporter46.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter48 = serializedObjectSupporter46.deserializeObjectConverter3();
        java.lang.String str49 = serializedObjectSupporter46.deserializeObjectString4();
        retrofit.client.Request request50 = serializedObjectSupporter46.deserializeObjectRequest6();
        retrofit.Server server51 = serializedObjectSupporter46.deserializeObjectServer1();
        builder41.server = server51;
        java.util.concurrent.Executor executor53 = builder41.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel54 = builder41.logLevel;
        restAdapter35.logLevel = logLevel54;
        retrofit.RestAdapter.Builder builder56 = builder8.setLogLevel(logLevel54);
        builder0.logLevel = logLevel54;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertTrue("'" + logLevel7 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel7.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "GET" + "'", str13, "GET");
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "http://example.com/" + "'", str15, "http://example.com/");
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Retrofit-" + "'", str21, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor22);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(request25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-Idle" + "'", str37, "Retrofit-Idle");
        org.junit.Assert.assertNull(provider39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNull(log42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(errorHandler45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "GET" + "'", str47, "GET");
        org.junit.Assert.assertNotNull(gsonConverter48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "http://example.com/" + "'", str49, "http://example.com/");
        org.junit.Assert.assertNotNull(request50);
        org.junit.Assert.assertNotNull(server51);
        org.junit.Assert.assertNull(executor53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder56);
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0776");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.ErrorHandler errorHandler5 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "GET" + "'", str3, "GET");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(errorHandler5);
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0777");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        java.util.concurrent.Executor executor5 = builder0.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = builder0.serializedObjectSupporter;
        retrofit.client.Client.Provider provider8 = builder0.getclientProvider();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder0.setLog(log9);
        retrofit.client.Client client11 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder12 = builder0.setClient(client11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(serializedObjectSupporter7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0778");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.Server server7 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.ErrorHandler errorHandler8 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter9 = serializedObjectSupporter0.deserializeObjectLogLevel1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(server7);
        org.junit.Assert.assertNotNull(errorHandler8);
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0779");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = null;
        builder0.setcallbackExecutor(executor3);
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.FULL;
        builder0.logLevel = logLevel5;
        retrofit.client.Client.Provider provider7 = builder0.getclientProvider();
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = builder0.serializedObjectSupporter;
        java.util.concurrent.Executor executor9 = builder0.callbackExecutor;
        retrofit.client.Client.Provider provider10 = null;
        builder0.setclientProvider(provider10);
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor13 = null;
        builder12.sethttpExecutor(executor13);
        retrofit.RequestInterceptor requestInterceptor15 = null;
        builder12.requestInterceptor = requestInterceptor15;
        retrofit.Server server17 = builder12.server;
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        java.lang.String str19 = serializedObjectSupporter18.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter18.deserializeObjectConverter3();
        java.lang.String str21 = serializedObjectSupporter18.deserializeObjectString4();
        retrofit.Server server22 = serializedObjectSupporter18.deserializeObjectServer1();
        retrofit.client.Client.Provider provider23 = null;
        java.util.concurrent.Executor executor24 = null;
        java.util.concurrent.Executor executor25 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor28 = serializedObjectSupporter26.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request30 = serializedObjectSupporter29.deserializeObjectRequest1();
        retrofit.client.Request request31 = serializedObjectSupporter29.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter32 = serializedObjectSupporter29.deserializeObjectConverter5();
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor36 = null;
        builder35.sethttpExecutor(executor36);
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        builder35.log = log38;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter(server22, provider23, executor24, executor25, requestInterceptor28, (retrofit.converter.Converter) gsonConverter32, profiler33, errorHandler34, log38, logLevel40);
        retrofit.RestAdapter.LogLevel logLevel42 = restAdapter41.getLogLevel();
        retrofit.converter.Converter converter43 = restAdapter41.converter;
        java.lang.String str44 = restAdapter41.getIDLE_THREAD_NAME();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = builder45.serializedObjectSupporter;
        retrofit.Profiler profiler47 = builder45.profiler;
        retrofit.RestAdapter.LogLevel logLevel48 = builder45.logLevel;
        restAdapter41.logLevel = logLevel48;
        retrofit.RestAdapter.Builder builder50 = builder12.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder51 = builder0.setLogLevel(logLevel48);
        java.util.concurrent.Executor executor52 = builder51.httpExecutor;
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNull(server17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "GET" + "'", str19, "GET");
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "http://example.com/" + "'", str21, "http://example.com/");
        org.junit.Assert.assertNotNull(server22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Retrofit-" + "'", str27, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(request30);
        org.junit.Assert.assertNotNull(request31);
        org.junit.Assert.assertNotNull(gsonConverter32);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Retrofit-Idle" + "'", str44, "Retrofit-Idle");
        org.junit.Assert.assertNull(serializedObjectSupporter46);
        org.junit.Assert.assertNull(profiler47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNull(executor52);
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0780");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        java.lang.String str26 = restAdapter23.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        retrofit.Profiler profiler28 = restAdapter23.getprofiler();
        retrofit.converter.Converter converter29 = restAdapter23.converter;
        retrofit.Profiler profiler30 = restAdapter23.getprofiler();
        retrofit.converter.Converter converter31 = restAdapter23.getconverter();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertNotNull(converter29);
        org.junit.Assert.assertNull(profiler30);
        org.junit.Assert.assertNotNull(converter31);
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0781");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        retrofit.converter.Converter converter3 = builder0.converter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("http://example.com/");
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(builder5);
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0782");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.mime.TypedString typedString5 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString5();
        java.lang.String str7 = serializedObjectSupporter0.deserializeObjectString2();
        retrofit.client.Request request8 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(typedString5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "POST" + "'", str6, "POST");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Retrofit-Idle" + "'", str7, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNull(typedOutput9);
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0783");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = builder0.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel4 = builder0.logLevel;
        retrofit.Profiler profiler5 = builder0.profiler;
        retrofit.client.Client.Provider provider6 = builder0.getclientProvider();
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor8 = null;
        builder7.setcallbackExecutor(executor8);
        java.util.concurrent.Executor executor10 = null;
        builder7.setcallbackExecutor(executor10);
        builder7.ensureSaneDefaults();
        java.util.concurrent.Executor executor13 = builder7.callbackExecutor;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor15 = null;
        builder14.setcallbackExecutor(executor15);
        java.util.concurrent.Executor executor17 = null;
        builder14.setcallbackExecutor(executor17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.FULL;
        builder14.logLevel = logLevel19;
        retrofit.client.Client.Provider provider21 = builder14.getclientProvider();
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = builder14.serializedObjectSupporter;
        java.util.concurrent.Executor executor23 = builder14.callbackExecutor;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = builder24.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = builder24.serializedObjectSupporter;
        java.util.concurrent.Executor executor27 = null;
        builder24.httpExecutor = executor27;
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request30 = serializedObjectSupporter29.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter2();
        builder24.serializedObjectSupporter = serializedObjectSupporter29;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider34 = builder33.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder36 = builder33.setLogLevel(logLevel35);
        retrofit.converter.Converter converter37 = builder36.converter;
        java.util.concurrent.Executor executor38 = null;
        builder36.sethttpExecutor(executor38);
        retrofit.RestAdapter.Builder builder41 = builder36.setServer("GET");
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor43 = null;
        builder42.setcallbackExecutor(executor43);
        java.util.concurrent.Executor executor45 = null;
        builder42.setcallbackExecutor(executor45);
        builder42.ensureSaneDefaults();
        java.util.concurrent.Executor executor48 = builder42.callbackExecutor;
        builder41.setcallbackExecutor(executor48);
        builder24.httpExecutor = executor48;
        builder14.sethttpExecutor(executor48);
        retrofit.RestAdapter.Builder builder52 = builder0.setExecutors(executor13, executor48);
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler5);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNotNull(executor13);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNull(serializedObjectSupporter22);
        org.junit.Assert.assertNull(executor23);
        org.junit.Assert.assertNull(serializedObjectSupporter25);
        org.junit.Assert.assertNull(serializedObjectSupporter26);
        org.junit.Assert.assertNotNull(request30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(converter37);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(executor48);
        org.junit.Assert.assertNotNull(builder52);
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0784");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        java.lang.String str27 = restAdapter23.getTHREAD_PREFIX();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = restAdapter23.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter23.logLevel;
        retrofit.converter.Converter converter30 = restAdapter23.getconverter();
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = restAdapter23.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        java.lang.String str33 = serializedObjectSupporter32.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter34 = serializedObjectSupporter32.deserializeObjectConverter3();
        java.lang.String str35 = serializedObjectSupporter32.deserializeObjectString4();
        retrofit.Server server36 = serializedObjectSupporter32.deserializeObjectServer1();
        retrofit.client.Client.Provider provider37 = null;
        java.util.concurrent.Executor executor38 = null;
        java.util.concurrent.Executor executor39 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = new retrofit.SerializedObjectSupporter();
        java.lang.String str41 = serializedObjectSupporter40.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor42 = serializedObjectSupporter40.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request44 = serializedObjectSupporter43.deserializeObjectRequest1();
        retrofit.client.Request request45 = serializedObjectSupporter43.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter43.deserializeObjectConverter5();
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor50 = null;
        builder49.sethttpExecutor(executor50);
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        builder49.log = log52;
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter(server36, provider37, executor38, executor39, requestInterceptor42, (retrofit.converter.Converter) gsonConverter46, profiler47, errorHandler48, log52, logLevel54);
        java.util.concurrent.Executor executor56 = restAdapter55.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter57 = new retrofit.SerializedObjectSupporter();
        java.lang.String str58 = serializedObjectSupporter57.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter59 = serializedObjectSupporter57.deserializeObjectConverter3();
        java.lang.String str60 = serializedObjectSupporter57.deserializeObjectString4();
        restAdapter55.serializedObjectSupporter = serializedObjectSupporter57;
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter57;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Retrofit-" + "'", str27, "Retrofit-");
        org.junit.Assert.assertNull(serializedObjectSupporter28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter30);
        org.junit.Assert.assertNull(serializedObjectSupporter31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "GET" + "'", str33, "GET");
        org.junit.Assert.assertNotNull(gsonConverter34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "http://example.com/" + "'", str35, "http://example.com/");
        org.junit.Assert.assertNotNull(server36);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Retrofit-" + "'", str41, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor42);
        org.junit.Assert.assertNotNull(request44);
        org.junit.Assert.assertNotNull(request45);
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor56);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "GET" + "'", str58, "GET");
        org.junit.Assert.assertNotNull(gsonConverter59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "http://example.com/" + "'", str60, "http://example.com/");
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0785");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest5();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter7();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request7 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter0.deserializeObjectConverter3();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "POST" + "'", str3, "POST");
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertNotNull(gsonConverter8);
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0786");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        java.util.concurrent.Executor executor5 = null;
        builder0.httpExecutor = executor5;
        java.util.concurrent.Executor executor7 = null;
        builder0.setcallbackExecutor(executor7);
        java.util.concurrent.Executor executor9 = builder0.callbackExecutor;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor11 = null;
        builder10.sethttpExecutor(executor11);
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter13.deserializeObjectConverter3();
        builder10.converter = gsonConverter15;
        retrofit.client.Client.Provider provider17 = null;
        builder10.clientProvider = provider17;
        retrofit.RestAdapter.LogLevel logLevel19 = builder10.logLevel;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor21 = null;
        builder20.sethttpExecutor(executor21);
        retrofit.RequestInterceptor requestInterceptor23 = null;
        builder20.requestInterceptor = requestInterceptor23;
        retrofit.converter.Converter converter25 = builder20.converter;
        java.util.concurrent.Executor executor26 = null;
        builder20.httpExecutor = executor26;
        retrofit.RestAdapter.LogLevel logLevel28 = builder20.logLevel;
        builder10.logLevel = logLevel28;
        java.util.concurrent.Executor executor30 = builder10.callbackExecutor;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider32 = builder31.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder34 = builder31.setLogLevel(logLevel33);
        retrofit.converter.Converter converter35 = builder34.converter;
        builder34.ensureSaneDefaults();
        retrofit.client.Client.Provider provider37 = builder34.clientProvider;
        builder10.setclientProvider(provider37);
        builder0.setclientProvider(provider37);
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = builder0.serializedObjectSupporter;
        java.util.concurrent.Executor executor41 = builder0.httpExecutor;
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "GET" + "'", str14, "GET");
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter25);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor30);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNull(converter35);
        org.junit.Assert.assertNotNull(provider37);
        org.junit.Assert.assertNull(serializedObjectSupporter40);
        org.junit.Assert.assertNull(executor41);
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0787");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor2 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.RequestInterceptor requestInterceptor6 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Retrofit-" + "'", str1, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(requestInterceptor6);
        org.junit.Assert.assertNotNull(gsonConverter7);
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0788");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        java.lang.String str26 = restAdapter23.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        retrofit.Profiler profiler28 = restAdapter23.getprofiler();
        retrofit.converter.Converter converter29 = restAdapter23.converter;
        java.util.concurrent.Executor executor30 = restAdapter23.getcallbackExecutor();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertNotNull(converter29);
        org.junit.Assert.assertNull(executor30);
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0789");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter1();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString5();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest4();
        java.lang.String str7 = request6.getMethod();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "POST" + "'", str5, "POST");
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "GET" + "'", str7, "GET");
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0790");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        builder0.ensureSaneDefaults();
        retrofit.client.Client.Provider provider4 = null;
        builder0.setclientProvider(provider4);
        java.util.concurrent.Executor executor6 = null;
        builder0.httpExecutor = executor6;
        retrofit.client.Client.Provider provider8 = null;
        builder0.clientProvider = provider8;
        retrofit.converter.Converter converter10 = builder0.converter;
        java.util.concurrent.Executor executor11 = builder0.gethttpExecutor();
        retrofit.Profiler profiler12 = builder0.profiler;
        org.junit.Assert.assertNotNull(converter10);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNull(profiler12);
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0791");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        java.util.concurrent.Executor executor5 = null;
        builder0.httpExecutor = executor5;
        java.util.concurrent.Executor executor7 = null;
        builder0.setcallbackExecutor(executor7);
        retrofit.client.Client.Provider provider9 = null;
        builder0.setclientProvider(provider9);
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest8();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter11.deserializeObjectConverter2();
        retrofit.ErrorHandler errorHandler14 = serializedObjectSupporter11.deserializeObjectErrorHandler1();
        builder0.errorHandler = errorHandler14;
        retrofit.Profiler profiler16 = null;
        builder0.profiler = profiler16;
        java.util.concurrent.Executor executor18 = null;
        builder0.httpExecutor = executor18;
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        java.lang.String str21 = serializedObjectSupporter20.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter3();
        java.lang.String str23 = serializedObjectSupporter20.deserializeObjectString4();
        retrofit.client.Request request24 = serializedObjectSupporter20.deserializeObjectRequest6();
        retrofit.Server server25 = serializedObjectSupporter20.deserializeObjectServer1();
        retrofit.client.Client.Provider provider26 = null;
        java.util.concurrent.Executor executor27 = null;
        java.util.concurrent.Executor executor28 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        java.lang.String str30 = serializedObjectSupporter29.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor31 = serializedObjectSupporter29.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor33 = null;
        builder32.sethttpExecutor(executor33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        java.lang.String str36 = serializedObjectSupporter35.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter3();
        builder32.converter = gsonConverter37;
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = new retrofit.SerializedObjectSupporter();
        java.lang.String str42 = serializedObjectSupporter41.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter41.deserializeObjectConverter3();
        java.lang.String str44 = serializedObjectSupporter41.deserializeObjectString4();
        retrofit.Server server45 = serializedObjectSupporter41.deserializeObjectServer1();
        retrofit.client.Client.Provider provider46 = null;
        java.util.concurrent.Executor executor47 = null;
        java.util.concurrent.Executor executor48 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = new retrofit.SerializedObjectSupporter();
        java.lang.String str50 = serializedObjectSupporter49.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor51 = serializedObjectSupporter49.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request53 = serializedObjectSupporter52.deserializeObjectRequest1();
        retrofit.client.Request request54 = serializedObjectSupporter52.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter55 = serializedObjectSupporter52.deserializeObjectConverter5();
        retrofit.Profiler profiler56 = null;
        retrofit.ErrorHandler errorHandler57 = null;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor59 = null;
        builder58.sethttpExecutor(executor59);
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        builder58.log = log61;
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter(server45, provider46, executor47, executor48, requestInterceptor51, (retrofit.converter.Converter) gsonConverter55, profiler56, errorHandler57, log61, logLevel63);
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = new retrofit.SerializedObjectSupporter();
        java.lang.String str66 = serializedObjectSupporter65.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter67 = serializedObjectSupporter65.deserializeObjectConverter3();
        java.lang.String str68 = serializedObjectSupporter65.deserializeObjectString4();
        retrofit.Server server69 = serializedObjectSupporter65.deserializeObjectServer1();
        retrofit.client.Client.Provider provider70 = null;
        java.util.concurrent.Executor executor71 = null;
        java.util.concurrent.Executor executor72 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter73 = new retrofit.SerializedObjectSupporter();
        java.lang.String str74 = serializedObjectSupporter73.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor75 = serializedObjectSupporter73.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter76 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request77 = serializedObjectSupporter76.deserializeObjectRequest1();
        retrofit.client.Request request78 = serializedObjectSupporter76.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter79 = serializedObjectSupporter76.deserializeObjectConverter5();
        retrofit.Profiler profiler80 = null;
        retrofit.ErrorHandler errorHandler81 = null;
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor83 = null;
        builder82.sethttpExecutor(executor83);
        retrofit.RestAdapter.Log log85 = retrofit.RestAdapter.Log.NONE;
        builder82.log = log85;
        retrofit.RestAdapter.LogLevel logLevel87 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter88 = new retrofit.RestAdapter(server69, provider70, executor71, executor72, requestInterceptor75, (retrofit.converter.Converter) gsonConverter79, profiler80, errorHandler81, log85, logLevel87);
        java.util.concurrent.Executor executor89 = restAdapter88.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor90 = restAdapter88.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor91 = restAdapter88.requestInterceptor;
        java.lang.String str92 = restAdapter88.getTHREAD_PREFIX();
        retrofit.SerializedObjectSupporter serializedObjectSupporter93 = restAdapter88.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel94 = restAdapter88.logLevel;
        retrofit.RestAdapter restAdapter95 = new retrofit.RestAdapter(server25, provider26, executor27, executor28, requestInterceptor31, (retrofit.converter.Converter) gsonConverter37, profiler39, errorHandler40, log61, logLevel94);
        retrofit.RestAdapter.Builder builder96 = builder0.setRequestInterceptor(requestInterceptor31);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertNotNull(errorHandler14);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "GET" + "'", str21, "GET");
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "http://example.com/" + "'", str23, "http://example.com/");
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Retrofit-" + "'", str30, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor31);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "GET" + "'", str36, "GET");
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "GET" + "'", str42, "GET");
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "http://example.com/" + "'", str44, "http://example.com/");
        org.junit.Assert.assertNotNull(server45);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Retrofit-" + "'", str50, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor51);
        org.junit.Assert.assertNotNull(request53);
        org.junit.Assert.assertNotNull(request54);
        org.junit.Assert.assertNotNull(gsonConverter55);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "GET" + "'", str66, "GET");
        org.junit.Assert.assertNotNull(gsonConverter67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "http://example.com/" + "'", str68, "http://example.com/");
        org.junit.Assert.assertNotNull(server69);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Retrofit-" + "'", str74, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor75);
        org.junit.Assert.assertNotNull(request77);
        org.junit.Assert.assertNotNull(request78);
        org.junit.Assert.assertNotNull(gsonConverter79);
        org.junit.Assert.assertNotNull(log85);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor89);
        org.junit.Assert.assertNotNull(requestInterceptor90);
        org.junit.Assert.assertNotNull(requestInterceptor91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "Retrofit-" + "'", str92, "Retrofit-");
        org.junit.Assert.assertNull(serializedObjectSupporter93);
        org.junit.Assert.assertTrue("'" + logLevel94 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel94.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder96);
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0792");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        java.util.concurrent.Executor executor3 = null;
        builder0.httpExecutor = executor3;
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request6 = serializedObjectSupporter5.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter5.deserializeObjectConverter2();
        builder0.serializedObjectSupporter = serializedObjectSupporter5;
        retrofit.client.Request request9 = serializedObjectSupporter5.deserializeObjectRequest6();
        retrofit.client.Request request10 = serializedObjectSupporter5.deserializeObjectRequest4();
        retrofit.mime.TypedString typedString11 = serializedObjectSupporter5.deserializeObjectTypedOutput2();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter5.deserializeObjectConverter2();
        java.lang.String str13 = serializedObjectSupporter5.deserializeObjectString4();
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(request9);
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertNotNull(typedString11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "http://example.com/" + "'", str13, "http://example.com/");
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0793");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter23.logLevel;
        retrofit.Server server27 = restAdapter23.server;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(server27);
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0794");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor3 = null;
        builder2.sethttpExecutor(executor3);
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter5.deserializeObjectConverter3();
        builder2.converter = gsonConverter7;
        retrofit.client.Client.Provider provider9 = null;
        builder2.clientProvider = provider9;
        retrofit.client.Client.Provider provider11 = null;
        builder2.setclientProvider(provider11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = builder13.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = builder13.serializedObjectSupporter;
        java.util.concurrent.Executor executor16 = null;
        builder13.httpExecutor = executor16;
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request19 = serializedObjectSupporter18.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter18.deserializeObjectConverter2();
        builder13.serializedObjectSupporter = serializedObjectSupporter18;
        retrofit.client.Request request22 = serializedObjectSupporter18.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter18.deserializeObjectConverter5();
        retrofit.Server server24 = serializedObjectSupporter18.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder25 = builder2.setServer(server24);
        retrofit.client.Client.Provider provider26 = builder2.clientProvider;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler29 = builder27.errorHandler;
        java.util.concurrent.Executor executor30 = builder27.getcallbackExecutor();
        builder2.sethttpExecutor(executor30);
        builder0.callbackExecutor = executor30;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = builder33.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = builder33.serializedObjectSupporter;
        java.util.concurrent.Executor executor36 = null;
        builder33.httpExecutor = executor36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor39 = null;
        builder38.setcallbackExecutor(executor39);
        java.util.concurrent.Executor executor41 = builder38.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel42 = builder38.logLevel;
        retrofit.Profiler profiler43 = builder38.profiler;
        retrofit.RestAdapter.Builder builder45 = builder38.setServer("hi!");
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request47 = serializedObjectSupporter46.deserializeObjectRequest1();
        retrofit.client.Request request48 = serializedObjectSupporter46.deserializeObjectRequest5();
        java.lang.String str49 = serializedObjectSupporter46.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter50 = serializedObjectSupporter46.deserializeObjectConverter7();
        retrofit.Server server51 = serializedObjectSupporter46.deserializeObjectServer1();
        retrofit.client.Request request52 = serializedObjectSupporter46.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler53 = serializedObjectSupporter46.deserializeObjectErrorHandler1();
        retrofit.RequestInterceptor requestInterceptor54 = serializedObjectSupporter46.deserializeObjectRequestInterceptor1();
        builder38.requestInterceptor = requestInterceptor54;
        builder33.requestInterceptor = requestInterceptor54;
        retrofit.RestAdapter.Builder builder57 = builder0.setRequestInterceptor(requestInterceptor54);
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor59 = null;
        builder58.setcallbackExecutor(executor59);
        java.util.concurrent.Executor executor61 = null;
        builder58.setcallbackExecutor(executor61);
        retrofit.client.Client.Provider provider63 = null;
        builder58.clientProvider = provider63;
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter66 = builder65.serializedObjectSupporter;
        retrofit.Profiler profiler67 = builder65.profiler;
        retrofit.RestAdapter.LogLevel logLevel68 = builder65.logLevel;
        builder58.logLevel = logLevel68;
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor71 = null;
        builder70.sethttpExecutor(executor71);
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        builder70.log = log73;
        log73.log("");
        retrofit.RestAdapter.Builder builder77 = builder58.setLog(log73);
        builder0.log = log73;
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "GET" + "'", str6, "GET");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNull(serializedObjectSupporter14);
        org.junit.Assert.assertNull(serializedObjectSupporter15);
        org.junit.Assert.assertNotNull(request19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertNotNull(request22);
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertNotNull(server24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertNotNull(errorHandler29);
        org.junit.Assert.assertNotNull(executor30);
        org.junit.Assert.assertNull(serializedObjectSupporter34);
        org.junit.Assert.assertNull(serializedObjectSupporter35);
        org.junit.Assert.assertNull(executor41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(request47);
        org.junit.Assert.assertNotNull(request48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "POST" + "'", str49, "POST");
        org.junit.Assert.assertNotNull(gsonConverter50);
        org.junit.Assert.assertNotNull(server51);
        org.junit.Assert.assertNotNull(request52);
        org.junit.Assert.assertNotNull(errorHandler53);
        org.junit.Assert.assertNotNull(requestInterceptor54);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNull(serializedObjectSupporter66);
        org.junit.Assert.assertNull(profiler67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNotNull(builder77);
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0795");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = builder0.log;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor3 = null;
        builder2.sethttpExecutor(executor3);
        retrofit.RestAdapter.Log log5 = null;
        builder2.log = log5;
        java.util.concurrent.Executor executor7 = builder2.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = builder2.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = builder2.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = builder10.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = builder10.serializedObjectSupporter;
        java.util.concurrent.Executor executor13 = null;
        builder10.httpExecutor = executor13;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request16 = serializedObjectSupporter15.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter2();
        builder10.serializedObjectSupporter = serializedObjectSupporter15;
        retrofit.client.Request request19 = serializedObjectSupporter15.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter15.deserializeObjectConverter5();
        retrofit.Server server21 = serializedObjectSupporter15.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter15.deserializeObjectConverter2();
        builder2.converter = gsonConverter22;
        builder0.converter = gsonConverter22;
        retrofit.Server server25 = builder0.server;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor27 = null;
        builder26.sethttpExecutor(executor27);
        retrofit.RequestInterceptor requestInterceptor29 = null;
        builder26.requestInterceptor = requestInterceptor29;
        retrofit.Server server31 = builder26.server;
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        java.lang.String str33 = serializedObjectSupporter32.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter34 = serializedObjectSupporter32.deserializeObjectConverter3();
        java.lang.String str35 = serializedObjectSupporter32.deserializeObjectString4();
        retrofit.Server server36 = serializedObjectSupporter32.deserializeObjectServer1();
        retrofit.client.Client.Provider provider37 = null;
        java.util.concurrent.Executor executor38 = null;
        java.util.concurrent.Executor executor39 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = new retrofit.SerializedObjectSupporter();
        java.lang.String str41 = serializedObjectSupporter40.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor42 = serializedObjectSupporter40.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request44 = serializedObjectSupporter43.deserializeObjectRequest1();
        retrofit.client.Request request45 = serializedObjectSupporter43.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter43.deserializeObjectConverter5();
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor50 = null;
        builder49.sethttpExecutor(executor50);
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        builder49.log = log52;
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter(server36, provider37, executor38, executor39, requestInterceptor42, (retrofit.converter.Converter) gsonConverter46, profiler47, errorHandler48, log52, logLevel54);
        retrofit.RestAdapter.LogLevel logLevel56 = restAdapter55.getLogLevel();
        retrofit.converter.Converter converter57 = restAdapter55.converter;
        java.lang.String str58 = restAdapter55.getIDLE_THREAD_NAME();
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = builder59.serializedObjectSupporter;
        retrofit.Profiler profiler61 = builder59.profiler;
        retrofit.RestAdapter.LogLevel logLevel62 = builder59.logLevel;
        restAdapter55.logLevel = logLevel62;
        retrofit.RestAdapter.Builder builder64 = builder26.setLogLevel(logLevel62);
        retrofit.RestAdapter.Builder builder65 = builder0.setLogLevel(logLevel62);
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor67 = null;
        builder66.sethttpExecutor(executor67);
        retrofit.SerializedObjectSupporter serializedObjectSupporter69 = new retrofit.SerializedObjectSupporter();
        java.lang.String str70 = serializedObjectSupporter69.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter71 = serializedObjectSupporter69.deserializeObjectConverter3();
        builder66.converter = gsonConverter71;
        retrofit.client.Client.Provider provider73 = null;
        builder66.clientProvider = provider73;
        retrofit.client.Client.Provider provider75 = null;
        builder66.setclientProvider(provider75);
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter78 = builder77.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter79 = builder77.serializedObjectSupporter;
        java.util.concurrent.Executor executor80 = null;
        builder77.httpExecutor = executor80;
        retrofit.SerializedObjectSupporter serializedObjectSupporter82 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request83 = serializedObjectSupporter82.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter84 = serializedObjectSupporter82.deserializeObjectConverter2();
        builder77.serializedObjectSupporter = serializedObjectSupporter82;
        retrofit.client.Request request86 = serializedObjectSupporter82.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter87 = serializedObjectSupporter82.deserializeObjectConverter5();
        retrofit.Server server88 = serializedObjectSupporter82.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder89 = builder66.setServer(server88);
        retrofit.client.Client.Provider provider90 = builder66.clientProvider;
        retrofit.RestAdapter.Builder builder91 = new retrofit.RestAdapter.Builder();
        builder91.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler93 = builder91.errorHandler;
        java.util.concurrent.Executor executor94 = builder91.getcallbackExecutor();
        builder66.sethttpExecutor(executor94);
        builder0.httpExecutor = executor94;
        retrofit.RestAdapter.LogLevel logLevel97 = builder0.logLevel;
        org.junit.Assert.assertNull(log1);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertNull(serializedObjectSupporter12);
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNotNull(request19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNull(server25);
        org.junit.Assert.assertNull(server31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "GET" + "'", str33, "GET");
        org.junit.Assert.assertNotNull(gsonConverter34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "http://example.com/" + "'", str35, "http://example.com/");
        org.junit.Assert.assertNotNull(server36);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Retrofit-" + "'", str41, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor42);
        org.junit.Assert.assertNotNull(request44);
        org.junit.Assert.assertNotNull(request45);
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Retrofit-Idle" + "'", str58, "Retrofit-Idle");
        org.junit.Assert.assertNull(serializedObjectSupporter60);
        org.junit.Assert.assertNull(profiler61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "GET" + "'", str70, "GET");
        org.junit.Assert.assertNotNull(gsonConverter71);
        org.junit.Assert.assertNull(serializedObjectSupporter78);
        org.junit.Assert.assertNull(serializedObjectSupporter79);
        org.junit.Assert.assertNotNull(request83);
        org.junit.Assert.assertNotNull(gsonConverter84);
        org.junit.Assert.assertNotNull(request86);
        org.junit.Assert.assertNotNull(gsonConverter87);
        org.junit.Assert.assertNotNull(server88);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNull(provider90);
        org.junit.Assert.assertNotNull(errorHandler93);
        org.junit.Assert.assertNotNull(executor94);
        org.junit.Assert.assertTrue("'" + logLevel97 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel97.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0796");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.converter.Converter converter3 = builder0.converter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("GET");
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor7 = null;
        builder6.sethttpExecutor(executor7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter3();
        builder6.converter = gsonConverter11;
        retrofit.client.Client.Provider provider13 = null;
        builder6.clientProvider = provider13;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter3();
        java.lang.String str18 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter15.deserializeObjectConverter6();
        builder6.converter = gsonConverter19;
        builder0.converter = gsonConverter19;
        retrofit.RestAdapter restAdapter22 = builder0.build();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter2();
        retrofit.client.Request request26 = serializedObjectSupporter23.deserializeObjectRequest8();
        retrofit.RequestInterceptor requestInterceptor27 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        java.lang.String str28 = serializedObjectSupporter23.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter23.deserializeObjectConverter3();
        restAdapter22.serializedObjectSupporter = serializedObjectSupporter23;
        java.util.concurrent.Executor executor31 = restAdapter22.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor32 = restAdapter22.getrequestInterceptor();
        retrofit.RestAdapter.RestHandler restHandler33 = restAdapter22.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel34 = restAdapter22.logLevel;
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "GET" + "'", str10, "GET");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "GET" + "'", str16, "GET");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(request26);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0797");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request6 = serializedObjectSupporter5.deserializeObjectRequest8();
        retrofit.client.Request request7 = serializedObjectSupporter5.deserializeObjectRequest3();
        retrofit.client.Request request8 = serializedObjectSupporter5.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter5.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder10 = builder0.setConverter((retrofit.converter.Converter) gsonConverter9);
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter11.deserializeObjectConverter3();
        java.lang.String str14 = serializedObjectSupporter11.deserializeObjectString4();
        retrofit.Server server15 = serializedObjectSupporter11.deserializeObjectServer1();
        retrofit.client.Client.Provider provider16 = null;
        java.util.concurrent.Executor executor17 = null;
        java.util.concurrent.Executor executor18 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = new retrofit.SerializedObjectSupporter();
        java.lang.String str20 = serializedObjectSupporter19.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter19.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request23 = serializedObjectSupporter22.deserializeObjectRequest1();
        retrofit.client.Request request24 = serializedObjectSupporter22.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter22.deserializeObjectConverter5();
        retrofit.Profiler profiler26 = null;
        retrofit.ErrorHandler errorHandler27 = null;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor29 = null;
        builder28.sethttpExecutor(executor29);
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        builder28.log = log31;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server15, provider16, executor17, executor18, requestInterceptor21, (retrofit.converter.Converter) gsonConverter25, profiler26, errorHandler27, log31, logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter34.getLogLevel();
        java.lang.String str36 = restAdapter34.getIDLE_THREAD_NAME();
        retrofit.Profiler profiler37 = restAdapter34.profiler;
        retrofit.Server server38 = restAdapter34.getserver();
        builder10.server = server38;
        java.util.concurrent.Executor executor40 = builder10.getcallbackExecutor();
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "GET" + "'", str12, "GET");
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "http://example.com/" + "'", str14, "http://example.com/");
        org.junit.Assert.assertNotNull(server15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Retrofit-" + "'", str20, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(request23);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Retrofit-Idle" + "'", str36, "Retrofit-Idle");
        org.junit.Assert.assertNull(profiler37);
        org.junit.Assert.assertNotNull(server38);
        org.junit.Assert.assertNull(executor40);
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0798");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.converter.GsonConverter gsonConverter1 = serializedObjectSupporter0.deserializeObjectConverter7();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest1();
        org.junit.Assert.assertNotNull(gsonConverter1);
        org.junit.Assert.assertNotNull(request2);
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0799");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.ErrorHandler errorHandler4 = null;
        builder0.errorHandler = errorHandler4;
        java.util.concurrent.Executor executor6 = null;
        builder0.sethttpExecutor(executor6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider9 = builder8.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder11 = builder8.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder12 = builder0.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor14 = null;
        builder13.setcallbackExecutor(executor14);
        java.util.concurrent.Executor executor16 = null;
        builder13.setcallbackExecutor(executor16);
        java.util.concurrent.Executor executor18 = builder13.httpExecutor;
        retrofit.Profiler profiler19 = null;
        builder13.profiler = profiler19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor22 = null;
        builder21.sethttpExecutor(executor22);
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        java.lang.String str25 = serializedObjectSupporter24.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter24.deserializeObjectConverter3();
        builder21.converter = gsonConverter26;
        retrofit.client.Client.Provider provider28 = null;
        builder21.clientProvider = provider28;
        retrofit.client.Client.Provider provider30 = null;
        builder21.setclientProvider(provider30);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = builder32.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = builder32.serializedObjectSupporter;
        java.util.concurrent.Executor executor35 = null;
        builder32.httpExecutor = executor35;
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request38 = serializedObjectSupporter37.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter37.deserializeObjectConverter2();
        builder32.serializedObjectSupporter = serializedObjectSupporter37;
        retrofit.client.Request request41 = serializedObjectSupporter37.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter42 = serializedObjectSupporter37.deserializeObjectConverter5();
        retrofit.Server server43 = serializedObjectSupporter37.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder44 = builder21.setServer(server43);
        retrofit.client.Client.Provider provider45 = builder21.clientProvider;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        builder46.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler48 = builder46.errorHandler;
        java.util.concurrent.Executor executor49 = builder46.getcallbackExecutor();
        builder21.sethttpExecutor(executor49);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor52 = null;
        builder51.sethttpExecutor(executor52);
        retrofit.RequestInterceptor requestInterceptor54 = null;
        builder51.requestInterceptor = requestInterceptor54;
        retrofit.converter.Converter converter56 = builder51.converter;
        java.util.concurrent.Executor executor57 = null;
        builder51.httpExecutor = executor57;
        java.util.concurrent.Executor executor59 = null;
        builder51.httpExecutor = executor59;
        retrofit.Profiler profiler61 = null;
        builder51.profiler = profiler61;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider64 = builder63.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder66 = builder63.setLogLevel(logLevel65);
        retrofit.converter.Converter converter67 = builder66.converter;
        builder66.ensureSaneDefaults();
        retrofit.client.Client.Provider provider69 = builder66.clientProvider;
        retrofit.RestAdapter.Builder builder70 = builder51.setClient(provider69);
        builder21.clientProvider = provider69;
        retrofit.RestAdapter.Builder builder72 = builder13.setClient(provider69);
        builder12.setclientProvider(provider69);
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(executor18);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "GET" + "'", str25, "GET");
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNull(serializedObjectSupporter33);
        org.junit.Assert.assertNull(serializedObjectSupporter34);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertNotNull(request41);
        org.junit.Assert.assertNotNull(gsonConverter42);
        org.junit.Assert.assertNotNull(server43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNull(provider45);
        org.junit.Assert.assertNotNull(errorHandler48);
        org.junit.Assert.assertNotNull(executor49);
        org.junit.Assert.assertNull(converter56);
        org.junit.Assert.assertNull(provider64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNull(converter67);
        org.junit.Assert.assertNotNull(provider69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder72);
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0800");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.RestAdapter.Log log4 = builder3.log;
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.HEADERS;
        builder3.logLevel = logLevel5;
        retrofit.ErrorHandler errorHandler7 = builder3.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter8.deserializeObjectConverter3();
        java.lang.String str11 = serializedObjectSupporter8.deserializeObjectString4();
        retrofit.client.Request request12 = serializedObjectSupporter8.deserializeObjectRequest6();
        retrofit.Server server13 = serializedObjectSupporter8.deserializeObjectServer1();
        builder3.server = server13;
        java.util.concurrent.Executor executor15 = builder3.getcallbackExecutor();
        java.util.concurrent.Executor executor16 = builder3.callbackExecutor;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.setcallbackExecutor(executor18);
        java.util.concurrent.Executor executor20 = null;
        builder17.setcallbackExecutor(executor20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        builder17.logLevel = logLevel22;
        retrofit.client.Client.Provider provider24 = builder17.getclientProvider();
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor26 = null;
        builder25.sethttpExecutor(executor26);
        retrofit.RestAdapter.Log log28 = null;
        builder25.log = log28;
        retrofit.RestAdapter.Log log30 = builder25.log;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor32 = null;
        builder31.sethttpExecutor(executor32);
        retrofit.RequestInterceptor requestInterceptor34 = null;
        builder31.requestInterceptor = requestInterceptor34;
        java.util.concurrent.Executor executor36 = null;
        builder31.httpExecutor = executor36;
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        java.lang.String str39 = serializedObjectSupporter38.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter40 = serializedObjectSupporter38.deserializeObjectConverter3();
        java.lang.String str41 = serializedObjectSupporter38.deserializeObjectString4();
        retrofit.client.Request request42 = serializedObjectSupporter38.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler43 = serializedObjectSupporter38.deserializeObjectErrorHandler1();
        builder31.errorHandler = errorHandler43;
        retrofit.RestAdapter.Builder builder45 = builder25.setErrorHandler(errorHandler43);
        retrofit.RestAdapter.Builder builder46 = builder17.setErrorHandler(errorHandler43);
        retrofit.RestAdapter.Builder builder47 = builder3.setErrorHandler(errorHandler43);
        retrofit.client.Client.Provider provider48 = builder3.getclientProvider();
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(errorHandler7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "GET" + "'", str9, "GET");
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "http://example.com/" + "'", str11, "http://example.com/");
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNull(log30);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "GET" + "'", str39, "GET");
        org.junit.Assert.assertNotNull(gsonConverter40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "http://example.com/" + "'", str41, "http://example.com/");
        org.junit.Assert.assertNotNull(request42);
        org.junit.Assert.assertNotNull(errorHandler43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(provider48);
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0801");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.RestAdapter.LogLevel logLevel4 = builder3.logLevel;
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder6 = builder3.setLogLevel(logLevel5);
        java.util.concurrent.Executor executor7 = builder3.callbackExecutor;
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(executor7);
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0802");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.Server server7 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(server7);
        org.junit.Assert.assertNotNull(requestInterceptor8);
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0803");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest2();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter7();
        retrofit.client.Request request7 = serializedObjectSupporter0.deserializeObjectRequest3();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "GET" + "'", str3, "GET");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(request7);
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0804");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest2();
        java.lang.String str4 = request3.getMethod();
        retrofit.mime.TypedOutput typedOutput5 = request3.getBody();
        java.lang.String str6 = request3.getUrl();
        java.lang.String str7 = request3.getMethod();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "GET" + "'", str7, "GET");
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0805");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.client.Client.Provider provider2 = null;
        builder0.setclientProvider(provider2);
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor5 = null;
        builder4.sethttpExecutor(executor5);
        retrofit.RestAdapter.Log log7 = null;
        builder4.log = log7;
        java.util.concurrent.Executor executor9 = builder4.callbackExecutor;
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        builder4.log = log10;
        retrofit.RestAdapter.Builder builder12 = builder0.setLog(log10);
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter13.deserializeObjectConverter3();
        java.lang.String str16 = serializedObjectSupporter13.deserializeObjectString4();
        retrofit.client.Request request17 = serializedObjectSupporter13.deserializeObjectRequest6();
        retrofit.Server server18 = serializedObjectSupporter13.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder19 = builder12.setServer(server18);
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter3();
        java.lang.String str26 = serializedObjectSupporter23.deserializeObjectString4();
        retrofit.Server server27 = serializedObjectSupporter23.deserializeObjectServer1();
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        java.lang.String str32 = serializedObjectSupporter31.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor33 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request35 = serializedObjectSupporter34.deserializeObjectRequest1();
        retrofit.client.Request request36 = serializedObjectSupporter34.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter34.deserializeObjectConverter5();
        retrofit.Profiler profiler38 = null;
        retrofit.ErrorHandler errorHandler39 = null;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor41 = null;
        builder40.sethttpExecutor(executor41);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        builder40.log = log43;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor33, (retrofit.converter.Converter) gsonConverter37, profiler38, errorHandler39, log43, logLevel45);
        retrofit.RestAdapter.LogLevel logLevel47 = restAdapter46.getLogLevel();
        retrofit.converter.Converter converter48 = restAdapter46.converter;
        retrofit.RequestInterceptor requestInterceptor49 = restAdapter46.requestInterceptor;
        retrofit.converter.Converter converter50 = null;
        retrofit.Profiler profiler51 = null;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor53 = null;
        builder52.sethttpExecutor(executor53);
        retrofit.RestAdapter.Log log55 = null;
        builder52.log = log55;
        retrofit.RestAdapter.Log log57 = builder52.log;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor59 = null;
        builder58.sethttpExecutor(executor59);
        retrofit.RequestInterceptor requestInterceptor61 = null;
        builder58.requestInterceptor = requestInterceptor61;
        java.util.concurrent.Executor executor63 = null;
        builder58.httpExecutor = executor63;
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = new retrofit.SerializedObjectSupporter();
        java.lang.String str66 = serializedObjectSupporter65.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter67 = serializedObjectSupporter65.deserializeObjectConverter3();
        java.lang.String str68 = serializedObjectSupporter65.deserializeObjectString4();
        retrofit.client.Request request69 = serializedObjectSupporter65.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler70 = serializedObjectSupporter65.deserializeObjectErrorHandler1();
        builder58.errorHandler = errorHandler70;
        retrofit.RestAdapter.Builder builder72 = builder52.setErrorHandler(errorHandler70);
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider75 = builder74.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder77 = builder74.setLogLevel(logLevel76);
        retrofit.RestAdapter.LogLevel logLevel78 = builder77.logLevel;
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder80 = builder77.setLogLevel(logLevel79);
        retrofit.RestAdapter restAdapter81 = new retrofit.RestAdapter(server18, provider20, executor21, executor22, requestInterceptor49, converter50, profiler51, errorHandler70, log73, logLevel79);
        retrofit.RequestInterceptor requestInterceptor82 = restAdapter81.getrequestInterceptor();
        retrofit.client.Client.Provider provider83 = restAdapter81.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel84 = restAdapter81.getLogLevel();
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "GET" + "'", str14, "GET");
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(server18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "GET" + "'", str24, "GET");
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "http://example.com/" + "'", str26, "http://example.com/");
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Retrofit-" + "'", str32, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor33);
        org.junit.Assert.assertNotNull(request35);
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter48);
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNull(log57);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "GET" + "'", str66, "GET");
        org.junit.Assert.assertNotNull(gsonConverter67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "http://example.com/" + "'", str68, "http://example.com/");
        org.junit.Assert.assertNotNull(request69);
        org.junit.Assert.assertNotNull(errorHandler70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNull(provider75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(requestInterceptor82);
        org.junit.Assert.assertNull(provider83);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0806");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        java.lang.String str26 = restAdapter23.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        retrofit.Profiler profiler28 = restAdapter23.getprofiler();
        java.util.concurrent.Executor executor29 = restAdapter23.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter23.getLogLevel();
        retrofit.ErrorHandler errorHandler31 = restAdapter23.errorHandler;
        java.util.concurrent.Executor executor32 = restAdapter23.gethttpExecutor();
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter23.getLogLevel();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertNull(executor29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(errorHandler31);
        org.junit.Assert.assertNull(executor32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0807");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.converter;
        java.lang.String str26 = restAdapter23.getIDLE_THREAD_NAME();
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = builder27.serializedObjectSupporter;
        retrofit.Profiler profiler29 = builder27.profiler;
        retrofit.RestAdapter.LogLevel logLevel30 = builder27.logLevel;
        restAdapter23.logLevel = logLevel30;
        java.util.concurrent.Executor executor32 = restAdapter23.getcallbackExecutor();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
        org.junit.Assert.assertNull(serializedObjectSupporter28);
        org.junit.Assert.assertNull(profiler29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor32);
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0808");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = null;
        builder0.setcallbackExecutor(executor3);
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.FULL;
        builder0.logLevel = logLevel5;
        retrofit.client.Client.Provider provider7 = builder0.getclientProvider();
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = builder0.serializedObjectSupporter;
        java.util.concurrent.Executor executor9 = builder0.callbackExecutor;
        retrofit.client.Client.Provider provider10 = null;
        builder0.setclientProvider(provider10);
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor13 = null;
        builder12.sethttpExecutor(executor13);
        retrofit.RestAdapter.Log log15 = null;
        builder12.log = log15;
        java.util.concurrent.Executor executor17 = builder12.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = builder12.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler19 = builder12.errorHandler;
        builder12.ensureSaneDefaults();
        retrofit.RestAdapter.LogLevel logLevel21 = builder12.logLevel;
        retrofit.client.Client.Provider provider22 = builder12.getclientProvider();
        builder0.setclientProvider(provider22);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNull(executor17);
        org.junit.Assert.assertNull(serializedObjectSupporter18);
        org.junit.Assert.assertNull(errorHandler19);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(provider22);
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0809");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter3();
        builder0.converter = gsonConverter5;
        retrofit.client.Client.Provider provider7 = null;
        builder0.clientProvider = provider7;
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter3();
        java.lang.String str12 = serializedObjectSupporter9.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter9.deserializeObjectConverter6();
        builder0.converter = gsonConverter13;
        java.util.concurrent.Executor executor15 = builder0.gethttpExecutor();
        retrofit.client.Client.Provider provider16 = builder0.getclientProvider();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "GET" + "'", str10, "GET");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(provider16);
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0810");
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = builder2.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = builder2.serializedObjectSupporter;
        java.util.concurrent.Executor executor5 = null;
        builder2.httpExecutor = executor5;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request8 = serializedObjectSupporter7.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter7.deserializeObjectConverter2();
        builder2.serializedObjectSupporter = serializedObjectSupporter7;
        retrofit.client.Request request11 = serializedObjectSupporter7.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter7.deserializeObjectConverter5();
        retrofit.client.Request request13 = serializedObjectSupporter7.deserializeObjectRequest1();
        java.lang.String str14 = request13.getUrl();
        java.util.List<retrofit.client.Header> headerList15 = request13.headers;
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request19 = serializedObjectSupporter18.deserializeObjectRequest1();
        retrofit.client.Request request20 = serializedObjectSupporter18.deserializeObjectRequest5();
        java.util.List<retrofit.client.Header> headerList21 = request20.getHeaders();
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = builder22.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = builder22.serializedObjectSupporter;
        java.util.concurrent.Executor executor25 = null;
        builder22.httpExecutor = executor25;
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request28 = serializedObjectSupporter27.deserializeObjectRequest1();
        retrofit.Server server29 = serializedObjectSupporter27.deserializeObjectServer1();
        java.lang.String str30 = serializedObjectSupporter27.deserializeObjectString3();
        builder22.serializedObjectSupporter = serializedObjectSupporter27;
        retrofit.mime.TypedString typedString32 = serializedObjectSupporter27.deserializeObjectTypedOutput2();
        retrofit.client.Request request33 = new retrofit.client.Request("hi!", "Retrofit-Idle", headerList21, (retrofit.mime.TypedOutput) typedString32);
        java.lang.String str34 = request33.url;
        retrofit.mime.TypedOutput typedOutput35 = request33.getBody();
        retrofit.client.Request request36 = new retrofit.client.Request("Retrofit-", "GET", headerList15, typedOutput35);
        org.junit.Assert.assertNull(serializedObjectSupporter3);
        org.junit.Assert.assertNull(serializedObjectSupporter4);
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "http://example.com/" + "'", str14, "http://example.com/");
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(request19);
        org.junit.Assert.assertNotNull(request20);
        org.junit.Assert.assertNotNull(headerList21);
        org.junit.Assert.assertNull(serializedObjectSupporter23);
        org.junit.Assert.assertNull(serializedObjectSupporter24);
        org.junit.Assert.assertNotNull(request28);
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "GET" + "'", str30, "GET");
        org.junit.Assert.assertNotNull(typedString32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Retrofit-Idle" + "'", str34, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(typedOutput35);
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0811");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest2();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest7();
        java.lang.String str5 = request4.url;
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0812");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        retrofit.Server server27 = restAdapter23.getserver();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNotNull(server27);
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0813");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        java.lang.String str26 = serializedObjectSupporter25.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter25.deserializeObjectConverter3();
        java.lang.String str28 = serializedObjectSupporter25.deserializeObjectString4();
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter25;
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter23.getLogLevel();
        java.lang.String str31 = restAdapter23.getIDLE_THREAD_NAME();
        retrofit.client.Response response33 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response35 = restAdapter23.logAndReplaceResponse("", response33, (long) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "GET" + "'", str26, "GET");
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Retrofit-Idle" + "'", str31, "Retrofit-Idle");
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0814");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = null;
        builder0.setcallbackExecutor(executor3);
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.FULL;
        builder0.logLevel = logLevel5;
        retrofit.client.Client.Provider provider7 = builder0.getclientProvider();
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request9 = serializedObjectSupporter8.deserializeObjectRequest1();
        retrofit.client.Request request10 = serializedObjectSupporter8.deserializeObjectRequest5();
        java.lang.String str11 = serializedObjectSupporter8.deserializeObjectString5();
        retrofit.ErrorHandler errorHandler12 = serializedObjectSupporter8.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder13 = builder0.setErrorHandler(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(request9);
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "POST" + "'", str11, "POST");
        org.junit.Assert.assertNotNull(errorHandler12);
        org.junit.Assert.assertNotNull(builder13);
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0815");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        retrofit.RestAdapter.Log log5 = builder0.log;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider7 = builder6.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder9 = builder6.setLogLevel(logLevel8);
        retrofit.converter.Converter converter10 = builder9.converter;
        retrofit.Profiler profiler11 = builder9.profiler;
        java.util.concurrent.Executor executor12 = builder9.callbackExecutor;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor14 = null;
        builder13.setcallbackExecutor(executor14);
        java.util.concurrent.Executor executor16 = null;
        builder13.setcallbackExecutor(executor16);
        retrofit.client.Client.Provider provider18 = null;
        builder13.clientProvider = provider18;
        retrofit.Profiler profiler20 = null;
        builder13.profiler = profiler20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider23 = builder22.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder25 = builder22.setLogLevel(logLevel24);
        retrofit.converter.Converter converter26 = builder25.converter;
        builder25.ensureSaneDefaults();
        retrofit.client.Client.Provider provider28 = builder25.clientProvider;
        retrofit.RestAdapter.Builder builder29 = builder13.setClient(provider28);
        builder9.setclientProvider(provider28);
        builder0.clientProvider = provider28;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor33 = null;
        builder32.sethttpExecutor(executor33);
        retrofit.RestAdapter.Log log35 = null;
        builder32.log = log35;
        retrofit.RestAdapter.Log log37 = builder32.log;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor39 = null;
        builder38.sethttpExecutor(executor39);
        retrofit.RequestInterceptor requestInterceptor41 = null;
        builder38.requestInterceptor = requestInterceptor41;
        java.util.concurrent.Executor executor43 = null;
        builder38.httpExecutor = executor43;
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = new retrofit.SerializedObjectSupporter();
        java.lang.String str46 = serializedObjectSupporter45.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter47 = serializedObjectSupporter45.deserializeObjectConverter3();
        java.lang.String str48 = serializedObjectSupporter45.deserializeObjectString4();
        retrofit.client.Request request49 = serializedObjectSupporter45.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler50 = serializedObjectSupporter45.deserializeObjectErrorHandler1();
        builder38.errorHandler = errorHandler50;
        retrofit.RestAdapter.Builder builder52 = builder32.setErrorHandler(errorHandler50);
        retrofit.RestAdapter.Builder builder53 = builder0.setErrorHandler(errorHandler50);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor55 = null;
        builder54.sethttpExecutor(executor55);
        retrofit.RequestInterceptor requestInterceptor57 = null;
        builder54.requestInterceptor = requestInterceptor57;
        java.util.concurrent.Executor executor59 = null;
        builder54.httpExecutor = executor59;
        java.util.concurrent.Executor executor61 = null;
        builder54.setcallbackExecutor(executor61);
        retrofit.client.Client.Provider provider63 = null;
        builder54.setclientProvider(provider63);
        retrofit.client.Client.Provider provider65 = null;
        builder54.setclientProvider(provider65);
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor68 = null;
        builder67.setcallbackExecutor(executor68);
        java.util.concurrent.Executor executor70 = null;
        builder67.setcallbackExecutor(executor70);
        builder67.ensureSaneDefaults();
        java.util.concurrent.Executor executor73 = builder67.callbackExecutor;
        builder54.httpExecutor = executor73;
        builder0.httpExecutor = executor73;
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(converter10);
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(executor12);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(converter26);
        org.junit.Assert.assertNotNull(provider28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNull(log37);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "GET" + "'", str46, "GET");
        org.junit.Assert.assertNotNull(gsonConverter47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "http://example.com/" + "'", str48, "http://example.com/");
        org.junit.Assert.assertNotNull(request49);
        org.junit.Assert.assertNotNull(errorHandler50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(executor73);
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0816");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.ErrorHandler errorHandler3 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter4();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(errorHandler3);
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(gsonConverter6);
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0817");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        java.util.concurrent.Executor executor5 = builder0.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = builder0.serializedObjectSupporter;
        retrofit.client.Client.Provider provider8 = builder0.getclientProvider();
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder0.setLog(log9);
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        java.lang.String str14 = serializedObjectSupporter11.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter11.deserializeObjectConverter7();
        retrofit.Server server16 = serializedObjectSupporter11.deserializeObjectServer1();
        retrofit.client.Request request17 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler18 = serializedObjectSupporter11.deserializeObjectErrorHandler1();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter11.deserializeObjectRequestInterceptor1();
        builder0.requestInterceptor = requestInterceptor19;
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(serializedObjectSupporter7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "POST" + "'", str14, "POST");
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(errorHandler18);
        org.junit.Assert.assertNotNull(requestInterceptor19);
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0818");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.converter.Converter converter3 = builder0.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = builder0.serializedObjectSupporter;
        retrofit.Profiler profiler5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder6 = builder0.setProfiler(profiler5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(serializedObjectSupporter4);
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0819");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = null;
        builder0.setcallbackExecutor(executor3);
        retrofit.client.Client.Provider provider5 = null;
        builder0.clientProvider = provider5;
        retrofit.Profiler profiler7 = null;
        builder0.profiler = profiler7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider10 = builder9.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder12 = builder9.setLogLevel(logLevel11);
        retrofit.converter.Converter converter13 = builder12.converter;
        builder12.ensureSaneDefaults();
        retrofit.client.Client.Provider provider15 = builder12.clientProvider;
        retrofit.RestAdapter.Builder builder16 = builder0.setClient(provider15);
        java.util.concurrent.Executor executor17 = builder0.getcallbackExecutor();
        retrofit.converter.Converter converter18 = builder0.converter;
        retrofit.Profiler profiler19 = builder0.profiler;
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNotNull(provider15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNull(executor17);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(profiler19);
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0820");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        java.util.concurrent.Executor executor5 = null;
        builder0.httpExecutor = executor5;
        java.util.concurrent.Executor executor7 = null;
        builder0.setcallbackExecutor(executor7);
        retrofit.client.Client.Provider provider9 = null;
        builder0.setclientProvider(provider9);
        retrofit.client.Client client11 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder12 = builder0.setClient(client11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0821");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        java.util.concurrent.Executor executor26 = restAdapter23.getcallbackExecutor();
        retrofit.converter.Converter converter27 = restAdapter23.getconverter();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNotNull(converter27);
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0822");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        retrofit.Profiler profiler5 = null;
        builder0.profiler = profiler5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor8 = null;
        builder7.sethttpExecutor(executor8);
        retrofit.RequestInterceptor requestInterceptor10 = null;
        builder7.requestInterceptor = requestInterceptor10;
        java.util.concurrent.Executor executor12 = null;
        builder7.httpExecutor = executor12;
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter16 = serializedObjectSupporter14.deserializeObjectConverter3();
        java.lang.String str17 = serializedObjectSupporter14.deserializeObjectString4();
        retrofit.client.Request request18 = serializedObjectSupporter14.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler19 = serializedObjectSupporter14.deserializeObjectErrorHandler1();
        builder7.errorHandler = errorHandler19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor22 = null;
        builder21.sethttpExecutor(executor22);
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        builder21.log = log24;
        log24.log("");
        log24.log("POST");
        retrofit.RestAdapter.Builder builder30 = builder7.setLog(log24);
        builder0.log = log24;
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "GET" + "'", str15, "GET");
        org.junit.Assert.assertNotNull(gsonConverter16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "http://example.com/" + "'", str17, "http://example.com/");
        org.junit.Assert.assertNotNull(request18);
        org.junit.Assert.assertNotNull(errorHandler19);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder30);
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0823");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider6 = null;
        java.util.concurrent.Executor executor7 = null;
        java.util.concurrent.Executor executor8 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter3();
        java.lang.String str12 = serializedObjectSupporter9.deserializeObjectString4();
        retrofit.Server server13 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter17.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request21 = serializedObjectSupporter20.deserializeObjectRequest1();
        retrofit.client.Request request22 = serializedObjectSupporter20.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler24 = null;
        retrofit.ErrorHandler errorHandler25 = null;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor27 = null;
        builder26.sethttpExecutor(executor27);
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        builder26.log = log29;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor19, (retrofit.converter.Converter) gsonConverter23, profiler24, errorHandler25, log29, logLevel31);
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter32.getLogLevel();
        retrofit.converter.Converter converter34 = restAdapter32.converter;
        retrofit.RequestInterceptor requestInterceptor35 = restAdapter32.requestInterceptor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        java.lang.String str37 = serializedObjectSupporter36.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter3();
        java.lang.String str39 = serializedObjectSupporter36.deserializeObjectString4();
        retrofit.Server server40 = serializedObjectSupporter36.deserializeObjectServer1();
        retrofit.client.Client.Provider provider41 = null;
        java.util.concurrent.Executor executor42 = null;
        java.util.concurrent.Executor executor43 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = new retrofit.SerializedObjectSupporter();
        java.lang.String str45 = serializedObjectSupporter44.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor46 = serializedObjectSupporter44.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request48 = serializedObjectSupporter47.deserializeObjectRequest1();
        retrofit.client.Request request49 = serializedObjectSupporter47.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter50 = serializedObjectSupporter47.deserializeObjectConverter5();
        retrofit.Profiler profiler51 = null;
        retrofit.ErrorHandler errorHandler52 = null;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor54 = null;
        builder53.sethttpExecutor(executor54);
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        builder53.log = log56;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter59 = new retrofit.RestAdapter(server40, provider41, executor42, executor43, requestInterceptor46, (retrofit.converter.Converter) gsonConverter50, profiler51, errorHandler52, log56, logLevel58);
        java.util.concurrent.Executor executor60 = restAdapter59.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter59.logLevel = logLevel61;
        retrofit.Profiler profiler63 = restAdapter59.profiler;
        retrofit.client.Client.Provider provider64 = restAdapter59.clientProvider;
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = restAdapter59.serializedObjectSupporter;
        retrofit.converter.Converter converter66 = restAdapter59.converter;
        retrofit.Profiler profiler67 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter68 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request69 = serializedObjectSupporter68.deserializeObjectRequest8();
        retrofit.converter.GsonConverter gsonConverter70 = serializedObjectSupporter68.deserializeObjectConverter2();
        retrofit.ErrorHandler errorHandler71 = serializedObjectSupporter68.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor73 = null;
        builder72.sethttpExecutor(executor73);
        retrofit.RequestInterceptor requestInterceptor75 = null;
        builder72.requestInterceptor = requestInterceptor75;
        java.util.concurrent.Executor executor77 = null;
        builder72.httpExecutor = executor77;
        java.util.concurrent.Executor executor79 = null;
        builder72.setcallbackExecutor(executor79);
        retrofit.client.Client.Provider provider81 = null;
        builder72.setclientProvider(provider81);
        retrofit.SerializedObjectSupporter serializedObjectSupporter83 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request84 = serializedObjectSupporter83.deserializeObjectRequest8();
        retrofit.converter.GsonConverter gsonConverter85 = serializedObjectSupporter83.deserializeObjectConverter2();
        retrofit.ErrorHandler errorHandler86 = serializedObjectSupporter83.deserializeObjectErrorHandler1();
        builder72.errorHandler = errorHandler86;
        retrofit.RestAdapter.Builder builder88 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor89 = null;
        builder88.sethttpExecutor(executor89);
        retrofit.RestAdapter.Log log91 = retrofit.RestAdapter.Log.NONE;
        builder88.log = log91;
        retrofit.RestAdapter.Builder builder93 = builder72.setLog(log91);
        retrofit.RestAdapter.LogLevel logLevel94 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter restAdapter95 = new retrofit.RestAdapter(server5, provider6, executor7, executor8, requestInterceptor35, converter66, profiler67, errorHandler71, log91, logLevel94);
        java.lang.Class<?> wildcardClass96 = restAdapter95.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "GET" + "'", str10, "GET");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Retrofit-" + "'", str18, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(request22);
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter34);
        org.junit.Assert.assertNotNull(requestInterceptor35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "GET" + "'", str37, "GET");
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "http://example.com/" + "'", str39, "http://example.com/");
        org.junit.Assert.assertNotNull(server40);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Retrofit-" + "'", str45, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor46);
        org.junit.Assert.assertNotNull(request48);
        org.junit.Assert.assertNotNull(request49);
        org.junit.Assert.assertNotNull(gsonConverter50);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(profiler63);
        org.junit.Assert.assertNull(provider64);
        org.junit.Assert.assertNull(serializedObjectSupporter65);
        org.junit.Assert.assertNotNull(converter66);
        org.junit.Assert.assertNotNull(request69);
        org.junit.Assert.assertNotNull(gsonConverter70);
        org.junit.Assert.assertNotNull(errorHandler71);
        org.junit.Assert.assertNotNull(request84);
        org.junit.Assert.assertNotNull(gsonConverter85);
        org.junit.Assert.assertNotNull(errorHandler86);
        org.junit.Assert.assertNotNull(log91);
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertTrue("'" + logLevel94 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel94.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0824");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.getconverter();
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean27 = logLevel26.log();
        boolean boolean28 = logLevel26.log();
        restAdapter23.setLogLevel(logLevel26);
        retrofit.Server server30 = restAdapter23.getserver();
        retrofit.RequestInterceptor requestInterceptor31 = restAdapter23.getrequestInterceptor();
        java.util.concurrent.Executor executor32 = restAdapter23.gethttpExecutor();
        retrofit.RestAdapter.RestHandler restHandler33 = restAdapter23.new RestHandler();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(server30);
        org.junit.Assert.assertNotNull(requestInterceptor31);
        org.junit.Assert.assertNull(executor32);
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0825");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = null;
        builder0.setcallbackExecutor(executor3);
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.FULL;
        builder0.logLevel = logLevel5;
        retrofit.client.Client.Provider provider7 = builder0.getclientProvider();
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter8.deserializeObjectConverter3();
        java.lang.String str11 = serializedObjectSupporter8.deserializeObjectString4();
        retrofit.Server server12 = serializedObjectSupporter8.deserializeObjectServer1();
        retrofit.client.Client.Provider provider13 = null;
        java.util.concurrent.Executor executor14 = null;
        java.util.concurrent.Executor executor15 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor18 = serializedObjectSupporter16.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request20 = serializedObjectSupporter19.deserializeObjectRequest1();
        retrofit.client.Request request21 = serializedObjectSupporter19.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter19.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.ErrorHandler errorHandler24 = null;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor26 = null;
        builder25.sethttpExecutor(executor26);
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        builder25.log = log28;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter(server12, provider13, executor14, executor15, requestInterceptor18, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler24, log28, logLevel30);
        builder0.requestInterceptor = requestInterceptor18;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = builder33.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = builder33.serializedObjectSupporter;
        retrofit.client.Client.Provider provider36 = null;
        builder33.clientProvider = provider36;
        java.util.concurrent.Executor executor38 = null;
        builder33.callbackExecutor = executor38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor41 = null;
        builder40.setcallbackExecutor(executor41);
        java.util.concurrent.Executor executor43 = null;
        builder40.setcallbackExecutor(executor43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.FULL;
        builder40.logLevel = logLevel45;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor48 = null;
        builder47.setcallbackExecutor(executor48);
        java.util.concurrent.Executor executor50 = null;
        builder47.setcallbackExecutor(executor50);
        builder47.ensureSaneDefaults();
        java.util.concurrent.Executor executor53 = builder47.callbackExecutor;
        builder40.sethttpExecutor(executor53);
        builder33.httpExecutor = executor53;
        retrofit.RestAdapter.LogLevel logLevel56 = builder33.logLevel;
        builder0.logLevel = logLevel56;
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "GET" + "'", str9, "GET");
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "http://example.com/" + "'", str11, "http://example.com/");
        org.junit.Assert.assertNotNull(server12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Retrofit-" + "'", str17, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor18);
        org.junit.Assert.assertNotNull(request20);
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(serializedObjectSupporter34);
        org.junit.Assert.assertNull(serializedObjectSupporter35);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(executor53);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0826");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.client.Client.Provider provider2 = null;
        builder0.setclientProvider(provider2);
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor5 = null;
        builder4.sethttpExecutor(executor5);
        retrofit.RestAdapter.Log log7 = null;
        builder4.log = log7;
        java.util.concurrent.Executor executor9 = builder4.callbackExecutor;
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        builder4.log = log10;
        retrofit.RestAdapter.Builder builder12 = builder0.setLog(log10);
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter13.deserializeObjectConverter3();
        java.lang.String str16 = serializedObjectSupporter13.deserializeObjectString4();
        retrofit.client.Request request17 = serializedObjectSupporter13.deserializeObjectRequest6();
        retrofit.Server server18 = serializedObjectSupporter13.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder19 = builder12.setServer(server18);
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest1();
        retrofit.client.Request request25 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.RequestInterceptor requestInterceptor26 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request28 = serializedObjectSupporter27.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter27.deserializeObjectConverter2();
        retrofit.Profiler profiler30 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        java.lang.String str32 = serializedObjectSupporter31.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter3();
        java.lang.String str34 = serializedObjectSupporter31.deserializeObjectString4();
        retrofit.client.Request request35 = serializedObjectSupporter31.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler36 = serializedObjectSupporter31.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = builder37.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = builder37.serializedObjectSupporter;
        retrofit.client.Client.Provider provider40 = null;
        builder37.clientProvider = provider40;
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        builder37.log = log42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor45 = null;
        builder44.setcallbackExecutor(executor45);
        java.util.concurrent.Executor executor47 = null;
        builder44.setcallbackExecutor(executor47);
        retrofit.client.Client.Provider provider49 = null;
        builder44.clientProvider = provider49;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = builder51.serializedObjectSupporter;
        retrofit.Profiler profiler53 = builder51.profiler;
        retrofit.RestAdapter.LogLevel logLevel54 = builder51.logLevel;
        builder44.logLevel = logLevel54;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter(server18, provider20, executor21, executor22, requestInterceptor26, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler36, log42, logLevel54);
        retrofit.RequestInterceptor requestInterceptor57 = restAdapter56.requestInterceptor;
        retrofit.Server server58 = restAdapter56.getserver();
        java.util.concurrent.Executor executor59 = restAdapter56.callbackExecutor;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "GET" + "'", str14, "GET");
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(server18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(request25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNotNull(request28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "GET" + "'", str32, "GET");
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "http://example.com/" + "'", str34, "http://example.com/");
        org.junit.Assert.assertNotNull(request35);
        org.junit.Assert.assertNotNull(errorHandler36);
        org.junit.Assert.assertNull(serializedObjectSupporter38);
        org.junit.Assert.assertNull(serializedObjectSupporter39);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNull(serializedObjectSupporter52);
        org.junit.Assert.assertNull(profiler53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertNotNull(server58);
        org.junit.Assert.assertNull(executor59);
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0827");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor3 = null;
        builder2.sethttpExecutor(executor3);
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter5.deserializeObjectConverter3();
        builder2.converter = gsonConverter7;
        retrofit.client.Client.Provider provider9 = null;
        builder2.clientProvider = provider9;
        retrofit.client.Client.Provider provider11 = null;
        builder2.setclientProvider(provider11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = builder13.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = builder13.serializedObjectSupporter;
        java.util.concurrent.Executor executor16 = null;
        builder13.httpExecutor = executor16;
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request19 = serializedObjectSupporter18.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter18.deserializeObjectConverter2();
        builder13.serializedObjectSupporter = serializedObjectSupporter18;
        retrofit.client.Request request22 = serializedObjectSupporter18.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter18.deserializeObjectConverter5();
        retrofit.Server server24 = serializedObjectSupporter18.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder25 = builder2.setServer(server24);
        retrofit.client.Client.Provider provider26 = builder2.clientProvider;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler29 = builder27.errorHandler;
        java.util.concurrent.Executor executor30 = builder27.getcallbackExecutor();
        builder2.sethttpExecutor(executor30);
        builder0.callbackExecutor = executor30;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = builder33.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = builder33.serializedObjectSupporter;
        java.util.concurrent.Executor executor36 = null;
        builder33.httpExecutor = executor36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor39 = null;
        builder38.setcallbackExecutor(executor39);
        java.util.concurrent.Executor executor41 = builder38.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel42 = builder38.logLevel;
        retrofit.Profiler profiler43 = builder38.profiler;
        retrofit.RestAdapter.Builder builder45 = builder38.setServer("hi!");
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request47 = serializedObjectSupporter46.deserializeObjectRequest1();
        retrofit.client.Request request48 = serializedObjectSupporter46.deserializeObjectRequest5();
        java.lang.String str49 = serializedObjectSupporter46.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter50 = serializedObjectSupporter46.deserializeObjectConverter7();
        retrofit.Server server51 = serializedObjectSupporter46.deserializeObjectServer1();
        retrofit.client.Request request52 = serializedObjectSupporter46.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler53 = serializedObjectSupporter46.deserializeObjectErrorHandler1();
        retrofit.RequestInterceptor requestInterceptor54 = serializedObjectSupporter46.deserializeObjectRequestInterceptor1();
        builder38.requestInterceptor = requestInterceptor54;
        builder33.requestInterceptor = requestInterceptor54;
        retrofit.RestAdapter.Builder builder57 = builder0.setRequestInterceptor(requestInterceptor54);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter58 = builder0.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "GET" + "'", str6, "GET");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNull(serializedObjectSupporter14);
        org.junit.Assert.assertNull(serializedObjectSupporter15);
        org.junit.Assert.assertNotNull(request19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertNotNull(request22);
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertNotNull(server24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertNotNull(errorHandler29);
        org.junit.Assert.assertNotNull(executor30);
        org.junit.Assert.assertNull(serializedObjectSupporter34);
        org.junit.Assert.assertNull(serializedObjectSupporter35);
        org.junit.Assert.assertNull(executor41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(request47);
        org.junit.Assert.assertNotNull(request48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "POST" + "'", str49, "POST");
        org.junit.Assert.assertNotNull(gsonConverter50);
        org.junit.Assert.assertNotNull(server51);
        org.junit.Assert.assertNotNull(request52);
        org.junit.Assert.assertNotNull(errorHandler53);
        org.junit.Assert.assertNotNull(requestInterceptor54);
        org.junit.Assert.assertNotNull(builder57);
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0828");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        java.util.concurrent.Executor executor5 = builder0.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = builder8.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = builder8.serializedObjectSupporter;
        java.util.concurrent.Executor executor11 = null;
        builder8.httpExecutor = executor11;
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request14 = serializedObjectSupporter13.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter13.deserializeObjectConverter2();
        builder8.serializedObjectSupporter = serializedObjectSupporter13;
        retrofit.client.Request request17 = serializedObjectSupporter13.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter13.deserializeObjectConverter5();
        retrofit.Server server19 = serializedObjectSupporter13.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter13.deserializeObjectConverter2();
        builder0.converter = gsonConverter20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider23 = builder22.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder25 = builder22.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = builder26.serializedObjectSupporter;
        retrofit.client.Client.Provider provider28 = null;
        builder26.setclientProvider(provider28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor31 = null;
        builder30.sethttpExecutor(executor31);
        retrofit.RestAdapter.Log log33 = null;
        builder30.log = log33;
        java.util.concurrent.Executor executor35 = builder30.callbackExecutor;
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        builder30.log = log36;
        retrofit.RestAdapter.Builder builder38 = builder26.setLog(log36);
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        java.lang.String str40 = serializedObjectSupporter39.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter39.deserializeObjectConverter3();
        java.lang.String str42 = serializedObjectSupporter39.deserializeObjectString4();
        retrofit.client.Request request43 = serializedObjectSupporter39.deserializeObjectRequest6();
        retrofit.Server server44 = serializedObjectSupporter39.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder45 = builder38.setServer(server44);
        retrofit.RestAdapter.Builder builder46 = builder22.setServer(server44);
        retrofit.RestAdapter.Builder builder47 = builder0.setServer(server44);
        retrofit.client.Client.Provider provider48 = builder47.clientProvider;
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(serializedObjectSupporter7);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertNull(serializedObjectSupporter10);
        org.junit.Assert.assertNotNull(request14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(server19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(serializedObjectSupporter27);
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "GET" + "'", str40, "GET");
        org.junit.Assert.assertNotNull(gsonConverter41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "http://example.com/" + "'", str42, "http://example.com/");
        org.junit.Assert.assertNotNull(request43);
        org.junit.Assert.assertNotNull(server44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(provider48);
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0829");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter3();
        builder0.converter = gsonConverter5;
        retrofit.client.Client.Provider provider7 = null;
        builder0.clientProvider = provider7;
        retrofit.client.Client.Provider provider9 = null;
        builder0.setclientProvider(provider9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = builder11.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = builder11.serializedObjectSupporter;
        java.util.concurrent.Executor executor14 = null;
        builder11.httpExecutor = executor14;
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request17 = serializedObjectSupporter16.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter16.deserializeObjectConverter2();
        builder11.serializedObjectSupporter = serializedObjectSupporter16;
        retrofit.client.Request request20 = serializedObjectSupporter16.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter16.deserializeObjectConverter5();
        retrofit.Server server22 = serializedObjectSupporter16.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder23 = builder0.setServer(server22);
        retrofit.client.Client.Provider provider24 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        builder25.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler27 = builder25.errorHandler;
        java.util.concurrent.Executor executor28 = builder25.getcallbackExecutor();
        builder0.sethttpExecutor(executor28);
        retrofit.RestAdapter.LogLevel logLevel30 = null;
        builder0.logLevel = logLevel30;
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNull(serializedObjectSupporter12);
        org.junit.Assert.assertNull(serializedObjectSupporter13);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(request20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNotNull(server22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNotNull(errorHandler27);
        org.junit.Assert.assertNotNull(executor28);
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0830");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        retrofit.RestAdapter.Log log5 = builder0.log;
        retrofit.Profiler profiler6 = builder0.profiler;
        retrofit.RestAdapter.Builder builder8 = builder0.setServer("http://example.com/");
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request10 = serializedObjectSupporter9.deserializeObjectRequest1();
        retrofit.client.Request request11 = serializedObjectSupporter9.deserializeObjectRequest5();
        java.lang.String str12 = serializedObjectSupporter9.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter9.deserializeObjectConverter7();
        builder0.converter = gsonConverter13;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter3();
        java.lang.String str18 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.Server server19 = serializedObjectSupporter15.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter15.deserializeObjectConverter6();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter15.deserializeObjectConverter6();
        retrofit.client.Request request22 = serializedObjectSupporter15.deserializeObjectRequest7();
        builder0.serializedObjectSupporter = serializedObjectSupporter15;
        retrofit.client.Request request24 = serializedObjectSupporter15.deserializeObjectRequest1();
        java.lang.String str25 = request24.method;
        java.util.List<retrofit.client.Header> headerList26 = request24.getHeaders();
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNull(profiler6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "POST" + "'", str12, "POST");
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "GET" + "'", str16, "GET");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(server19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNotNull(request22);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "GET" + "'", str25, "GET");
        org.junit.Assert.assertNotNull(headerList26);
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0831");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter3();
        builder0.converter = gsonConverter5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor8 = null;
        builder7.sethttpExecutor(executor8);
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = new retrofit.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter10.deserializeObjectConverter3();
        builder7.converter = gsonConverter12;
        retrofit.client.Client.Provider provider14 = null;
        builder7.clientProvider = provider14;
        retrofit.client.Client.Provider provider16 = null;
        builder7.setclientProvider(provider16);
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = builder18.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = builder18.serializedObjectSupporter;
        java.util.concurrent.Executor executor21 = null;
        builder18.httpExecutor = executor21;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter2();
        builder18.serializedObjectSupporter = serializedObjectSupporter23;
        retrofit.client.Request request27 = serializedObjectSupporter23.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.Server server29 = serializedObjectSupporter23.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder30 = builder7.setServer(server29);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor32 = null;
        builder31.sethttpExecutor(executor32);
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = new retrofit.SerializedObjectSupporter();
        java.lang.String str35 = serializedObjectSupporter34.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter34.deserializeObjectConverter3();
        builder31.converter = gsonConverter36;
        retrofit.client.Client.Provider provider38 = null;
        builder31.clientProvider = provider38;
        retrofit.RestAdapter.LogLevel logLevel40 = builder31.logLevel;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor42 = null;
        builder41.sethttpExecutor(executor42);
        retrofit.RequestInterceptor requestInterceptor44 = null;
        builder41.requestInterceptor = requestInterceptor44;
        retrofit.converter.Converter converter46 = builder41.converter;
        java.util.concurrent.Executor executor47 = null;
        builder41.httpExecutor = executor47;
        retrofit.RestAdapter.LogLevel logLevel49 = builder41.logLevel;
        builder31.logLevel = logLevel49;
        java.util.concurrent.Executor executor51 = builder31.callbackExecutor;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider53 = builder52.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder55 = builder52.setLogLevel(logLevel54);
        retrofit.converter.Converter converter56 = builder55.converter;
        builder55.ensureSaneDefaults();
        retrofit.client.Client.Provider provider58 = builder55.clientProvider;
        builder31.setclientProvider(provider58);
        builder7.setclientProvider(provider58);
        builder0.clientProvider = provider58;
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "GET" + "'", str11, "GET");
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter19);
        org.junit.Assert.assertNull(serializedObjectSupporter20);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(request27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "GET" + "'", str35, "GET");
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter46);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor51);
        org.junit.Assert.assertNull(provider53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNull(converter56);
        org.junit.Assert.assertNotNull(provider58);
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0832");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider6 = null;
        java.util.concurrent.Executor executor7 = null;
        java.util.concurrent.Executor executor8 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor11 = serializedObjectSupporter9.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor13 = null;
        builder12.sethttpExecutor(executor13);
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter3();
        builder12.converter = gsonConverter17;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = new retrofit.SerializedObjectSupporter();
        java.lang.String str22 = serializedObjectSupporter21.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter21.deserializeObjectConverter3();
        java.lang.String str24 = serializedObjectSupporter21.deserializeObjectString4();
        retrofit.Server server25 = serializedObjectSupporter21.deserializeObjectServer1();
        retrofit.client.Client.Provider provider26 = null;
        java.util.concurrent.Executor executor27 = null;
        java.util.concurrent.Executor executor28 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        java.lang.String str30 = serializedObjectSupporter29.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor31 = serializedObjectSupporter29.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request33 = serializedObjectSupporter32.deserializeObjectRequest1();
        retrofit.client.Request request34 = serializedObjectSupporter32.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter35 = serializedObjectSupporter32.deserializeObjectConverter5();
        retrofit.Profiler profiler36 = null;
        retrofit.ErrorHandler errorHandler37 = null;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor39 = null;
        builder38.sethttpExecutor(executor39);
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        builder38.log = log41;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter(server25, provider26, executor27, executor28, requestInterceptor31, (retrofit.converter.Converter) gsonConverter35, profiler36, errorHandler37, log41, logLevel43);
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = new retrofit.SerializedObjectSupporter();
        java.lang.String str46 = serializedObjectSupporter45.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter47 = serializedObjectSupporter45.deserializeObjectConverter3();
        java.lang.String str48 = serializedObjectSupporter45.deserializeObjectString4();
        retrofit.Server server49 = serializedObjectSupporter45.deserializeObjectServer1();
        retrofit.client.Client.Provider provider50 = null;
        java.util.concurrent.Executor executor51 = null;
        java.util.concurrent.Executor executor52 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter53 = new retrofit.SerializedObjectSupporter();
        java.lang.String str54 = serializedObjectSupporter53.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor55 = serializedObjectSupporter53.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request57 = serializedObjectSupporter56.deserializeObjectRequest1();
        retrofit.client.Request request58 = serializedObjectSupporter56.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter59 = serializedObjectSupporter56.deserializeObjectConverter5();
        retrofit.Profiler profiler60 = null;
        retrofit.ErrorHandler errorHandler61 = null;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor63 = null;
        builder62.sethttpExecutor(executor63);
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        builder62.log = log65;
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter(server49, provider50, executor51, executor52, requestInterceptor55, (retrofit.converter.Converter) gsonConverter59, profiler60, errorHandler61, log65, logLevel67);
        java.util.concurrent.Executor executor69 = restAdapter68.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor70 = restAdapter68.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor71 = restAdapter68.requestInterceptor;
        java.lang.String str72 = restAdapter68.getTHREAD_PREFIX();
        retrofit.SerializedObjectSupporter serializedObjectSupporter73 = restAdapter68.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel74 = restAdapter68.logLevel;
        retrofit.RestAdapter restAdapter75 = new retrofit.RestAdapter(server5, provider6, executor7, executor8, requestInterceptor11, (retrofit.converter.Converter) gsonConverter17, profiler19, errorHandler20, log41, logLevel74);
        retrofit.RestAdapter.LogLevel logLevel76 = restAdapter75.logLevel;
        java.lang.String str77 = restAdapter75.getIDLE_THREAD_NAME();
        java.lang.String str78 = restAdapter75.getTHREAD_PREFIX();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Retrofit-" + "'", str10, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "GET" + "'", str16, "GET");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "GET" + "'", str22, "GET");
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Retrofit-" + "'", str30, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor31);
        org.junit.Assert.assertNotNull(request33);
        org.junit.Assert.assertNotNull(request34);
        org.junit.Assert.assertNotNull(gsonConverter35);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "GET" + "'", str46, "GET");
        org.junit.Assert.assertNotNull(gsonConverter47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "http://example.com/" + "'", str48, "http://example.com/");
        org.junit.Assert.assertNotNull(server49);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Retrofit-" + "'", str54, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor55);
        org.junit.Assert.assertNotNull(request57);
        org.junit.Assert.assertNotNull(request58);
        org.junit.Assert.assertNotNull(gsonConverter59);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor69);
        org.junit.Assert.assertNotNull(requestInterceptor70);
        org.junit.Assert.assertNotNull(requestInterceptor71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Retrofit-" + "'", str72, "Retrofit-");
        org.junit.Assert.assertNull(serializedObjectSupporter73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Retrofit-Idle" + "'", str77, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Retrofit-" + "'", str78, "Retrofit-");
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0833");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = builder4.serializedObjectSupporter;
        retrofit.client.Client.Provider provider6 = null;
        builder4.setclientProvider(provider6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor9 = null;
        builder8.sethttpExecutor(executor9);
        retrofit.RestAdapter.Log log11 = null;
        builder8.log = log11;
        java.util.concurrent.Executor executor13 = builder8.callbackExecutor;
        retrofit.RestAdapter.Log log14 = retrofit.RestAdapter.Log.NONE;
        builder8.log = log14;
        retrofit.RestAdapter.Builder builder16 = builder4.setLog(log14);
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter17.deserializeObjectConverter3();
        java.lang.String str20 = serializedObjectSupporter17.deserializeObjectString4();
        retrofit.client.Request request21 = serializedObjectSupporter17.deserializeObjectRequest6();
        retrofit.Server server22 = serializedObjectSupporter17.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder23 = builder16.setServer(server22);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer(server22);
        retrofit.Profiler profiler25 = builder24.profiler;
        retrofit.RestAdapter.Builder builder27 = builder24.setServer("GET");
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor29 = null;
        builder28.sethttpExecutor(executor29);
        retrofit.RequestInterceptor requestInterceptor31 = null;
        builder28.requestInterceptor = requestInterceptor31;
        retrofit.converter.Converter converter33 = builder28.converter;
        java.util.concurrent.Executor executor34 = null;
        builder28.httpExecutor = executor34;
        java.util.concurrent.Executor executor36 = null;
        builder28.httpExecutor = executor36;
        retrofit.Profiler profiler38 = null;
        builder28.profiler = profiler38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider41 = builder40.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder43 = builder40.setLogLevel(logLevel42);
        retrofit.converter.Converter converter44 = builder43.converter;
        builder43.ensureSaneDefaults();
        retrofit.client.Client.Provider provider46 = builder43.clientProvider;
        retrofit.RestAdapter.Builder builder47 = builder28.setClient(provider46);
        retrofit.RestAdapter.Builder builder48 = builder24.setClient(provider46);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler51 = builder49.errorHandler;
        java.util.concurrent.Executor executor52 = builder49.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter53 = new retrofit.SerializedObjectSupporter();
        java.lang.String str54 = serializedObjectSupporter53.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter55 = serializedObjectSupporter53.deserializeObjectConverter3();
        java.lang.String str56 = serializedObjectSupporter53.deserializeObjectString4();
        retrofit.Server server57 = serializedObjectSupporter53.deserializeObjectServer1();
        retrofit.client.Client.Provider provider58 = null;
        java.util.concurrent.Executor executor59 = null;
        java.util.concurrent.Executor executor60 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter61 = new retrofit.SerializedObjectSupporter();
        java.lang.String str62 = serializedObjectSupporter61.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor63 = serializedObjectSupporter61.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter64 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request65 = serializedObjectSupporter64.deserializeObjectRequest1();
        retrofit.client.Request request66 = serializedObjectSupporter64.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter67 = serializedObjectSupporter64.deserializeObjectConverter5();
        retrofit.Profiler profiler68 = null;
        retrofit.ErrorHandler errorHandler69 = null;
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor71 = null;
        builder70.sethttpExecutor(executor71);
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        builder70.log = log73;
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter76 = new retrofit.RestAdapter(server57, provider58, executor59, executor60, requestInterceptor63, (retrofit.converter.Converter) gsonConverter67, profiler68, errorHandler69, log73, logLevel75);
        java.util.concurrent.Executor executor77 = restAdapter76.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor78 = restAdapter76.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor79 = restAdapter76.requestInterceptor;
        retrofit.RestAdapter.Builder builder80 = builder49.setRequestInterceptor(requestInterceptor79);
        java.util.concurrent.Executor executor81 = builder49.getcallbackExecutor();
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        builder82.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler84 = builder82.errorHandler;
        java.util.concurrent.Executor executor85 = builder82.getcallbackExecutor();
        builder49.sethttpExecutor(executor85);
        builder48.setcallbackExecutor(executor85);
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(serializedObjectSupporter5);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNotNull(log14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "GET" + "'", str18, "GET");
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "http://example.com/" + "'", str20, "http://example.com/");
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(server22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(profiler25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNull(converter33);
        org.junit.Assert.assertNull(provider41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(converter44);
        org.junit.Assert.assertNotNull(provider46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(errorHandler51);
        org.junit.Assert.assertNotNull(executor52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "GET" + "'", str54, "GET");
        org.junit.Assert.assertNotNull(gsonConverter55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "http://example.com/" + "'", str56, "http://example.com/");
        org.junit.Assert.assertNotNull(server57);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Retrofit-" + "'", str62, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor63);
        org.junit.Assert.assertNotNull(request65);
        org.junit.Assert.assertNotNull(request66);
        org.junit.Assert.assertNotNull(gsonConverter67);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor77);
        org.junit.Assert.assertNotNull(requestInterceptor78);
        org.junit.Assert.assertNotNull(requestInterceptor79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(executor81);
        org.junit.Assert.assertNotNull(errorHandler84);
        org.junit.Assert.assertNotNull(executor85);
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0834");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter1();
        java.lang.String str8 = serializedObjectSupporter0.deserializeObjectString2();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter9 = serializedObjectSupporter0.deserializeObjectLogLevel1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "GET" + "'", str3, "GET");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Retrofit-Idle" + "'", str8, "Retrofit-Idle");
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0835");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = null;
        builder0.setcallbackExecutor(executor3);
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.FULL;
        builder0.logLevel = logLevel5;
        builder0.ensureSaneDefaults();
        retrofit.client.Client.Provider provider8 = builder0.clientProvider;
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(provider8);
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0836");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.converter;
        java.util.concurrent.Executor executor26 = restAdapter23.callbackExecutor;
        retrofit.Profiler profiler27 = restAdapter23.getprofiler();
        retrofit.client.Client.Provider provider28 = restAdapter23.getclientProvider();
        retrofit.Profiler profiler29 = restAdapter23.profiler;
        java.util.concurrent.Executor executor30 = restAdapter23.getcallbackExecutor();
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter23.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        java.lang.String str33 = serializedObjectSupporter32.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter34 = serializedObjectSupporter32.deserializeObjectConverter3();
        java.lang.String str35 = serializedObjectSupporter32.deserializeObjectString4();
        retrofit.Server server36 = serializedObjectSupporter32.deserializeObjectServer1();
        retrofit.client.Client.Provider provider37 = null;
        java.util.concurrent.Executor executor38 = null;
        java.util.concurrent.Executor executor39 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = new retrofit.SerializedObjectSupporter();
        java.lang.String str41 = serializedObjectSupporter40.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor42 = serializedObjectSupporter40.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request44 = serializedObjectSupporter43.deserializeObjectRequest1();
        retrofit.client.Request request45 = serializedObjectSupporter43.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter43.deserializeObjectConverter5();
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor50 = null;
        builder49.sethttpExecutor(executor50);
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        builder49.log = log52;
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter(server36, provider37, executor38, executor39, requestInterceptor42, (retrofit.converter.Converter) gsonConverter46, profiler47, errorHandler48, log52, logLevel54);
        retrofit.RestAdapter.LogLevel logLevel56 = restAdapter55.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel57 = restAdapter55.getLogLevel();
        retrofit.RestAdapter.Log log58 = restAdapter55.log;
        java.lang.reflect.Method method59 = null;
        java.lang.Object[] objArray60 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj61 = restHandler31.invoke((java.lang.Object) log58, method59, objArray60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNull(profiler27);
        org.junit.Assert.assertNull(provider28);
        org.junit.Assert.assertNull(profiler29);
        org.junit.Assert.assertNull(executor30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "GET" + "'", str33, "GET");
        org.junit.Assert.assertNotNull(gsonConverter34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "http://example.com/" + "'", str35, "http://example.com/");
        org.junit.Assert.assertNotNull(server36);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Retrofit-" + "'", str41, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor42);
        org.junit.Assert.assertNotNull(request44);
        org.junit.Assert.assertNotNull(request45);
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log58);
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0837");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.mime.TypedString typedString9 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter0.deserializeObjectConverter5();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertNotNull(typedString9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertNotNull(gsonConverter11);
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0838");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter3();
        builder0.converter = gsonConverter5;
        retrofit.client.Client.Provider provider7 = null;
        builder0.clientProvider = provider7;
        retrofit.RestAdapter.LogLevel logLevel9 = builder0.logLevel;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor11 = null;
        builder10.sethttpExecutor(executor11);
        retrofit.RequestInterceptor requestInterceptor13 = null;
        builder10.requestInterceptor = requestInterceptor13;
        retrofit.converter.Converter converter15 = builder10.converter;
        java.util.concurrent.Executor executor16 = null;
        builder10.httpExecutor = executor16;
        retrofit.RestAdapter.LogLevel logLevel18 = builder10.logLevel;
        builder0.logLevel = logLevel18;
        java.util.concurrent.Executor executor20 = builder0.callbackExecutor;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider22 = builder21.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder24 = builder21.setLogLevel(logLevel23);
        retrofit.converter.Converter converter25 = builder24.converter;
        builder24.ensureSaneDefaults();
        retrofit.client.Client.Provider provider27 = builder24.clientProvider;
        builder0.setclientProvider(provider27);
        java.util.concurrent.Executor executor29 = builder0.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        java.lang.String str31 = serializedObjectSupporter30.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter32 = serializedObjectSupporter30.deserializeObjectConverter3();
        java.lang.String str33 = serializedObjectSupporter30.deserializeObjectString4();
        retrofit.Server server34 = serializedObjectSupporter30.deserializeObjectServer1();
        retrofit.client.Client.Provider provider35 = null;
        java.util.concurrent.Executor executor36 = null;
        java.util.concurrent.Executor executor37 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        java.lang.String str39 = serializedObjectSupporter38.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor40 = serializedObjectSupporter38.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request42 = serializedObjectSupporter41.deserializeObjectRequest1();
        retrofit.client.Request request43 = serializedObjectSupporter41.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter44 = serializedObjectSupporter41.deserializeObjectConverter5();
        retrofit.Profiler profiler45 = null;
        retrofit.ErrorHandler errorHandler46 = null;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor48 = null;
        builder47.sethttpExecutor(executor48);
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        builder47.log = log50;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server34, provider35, executor36, executor37, requestInterceptor40, (retrofit.converter.Converter) gsonConverter44, profiler45, errorHandler46, log50, logLevel52);
        java.util.concurrent.Executor executor54 = restAdapter53.getcallbackExecutor();
        java.util.concurrent.Executor executor55 = restAdapter53.callbackExecutor;
        java.lang.String str56 = restAdapter53.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor57 = restAdapter53.httpExecutor;
        retrofit.client.Client.Provider provider58 = restAdapter53.getclientProvider();
        java.lang.String str59 = restAdapter53.getIDLE_THREAD_NAME();
        retrofit.RestAdapter.LogLevel logLevel60 = restAdapter53.logLevel;
        retrofit.RestAdapter.LogLevel logLevel61 = restAdapter53.logLevel;
        retrofit.RestAdapter.LogLevel logLevel62 = restAdapter53.logLevel;
        retrofit.RestAdapter.Builder builder63 = builder0.setLogLevel(logLevel62);
        retrofit.SerializedObjectSupporter serializedObjectSupporter64 = new retrofit.SerializedObjectSupporter();
        java.lang.String str65 = serializedObjectSupporter64.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor66 = serializedObjectSupporter64.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter67 = serializedObjectSupporter64.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter68 = serializedObjectSupporter64.deserializeObjectConverter7();
        retrofit.RestAdapter.Builder builder69 = builder63.setConverter((retrofit.converter.Converter) gsonConverter68);
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.BASIC;
        builder63.logLevel = logLevel70;
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor20);
        org.junit.Assert.assertNull(provider22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(converter25);
        org.junit.Assert.assertNotNull(provider27);
        org.junit.Assert.assertNull(executor29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "GET" + "'", str31, "GET");
        org.junit.Assert.assertNotNull(gsonConverter32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNotNull(server34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Retrofit-" + "'", str39, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor40);
        org.junit.Assert.assertNotNull(request42);
        org.junit.Assert.assertNotNull(request43);
        org.junit.Assert.assertNotNull(gsonConverter44);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor54);
        org.junit.Assert.assertNull(executor55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Retrofit-Idle" + "'", str56, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor57);
        org.junit.Assert.assertNull(provider58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Retrofit-Idle" + "'", str59, "Retrofit-Idle");
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Retrofit-" + "'", str65, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor66);
        org.junit.Assert.assertNotNull(gsonConverter67);
        org.junit.Assert.assertNotNull(gsonConverter68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0839");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest5();
        java.lang.String str3 = request2.getMethod();
        java.util.List<retrofit.client.Header> headerList4 = request2.getHeaders();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "GET" + "'", str3, "GET");
        org.junit.Assert.assertNotNull(headerList4);
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0840");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest5();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest8();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "POST" + "'", str3, "POST");
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(request5);
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0841");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = builder2.serializedObjectSupporter;
        retrofit.Profiler profiler4 = builder2.profiler;
        retrofit.RestAdapter.LogLevel logLevel5 = builder2.logLevel;
        builder0.logLevel = logLevel5;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter7.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter7.deserializeObjectConverter7();
        retrofit.client.Request request12 = serializedObjectSupporter7.deserializeObjectRequest7();
        retrofit.RequestInterceptor requestInterceptor13 = serializedObjectSupporter7.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder14 = builder0.setRequestInterceptor(requestInterceptor13);
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(serializedObjectSupporter3);
        org.junit.Assert.assertNull(profiler4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "GET" + "'", str8, "GET");
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0842");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = builder0.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel4 = builder0.logLevel;
        retrofit.Profiler profiler5 = builder0.profiler;
        java.util.concurrent.Executor executor6 = null;
        builder0.callbackExecutor = executor6;
        java.util.concurrent.Executor executor8 = builder0.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request10 = serializedObjectSupporter9.deserializeObjectRequest1();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        java.lang.String str12 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.client.Request request13 = serializedObjectSupporter9.deserializeObjectRequest3();
        java.lang.String str14 = serializedObjectSupporter9.deserializeObjectString2();
        builder0.serializedObjectSupporter = serializedObjectSupporter9;
        java.util.concurrent.Executor executor16 = builder0.httpExecutor;
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler5);
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "GET" + "'", str12, "GET");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Retrofit-Idle" + "'", str14, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor16);
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0843");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor2 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest7();
        java.lang.String str7 = serializedObjectSupporter0.deserializeObjectString2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Retrofit-" + "'", str1, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Retrofit-Idle" + "'", str7, "Retrofit-Idle");
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0844");
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request3 = serializedObjectSupporter2.deserializeObjectRequest8();
        java.lang.String str4 = request3.method;
        java.util.List<retrofit.client.Header> headerList5 = request3.getHeaders();
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request9 = serializedObjectSupporter8.deserializeObjectRequest1();
        retrofit.client.Request request10 = serializedObjectSupporter8.deserializeObjectRequest5();
        java.util.List<retrofit.client.Header> headerList11 = request10.getHeaders();
        java.util.List<retrofit.client.Header> headerList12 = request10.headers;
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request14 = serializedObjectSupporter13.deserializeObjectRequest8();
        retrofit.mime.TypedString typedString15 = serializedObjectSupporter13.deserializeObjectTypedOutput2();
        retrofit.client.Request request16 = new retrofit.client.Request("GET", "http://example.com/", headerList12, (retrofit.mime.TypedOutput) typedString15);
        retrofit.client.Request request17 = new retrofit.client.Request("http://example.com/", "", headerList5, (retrofit.mime.TypedOutput) typedString15);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(headerList5);
        org.junit.Assert.assertNotNull(request9);
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNotNull(request14);
        org.junit.Assert.assertNotNull(typedString15);
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0845");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest2();
        java.util.List<retrofit.client.Header> headerList6 = request5.getHeaders();
        retrofit.mime.TypedOutput typedOutput7 = request5.body;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(headerList6);
        org.junit.Assert.assertNull(typedOutput7);
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0846");
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = new retrofit.SerializedObjectSupporter();
        java.lang.String str3 = serializedObjectSupporter2.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter2.deserializeObjectConverter3();
        java.lang.String str5 = serializedObjectSupporter2.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter2.deserializeObjectConverter6();
        retrofit.client.Request request7 = serializedObjectSupporter2.deserializeObjectRequest8();
        retrofit.mime.TypedOutput typedOutput8 = request7.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request7.getHeaders();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest1();
        retrofit.client.Request request14 = serializedObjectSupporter12.deserializeObjectRequest5();
        java.util.List<retrofit.client.Header> headerList15 = request14.getHeaders();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request17 = serializedObjectSupporter16.deserializeObjectRequest8();
        retrofit.mime.TypedString typedString18 = serializedObjectSupporter16.deserializeObjectTypedOutput2();
        retrofit.client.Request request19 = new retrofit.client.Request("POST", "GET", headerList15, (retrofit.mime.TypedOutput) typedString18);
        retrofit.client.Request request20 = new retrofit.client.Request("Retrofit-", "hi!", headerList9, (retrofit.mime.TypedOutput) typedString18);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "GET" + "'", str3, "GET");
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(request14);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(typedString18);
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0847");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        java.util.concurrent.Executor executor3 = null;
        builder0.httpExecutor = executor3;
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request6 = serializedObjectSupporter5.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter5.deserializeObjectConverter2();
        builder0.serializedObjectSupporter = serializedObjectSupporter5;
        retrofit.client.Request request9 = serializedObjectSupporter5.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter5.deserializeObjectConverter5();
        java.lang.String str11 = serializedObjectSupporter5.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter5.deserializeObjectConverter8();
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(request9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "POST" + "'", str11, "POST");
        org.junit.Assert.assertNotNull(gsonConverter12);
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0848");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        java.util.concurrent.Executor executor5 = builder0.callbackExecutor;
        retrofit.RestAdapter.Log log6 = retrofit.RestAdapter.Log.NONE;
        builder0.log = log6;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter8.deserializeObjectConverter3();
        java.lang.String str11 = serializedObjectSupporter8.deserializeObjectString4();
        retrofit.Server server12 = serializedObjectSupporter8.deserializeObjectServer1();
        retrofit.client.Client.Provider provider13 = null;
        java.util.concurrent.Executor executor14 = null;
        java.util.concurrent.Executor executor15 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor18 = serializedObjectSupporter16.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request20 = serializedObjectSupporter19.deserializeObjectRequest1();
        retrofit.client.Request request21 = serializedObjectSupporter19.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter19.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.ErrorHandler errorHandler24 = null;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor26 = null;
        builder25.sethttpExecutor(executor26);
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        builder25.log = log28;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter(server12, provider13, executor14, executor15, requestInterceptor18, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler24, log28, logLevel30);
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter31.getLogLevel();
        retrofit.converter.Converter converter33 = restAdapter31.getconverter();
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean35 = logLevel34.log();
        boolean boolean36 = logLevel34.log();
        restAdapter31.setLogLevel(logLevel34);
        retrofit.Server server38 = restAdapter31.getserver();
        retrofit.RestAdapter.Builder builder39 = builder0.setServer(server38);
        retrofit.Profiler profiler40 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder41 = builder0.setProfiler(profiler40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "GET" + "'", str9, "GET");
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "http://example.com/" + "'", str11, "http://example.com/");
        org.junit.Assert.assertNotNull(server12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Retrofit-" + "'", str17, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor18);
        org.junit.Assert.assertNotNull(request20);
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(server38);
        org.junit.Assert.assertNotNull(builder39);
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0849");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        java.util.concurrent.Executor executor5 = builder0.callbackExecutor;
        java.util.concurrent.Executor executor6 = null;
        builder0.httpExecutor = executor6;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = builder0.serializedObjectSupporter;
        retrofit.client.Client client9 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder10 = builder0.setClient(client9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0850");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        retrofit.RestAdapter.Log log5 = builder0.log;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor7 = null;
        builder6.sethttpExecutor(executor7);
        retrofit.RequestInterceptor requestInterceptor9 = null;
        builder6.requestInterceptor = requestInterceptor9;
        java.util.concurrent.Executor executor11 = null;
        builder6.httpExecutor = executor11;
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter13.deserializeObjectConverter3();
        java.lang.String str16 = serializedObjectSupporter13.deserializeObjectString4();
        retrofit.client.Request request17 = serializedObjectSupporter13.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler18 = serializedObjectSupporter13.deserializeObjectErrorHandler1();
        builder6.errorHandler = errorHandler18;
        retrofit.RestAdapter.Builder builder20 = builder0.setErrorHandler(errorHandler18);
        retrofit.ErrorHandler errorHandler21 = builder0.errorHandler;
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "GET" + "'", str14, "GET");
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(errorHandler18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(errorHandler21);
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0851");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.getconverter();
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean27 = logLevel26.log();
        boolean boolean28 = logLevel26.log();
        restAdapter23.setLogLevel(logLevel26);
        retrofit.Server server30 = restAdapter23.getserver();
        retrofit.RequestInterceptor requestInterceptor31 = restAdapter23.getrequestInterceptor();
        java.util.concurrent.Executor executor32 = restAdapter23.gethttpExecutor();
        retrofit.converter.Converter converter33 = restAdapter23.getconverter();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(server30);
        org.junit.Assert.assertNotNull(requestInterceptor31);
        org.junit.Assert.assertNull(executor32);
        org.junit.Assert.assertNotNull(converter33);
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0852");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.mime.TypedString typedString9 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.client.Request request11 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter0.deserializeObjectConverter1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertNotNull(typedString9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNotNull(gsonConverter13);
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0853");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest3();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter3();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(gsonConverter6);
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0854");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        java.util.concurrent.Executor executor5 = null;
        builder0.httpExecutor = executor5;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter7.deserializeObjectConverter3();
        java.lang.String str10 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.client.Request request11 = serializedObjectSupporter7.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler12 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        builder0.errorHandler = errorHandler12;
        retrofit.client.Client client14 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder15 = builder0.setClient(client14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "GET" + "'", str8, "GET");
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertNotNull(errorHandler12);
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0855");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.ErrorHandler errorHandler4 = null;
        builder0.errorHandler = errorHandler4;
        java.util.concurrent.Executor executor6 = null;
        builder0.sethttpExecutor(executor6);
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter8.deserializeObjectConverter3();
        java.lang.String str11 = serializedObjectSupporter8.deserializeObjectString4();
        retrofit.Server server12 = serializedObjectSupporter8.deserializeObjectServer1();
        retrofit.client.Client.Provider provider13 = null;
        java.util.concurrent.Executor executor14 = null;
        java.util.concurrent.Executor executor15 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor18 = serializedObjectSupporter16.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request20 = serializedObjectSupporter19.deserializeObjectRequest1();
        retrofit.client.Request request21 = serializedObjectSupporter19.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter19.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.ErrorHandler errorHandler24 = null;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor26 = null;
        builder25.sethttpExecutor(executor26);
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        builder25.log = log28;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter(server12, provider13, executor14, executor15, requestInterceptor18, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler24, log28, logLevel30);
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter31.getLogLevel();
        retrofit.converter.Converter converter33 = restAdapter31.getconverter();
        retrofit.RestAdapter.Builder builder34 = builder0.setConverter(converter33);
        retrofit.Profiler profiler35 = builder0.profiler;
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "GET" + "'", str9, "GET");
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "http://example.com/" + "'", str11, "http://example.com/");
        org.junit.Assert.assertNotNull(server12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Retrofit-" + "'", str17, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor18);
        org.junit.Assert.assertNotNull(request20);
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNull(profiler35);
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0856");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest5();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Retrofit-Idle" + "'", str5, "Retrofit-Idle");
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0857");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        java.lang.String str26 = restAdapter23.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        retrofit.Profiler profiler28 = restAdapter23.getprofiler();
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter23.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        java.lang.String str31 = serializedObjectSupporter30.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter32 = serializedObjectSupporter30.deserializeObjectConverter3();
        java.lang.String str33 = serializedObjectSupporter30.deserializeObjectString4();
        retrofit.client.Request request34 = serializedObjectSupporter30.deserializeObjectRequest6();
        retrofit.Server server35 = serializedObjectSupporter30.deserializeObjectServer1();
        restHandler29.serializedObjectSupporter = serializedObjectSupporter30;
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = new retrofit.SerializedObjectSupporter();
        java.lang.String str38 = serializedObjectSupporter37.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter37.deserializeObjectConverter3();
        java.lang.String str40 = serializedObjectSupporter37.deserializeObjectString4();
        retrofit.client.Request request41 = serializedObjectSupporter37.deserializeObjectRequest6();
        retrofit.Server server42 = serializedObjectSupporter37.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter37.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter44 = serializedObjectSupporter37.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter45 = serializedObjectSupporter37.deserializeObjectConverter1();
        restHandler29.serializedObjectSupporter = serializedObjectSupporter37;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "GET" + "'", str31, "GET");
        org.junit.Assert.assertNotNull(gsonConverter32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNotNull(request34);
        org.junit.Assert.assertNotNull(server35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "GET" + "'", str38, "GET");
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "http://example.com/" + "'", str40, "http://example.com/");
        org.junit.Assert.assertNotNull(request41);
        org.junit.Assert.assertNotNull(server42);
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertNotNull(gsonConverter44);
        org.junit.Assert.assertNotNull(gsonConverter45);
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0858");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        java.lang.String str25 = restAdapter23.getIDLE_THREAD_NAME();
        retrofit.Profiler profiler26 = restAdapter23.profiler;
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        retrofit.Profiler profiler28 = restAdapter23.getprofiler();
        java.util.concurrent.Executor executor29 = restAdapter23.gethttpExecutor();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Retrofit-Idle" + "'", str25, "Retrofit-Idle");
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertNull(executor29);
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0859");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString5();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest7();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "POST" + "'", str4, "POST");
        org.junit.Assert.assertNotNull(request5);
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0860");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.ErrorHandler errorHandler3 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest3();
        java.lang.String str6 = request5.method;
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(errorHandler3);
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "POST" + "'", str6, "POST");
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0861");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.RestAdapter.LogLevel logLevel4 = builder3.logLevel;
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder6 = builder3.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor8 = null;
        builder7.setcallbackExecutor(executor8);
        java.util.concurrent.Executor executor10 = null;
        builder7.setcallbackExecutor(executor10);
        retrofit.client.Client.Provider provider12 = null;
        builder7.clientProvider = provider12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = builder14.serializedObjectSupporter;
        retrofit.Profiler profiler16 = builder14.profiler;
        retrofit.RestAdapter.LogLevel logLevel17 = builder14.logLevel;
        builder7.logLevel = logLevel17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor20 = null;
        builder19.sethttpExecutor(executor20);
        retrofit.RestAdapter.Log log22 = null;
        builder19.log = log22;
        java.util.concurrent.Executor executor24 = builder19.callbackExecutor;
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        builder19.log = log25;
        log25.log("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder29 = builder7.setLog(log25);
        java.util.concurrent.Executor executor30 = builder7.httpExecutor;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log32 = builder31.log;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor34 = null;
        builder33.setcallbackExecutor(executor34);
        java.util.concurrent.Executor executor36 = null;
        builder33.setcallbackExecutor(executor36);
        retrofit.client.Client.Provider provider38 = null;
        builder33.clientProvider = provider38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = builder40.serializedObjectSupporter;
        retrofit.Profiler profiler42 = builder40.profiler;
        retrofit.RestAdapter.LogLevel logLevel43 = builder40.logLevel;
        builder33.logLevel = logLevel43;
        builder31.logLevel = logLevel43;
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        java.lang.String str47 = serializedObjectSupporter46.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter48 = serializedObjectSupporter46.deserializeObjectConverter3();
        java.lang.String str49 = serializedObjectSupporter46.deserializeObjectString4();
        retrofit.Server server50 = serializedObjectSupporter46.deserializeObjectServer1();
        retrofit.client.Client.Provider provider51 = null;
        java.util.concurrent.Executor executor52 = null;
        java.util.concurrent.Executor executor53 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter54 = new retrofit.SerializedObjectSupporter();
        java.lang.String str55 = serializedObjectSupporter54.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor56 = serializedObjectSupporter54.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter57 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request58 = serializedObjectSupporter57.deserializeObjectRequest1();
        retrofit.client.Request request59 = serializedObjectSupporter57.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter60 = serializedObjectSupporter57.deserializeObjectConverter5();
        retrofit.Profiler profiler61 = null;
        retrofit.ErrorHandler errorHandler62 = null;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor64 = null;
        builder63.sethttpExecutor(executor64);
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        builder63.log = log66;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server50, provider51, executor52, executor53, requestInterceptor56, (retrofit.converter.Converter) gsonConverter60, profiler61, errorHandler62, log66, logLevel68);
        retrofit.RestAdapter.LogLevel logLevel70 = restAdapter69.getLogLevel();
        retrofit.converter.Converter converter71 = restAdapter69.getconverter();
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean73 = logLevel72.log();
        boolean boolean74 = logLevel72.log();
        restAdapter69.setLogLevel(logLevel72);
        retrofit.RestAdapter.Builder builder76 = builder31.setLogLevel(logLevel72);
        builder7.logLevel = logLevel72;
        builder3.logLevel = logLevel72;
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(serializedObjectSupporter15);
        org.junit.Assert.assertNull(profiler16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNull(executor30);
        org.junit.Assert.assertNull(log32);
        org.junit.Assert.assertNull(serializedObjectSupporter41);
        org.junit.Assert.assertNull(profiler42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "GET" + "'", str47, "GET");
        org.junit.Assert.assertNotNull(gsonConverter48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "http://example.com/" + "'", str49, "http://example.com/");
        org.junit.Assert.assertNotNull(server50);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Retrofit-" + "'", str55, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor56);
        org.junit.Assert.assertNotNull(request58);
        org.junit.Assert.assertNotNull(request59);
        org.junit.Assert.assertNotNull(gsonConverter60);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(builder76);
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0862");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.getconverter();
        retrofit.Profiler profiler26 = restAdapter23.getprofiler();
        retrofit.RestAdapter.Log log27 = restAdapter23.log;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertNotNull(log27);
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0863");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        retrofit.client.Client.Provider provider3 = null;
        builder0.clientProvider = provider3;
        java.util.concurrent.Executor executor5 = null;
        builder0.callbackExecutor = executor5;
        java.util.concurrent.Executor executor7 = builder0.getcallbackExecutor();
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNull(executor7);
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0864");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter1();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter0.deserializeObjectConverter5();
        java.lang.String str10 = serializedObjectSupporter0.deserializeObjectString4();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "GET" + "'", str3, "GET");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0865");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        java.lang.String str26 = restAdapter23.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        retrofit.Profiler profiler28 = restAdapter23.getprofiler();
        java.util.concurrent.Executor executor29 = restAdapter23.httpExecutor;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider31 = builder30.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder33 = builder30.setLogLevel(logLevel32);
        retrofit.RestAdapter.LogLevel logLevel34 = builder33.logLevel;
        restAdapter23.logLevel = logLevel34;
        retrofit.RestAdapter.Log log36 = restAdapter23.log;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertNull(executor29);
        org.junit.Assert.assertNull(provider31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(log36);
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0866");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        java.lang.String str27 = restAdapter23.getTHREAD_PREFIX();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = restAdapter23.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter23.logLevel;
        retrofit.Server server30 = restAdapter23.server;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Retrofit-" + "'", str27, "Retrofit-");
        org.junit.Assert.assertNull(serializedObjectSupporter28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(server30);
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0867");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("http://example.com/", "", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.lang.String str7 = request6.getMethod();
        java.lang.String str8 = request6.getUrl();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0868");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        java.util.concurrent.Executor executor3 = null;
        builder0.httpExecutor = executor3;
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request6 = serializedObjectSupporter5.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter5.deserializeObjectConverter2();
        builder0.serializedObjectSupporter = serializedObjectSupporter5;
        retrofit.client.Request request9 = serializedObjectSupporter5.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter5.deserializeObjectConverter5();
        retrofit.client.Request request11 = serializedObjectSupporter5.deserializeObjectRequest7();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter5.deserializeObjectConverter4();
        java.lang.String str13 = serializedObjectSupporter5.deserializeObjectString1();
        retrofit.client.Request request14 = serializedObjectSupporter5.deserializeObjectRequest5();
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(request9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-" + "'", str13, "Retrofit-");
        org.junit.Assert.assertNotNull(request14);
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0869");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.RequestInterceptor requestInterceptor4 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.RequestInterceptor requestInterceptor6 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter5();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(requestInterceptor4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(requestInterceptor6);
        org.junit.Assert.assertNotNull(gsonConverter7);
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0870");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter3();
        builder0.converter = gsonConverter5;
        retrofit.client.Client.Provider provider7 = null;
        builder0.clientProvider = provider7;
        retrofit.RestAdapter.LogLevel logLevel9 = builder0.logLevel;
        java.util.concurrent.Executor executor10 = null;
        builder0.setcallbackExecutor(executor10);
        retrofit.converter.Converter converter12 = builder0.converter;
        retrofit.RestAdapter.LogLevel logLevel13 = builder0.logLevel;
        retrofit.Profiler profiler14 = builder0.profiler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = builder0.serializedObjectSupporter;
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(converter12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler14);
        org.junit.Assert.assertNull(serializedObjectSupporter15);
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0871");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.RequestInterceptor requestInterceptor3 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter7();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter6();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(requestInterceptor3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(gsonConverter6);
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0872");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = null;
        builder0.setcallbackExecutor(executor3);
        java.util.concurrent.Executor executor5 = builder0.httpExecutor;
        retrofit.ErrorHandler errorHandler6 = builder0.errorHandler;
        retrofit.client.Client.Provider provider7 = builder0.clientProvider;
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(errorHandler6);
        org.junit.Assert.assertNull(provider7);
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0873");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        builder0.ensureSaneDefaults();
        retrofit.client.Client.Provider provider4 = null;
        builder0.setclientProvider(provider4);
        java.util.concurrent.Executor executor6 = null;
        builder0.httpExecutor = executor6;
        retrofit.RequestInterceptor requestInterceptor8 = builder0.requestInterceptor;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor10 = null;
        builder9.sethttpExecutor(executor10);
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter3();
        builder9.converter = gsonConverter14;
        retrofit.client.Client.Provider provider16 = null;
        builder9.clientProvider = provider16;
        retrofit.RestAdapter.LogLevel logLevel18 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor20 = null;
        builder19.sethttpExecutor(executor20);
        retrofit.RequestInterceptor requestInterceptor22 = null;
        builder19.requestInterceptor = requestInterceptor22;
        retrofit.converter.Converter converter24 = builder19.converter;
        java.util.concurrent.Executor executor25 = null;
        builder19.httpExecutor = executor25;
        retrofit.RestAdapter.LogLevel logLevel27 = builder19.logLevel;
        builder9.logLevel = logLevel27;
        java.util.concurrent.Executor executor29 = builder9.callbackExecutor;
        java.util.concurrent.Executor executor30 = builder9.callbackExecutor;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider32 = builder31.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder34 = builder31.setLogLevel(logLevel33);
        retrofit.converter.Converter converter35 = builder34.converter;
        retrofit.Profiler profiler36 = builder34.profiler;
        java.util.concurrent.Executor executor37 = builder34.callbackExecutor;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor39 = null;
        builder38.setcallbackExecutor(executor39);
        java.util.concurrent.Executor executor41 = null;
        builder38.setcallbackExecutor(executor41);
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.FULL;
        builder38.logLevel = logLevel43;
        retrofit.client.Client.Provider provider45 = builder38.getclientProvider();
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = builder38.serializedObjectSupporter;
        java.util.concurrent.Executor executor47 = builder38.callbackExecutor;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = builder48.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter50 = builder48.serializedObjectSupporter;
        java.util.concurrent.Executor executor51 = null;
        builder48.httpExecutor = executor51;
        retrofit.SerializedObjectSupporter serializedObjectSupporter53 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request54 = serializedObjectSupporter53.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter55 = serializedObjectSupporter53.deserializeObjectConverter2();
        builder48.serializedObjectSupporter = serializedObjectSupporter53;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider58 = builder57.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder60 = builder57.setLogLevel(logLevel59);
        retrofit.converter.Converter converter61 = builder60.converter;
        java.util.concurrent.Executor executor62 = null;
        builder60.sethttpExecutor(executor62);
        retrofit.RestAdapter.Builder builder65 = builder60.setServer("GET");
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor67 = null;
        builder66.setcallbackExecutor(executor67);
        java.util.concurrent.Executor executor69 = null;
        builder66.setcallbackExecutor(executor69);
        builder66.ensureSaneDefaults();
        java.util.concurrent.Executor executor72 = builder66.callbackExecutor;
        builder65.setcallbackExecutor(executor72);
        builder48.httpExecutor = executor72;
        builder38.sethttpExecutor(executor72);
        builder34.callbackExecutor = executor72;
        builder9.setcallbackExecutor(executor72);
        builder0.httpExecutor = executor72;
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "GET" + "'", str13, "GET");
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter24);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor29);
        org.junit.Assert.assertNull(executor30);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNull(converter35);
        org.junit.Assert.assertNull(profiler36);
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider45);
        org.junit.Assert.assertNull(serializedObjectSupporter46);
        org.junit.Assert.assertNull(executor47);
        org.junit.Assert.assertNull(serializedObjectSupporter49);
        org.junit.Assert.assertNull(serializedObjectSupporter50);
        org.junit.Assert.assertNotNull(request54);
        org.junit.Assert.assertNotNull(gsonConverter55);
        org.junit.Assert.assertNull(provider58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNull(converter61);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(executor72);
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0874");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.client.Client.Provider provider2 = null;
        builder0.setclientProvider(provider2);
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor5 = null;
        builder4.sethttpExecutor(executor5);
        retrofit.RestAdapter.Log log7 = null;
        builder4.log = log7;
        java.util.concurrent.Executor executor9 = builder4.callbackExecutor;
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        builder4.log = log10;
        retrofit.RestAdapter.Builder builder12 = builder0.setLog(log10);
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter13.deserializeObjectConverter3();
        java.lang.String str16 = serializedObjectSupporter13.deserializeObjectString4();
        retrofit.client.Request request17 = serializedObjectSupporter13.deserializeObjectRequest6();
        retrofit.Server server18 = serializedObjectSupporter13.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder19 = builder12.setServer(server18);
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter3();
        java.lang.String str26 = serializedObjectSupporter23.deserializeObjectString4();
        retrofit.Server server27 = serializedObjectSupporter23.deserializeObjectServer1();
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        java.lang.String str32 = serializedObjectSupporter31.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor33 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request35 = serializedObjectSupporter34.deserializeObjectRequest1();
        retrofit.client.Request request36 = serializedObjectSupporter34.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter34.deserializeObjectConverter5();
        retrofit.Profiler profiler38 = null;
        retrofit.ErrorHandler errorHandler39 = null;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor41 = null;
        builder40.sethttpExecutor(executor41);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        builder40.log = log43;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor33, (retrofit.converter.Converter) gsonConverter37, profiler38, errorHandler39, log43, logLevel45);
        retrofit.RestAdapter.LogLevel logLevel47 = restAdapter46.getLogLevel();
        retrofit.converter.Converter converter48 = restAdapter46.converter;
        retrofit.RequestInterceptor requestInterceptor49 = restAdapter46.requestInterceptor;
        retrofit.converter.Converter converter50 = null;
        retrofit.Profiler profiler51 = null;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor53 = null;
        builder52.sethttpExecutor(executor53);
        retrofit.RestAdapter.Log log55 = null;
        builder52.log = log55;
        retrofit.RestAdapter.Log log57 = builder52.log;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor59 = null;
        builder58.sethttpExecutor(executor59);
        retrofit.RequestInterceptor requestInterceptor61 = null;
        builder58.requestInterceptor = requestInterceptor61;
        java.util.concurrent.Executor executor63 = null;
        builder58.httpExecutor = executor63;
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = new retrofit.SerializedObjectSupporter();
        java.lang.String str66 = serializedObjectSupporter65.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter67 = serializedObjectSupporter65.deserializeObjectConverter3();
        java.lang.String str68 = serializedObjectSupporter65.deserializeObjectString4();
        retrofit.client.Request request69 = serializedObjectSupporter65.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler70 = serializedObjectSupporter65.deserializeObjectErrorHandler1();
        builder58.errorHandler = errorHandler70;
        retrofit.RestAdapter.Builder builder72 = builder52.setErrorHandler(errorHandler70);
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider75 = builder74.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder77 = builder74.setLogLevel(logLevel76);
        retrofit.RestAdapter.LogLevel logLevel78 = builder77.logLevel;
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder80 = builder77.setLogLevel(logLevel79);
        retrofit.RestAdapter restAdapter81 = new retrofit.RestAdapter(server18, provider20, executor21, executor22, requestInterceptor49, converter50, profiler51, errorHandler70, log73, logLevel79);
        java.lang.String str82 = restAdapter81.getTHREAD_PREFIX();
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "GET" + "'", str14, "GET");
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(server18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "GET" + "'", str24, "GET");
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "http://example.com/" + "'", str26, "http://example.com/");
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Retrofit-" + "'", str32, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor33);
        org.junit.Assert.assertNotNull(request35);
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter48);
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNull(log57);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "GET" + "'", str66, "GET");
        org.junit.Assert.assertNotNull(gsonConverter67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "http://example.com/" + "'", str68, "http://example.com/");
        org.junit.Assert.assertNotNull(request69);
        org.junit.Assert.assertNotNull(errorHandler70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNull(provider75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Retrofit-" + "'", str82, "Retrofit-");
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0875");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.converter;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        java.lang.String str27 = restAdapter23.getTHREAD_PREFIX();
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = builder28.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = builder28.serializedObjectSupporter;
        java.util.concurrent.Executor executor31 = null;
        builder28.httpExecutor = executor31;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request34 = serializedObjectSupporter33.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter35 = serializedObjectSupporter33.deserializeObjectConverter2();
        builder28.serializedObjectSupporter = serializedObjectSupporter33;
        java.lang.String str37 = serializedObjectSupporter33.deserializeObjectString2();
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter33;
        java.lang.String str39 = serializedObjectSupporter33.deserializeObjectString2();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter40 = serializedObjectSupporter33.deserializeObjectLogLevel2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Retrofit-" + "'", str27, "Retrofit-");
        org.junit.Assert.assertNull(serializedObjectSupporter29);
        org.junit.Assert.assertNull(serializedObjectSupporter30);
        org.junit.Assert.assertNotNull(request34);
        org.junit.Assert.assertNotNull(gsonConverter35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-Idle" + "'", str37, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Retrofit-Idle" + "'", str39, "Retrofit-Idle");
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0876");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        java.lang.String str26 = restAdapter23.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        retrofit.Profiler profiler28 = restAdapter23.getprofiler();
        retrofit.Server server29 = restAdapter23.getserver();
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        java.lang.String str31 = serializedObjectSupporter30.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter32 = serializedObjectSupporter30.deserializeObjectConverter3();
        java.lang.String str33 = serializedObjectSupporter30.deserializeObjectString4();
        retrofit.Server server34 = serializedObjectSupporter30.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter35 = serializedObjectSupporter30.deserializeObjectConverter6();
        retrofit.client.Request request36 = serializedObjectSupporter30.deserializeObjectRequest7();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter30.deserializeObjectConverter8();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter30.deserializeObjectConverter8();
        retrofit.mime.TypedString typedString39 = serializedObjectSupporter30.deserializeObjectTypedOutput2();
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter30;
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter30.deserializeObjectConverter7();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "GET" + "'", str31, "GET");
        org.junit.Assert.assertNotNull(gsonConverter32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNotNull(server34);
        org.junit.Assert.assertNotNull(gsonConverter35);
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(typedString39);
        org.junit.Assert.assertNotNull(gsonConverter41);
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0877");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter23.logLevel = logLevel25;
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = restAdapter23.serializedObjectSupporter;
        retrofit.RestAdapter.Log log28 = restAdapter23.log;
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request30 = serializedObjectSupporter29.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter32 = serializedObjectSupporter29.deserializeObjectConverter8();
        java.lang.String str33 = serializedObjectSupporter29.deserializeObjectString4();
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter29;
        java.util.concurrent.Executor executor35 = restAdapter23.gethttpExecutor();
        retrofit.Server server36 = restAdapter23.server;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(serializedObjectSupporter27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(request30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(gsonConverter32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNotNull(server36);
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0878");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        retrofit.converter.Converter converter5 = builder0.converter;
        java.util.concurrent.Executor executor6 = null;
        builder0.httpExecutor = executor6;
        java.util.concurrent.Executor executor8 = null;
        builder0.httpExecutor = executor8;
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor12 = null;
        builder11.setcallbackExecutor(executor12);
        retrofit.converter.Converter converter14 = builder11.converter;
        retrofit.RestAdapter.Builder builder16 = builder11.setServer("GET");
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        java.lang.String str21 = serializedObjectSupporter20.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter3();
        builder17.converter = gsonConverter22;
        retrofit.client.Client.Provider provider24 = null;
        builder17.clientProvider = provider24;
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter26.deserializeObjectConverter3();
        java.lang.String str29 = serializedObjectSupporter26.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter26.deserializeObjectConverter6();
        builder17.converter = gsonConverter30;
        builder11.converter = gsonConverter30;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        java.lang.String str34 = serializedObjectSupporter33.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter35 = serializedObjectSupporter33.deserializeObjectConverter3();
        java.lang.String str36 = serializedObjectSupporter33.deserializeObjectString4();
        retrofit.Server server37 = serializedObjectSupporter33.deserializeObjectServer1();
        retrofit.client.Client.Provider provider38 = null;
        java.util.concurrent.Executor executor39 = null;
        java.util.concurrent.Executor executor40 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = new retrofit.SerializedObjectSupporter();
        java.lang.String str42 = serializedObjectSupporter41.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor43 = serializedObjectSupporter41.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request45 = serializedObjectSupporter44.deserializeObjectRequest1();
        retrofit.client.Request request46 = serializedObjectSupporter44.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter47 = serializedObjectSupporter44.deserializeObjectConverter5();
        retrofit.Profiler profiler48 = null;
        retrofit.ErrorHandler errorHandler49 = null;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor51 = null;
        builder50.sethttpExecutor(executor51);
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        builder50.log = log53;
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter(server37, provider38, executor39, executor40, requestInterceptor43, (retrofit.converter.Converter) gsonConverter47, profiler48, errorHandler49, log53, logLevel55);
        java.util.concurrent.Executor executor57 = restAdapter56.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor58 = restAdapter56.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor59 = restAdapter56.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor60 = restAdapter56.getrequestInterceptor();
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor62 = null;
        builder61.sethttpExecutor(executor62);
        retrofit.RequestInterceptor requestInterceptor64 = null;
        builder61.requestInterceptor = requestInterceptor64;
        retrofit.converter.Converter converter66 = builder61.converter;
        java.util.concurrent.Executor executor67 = null;
        builder61.httpExecutor = executor67;
        retrofit.RestAdapter.LogLevel logLevel69 = builder61.logLevel;
        restAdapter56.logLevel = logLevel69;
        builder11.logLevel = logLevel69;
        java.util.concurrent.Executor executor72 = builder11.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor73 = builder11.requestInterceptor;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor75 = null;
        builder74.setcallbackExecutor(executor75);
        java.util.concurrent.Executor executor77 = null;
        builder74.setcallbackExecutor(executor77);
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.FULL;
        builder74.logLevel = logLevel79;
        retrofit.RestAdapter.Builder builder81 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor82 = null;
        builder81.setcallbackExecutor(executor82);
        java.util.concurrent.Executor executor84 = null;
        builder81.setcallbackExecutor(executor84);
        builder81.ensureSaneDefaults();
        java.util.concurrent.Executor executor87 = builder81.callbackExecutor;
        builder74.sethttpExecutor(executor87);
        builder11.callbackExecutor = executor87;
        builder0.httpExecutor = executor87;
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNull(serializedObjectSupporter10);
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "GET" + "'", str21, "GET");
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "GET" + "'", str27, "GET");
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "http://example.com/" + "'", str29, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "GET" + "'", str34, "GET");
        org.junit.Assert.assertNotNull(gsonConverter35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "http://example.com/" + "'", str36, "http://example.com/");
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Retrofit-" + "'", str42, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor43);
        org.junit.Assert.assertNotNull(request45);
        org.junit.Assert.assertNotNull(request46);
        org.junit.Assert.assertNotNull(gsonConverter47);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor57);
        org.junit.Assert.assertNotNull(requestInterceptor58);
        org.junit.Assert.assertNotNull(requestInterceptor59);
        org.junit.Assert.assertNotNull(requestInterceptor60);
        org.junit.Assert.assertNull(converter66);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor72);
        org.junit.Assert.assertNull(requestInterceptor73);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(executor87);
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0879");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        java.lang.String str25 = restAdapter23.getIDLE_THREAD_NAME();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = restAdapter23.serializedObjectSupporter;
        retrofit.RestAdapter.Log log27 = restAdapter23.log;
        retrofit.Server server28 = restAdapter23.getserver();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        java.lang.String str30 = serializedObjectSupporter29.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor31 = serializedObjectSupporter29.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter32 = serializedObjectSupporter29.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter29.deserializeObjectConverter2();
        retrofit.client.Request request34 = serializedObjectSupporter29.deserializeObjectRequest7();
        retrofit.client.Request request35 = serializedObjectSupporter29.deserializeObjectRequest7();
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter29;
        java.lang.String str37 = restAdapter23.getTHREAD_PREFIX();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Retrofit-Idle" + "'", str25, "Retrofit-Idle");
        org.junit.Assert.assertNull(serializedObjectSupporter26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Retrofit-" + "'", str30, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor31);
        org.junit.Assert.assertNotNull(gsonConverter32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(request34);
        org.junit.Assert.assertNotNull(request35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-" + "'", str37, "Retrofit-");
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0880");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        retrofit.Profiler profiler27 = restAdapter23.getprofiler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        java.lang.String str29 = serializedObjectSupporter28.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter28.deserializeObjectConverter3();
        java.lang.String str31 = serializedObjectSupporter28.deserializeObjectString4();
        retrofit.Server server32 = serializedObjectSupporter28.deserializeObjectServer1();
        retrofit.client.Client.Provider provider33 = null;
        java.util.concurrent.Executor executor34 = null;
        java.util.concurrent.Executor executor35 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        java.lang.String str37 = serializedObjectSupporter36.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor38 = serializedObjectSupporter36.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request40 = serializedObjectSupporter39.deserializeObjectRequest1();
        retrofit.client.Request request41 = serializedObjectSupporter39.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter42 = serializedObjectSupporter39.deserializeObjectConverter5();
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor46 = null;
        builder45.sethttpExecutor(executor46);
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        builder45.log = log48;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter(server32, provider33, executor34, executor35, requestInterceptor38, (retrofit.converter.Converter) gsonConverter42, profiler43, errorHandler44, log48, logLevel50);
        retrofit.RestAdapter.LogLevel logLevel52 = restAdapter51.getLogLevel();
        java.lang.String str53 = restAdapter51.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor54 = restAdapter51.httpExecutor;
        retrofit.Profiler profiler55 = restAdapter51.getprofiler();
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor57 = null;
        builder56.setcallbackExecutor(executor57);
        java.util.concurrent.Executor executor59 = builder56.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel60 = builder56.logLevel;
        boolean boolean61 = logLevel60.log();
        restAdapter51.logLevel = logLevel60;
        restAdapter23.logLevel = logLevel60;
        java.util.concurrent.Executor executor64 = restAdapter23.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request66 = serializedObjectSupporter65.deserializeObjectRequest1();
        retrofit.Server server67 = serializedObjectSupporter65.deserializeObjectServer1();
        java.lang.String str68 = serializedObjectSupporter65.deserializeObjectString3();
        retrofit.client.Request request69 = serializedObjectSupporter65.deserializeObjectRequest7();
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter65;
        retrofit.RestAdapter.LogLevel logLevel71 = restAdapter23.logLevel;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNull(profiler27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "GET" + "'", str29, "GET");
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "http://example.com/" + "'", str31, "http://example.com/");
        org.junit.Assert.assertNotNull(server32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-" + "'", str37, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor38);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(request41);
        org.junit.Assert.assertNotNull(gsonConverter42);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Retrofit-Idle" + "'", str53, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor54);
        org.junit.Assert.assertNull(profiler55);
        org.junit.Assert.assertNull(executor59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(executor64);
        org.junit.Assert.assertNotNull(request66);
        org.junit.Assert.assertNotNull(server67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "GET" + "'", str68, "GET");
        org.junit.Assert.assertNotNull(request69);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0881");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        builder0.ensureSaneDefaults();
        retrofit.client.Client.Provider provider4 = null;
        builder0.setclientProvider(provider4);
        java.util.concurrent.Executor executor6 = null;
        builder0.httpExecutor = executor6;
        retrofit.client.Client.Provider provider8 = null;
        builder0.clientProvider = provider8;
        retrofit.converter.Converter converter10 = builder0.converter;
        java.util.concurrent.Executor executor11 = builder0.gethttpExecutor();
        java.util.concurrent.Executor executor12 = builder0.callbackExecutor;
        org.junit.Assert.assertNotNull(converter10);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNotNull(executor12);
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0882");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        java.util.concurrent.Executor executor5 = null;
        builder0.httpExecutor = executor5;
        java.util.concurrent.Executor executor7 = null;
        builder0.setcallbackExecutor(executor7);
        retrofit.client.Client.Provider provider9 = null;
        builder0.setclientProvider(provider9);
        retrofit.RestAdapter.Builder builder12 = builder0.setServer("Retrofit-Idle");
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request14 = serializedObjectSupporter13.deserializeObjectRequest1();
        retrofit.Server server15 = serializedObjectSupporter13.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder16 = builder12.setServer(server15);
        retrofit.Profiler profiler17 = null;
        builder12.profiler = profiler17;
        retrofit.Profiler profiler19 = builder12.profiler;
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(request14);
        org.junit.Assert.assertNotNull(server15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNull(profiler19);
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0883");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        retrofit.converter.Converter converter5 = builder0.converter;
        java.util.concurrent.Executor executor6 = null;
        builder0.httpExecutor = executor6;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request9 = serializedObjectSupporter8.deserializeObjectRequest1();
        retrofit.Server server10 = serializedObjectSupporter8.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter8.deserializeObjectConverter3();
        builder0.converter = gsonConverter11;
        retrofit.client.Client.Provider provider13 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor15 = null;
        builder14.sethttpExecutor(executor15);
        retrofit.RequestInterceptor requestInterceptor17 = null;
        builder14.requestInterceptor = requestInterceptor17;
        java.util.concurrent.Executor executor19 = null;
        builder14.httpExecutor = executor19;
        java.util.concurrent.Executor executor21 = null;
        builder14.setcallbackExecutor(executor21);
        retrofit.client.Client.Provider provider23 = null;
        builder14.setclientProvider(provider23);
        retrofit.RestAdapter.Builder builder26 = builder14.setServer("Retrofit-Idle");
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        java.lang.String str28 = serializedObjectSupporter27.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter27.deserializeObjectConverter3();
        java.lang.String str30 = serializedObjectSupporter27.deserializeObjectString4();
        retrofit.Server server31 = serializedObjectSupporter27.deserializeObjectServer1();
        retrofit.client.Client.Provider provider32 = null;
        java.util.concurrent.Executor executor33 = null;
        java.util.concurrent.Executor executor34 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        java.lang.String str36 = serializedObjectSupporter35.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor37 = serializedObjectSupporter35.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request39 = serializedObjectSupporter38.deserializeObjectRequest1();
        retrofit.client.Request request40 = serializedObjectSupporter38.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter38.deserializeObjectConverter5();
        retrofit.Profiler profiler42 = null;
        retrofit.ErrorHandler errorHandler43 = null;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor45 = null;
        builder44.sethttpExecutor(executor45);
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        builder44.log = log47;
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter(server31, provider32, executor33, executor34, requestInterceptor37, (retrofit.converter.Converter) gsonConverter41, profiler42, errorHandler43, log47, logLevel49);
        retrofit.RestAdapter.LogLevel logLevel51 = restAdapter50.getLogLevel();
        retrofit.converter.Converter converter52 = restAdapter50.converter;
        retrofit.RequestInterceptor requestInterceptor53 = restAdapter50.requestInterceptor;
        builder26.requestInterceptor = requestInterceptor53;
        builder0.requestInterceptor = requestInterceptor53;
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(request9);
        org.junit.Assert.assertNotNull(server10);
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "GET" + "'", str28, "GET");
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "http://example.com/" + "'", str30, "http://example.com/");
        org.junit.Assert.assertNotNull(server31);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Retrofit-" + "'", str36, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor37);
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(gsonConverter41);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter52);
        org.junit.Assert.assertNotNull(requestInterceptor53);
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0884");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest5();
        java.util.List<retrofit.client.Header> headerList7 = request6.getHeaders();
        java.lang.String str8 = request6.getMethod();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "GET" + "'", str8, "GET");
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0885");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.converter.Converter converter3 = builder0.converter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("GET");
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor7 = null;
        builder6.sethttpExecutor(executor7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter3();
        builder6.converter = gsonConverter11;
        retrofit.client.Client.Provider provider13 = null;
        builder6.clientProvider = provider13;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter3();
        java.lang.String str18 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter15.deserializeObjectConverter6();
        builder6.converter = gsonConverter19;
        builder0.converter = gsonConverter19;
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        java.lang.String str23 = serializedObjectSupporter22.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter24 = serializedObjectSupporter22.deserializeObjectConverter3();
        java.lang.String str25 = serializedObjectSupporter22.deserializeObjectString4();
        retrofit.Server server26 = serializedObjectSupporter22.deserializeObjectServer1();
        retrofit.client.Client.Provider provider27 = null;
        java.util.concurrent.Executor executor28 = null;
        java.util.concurrent.Executor executor29 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        java.lang.String str31 = serializedObjectSupporter30.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter30.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request34 = serializedObjectSupporter33.deserializeObjectRequest1();
        retrofit.client.Request request35 = serializedObjectSupporter33.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter33.deserializeObjectConverter5();
        retrofit.Profiler profiler37 = null;
        retrofit.ErrorHandler errorHandler38 = null;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor40 = null;
        builder39.sethttpExecutor(executor40);
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        builder39.log = log42;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter(server26, provider27, executor28, executor29, requestInterceptor32, (retrofit.converter.Converter) gsonConverter36, profiler37, errorHandler38, log42, logLevel44);
        java.util.concurrent.Executor executor46 = restAdapter45.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor47 = restAdapter45.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor48 = restAdapter45.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor49 = restAdapter45.getrequestInterceptor();
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor51 = null;
        builder50.sethttpExecutor(executor51);
        retrofit.RequestInterceptor requestInterceptor53 = null;
        builder50.requestInterceptor = requestInterceptor53;
        retrofit.converter.Converter converter55 = builder50.converter;
        java.util.concurrent.Executor executor56 = null;
        builder50.httpExecutor = executor56;
        retrofit.RestAdapter.LogLevel logLevel58 = builder50.logLevel;
        restAdapter45.logLevel = logLevel58;
        builder0.logLevel = logLevel58;
        java.util.concurrent.Executor executor61 = builder0.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor62 = builder0.requestInterceptor;
        retrofit.RestAdapter restAdapter63 = builder0.build();
        java.util.concurrent.Executor executor64 = builder0.getcallbackExecutor();
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "GET" + "'", str10, "GET");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "GET" + "'", str16, "GET");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "GET" + "'", str23, "GET");
        org.junit.Assert.assertNotNull(gsonConverter24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "http://example.com/" + "'", str25, "http://example.com/");
        org.junit.Assert.assertNotNull(server26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Retrofit-" + "'", str31, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(request34);
        org.junit.Assert.assertNotNull(request35);
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor46);
        org.junit.Assert.assertNotNull(requestInterceptor47);
        org.junit.Assert.assertNotNull(requestInterceptor48);
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNull(converter55);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor61);
        org.junit.Assert.assertNull(requestInterceptor62);
        org.junit.Assert.assertNotNull(restAdapter63);
        org.junit.Assert.assertNotNull(executor64);
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0886");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter1();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter2();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(gsonConverter5);
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0887");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        java.lang.String str26 = restAdapter23.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        retrofit.Profiler profiler28 = restAdapter23.getprofiler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = restAdapter23.serializedObjectSupporter;
        retrofit.Profiler profiler30 = restAdapter23.profiler;
        retrofit.converter.Converter converter31 = restAdapter23.converter;
        java.util.concurrent.Executor executor32 = restAdapter23.getcallbackExecutor();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertNull(serializedObjectSupporter29);
        org.junit.Assert.assertNull(profiler30);
        org.junit.Assert.assertNotNull(converter31);
        org.junit.Assert.assertNull(executor32);
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0888");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        java.util.concurrent.Executor executor26 = restAdapter23.httpExecutor;
        retrofit.Server server27 = restAdapter23.getserver();
        java.util.concurrent.Executor executor28 = restAdapter23.callbackExecutor;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor30 = null;
        builder29.sethttpExecutor(executor30);
        retrofit.RestAdapter.Log log32 = null;
        builder29.log = log32;
        java.util.concurrent.Executor executor34 = builder29.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = builder29.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler36 = builder29.errorHandler;
        retrofit.converter.Converter converter37 = builder29.converter;
        retrofit.RestAdapter.LogLevel logLevel38 = builder29.logLevel;
        boolean boolean39 = logLevel38.log();
        restAdapter23.logLevel = logLevel38;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNull(executor34);
        org.junit.Assert.assertNull(serializedObjectSupporter35);
        org.junit.Assert.assertNull(errorHandler36);
        org.junit.Assert.assertNull(converter37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0889");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter23.logLevel = logLevel25;
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = restAdapter23.serializedObjectSupporter;
        retrofit.RestAdapter.Log log28 = restAdapter23.log;
        retrofit.RequestInterceptor requestInterceptor29 = restAdapter23.requestInterceptor;
        retrofit.Server server30 = restAdapter23.getserver();
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter23.logLevel;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(serializedObjectSupporter27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(requestInterceptor29);
        org.junit.Assert.assertNotNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0890");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        java.util.concurrent.Executor executor3 = null;
        builder0.httpExecutor = executor3;
        retrofit.client.Client.Provider provider5 = null;
        builder0.setclientProvider(provider5);
        java.util.concurrent.Executor executor7 = null;
        builder0.sethttpExecutor(executor7);
        java.util.concurrent.Executor executor9 = builder0.httpExecutor;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor11 = null;
        builder10.sethttpExecutor(executor11);
        retrofit.RequestInterceptor requestInterceptor13 = null;
        builder10.requestInterceptor = requestInterceptor13;
        java.util.concurrent.Executor executor15 = null;
        builder10.httpExecutor = executor15;
        java.util.concurrent.Executor executor17 = null;
        builder10.setcallbackExecutor(executor17);
        retrofit.client.Client.Provider provider19 = null;
        builder10.setclientProvider(provider19);
        retrofit.RestAdapter.Builder builder22 = builder10.setServer("Retrofit-Idle");
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest1();
        retrofit.Server server25 = serializedObjectSupporter23.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder26 = builder22.setServer(server25);
        retrofit.RestAdapter.Builder builder27 = builder0.setServer(server25);
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder27);
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0891");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.converter.Converter converter4 = builder3.converter;
        java.util.concurrent.Executor executor5 = null;
        builder3.sethttpExecutor(executor5);
        retrofit.RestAdapter.Builder builder8 = builder3.setServer("GET");
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor10 = null;
        builder9.setcallbackExecutor(executor10);
        java.util.concurrent.Executor executor12 = null;
        builder9.setcallbackExecutor(executor12);
        builder9.ensureSaneDefaults();
        java.util.concurrent.Executor executor15 = builder9.callbackExecutor;
        builder8.setcallbackExecutor(executor15);
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter17.deserializeObjectConverter3();
        java.lang.String str20 = serializedObjectSupporter17.deserializeObjectString4();
        retrofit.Server server21 = serializedObjectSupporter17.deserializeObjectServer1();
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        java.lang.String str26 = serializedObjectSupporter25.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor27 = serializedObjectSupporter25.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request29 = serializedObjectSupporter28.deserializeObjectRequest1();
        retrofit.client.Request request30 = serializedObjectSupporter28.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter28.deserializeObjectConverter5();
        retrofit.Profiler profiler32 = null;
        retrofit.ErrorHandler errorHandler33 = null;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor35 = null;
        builder34.sethttpExecutor(executor35);
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        builder34.log = log37;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor27, (retrofit.converter.Converter) gsonConverter31, profiler32, errorHandler33, log37, logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter40.getLogLevel();
        java.lang.String str42 = restAdapter40.getIDLE_THREAD_NAME();
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = restAdapter40.serializedObjectSupporter;
        retrofit.RestAdapter.Log log44 = restAdapter40.log;
        retrofit.Server server45 = restAdapter40.getserver();
        builder8.server = server45;
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        java.lang.String str48 = serializedObjectSupporter47.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter49 = serializedObjectSupporter47.deserializeObjectConverter3();
        java.lang.String str50 = serializedObjectSupporter47.deserializeObjectString4();
        retrofit.Server server51 = serializedObjectSupporter47.deserializeObjectServer1();
        retrofit.client.Client.Provider provider52 = null;
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        java.lang.String str56 = serializedObjectSupporter55.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor57 = serializedObjectSupporter55.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request59 = serializedObjectSupporter58.deserializeObjectRequest1();
        retrofit.client.Request request60 = serializedObjectSupporter58.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter58.deserializeObjectConverter5();
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor65 = null;
        builder64.sethttpExecutor(executor65);
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        builder64.log = log67;
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter70 = new retrofit.RestAdapter(server51, provider52, executor53, executor54, requestInterceptor57, (retrofit.converter.Converter) gsonConverter61, profiler62, errorHandler63, log67, logLevel69);
        java.util.concurrent.Executor executor71 = restAdapter70.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor72 = restAdapter70.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel73 = restAdapter70.logLevel;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter75 = builder74.serializedObjectSupporter;
        retrofit.Profiler profiler76 = builder74.profiler;
        retrofit.RestAdapter.LogLevel logLevel77 = builder74.logLevel;
        boolean boolean78 = logLevel77.log();
        restAdapter70.setLogLevel(logLevel77);
        retrofit.RequestInterceptor requestInterceptor80 = restAdapter70.getrequestInterceptor();
        retrofit.RestAdapter.Builder builder81 = builder8.setRequestInterceptor(requestInterceptor80);
        java.util.concurrent.Executor executor82 = builder8.callbackExecutor;
        builder8.ensureSaneDefaults();
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "GET" + "'", str18, "GET");
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "http://example.com/" + "'", str20, "http://example.com/");
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-" + "'", str26, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(request29);
        org.junit.Assert.assertNotNull(request30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Retrofit-Idle" + "'", str42, "Retrofit-Idle");
        org.junit.Assert.assertNull(serializedObjectSupporter43);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(server45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "GET" + "'", str48, "GET");
        org.junit.Assert.assertNotNull(gsonConverter49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "http://example.com/" + "'", str50, "http://example.com/");
        org.junit.Assert.assertNotNull(server51);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Retrofit-" + "'", str56, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertNotNull(request59);
        org.junit.Assert.assertNotNull(request60);
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor71);
        org.junit.Assert.assertNotNull(requestInterceptor72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(serializedObjectSupporter75);
        org.junit.Assert.assertNull(profiler76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(requestInterceptor80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(executor82);
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0892");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter0.deserializeObjectConverter6();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(gsonConverter8);
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0893");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.mime.TypedOutput typedOutput3 = request2.getBody();
        java.util.List<retrofit.client.Header> headerList4 = request2.getHeaders();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNull(typedOutput3);
        org.junit.Assert.assertNotNull(headerList4);
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0894");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest7();
        java.util.List<retrofit.client.Header> headerList3 = request2.getHeaders();
        java.util.List<retrofit.client.Header> headerList4 = request2.getHeaders();
        retrofit.mime.TypedOutput typedOutput5 = request2.getBody();
        java.lang.String str6 = request2.getMethod();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(headerList3);
        org.junit.Assert.assertNotNull(headerList4);
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "GET" + "'", str6, "GET");
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0895");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.client.Client.Provider provider2 = null;
        builder0.setclientProvider(provider2);
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor5 = null;
        builder4.sethttpExecutor(executor5);
        retrofit.RestAdapter.Log log7 = null;
        builder4.log = log7;
        java.util.concurrent.Executor executor9 = builder4.callbackExecutor;
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        builder4.log = log10;
        retrofit.RestAdapter.Builder builder12 = builder0.setLog(log10);
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter13.deserializeObjectConverter3();
        java.lang.String str16 = serializedObjectSupporter13.deserializeObjectString4();
        retrofit.client.Request request17 = serializedObjectSupporter13.deserializeObjectRequest6();
        retrofit.Server server18 = serializedObjectSupporter13.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder19 = builder12.setServer(server18);
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest1();
        retrofit.client.Request request25 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.RequestInterceptor requestInterceptor26 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request28 = serializedObjectSupporter27.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter27.deserializeObjectConverter2();
        retrofit.Profiler profiler30 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        java.lang.String str32 = serializedObjectSupporter31.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter3();
        java.lang.String str34 = serializedObjectSupporter31.deserializeObjectString4();
        retrofit.client.Request request35 = serializedObjectSupporter31.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler36 = serializedObjectSupporter31.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = builder37.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = builder37.serializedObjectSupporter;
        retrofit.client.Client.Provider provider40 = null;
        builder37.clientProvider = provider40;
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        builder37.log = log42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor45 = null;
        builder44.setcallbackExecutor(executor45);
        java.util.concurrent.Executor executor47 = null;
        builder44.setcallbackExecutor(executor47);
        retrofit.client.Client.Provider provider49 = null;
        builder44.clientProvider = provider49;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = builder51.serializedObjectSupporter;
        retrofit.Profiler profiler53 = builder51.profiler;
        retrofit.RestAdapter.LogLevel logLevel54 = builder51.logLevel;
        builder44.logLevel = logLevel54;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter(server18, provider20, executor21, executor22, requestInterceptor26, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler36, log42, logLevel54);
        retrofit.RequestInterceptor requestInterceptor57 = restAdapter56.requestInterceptor;
        java.util.concurrent.Executor executor58 = restAdapter56.getcallbackExecutor();
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "GET" + "'", str14, "GET");
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(server18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(request25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNotNull(request28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "GET" + "'", str32, "GET");
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "http://example.com/" + "'", str34, "http://example.com/");
        org.junit.Assert.assertNotNull(request35);
        org.junit.Assert.assertNotNull(errorHandler36);
        org.junit.Assert.assertNull(serializedObjectSupporter38);
        org.junit.Assert.assertNull(serializedObjectSupporter39);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNull(serializedObjectSupporter52);
        org.junit.Assert.assertNull(profiler53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertNull(executor58);
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0896");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest7();
        java.util.List<retrofit.client.Header> headerList3 = request2.getHeaders();
        java.util.List<retrofit.client.Header> headerList4 = request2.getHeaders();
        retrofit.mime.TypedOutput typedOutput5 = request2.getBody();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass6 = typedOutput5.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(headerList3);
        org.junit.Assert.assertNotNull(headerList4);
        org.junit.Assert.assertNull(typedOutput5);
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0897");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.converter;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        java.lang.String str27 = restAdapter23.getTHREAD_PREFIX();
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = builder28.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = builder28.serializedObjectSupporter;
        java.util.concurrent.Executor executor31 = null;
        builder28.httpExecutor = executor31;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request34 = serializedObjectSupporter33.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter35 = serializedObjectSupporter33.deserializeObjectConverter2();
        builder28.serializedObjectSupporter = serializedObjectSupporter33;
        java.lang.String str37 = serializedObjectSupporter33.deserializeObjectString2();
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter33;
        java.lang.Class<?> wildcardClass39 = restAdapter23.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Retrofit-" + "'", str27, "Retrofit-");
        org.junit.Assert.assertNull(serializedObjectSupporter29);
        org.junit.Assert.assertNull(serializedObjectSupporter30);
        org.junit.Assert.assertNotNull(request34);
        org.junit.Assert.assertNotNull(gsonConverter35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-Idle" + "'", str37, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0898");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest6();
        java.lang.String str6 = request5.getMethod();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "GET" + "'", str3, "GET");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "GET" + "'", str6, "GET");
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0899");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        java.lang.String str26 = serializedObjectSupporter25.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter25.deserializeObjectConverter3();
        java.lang.String str28 = serializedObjectSupporter25.deserializeObjectString4();
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter25;
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter23.getLogLevel();
        java.lang.String str31 = restAdapter23.getTHREAD_PREFIX();
        java.util.concurrent.Executor executor32 = restAdapter23.callbackExecutor;
        retrofit.converter.Converter converter33 = restAdapter23.getconverter();
        retrofit.client.Client.Provider provider34 = restAdapter23.getclientProvider();
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = restAdapter23.serializedObjectSupporter;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "GET" + "'", str26, "GET");
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Retrofit-" + "'", str31, "Retrofit-");
        org.junit.Assert.assertNull(executor32);
        org.junit.Assert.assertNotNull(converter33);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNotNull(serializedObjectSupporter35);
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0900");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        java.util.concurrent.Executor executor5 = builder0.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler7 = builder0.errorHandler;
        retrofit.converter.Converter converter8 = builder0.converter;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor10 = null;
        builder9.sethttpExecutor(executor10);
        builder9.ensureSaneDefaults();
        retrofit.client.Client.Provider provider13 = null;
        builder9.setclientProvider(provider13);
        retrofit.client.Client.Provider provider15 = null;
        builder9.setclientProvider(provider15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.setcallbackExecutor(executor18);
        java.util.concurrent.Executor executor20 = builder17.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel21 = builder17.logLevel;
        retrofit.Profiler profiler22 = builder17.profiler;
        retrofit.RestAdapter.Builder builder24 = builder17.setServer("hi!");
        retrofit.converter.Converter converter25 = builder24.converter;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider27 = builder26.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder29 = builder26.setLogLevel(logLevel28);
        retrofit.converter.Converter converter30 = builder29.converter;
        builder29.ensureSaneDefaults();
        retrofit.client.Client.Provider provider32 = builder29.clientProvider;
        builder24.clientProvider = provider32;
        retrofit.RestAdapter.Builder builder34 = builder9.setClient(provider32);
        builder0.clientProvider = provider32;
        retrofit.converter.Converter converter36 = builder0.converter;
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(errorHandler7);
        org.junit.Assert.assertNull(converter8);
        org.junit.Assert.assertNull(executor20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(converter25);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNull(converter30);
        org.junit.Assert.assertNotNull(provider32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNull(converter36);
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0901");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest8();
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.getUrl();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0902");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.ErrorHandler errorHandler3 = builder0.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        java.lang.String str5 = serializedObjectSupporter4.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter4.deserializeObjectConverter3();
        java.lang.String str7 = serializedObjectSupporter4.deserializeObjectString4();
        retrofit.Server server8 = serializedObjectSupporter4.deserializeObjectServer1();
        retrofit.client.Client.Provider provider9 = null;
        java.util.concurrent.Executor executor10 = null;
        java.util.concurrent.Executor executor11 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor14 = serializedObjectSupporter12.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request16 = serializedObjectSupporter15.deserializeObjectRequest1();
        retrofit.client.Request request17 = serializedObjectSupporter15.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter15.deserializeObjectConverter5();
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor22 = null;
        builder21.sethttpExecutor(executor22);
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        builder21.log = log24;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter(server8, provider9, executor10, executor11, requestInterceptor14, (retrofit.converter.Converter) gsonConverter18, profiler19, errorHandler20, log24, logLevel26);
        java.util.concurrent.Executor executor28 = restAdapter27.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor29 = restAdapter27.requestInterceptor;
        retrofit.RestAdapter.Builder builder30 = builder0.setRequestInterceptor(requestInterceptor29);
        retrofit.ErrorHandler errorHandler31 = builder30.errorHandler;
        retrofit.client.Client.Provider provider32 = null;
        builder30.setclientProvider(provider32);
        retrofit.client.Client.Provider provider34 = builder30.clientProvider;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor36 = null;
        builder35.setcallbackExecutor(executor36);
        java.util.concurrent.Executor executor38 = null;
        builder35.setcallbackExecutor(executor38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.FULL;
        builder35.logLevel = logLevel40;
        retrofit.client.Client.Provider provider42 = builder35.getclientProvider();
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor44 = null;
        builder43.sethttpExecutor(executor44);
        retrofit.RestAdapter.Log log46 = null;
        builder43.log = log46;
        retrofit.RestAdapter.Log log48 = builder43.log;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor50 = null;
        builder49.sethttpExecutor(executor50);
        retrofit.RequestInterceptor requestInterceptor52 = null;
        builder49.requestInterceptor = requestInterceptor52;
        java.util.concurrent.Executor executor54 = null;
        builder49.httpExecutor = executor54;
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        java.lang.String str57 = serializedObjectSupporter56.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter58 = serializedObjectSupporter56.deserializeObjectConverter3();
        java.lang.String str59 = serializedObjectSupporter56.deserializeObjectString4();
        retrofit.client.Request request60 = serializedObjectSupporter56.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler61 = serializedObjectSupporter56.deserializeObjectErrorHandler1();
        builder49.errorHandler = errorHandler61;
        retrofit.RestAdapter.Builder builder63 = builder43.setErrorHandler(errorHandler61);
        retrofit.RestAdapter.Builder builder64 = builder35.setErrorHandler(errorHandler61);
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor66 = null;
        builder65.sethttpExecutor(executor66);
        retrofit.SerializedObjectSupporter serializedObjectSupporter68 = new retrofit.SerializedObjectSupporter();
        java.lang.String str69 = serializedObjectSupporter68.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter70 = serializedObjectSupporter68.deserializeObjectConverter3();
        builder65.converter = gsonConverter70;
        retrofit.client.Client.Provider provider72 = null;
        builder65.clientProvider = provider72;
        retrofit.RestAdapter.LogLevel logLevel74 = builder65.logLevel;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor76 = null;
        builder75.sethttpExecutor(executor76);
        retrofit.RequestInterceptor requestInterceptor78 = null;
        builder75.requestInterceptor = requestInterceptor78;
        retrofit.converter.Converter converter80 = builder75.converter;
        java.util.concurrent.Executor executor81 = null;
        builder75.httpExecutor = executor81;
        retrofit.RestAdapter.LogLevel logLevel83 = builder75.logLevel;
        builder65.logLevel = logLevel83;
        java.util.concurrent.Executor executor85 = builder65.callbackExecutor;
        retrofit.RestAdapter.Builder builder86 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider87 = builder86.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel88 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder89 = builder86.setLogLevel(logLevel88);
        retrofit.converter.Converter converter90 = builder89.converter;
        builder89.ensureSaneDefaults();
        retrofit.client.Client.Provider provider92 = builder89.clientProvider;
        builder65.setclientProvider(provider92);
        java.util.concurrent.Executor executor94 = builder65.httpExecutor;
        retrofit.client.Client.Provider provider95 = builder65.clientProvider;
        builder35.setclientProvider(provider95);
        builder30.setclientProvider(provider95);
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "GET" + "'", str5, "GET");
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-" + "'", str13, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor14);
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNotNull(requestInterceptor29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(errorHandler31);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider42);
        org.junit.Assert.assertNull(log48);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "GET" + "'", str57, "GET");
        org.junit.Assert.assertNotNull(gsonConverter58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "http://example.com/" + "'", str59, "http://example.com/");
        org.junit.Assert.assertNotNull(request60);
        org.junit.Assert.assertNotNull(errorHandler61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "GET" + "'", str69, "GET");
        org.junit.Assert.assertNotNull(gsonConverter70);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter80);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor85);
        org.junit.Assert.assertNull(provider87);
        org.junit.Assert.assertTrue("'" + logLevel88 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel88.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNull(converter90);
        org.junit.Assert.assertNotNull(provider92);
        org.junit.Assert.assertNull(executor94);
        org.junit.Assert.assertNotNull(provider95);
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0903");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest5();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter6 = serializedObjectSupporter0.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(request5);
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0904");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        java.lang.String str26 = serializedObjectSupporter25.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter25.deserializeObjectConverter3();
        java.lang.String str28 = serializedObjectSupporter25.deserializeObjectString4();
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter25;
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter23.getLogLevel();
        java.lang.String str31 = restAdapter23.getTHREAD_PREFIX();
        java.util.concurrent.Executor executor32 = restAdapter23.callbackExecutor;
        retrofit.converter.Converter converter33 = restAdapter23.getconverter();
        retrofit.client.Client.Provider provider34 = restAdapter23.getclientProvider();
        retrofit.RestAdapter.Log log35 = restAdapter23.log;
        java.util.concurrent.Executor executor36 = restAdapter23.httpExecutor;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "GET" + "'", str26, "GET");
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Retrofit-" + "'", str31, "Retrofit-");
        org.junit.Assert.assertNull(executor32);
        org.junit.Assert.assertNotNull(converter33);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNull(executor36);
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0905");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        retrofit.RestAdapter.Log log5 = builder0.log;
        retrofit.Profiler profiler6 = builder0.profiler;
        retrofit.RestAdapter.Builder builder8 = builder0.setServer("http://example.com/");
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request10 = serializedObjectSupporter9.deserializeObjectRequest1();
        retrofit.client.Request request11 = serializedObjectSupporter9.deserializeObjectRequest5();
        java.lang.String str12 = serializedObjectSupporter9.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter9.deserializeObjectConverter7();
        builder0.converter = gsonConverter13;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter3();
        java.lang.String str18 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.Server server19 = serializedObjectSupporter15.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter15.deserializeObjectConverter6();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter15.deserializeObjectConverter6();
        retrofit.client.Request request22 = serializedObjectSupporter15.deserializeObjectRequest7();
        builder0.serializedObjectSupporter = serializedObjectSupporter15;
        retrofit.client.Request request24 = serializedObjectSupporter15.deserializeObjectRequest8();
        java.lang.String str25 = request24.url;
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNull(profiler6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "POST" + "'", str12, "POST");
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "GET" + "'", str16, "GET");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(server19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNotNull(request22);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "http://example.com/" + "'", str25, "http://example.com/");
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0906");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = builder0.requestInterceptor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        java.lang.String str5 = serializedObjectSupporter4.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter4.deserializeObjectConverter3();
        java.lang.String str7 = serializedObjectSupporter4.deserializeObjectString4();
        retrofit.client.Request request8 = serializedObjectSupporter4.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler9 = serializedObjectSupporter4.deserializeObjectErrorHandler1();
        builder0.errorHandler = errorHandler9;
        retrofit.RestAdapter.Log log11 = builder0.log;
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest8();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter2();
        retrofit.ErrorHandler errorHandler15 = serializedObjectSupporter12.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder16 = builder0.setErrorHandler(errorHandler15);
        org.junit.Assert.assertNull(requestInterceptor3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "GET" + "'", str5, "GET");
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(errorHandler9);
        org.junit.Assert.assertNull(log11);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(errorHandler15);
        org.junit.Assert.assertNotNull(builder16);
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0907");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter7();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString2();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter1();
        retrofit.client.Request request7 = serializedObjectSupporter0.deserializeObjectRequest1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Retrofit-Idle" + "'", str5, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(request7);
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0908");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter3();
        builder0.converter = gsonConverter5;
        retrofit.client.Client.Provider provider7 = null;
        builder0.clientProvider = provider7;
        retrofit.RestAdapter.LogLevel logLevel9 = builder0.logLevel;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor11 = null;
        builder10.sethttpExecutor(executor11);
        retrofit.RequestInterceptor requestInterceptor13 = null;
        builder10.requestInterceptor = requestInterceptor13;
        retrofit.converter.Converter converter15 = builder10.converter;
        java.util.concurrent.Executor executor16 = null;
        builder10.httpExecutor = executor16;
        retrofit.RestAdapter.LogLevel logLevel18 = builder10.logLevel;
        builder0.logLevel = logLevel18;
        java.util.concurrent.Executor executor20 = builder0.callbackExecutor;
        java.util.concurrent.Executor executor21 = builder0.callbackExecutor;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider23 = builder22.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder25 = builder22.setLogLevel(logLevel24);
        retrofit.converter.Converter converter26 = builder25.converter;
        retrofit.Profiler profiler27 = builder25.profiler;
        java.util.concurrent.Executor executor28 = builder25.callbackExecutor;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor30 = null;
        builder29.setcallbackExecutor(executor30);
        java.util.concurrent.Executor executor32 = null;
        builder29.setcallbackExecutor(executor32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.FULL;
        builder29.logLevel = logLevel34;
        retrofit.client.Client.Provider provider36 = builder29.getclientProvider();
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = builder29.serializedObjectSupporter;
        java.util.concurrent.Executor executor38 = builder29.callbackExecutor;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = builder39.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = builder39.serializedObjectSupporter;
        java.util.concurrent.Executor executor42 = null;
        builder39.httpExecutor = executor42;
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request45 = serializedObjectSupporter44.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter44.deserializeObjectConverter2();
        builder39.serializedObjectSupporter = serializedObjectSupporter44;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider49 = builder48.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder51 = builder48.setLogLevel(logLevel50);
        retrofit.converter.Converter converter52 = builder51.converter;
        java.util.concurrent.Executor executor53 = null;
        builder51.sethttpExecutor(executor53);
        retrofit.RestAdapter.Builder builder56 = builder51.setServer("GET");
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor58 = null;
        builder57.setcallbackExecutor(executor58);
        java.util.concurrent.Executor executor60 = null;
        builder57.setcallbackExecutor(executor60);
        builder57.ensureSaneDefaults();
        java.util.concurrent.Executor executor63 = builder57.callbackExecutor;
        builder56.setcallbackExecutor(executor63);
        builder39.httpExecutor = executor63;
        builder29.sethttpExecutor(executor63);
        builder25.callbackExecutor = executor63;
        builder0.setcallbackExecutor(executor63);
        retrofit.SerializedObjectSupporter serializedObjectSupporter69 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request70 = serializedObjectSupporter69.deserializeObjectRequest8();
        retrofit.converter.GsonConverter gsonConverter71 = serializedObjectSupporter69.deserializeObjectConverter2();
        retrofit.ErrorHandler errorHandler72 = serializedObjectSupporter69.deserializeObjectErrorHandler1();
        builder0.errorHandler = errorHandler72;
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor20);
        org.junit.Assert.assertNull(executor21);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(converter26);
        org.junit.Assert.assertNull(profiler27);
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider36);
        org.junit.Assert.assertNull(serializedObjectSupporter37);
        org.junit.Assert.assertNull(executor38);
        org.junit.Assert.assertNull(serializedObjectSupporter40);
        org.junit.Assert.assertNull(serializedObjectSupporter41);
        org.junit.Assert.assertNotNull(request45);
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNull(provider49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(executor63);
        org.junit.Assert.assertNotNull(request70);
        org.junit.Assert.assertNotNull(gsonConverter71);
        org.junit.Assert.assertNotNull(errorHandler72);
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0909");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = builder0.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel4 = builder0.logLevel;
        retrofit.Profiler profiler5 = builder0.profiler;
        retrofit.RestAdapter.Builder builder7 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor9 = null;
        builder8.sethttpExecutor(executor9);
        retrofit.RestAdapter.Log log11 = null;
        builder8.log = log11;
        java.util.concurrent.Executor executor13 = builder8.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = builder8.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = builder8.serializedObjectSupporter;
        builder8.ensureSaneDefaults();
        java.util.concurrent.Executor executor17 = builder8.httpExecutor;
        builder7.sethttpExecutor(executor17);
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNull(serializedObjectSupporter14);
        org.junit.Assert.assertNull(serializedObjectSupporter15);
        org.junit.Assert.assertNotNull(executor17);
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0910");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter3();
        builder0.converter = gsonConverter5;
        retrofit.client.Client.Provider provider7 = null;
        builder0.clientProvider = provider7;
        retrofit.RestAdapter.LogLevel logLevel9 = builder0.logLevel;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor11 = null;
        builder10.sethttpExecutor(executor11);
        retrofit.RequestInterceptor requestInterceptor13 = null;
        builder10.requestInterceptor = requestInterceptor13;
        retrofit.converter.Converter converter15 = builder10.converter;
        java.util.concurrent.Executor executor16 = null;
        builder10.httpExecutor = executor16;
        retrofit.RestAdapter.LogLevel logLevel18 = builder10.logLevel;
        builder0.logLevel = logLevel18;
        java.util.concurrent.Executor executor20 = builder0.callbackExecutor;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider22 = builder21.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder24 = builder21.setLogLevel(logLevel23);
        retrofit.converter.Converter converter25 = builder24.converter;
        builder24.ensureSaneDefaults();
        retrofit.client.Client.Provider provider27 = builder24.clientProvider;
        builder0.setclientProvider(provider27);
        java.util.concurrent.Executor executor29 = builder0.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        java.lang.String str31 = serializedObjectSupporter30.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter32 = serializedObjectSupporter30.deserializeObjectConverter3();
        java.lang.String str33 = serializedObjectSupporter30.deserializeObjectString4();
        retrofit.Server server34 = serializedObjectSupporter30.deserializeObjectServer1();
        retrofit.client.Client.Provider provider35 = null;
        java.util.concurrent.Executor executor36 = null;
        java.util.concurrent.Executor executor37 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        java.lang.String str39 = serializedObjectSupporter38.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor40 = serializedObjectSupporter38.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request42 = serializedObjectSupporter41.deserializeObjectRequest1();
        retrofit.client.Request request43 = serializedObjectSupporter41.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter44 = serializedObjectSupporter41.deserializeObjectConverter5();
        retrofit.Profiler profiler45 = null;
        retrofit.ErrorHandler errorHandler46 = null;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor48 = null;
        builder47.sethttpExecutor(executor48);
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        builder47.log = log50;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server34, provider35, executor36, executor37, requestInterceptor40, (retrofit.converter.Converter) gsonConverter44, profiler45, errorHandler46, log50, logLevel52);
        java.util.concurrent.Executor executor54 = restAdapter53.getcallbackExecutor();
        java.util.concurrent.Executor executor55 = restAdapter53.callbackExecutor;
        java.lang.String str56 = restAdapter53.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor57 = restAdapter53.httpExecutor;
        retrofit.client.Client.Provider provider58 = restAdapter53.getclientProvider();
        java.lang.String str59 = restAdapter53.getIDLE_THREAD_NAME();
        retrofit.RestAdapter.LogLevel logLevel60 = restAdapter53.logLevel;
        retrofit.RestAdapter.LogLevel logLevel61 = restAdapter53.logLevel;
        retrofit.RestAdapter.LogLevel logLevel62 = restAdapter53.logLevel;
        retrofit.RestAdapter.Builder builder63 = builder0.setLogLevel(logLevel62);
        boolean boolean64 = logLevel62.log();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor20);
        org.junit.Assert.assertNull(provider22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(converter25);
        org.junit.Assert.assertNotNull(provider27);
        org.junit.Assert.assertNull(executor29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "GET" + "'", str31, "GET");
        org.junit.Assert.assertNotNull(gsonConverter32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNotNull(server34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Retrofit-" + "'", str39, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor40);
        org.junit.Assert.assertNotNull(request42);
        org.junit.Assert.assertNotNull(request43);
        org.junit.Assert.assertNotNull(gsonConverter44);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor54);
        org.junit.Assert.assertNull(executor55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Retrofit-Idle" + "'", str56, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor57);
        org.junit.Assert.assertNull(provider58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Retrofit-Idle" + "'", str59, "Retrofit-Idle");
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0911");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        retrofit.converter.Converter converter5 = builder0.converter;
        java.util.concurrent.Executor executor6 = null;
        builder0.httpExecutor = executor6;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request9 = serializedObjectSupporter8.deserializeObjectRequest1();
        retrofit.Server server10 = serializedObjectSupporter8.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter8.deserializeObjectConverter3();
        builder0.converter = gsonConverter11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor14 = null;
        builder13.sethttpExecutor(executor14);
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter16.deserializeObjectConverter3();
        builder13.converter = gsonConverter18;
        retrofit.client.Client.Provider provider20 = null;
        builder13.clientProvider = provider20;
        retrofit.RestAdapter.LogLevel logLevel22 = builder13.logLevel;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor24 = null;
        builder23.sethttpExecutor(executor24);
        retrofit.RequestInterceptor requestInterceptor26 = null;
        builder23.requestInterceptor = requestInterceptor26;
        retrofit.converter.Converter converter28 = builder23.converter;
        java.util.concurrent.Executor executor29 = null;
        builder23.httpExecutor = executor29;
        retrofit.RestAdapter.LogLevel logLevel31 = builder23.logLevel;
        builder13.logLevel = logLevel31;
        java.util.concurrent.Executor executor33 = builder13.callbackExecutor;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider35 = builder34.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder37 = builder34.setLogLevel(logLevel36);
        retrofit.converter.Converter converter38 = builder37.converter;
        builder37.ensureSaneDefaults();
        retrofit.client.Client.Provider provider40 = builder37.clientProvider;
        builder13.setclientProvider(provider40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor43 = null;
        builder42.sethttpExecutor(executor43);
        retrofit.RestAdapter.Log log45 = null;
        builder42.log = log45;
        java.util.concurrent.Executor executor47 = builder42.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = builder42.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = builder42.serializedObjectSupporter;
        builder42.ensureSaneDefaults();
        java.util.concurrent.Executor executor51 = builder42.httpExecutor;
        builder13.setcallbackExecutor(executor51);
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor54 = null;
        builder53.sethttpExecutor(executor54);
        builder53.ensureSaneDefaults();
        retrofit.client.Client.Provider provider57 = null;
        builder53.setclientProvider(provider57);
        retrofit.client.Client.Provider provider59 = null;
        builder53.setclientProvider(provider59);
        java.util.concurrent.Executor executor61 = builder53.httpExecutor;
        retrofit.RestAdapter.Builder builder62 = builder0.setExecutors(executor51, executor61);
        retrofit.client.Client.Provider provider63 = builder62.clientProvider;
        java.util.concurrent.Executor executor64 = builder62.httpExecutor;
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(request9);
        org.junit.Assert.assertNotNull(server10);
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "GET" + "'", str17, "GET");
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter28);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor33);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(converter38);
        org.junit.Assert.assertNotNull(provider40);
        org.junit.Assert.assertNull(executor47);
        org.junit.Assert.assertNull(serializedObjectSupporter48);
        org.junit.Assert.assertNull(serializedObjectSupporter49);
        org.junit.Assert.assertNotNull(executor51);
        org.junit.Assert.assertNotNull(executor61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNull(provider63);
        org.junit.Assert.assertNotNull(executor64);
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0912");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter23.logLevel;
        java.util.concurrent.Executor executor27 = restAdapter23.getcallbackExecutor();
        retrofit.Server server28 = restAdapter23.server;
        java.lang.String str29 = restAdapter23.getTHREAD_PREFIX();
        retrofit.RequestInterceptor requestInterceptor30 = restAdapter23.requestInterceptor;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Retrofit-" + "'", str29, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor30);
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0913");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.getconverter();
        java.util.concurrent.Executor executor26 = restAdapter23.httpExecutor;
        java.lang.String str27 = restAdapter23.getIDLE_THREAD_NAME();
        retrofit.RequestInterceptor requestInterceptor28 = restAdapter23.getrequestInterceptor();
        java.util.concurrent.Executor executor29 = restAdapter23.httpExecutor;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Retrofit-Idle" + "'", str27, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNull(executor29);
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0914");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        java.lang.String str25 = restAdapter23.getIDLE_THREAD_NAME();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = restAdapter23.serializedObjectSupporter;
        java.lang.String str27 = restAdapter23.getTHREAD_PREFIX();
        retrofit.converter.Converter converter28 = restAdapter23.converter;
        retrofit.Profiler profiler29 = restAdapter23.getprofiler();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Retrofit-Idle" + "'", str25, "Retrofit-Idle");
        org.junit.Assert.assertNull(serializedObjectSupporter26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Retrofit-" + "'", str27, "Retrofit-");
        org.junit.Assert.assertNotNull(converter28);
        org.junit.Assert.assertNull(profiler29);
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0915");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = builder0.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel4 = builder0.logLevel;
        retrofit.Profiler profiler5 = builder0.profiler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor8 = null;
        builder7.setcallbackExecutor(executor8);
        retrofit.converter.Converter converter10 = builder7.converter;
        retrofit.RestAdapter.Builder builder12 = builder7.setServer("GET");
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor14 = null;
        builder13.sethttpExecutor(executor14);
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter16.deserializeObjectConverter3();
        builder13.converter = gsonConverter18;
        retrofit.client.Client.Provider provider20 = null;
        builder13.clientProvider = provider20;
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        java.lang.String str23 = serializedObjectSupporter22.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter24 = serializedObjectSupporter22.deserializeObjectConverter3();
        java.lang.String str25 = serializedObjectSupporter22.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter22.deserializeObjectConverter6();
        builder13.converter = gsonConverter26;
        builder7.converter = gsonConverter26;
        retrofit.RestAdapter restAdapter29 = builder7.build();
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request31 = serializedObjectSupporter30.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter32 = serializedObjectSupporter30.deserializeObjectConverter2();
        retrofit.client.Request request33 = serializedObjectSupporter30.deserializeObjectRequest8();
        retrofit.RequestInterceptor requestInterceptor34 = serializedObjectSupporter30.deserializeObjectRequestInterceptor1();
        java.lang.String str35 = serializedObjectSupporter30.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter30.deserializeObjectConverter3();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter30;
        java.util.concurrent.Executor executor38 = restAdapter29.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor39 = restAdapter29.getrequestInterceptor();
        retrofit.RestAdapter.RestHandler restHandler40 = restAdapter29.new RestHandler();
        retrofit.client.Client.Provider provider41 = restAdapter29.getclientProvider();
        retrofit.RestAdapter.Builder builder42 = builder0.setClient(provider41);
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler5);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(converter10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "GET" + "'", str17, "GET");
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "GET" + "'", str23, "GET");
        org.junit.Assert.assertNotNull(gsonConverter24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "http://example.com/" + "'", str25, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(restAdapter29);
        org.junit.Assert.assertNotNull(request31);
        org.junit.Assert.assertNotNull(gsonConverter32);
        org.junit.Assert.assertNotNull(request33);
        org.junit.Assert.assertNotNull(requestInterceptor34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "http://example.com/" + "'", str35, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertNotNull(executor38);
        org.junit.Assert.assertNotNull(requestInterceptor39);
        org.junit.Assert.assertNotNull(provider41);
        org.junit.Assert.assertNotNull(builder42);
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0916");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        java.lang.String str26 = serializedObjectSupporter25.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter25.deserializeObjectConverter3();
        java.lang.String str28 = serializedObjectSupporter25.deserializeObjectString4();
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter25;
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter23.getLogLevel();
        java.lang.String str31 = restAdapter23.getTHREAD_PREFIX();
        java.util.concurrent.Executor executor32 = restAdapter23.callbackExecutor;
        retrofit.converter.Converter converter33 = restAdapter23.getconverter();
        retrofit.client.Client.Provider provider34 = restAdapter23.getclientProvider();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter23.logLevel;
        retrofit.RestAdapter.Log log36 = restAdapter23.log;
        java.util.concurrent.Executor executor37 = restAdapter23.callbackExecutor;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "GET" + "'", str26, "GET");
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Retrofit-" + "'", str31, "Retrofit-");
        org.junit.Assert.assertNull(executor32);
        org.junit.Assert.assertNotNull(converter33);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNull(executor37);
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0917");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        java.lang.String str25 = restAdapter23.getIDLE_THREAD_NAME();
        retrofit.Profiler profiler26 = restAdapter23.profiler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        java.lang.String str28 = serializedObjectSupporter27.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter27.deserializeObjectConverter3();
        java.lang.String str30 = serializedObjectSupporter27.deserializeObjectString4();
        retrofit.Server server31 = serializedObjectSupporter27.deserializeObjectServer1();
        retrofit.client.Client.Provider provider32 = null;
        java.util.concurrent.Executor executor33 = null;
        java.util.concurrent.Executor executor34 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        java.lang.String str36 = serializedObjectSupporter35.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor37 = serializedObjectSupporter35.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request39 = serializedObjectSupporter38.deserializeObjectRequest1();
        retrofit.client.Request request40 = serializedObjectSupporter38.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter38.deserializeObjectConverter5();
        retrofit.Profiler profiler42 = null;
        retrofit.ErrorHandler errorHandler43 = null;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor45 = null;
        builder44.sethttpExecutor(executor45);
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        builder44.log = log47;
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter(server31, provider32, executor33, executor34, requestInterceptor37, (retrofit.converter.Converter) gsonConverter41, profiler42, errorHandler43, log47, logLevel49);
        java.util.concurrent.Executor executor51 = restAdapter50.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter50.logLevel = logLevel52;
        retrofit.SerializedObjectSupporter serializedObjectSupporter54 = restAdapter50.serializedObjectSupporter;
        retrofit.RestAdapter.Log log55 = restAdapter50.log;
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request57 = serializedObjectSupporter56.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter58 = serializedObjectSupporter56.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter59 = serializedObjectSupporter56.deserializeObjectConverter8();
        java.lang.String str60 = serializedObjectSupporter56.deserializeObjectString4();
        restAdapter50.serializedObjectSupporter = serializedObjectSupporter56;
        retrofit.client.Request request62 = serializedObjectSupporter56.deserializeObjectRequest7();
        retrofit.client.Request request63 = restAdapter23.logAndReplaceRequest(request62);
        java.lang.String str64 = request62.url;
        java.lang.String str65 = request62.getUrl();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Retrofit-Idle" + "'", str25, "Retrofit-Idle");
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "GET" + "'", str28, "GET");
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "http://example.com/" + "'", str30, "http://example.com/");
        org.junit.Assert.assertNotNull(server31);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Retrofit-" + "'", str36, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor37);
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(gsonConverter41);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(serializedObjectSupporter54);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(request57);
        org.junit.Assert.assertNotNull(gsonConverter58);
        org.junit.Assert.assertNotNull(gsonConverter59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "http://example.com/" + "'", str60, "http://example.com/");
        org.junit.Assert.assertNotNull(request62);
        org.junit.Assert.assertNotNull(request63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "http://example.com/" + "'", str64, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "http://example.com/" + "'", str65, "http://example.com/");
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0918");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter7();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter2();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter6 = serializedObjectSupporter0.deserializeObjectLogLevel2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(gsonConverter5);
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0919");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter4();
        java.lang.String str8 = serializedObjectSupporter0.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.mime.TypedString typedString10 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        java.lang.String str11 = serializedObjectSupporter0.deserializeObjectString4();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections collections12 = serializedObjectSupporter0.deserializeObjectList1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Collections$UnmodifiableRandomAccessList cannot be cast to java.util.Collections");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "POST" + "'", str8, "POST");
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(typedString10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "http://example.com/" + "'", str11, "http://example.com/");
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0920");
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request5 = serializedObjectSupporter4.deserializeObjectRequest1();
        retrofit.client.Request request6 = serializedObjectSupporter4.deserializeObjectRequest5();
        java.util.List<retrofit.client.Header> headerList7 = request6.getHeaders();
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request9 = serializedObjectSupporter8.deserializeObjectRequest8();
        retrofit.mime.TypedString typedString10 = serializedObjectSupporter8.deserializeObjectTypedOutput2();
        retrofit.client.Request request11 = new retrofit.client.Request("POST", "GET", headerList7, (retrofit.mime.TypedOutput) typedString10);
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = builder12.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = builder12.serializedObjectSupporter;
        java.util.concurrent.Executor executor15 = null;
        builder12.httpExecutor = executor15;
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request18 = serializedObjectSupporter17.deserializeObjectRequest1();
        retrofit.Server server19 = serializedObjectSupporter17.deserializeObjectServer1();
        java.lang.String str20 = serializedObjectSupporter17.deserializeObjectString3();
        builder12.serializedObjectSupporter = serializedObjectSupporter17;
        retrofit.mime.TypedString typedString22 = serializedObjectSupporter17.deserializeObjectTypedOutput2();
        retrofit.client.Request request23 = new retrofit.client.Request("Retrofit-", "POST", headerList7, (retrofit.mime.TypedOutput) typedString22);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(request9);
        org.junit.Assert.assertNotNull(typedString10);
        org.junit.Assert.assertNull(serializedObjectSupporter13);
        org.junit.Assert.assertNull(serializedObjectSupporter14);
        org.junit.Assert.assertNotNull(request18);
        org.junit.Assert.assertNotNull(server19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "GET" + "'", str20, "GET");
        org.junit.Assert.assertNotNull(typedString22);
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0921");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest5();
        java.lang.String str7 = serializedObjectSupporter0.deserializeObjectString1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Retrofit-" + "'", str7, "Retrofit-");
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0922");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        java.lang.String str26 = restAdapter23.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        retrofit.client.Client.Provider provider28 = restAdapter23.getclientProvider();
        java.lang.String str29 = restAdapter23.getIDLE_THREAD_NAME();
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter23.logLevel;
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter23.logLevel;
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter23.logLevel;
        retrofit.ErrorHandler errorHandler33 = restAdapter23.errorHandler;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(provider28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Retrofit-Idle" + "'", str29, "Retrofit-Idle");
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(errorHandler33);
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0923");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        retrofit.Profiler profiler27 = restAdapter23.getprofiler();
        retrofit.converter.Converter converter28 = restAdapter23.converter;
        retrofit.Profiler profiler29 = restAdapter23.getprofiler();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNull(profiler27);
        org.junit.Assert.assertNotNull(converter28);
        org.junit.Assert.assertNull(profiler29);
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0924");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter23.logLevel = logLevel25;
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = restAdapter23.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler28 = restAdapter23.geterrorHandler();
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter23.logLevel;
        retrofit.client.Response response31 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response33 = restAdapter23.logAndReplaceResponse("", response31, (long) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(serializedObjectSupporter27);
        org.junit.Assert.assertNull(errorHandler28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0925");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        retrofit.converter.Converter converter5 = builder0.converter;
        java.util.concurrent.Executor executor6 = null;
        builder0.httpExecutor = executor6;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request9 = serializedObjectSupporter8.deserializeObjectRequest1();
        retrofit.Server server10 = serializedObjectSupporter8.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter8.deserializeObjectConverter3();
        builder0.converter = gsonConverter11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor14 = null;
        builder13.sethttpExecutor(executor14);
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter16.deserializeObjectConverter3();
        builder13.converter = gsonConverter18;
        retrofit.client.Client.Provider provider20 = null;
        builder13.clientProvider = provider20;
        retrofit.RestAdapter.LogLevel logLevel22 = builder13.logLevel;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor24 = null;
        builder23.sethttpExecutor(executor24);
        retrofit.RequestInterceptor requestInterceptor26 = null;
        builder23.requestInterceptor = requestInterceptor26;
        retrofit.converter.Converter converter28 = builder23.converter;
        java.util.concurrent.Executor executor29 = null;
        builder23.httpExecutor = executor29;
        retrofit.RestAdapter.LogLevel logLevel31 = builder23.logLevel;
        builder13.logLevel = logLevel31;
        java.util.concurrent.Executor executor33 = builder13.callbackExecutor;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider35 = builder34.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder37 = builder34.setLogLevel(logLevel36);
        retrofit.converter.Converter converter38 = builder37.converter;
        builder37.ensureSaneDefaults();
        retrofit.client.Client.Provider provider40 = builder37.clientProvider;
        builder13.setclientProvider(provider40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor43 = null;
        builder42.sethttpExecutor(executor43);
        retrofit.RestAdapter.Log log45 = null;
        builder42.log = log45;
        java.util.concurrent.Executor executor47 = builder42.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = builder42.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = builder42.serializedObjectSupporter;
        builder42.ensureSaneDefaults();
        java.util.concurrent.Executor executor51 = builder42.httpExecutor;
        builder13.setcallbackExecutor(executor51);
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor54 = null;
        builder53.sethttpExecutor(executor54);
        builder53.ensureSaneDefaults();
        retrofit.client.Client.Provider provider57 = null;
        builder53.setclientProvider(provider57);
        retrofit.client.Client.Provider provider59 = null;
        builder53.setclientProvider(provider59);
        java.util.concurrent.Executor executor61 = builder53.httpExecutor;
        retrofit.RestAdapter.Builder builder62 = builder0.setExecutors(executor51, executor61);
        retrofit.Profiler profiler63 = builder0.profiler;
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(request9);
        org.junit.Assert.assertNotNull(server10);
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "GET" + "'", str17, "GET");
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter28);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor33);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(converter38);
        org.junit.Assert.assertNotNull(provider40);
        org.junit.Assert.assertNull(executor47);
        org.junit.Assert.assertNull(serializedObjectSupporter48);
        org.junit.Assert.assertNull(serializedObjectSupporter49);
        org.junit.Assert.assertNotNull(executor51);
        org.junit.Assert.assertNotNull(executor61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNull(profiler63);
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0926");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest3();
        java.util.List<retrofit.client.Header> headerList6 = request5.headers;
        retrofit.mime.TypedOutput typedOutput7 = request5.getBody();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(headerList6);
        org.junit.Assert.assertNotNull(typedOutput7);
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0927");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest7();
        java.lang.String str7 = request6.getMethod();
        java.util.List<retrofit.client.Header> headerList8 = request6.getHeaders();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "GET" + "'", str7, "GET");
        org.junit.Assert.assertNotNull(headerList8);
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0928");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        java.util.concurrent.Executor executor5 = builder0.callbackExecutor;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor7 = null;
        builder6.setcallbackExecutor(executor7);
        retrofit.RequestInterceptor requestInterceptor9 = builder6.requestInterceptor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = new retrofit.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter10.deserializeObjectConverter3();
        java.lang.String str13 = serializedObjectSupporter10.deserializeObjectString4();
        retrofit.client.Request request14 = serializedObjectSupporter10.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler15 = serializedObjectSupporter10.deserializeObjectErrorHandler1();
        builder6.errorHandler = errorHandler15;
        java.util.concurrent.Executor executor17 = builder6.getcallbackExecutor();
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor19 = null;
        builder18.setcallbackExecutor(executor19);
        java.util.concurrent.Executor executor21 = null;
        builder18.setcallbackExecutor(executor21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.FULL;
        builder18.logLevel = logLevel23;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor26 = null;
        builder25.setcallbackExecutor(executor26);
        java.util.concurrent.Executor executor28 = null;
        builder25.setcallbackExecutor(executor28);
        builder25.ensureSaneDefaults();
        java.util.concurrent.Executor executor31 = builder25.callbackExecutor;
        builder18.sethttpExecutor(executor31);
        builder6.httpExecutor = executor31;
        builder0.httpExecutor = executor31;
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(requestInterceptor9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "GET" + "'", str11, "GET");
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "http://example.com/" + "'", str13, "http://example.com/");
        org.junit.Assert.assertNotNull(request14);
        org.junit.Assert.assertNotNull(errorHandler15);
        org.junit.Assert.assertNull(executor17);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(executor31);
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0929");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.converter.Converter converter4 = builder3.converter;
        java.util.concurrent.Executor executor5 = null;
        builder3.sethttpExecutor(executor5);
        retrofit.RestAdapter.Builder builder8 = builder3.setServer("GET");
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = null;
        builder8.serializedObjectSupporter = serializedObjectSupporter9;
        retrofit.client.Client.Provider provider11 = builder8.getclientProvider();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter12.deserializeObjectConverter7();
        builder8.converter = gsonConverter13;
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(gsonConverter13);
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0930");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter3 = serializedObjectSupporter0.deserializeObjectLogLevel1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0931");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        retrofit.client.Client.Provider provider3 = null;
        builder0.clientProvider = provider3;
        java.util.concurrent.Executor executor5 = null;
        builder0.callbackExecutor = executor5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = builder7.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = builder7.serializedObjectSupporter;
        retrofit.client.Client.Provider provider10 = null;
        builder7.clientProvider = provider10;
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        builder7.log = log12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor15 = null;
        builder14.sethttpExecutor(executor15);
        retrofit.RestAdapter.Log log17 = null;
        builder14.log = log17;
        retrofit.RestAdapter.Log log19 = builder14.log;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor21 = null;
        builder20.sethttpExecutor(executor21);
        retrofit.RequestInterceptor requestInterceptor23 = null;
        builder20.requestInterceptor = requestInterceptor23;
        java.util.concurrent.Executor executor25 = null;
        builder20.httpExecutor = executor25;
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        java.lang.String str28 = serializedObjectSupporter27.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter27.deserializeObjectConverter3();
        java.lang.String str30 = serializedObjectSupporter27.deserializeObjectString4();
        retrofit.client.Request request31 = serializedObjectSupporter27.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler32 = serializedObjectSupporter27.deserializeObjectErrorHandler1();
        builder20.errorHandler = errorHandler32;
        retrofit.RestAdapter.Builder builder34 = builder14.setErrorHandler(errorHandler32);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor36 = null;
        builder35.sethttpExecutor(executor36);
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        java.lang.String str39 = serializedObjectSupporter38.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter40 = serializedObjectSupporter38.deserializeObjectConverter3();
        builder35.converter = gsonConverter40;
        retrofit.client.Client.Provider provider42 = null;
        builder35.clientProvider = provider42;
        retrofit.RestAdapter.LogLevel logLevel44 = builder35.logLevel;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor46 = null;
        builder45.sethttpExecutor(executor46);
        retrofit.RequestInterceptor requestInterceptor48 = null;
        builder45.requestInterceptor = requestInterceptor48;
        retrofit.converter.Converter converter50 = builder45.converter;
        java.util.concurrent.Executor executor51 = null;
        builder45.httpExecutor = executor51;
        retrofit.RestAdapter.LogLevel logLevel53 = builder45.logLevel;
        builder35.logLevel = logLevel53;
        java.util.concurrent.Executor executor55 = builder35.callbackExecutor;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider57 = builder56.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder59 = builder56.setLogLevel(logLevel58);
        retrofit.converter.Converter converter60 = builder59.converter;
        builder59.ensureSaneDefaults();
        retrofit.client.Client.Provider provider62 = builder59.clientProvider;
        builder35.setclientProvider(provider62);
        builder14.setclientProvider(provider62);
        retrofit.RestAdapter.Builder builder65 = builder7.setClient(provider62);
        builder0.clientProvider = provider62;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNull(log19);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "GET" + "'", str28, "GET");
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "http://example.com/" + "'", str30, "http://example.com/");
        org.junit.Assert.assertNotNull(request31);
        org.junit.Assert.assertNotNull(errorHandler32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "GET" + "'", str39, "GET");
        org.junit.Assert.assertNotNull(gsonConverter40);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter50);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor55);
        org.junit.Assert.assertNull(provider57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNull(converter60);
        org.junit.Assert.assertNotNull(provider62);
        org.junit.Assert.assertNotNull(builder65);
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0932");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter23.getLogLevel();
        retrofit.RestAdapter.Log log26 = restAdapter23.log;
        retrofit.RestAdapter.LogLevel logLevel27 = restAdapter23.logLevel;
        retrofit.ErrorHandler errorHandler28 = restAdapter23.errorHandler;
        java.util.concurrent.Executor executor29 = restAdapter23.callbackExecutor;
        java.lang.String str30 = restAdapter23.getTHREAD_PREFIX();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(errorHandler28);
        org.junit.Assert.assertNull(executor29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Retrofit-" + "'", str30, "Retrofit-");
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0933");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.converter;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        java.lang.String str27 = restAdapter23.getTHREAD_PREFIX();
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = builder28.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = builder28.serializedObjectSupporter;
        java.util.concurrent.Executor executor31 = null;
        builder28.httpExecutor = executor31;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request34 = serializedObjectSupporter33.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter35 = serializedObjectSupporter33.deserializeObjectConverter2();
        builder28.serializedObjectSupporter = serializedObjectSupporter33;
        java.lang.String str37 = serializedObjectSupporter33.deserializeObjectString2();
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter33;
        retrofit.Profiler profiler39 = restAdapter23.getprofiler();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Retrofit-" + "'", str27, "Retrofit-");
        org.junit.Assert.assertNull(serializedObjectSupporter29);
        org.junit.Assert.assertNull(serializedObjectSupporter30);
        org.junit.Assert.assertNotNull(request34);
        org.junit.Assert.assertNotNull(gsonConverter35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-Idle" + "'", str37, "Retrofit-Idle");
        org.junit.Assert.assertNull(profiler39);
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0934");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor27 = restAdapter23.getrequestInterceptor();
        java.util.concurrent.Executor executor28 = restAdapter23.getcallbackExecutor();
        retrofit.Profiler profiler29 = restAdapter23.getprofiler();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNull(profiler29);
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0935");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.LogLevel logLevel3 = builder0.logLevel;
        retrofit.ErrorHandler errorHandler4 = null;
        builder0.errorHandler = errorHandler4;
        java.util.concurrent.Executor executor6 = builder0.getcallbackExecutor();
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor6);
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0936");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.RequestInterceptor requestInterceptor3 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter5 = serializedObjectSupporter0.deserializeObjectLogLevel1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(requestInterceptor3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-Idle" + "'", str4, "Retrofit-Idle");
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0937");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = null;
        builder0.setcallbackExecutor(executor3);
        retrofit.client.Client.Provider provider5 = null;
        builder0.clientProvider = provider5;
        retrofit.Profiler profiler7 = null;
        builder0.profiler = profiler7;
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request10 = serializedObjectSupporter9.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter2();
        retrofit.client.Request request12 = serializedObjectSupporter9.deserializeObjectRequest8();
        retrofit.RequestInterceptor requestInterceptor13 = serializedObjectSupporter9.deserializeObjectRequestInterceptor1();
        builder0.serializedObjectSupporter = serializedObjectSupporter9;
        java.lang.String str15 = serializedObjectSupporter9.deserializeObjectString4();
        retrofit.client.Request request16 = serializedObjectSupporter9.deserializeObjectRequest6();
        retrofit.client.Request request17 = serializedObjectSupporter9.deserializeObjectRequest5();
        java.lang.String str18 = request17.url;
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "http://example.com/" + "'", str15, "http://example.com/");
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0938");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider6 = null;
        java.util.concurrent.Executor executor7 = null;
        java.util.concurrent.Executor executor8 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor11 = serializedObjectSupporter9.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor13 = null;
        builder12.sethttpExecutor(executor13);
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter3();
        builder12.converter = gsonConverter17;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = new retrofit.SerializedObjectSupporter();
        java.lang.String str22 = serializedObjectSupporter21.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter21.deserializeObjectConverter3();
        java.lang.String str24 = serializedObjectSupporter21.deserializeObjectString4();
        retrofit.Server server25 = serializedObjectSupporter21.deserializeObjectServer1();
        retrofit.client.Client.Provider provider26 = null;
        java.util.concurrent.Executor executor27 = null;
        java.util.concurrent.Executor executor28 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        java.lang.String str30 = serializedObjectSupporter29.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor31 = serializedObjectSupporter29.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request33 = serializedObjectSupporter32.deserializeObjectRequest1();
        retrofit.client.Request request34 = serializedObjectSupporter32.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter35 = serializedObjectSupporter32.deserializeObjectConverter5();
        retrofit.Profiler profiler36 = null;
        retrofit.ErrorHandler errorHandler37 = null;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor39 = null;
        builder38.sethttpExecutor(executor39);
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        builder38.log = log41;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter(server25, provider26, executor27, executor28, requestInterceptor31, (retrofit.converter.Converter) gsonConverter35, profiler36, errorHandler37, log41, logLevel43);
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = new retrofit.SerializedObjectSupporter();
        java.lang.String str46 = serializedObjectSupporter45.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter47 = serializedObjectSupporter45.deserializeObjectConverter3();
        java.lang.String str48 = serializedObjectSupporter45.deserializeObjectString4();
        retrofit.Server server49 = serializedObjectSupporter45.deserializeObjectServer1();
        retrofit.client.Client.Provider provider50 = null;
        java.util.concurrent.Executor executor51 = null;
        java.util.concurrent.Executor executor52 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter53 = new retrofit.SerializedObjectSupporter();
        java.lang.String str54 = serializedObjectSupporter53.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor55 = serializedObjectSupporter53.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request57 = serializedObjectSupporter56.deserializeObjectRequest1();
        retrofit.client.Request request58 = serializedObjectSupporter56.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter59 = serializedObjectSupporter56.deserializeObjectConverter5();
        retrofit.Profiler profiler60 = null;
        retrofit.ErrorHandler errorHandler61 = null;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor63 = null;
        builder62.sethttpExecutor(executor63);
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        builder62.log = log65;
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter(server49, provider50, executor51, executor52, requestInterceptor55, (retrofit.converter.Converter) gsonConverter59, profiler60, errorHandler61, log65, logLevel67);
        java.util.concurrent.Executor executor69 = restAdapter68.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor70 = restAdapter68.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor71 = restAdapter68.requestInterceptor;
        java.lang.String str72 = restAdapter68.getTHREAD_PREFIX();
        retrofit.SerializedObjectSupporter serializedObjectSupporter73 = restAdapter68.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel74 = restAdapter68.logLevel;
        retrofit.RestAdapter restAdapter75 = new retrofit.RestAdapter(server5, provider6, executor7, executor8, requestInterceptor11, (retrofit.converter.Converter) gsonConverter17, profiler19, errorHandler20, log41, logLevel74);
        retrofit.ErrorHandler errorHandler76 = restAdapter75.errorHandler;
        retrofit.RestAdapter.Log log77 = restAdapter75.log;
        log77.log("");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Retrofit-" + "'", str10, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "GET" + "'", str16, "GET");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "GET" + "'", str22, "GET");
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Retrofit-" + "'", str30, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor31);
        org.junit.Assert.assertNotNull(request33);
        org.junit.Assert.assertNotNull(request34);
        org.junit.Assert.assertNotNull(gsonConverter35);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "GET" + "'", str46, "GET");
        org.junit.Assert.assertNotNull(gsonConverter47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "http://example.com/" + "'", str48, "http://example.com/");
        org.junit.Assert.assertNotNull(server49);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Retrofit-" + "'", str54, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor55);
        org.junit.Assert.assertNotNull(request57);
        org.junit.Assert.assertNotNull(request58);
        org.junit.Assert.assertNotNull(gsonConverter59);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor69);
        org.junit.Assert.assertNotNull(requestInterceptor70);
        org.junit.Assert.assertNotNull(requestInterceptor71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Retrofit-" + "'", str72, "Retrofit-");
        org.junit.Assert.assertNull(serializedObjectSupporter73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(errorHandler76);
        org.junit.Assert.assertNotNull(log77);
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0939");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.converter.Converter converter3 = builder0.converter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("GET");
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor7 = null;
        builder6.sethttpExecutor(executor7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter3();
        builder6.converter = gsonConverter11;
        retrofit.client.Client.Provider provider13 = null;
        builder6.clientProvider = provider13;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter3();
        java.lang.String str18 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter15.deserializeObjectConverter6();
        builder6.converter = gsonConverter19;
        builder0.converter = gsonConverter19;
        retrofit.RestAdapter restAdapter22 = builder0.build();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter2();
        retrofit.client.Request request26 = serializedObjectSupporter23.deserializeObjectRequest8();
        retrofit.RequestInterceptor requestInterceptor27 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        java.lang.String str28 = serializedObjectSupporter23.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter23.deserializeObjectConverter3();
        restAdapter22.serializedObjectSupporter = serializedObjectSupporter23;
        java.util.concurrent.Executor executor31 = restAdapter22.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor32 = restAdapter22.getrequestInterceptor();
        retrofit.RestAdapter.RestHandler restHandler33 = restAdapter22.new RestHandler();
        java.util.concurrent.Executor executor34 = restAdapter22.httpExecutor;
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "GET" + "'", str10, "GET");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "GET" + "'", str16, "GET");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(request26);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(executor34);
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0940");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        java.util.concurrent.Executor executor26 = restAdapter23.getcallbackExecutor();
        retrofit.RestAdapter.RestHandler restHandler27 = restAdapter23.new RestHandler();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNull(executor26);
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0941");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter23.logLevel = logLevel25;
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = restAdapter23.serializedObjectSupporter;
        retrofit.RestAdapter.Log log28 = restAdapter23.log;
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request30 = serializedObjectSupporter29.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter32 = serializedObjectSupporter29.deserializeObjectConverter8();
        java.lang.String str33 = serializedObjectSupporter29.deserializeObjectString4();
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter29;
        retrofit.RestAdapter.Log log35 = restAdapter23.log;
        log35.log("POST");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(serializedObjectSupporter27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(request30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(gsonConverter32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNotNull(log35);
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0942");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider4 = builder3.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder6 = builder3.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder7 = builder0.setLogLevel(logLevel5);
        retrofit.client.Client.Provider provider8 = builder0.getclientProvider();
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(provider8);
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0943");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.getconverter();
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean27 = logLevel26.log();
        boolean boolean28 = logLevel26.log();
        restAdapter23.setLogLevel(logLevel26);
        retrofit.Server server30 = restAdapter23.getserver();
        retrofit.RequestInterceptor requestInterceptor31 = restAdapter23.getrequestInterceptor();
        java.util.concurrent.Executor executor32 = restAdapter23.gethttpExecutor();
        java.lang.String str33 = restAdapter23.getIDLE_THREAD_NAME();
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = builder34.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = builder34.serializedObjectSupporter;
        java.util.concurrent.Executor executor37 = null;
        builder34.httpExecutor = executor37;
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request40 = serializedObjectSupporter39.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter39.deserializeObjectConverter2();
        builder34.serializedObjectSupporter = serializedObjectSupporter39;
        retrofit.client.Request request43 = serializedObjectSupporter39.deserializeObjectRequest6();
        retrofit.client.Request request44 = serializedObjectSupporter39.deserializeObjectRequest4();
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter39;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(server30);
        org.junit.Assert.assertNotNull(requestInterceptor31);
        org.junit.Assert.assertNull(executor32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Retrofit-Idle" + "'", str33, "Retrofit-Idle");
        org.junit.Assert.assertNull(serializedObjectSupporter35);
        org.junit.Assert.assertNull(serializedObjectSupporter36);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(gsonConverter41);
        org.junit.Assert.assertNotNull(request43);
        org.junit.Assert.assertNotNull(request44);
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0944");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.converter.Converter converter3 = builder0.converter;
        retrofit.ErrorHandler errorHandler4 = null;
        builder0.errorHandler = errorHandler4;
        retrofit.RestAdapter.LogLevel logLevel6 = builder0.logLevel;
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0945");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        java.lang.String str26 = restAdapter23.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        retrofit.Profiler profiler28 = restAdapter23.getprofiler();
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter23.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        java.lang.String str31 = serializedObjectSupporter30.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter30.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter30.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter34 = serializedObjectSupporter30.deserializeObjectConverter8();
        java.lang.String str35 = serializedObjectSupporter30.deserializeObjectString2();
        restHandler29.serializedObjectSupporter = serializedObjectSupporter30;
        retrofit.client.Request request37 = serializedObjectSupporter30.deserializeObjectRequest4();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter38 = serializedObjectSupporter30.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Retrofit-" + "'", str31, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(gsonConverter34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Retrofit-Idle" + "'", str35, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(request37);
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0946");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = null;
        builder0.setcallbackExecutor(executor3);
        retrofit.client.Client.Provider provider5 = null;
        builder0.clientProvider = provider5;
        retrofit.Profiler profiler7 = null;
        builder0.profiler = profiler7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider10 = builder9.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder12 = builder9.setLogLevel(logLevel11);
        retrofit.converter.Converter converter13 = builder12.converter;
        builder12.ensureSaneDefaults();
        retrofit.client.Client.Provider provider15 = builder12.clientProvider;
        retrofit.RestAdapter.Builder builder16 = builder0.setClient(provider15);
        java.util.concurrent.Executor executor17 = builder0.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        java.lang.String str19 = serializedObjectSupporter18.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter18.deserializeObjectConverter3();
        java.lang.String str21 = serializedObjectSupporter18.deserializeObjectString4();
        retrofit.Server server22 = serializedObjectSupporter18.deserializeObjectServer1();
        retrofit.client.Client.Provider provider23 = null;
        java.util.concurrent.Executor executor24 = null;
        java.util.concurrent.Executor executor25 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor28 = serializedObjectSupporter26.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request30 = serializedObjectSupporter29.deserializeObjectRequest1();
        retrofit.client.Request request31 = serializedObjectSupporter29.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter32 = serializedObjectSupporter29.deserializeObjectConverter5();
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor36 = null;
        builder35.sethttpExecutor(executor36);
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        builder35.log = log38;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter(server22, provider23, executor24, executor25, requestInterceptor28, (retrofit.converter.Converter) gsonConverter32, profiler33, errorHandler34, log38, logLevel40);
        java.util.concurrent.Executor executor42 = restAdapter41.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor43 = restAdapter41.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor44 = restAdapter41.requestInterceptor;
        retrofit.Profiler profiler45 = restAdapter41.profiler;
        retrofit.RestAdapter.LogLevel logLevel46 = restAdapter41.getLogLevel();
        retrofit.RestAdapter.Builder builder47 = builder0.setLogLevel(logLevel46);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNotNull(provider15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNull(executor17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "GET" + "'", str19, "GET");
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "http://example.com/" + "'", str21, "http://example.com/");
        org.junit.Assert.assertNotNull(server22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Retrofit-" + "'", str27, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(request30);
        org.junit.Assert.assertNotNull(request31);
        org.junit.Assert.assertNotNull(gsonConverter32);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertNotNull(requestInterceptor43);
        org.junit.Assert.assertNotNull(requestInterceptor44);
        org.junit.Assert.assertNull(profiler45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder47);
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0947");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = null;
        builder0.setcallbackExecutor(executor3);
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.FULL;
        builder0.logLevel = logLevel5;
        retrofit.client.Client.Provider provider7 = builder0.getclientProvider();
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = builder0.serializedObjectSupporter;
        java.util.concurrent.Executor executor9 = builder0.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor10 = builder0.requestInterceptor;
        retrofit.client.Client.Provider provider11 = builder0.clientProvider;
        java.util.concurrent.Executor executor12 = builder0.gethttpExecutor();
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNull(requestInterceptor10);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNull(executor12);
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0948");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        retrofit.converter.Converter converter5 = builder0.converter;
        java.util.concurrent.Executor executor6 = null;
        builder0.httpExecutor = executor6;
        java.util.concurrent.Executor executor8 = null;
        builder0.httpExecutor = executor8;
        retrofit.Profiler profiler10 = null;
        builder0.profiler = profiler10;
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = builder0.serializedObjectSupporter;
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNull(serializedObjectSupporter12);
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0949");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.getconverter();
        java.util.concurrent.Executor executor26 = restAdapter23.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor27 = restAdapter23.getrequestInterceptor();
        retrofit.Server server28 = restAdapter23.server;
        retrofit.client.Client.Provider provider29 = restAdapter23.getclientProvider();
        retrofit.client.Client.Provider provider30 = restAdapter23.getclientProvider();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNull(provider29);
        org.junit.Assert.assertNull(provider30);
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0950");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.converter;
        java.util.concurrent.Executor executor26 = restAdapter23.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel27 = restAdapter23.getLogLevel();
        java.util.concurrent.Executor executor28 = restAdapter23.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        java.lang.String str30 = serializedObjectSupporter29.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter3();
        java.lang.String str32 = serializedObjectSupporter29.deserializeObjectString4();
        retrofit.Server server33 = serializedObjectSupporter29.deserializeObjectServer1();
        retrofit.client.Client.Provider provider34 = null;
        java.util.concurrent.Executor executor35 = null;
        java.util.concurrent.Executor executor36 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = new retrofit.SerializedObjectSupporter();
        java.lang.String str38 = serializedObjectSupporter37.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor39 = serializedObjectSupporter37.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request41 = serializedObjectSupporter40.deserializeObjectRequest1();
        retrofit.client.Request request42 = serializedObjectSupporter40.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter40.deserializeObjectConverter5();
        retrofit.Profiler profiler44 = null;
        retrofit.ErrorHandler errorHandler45 = null;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor47 = null;
        builder46.sethttpExecutor(executor47);
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        builder46.log = log49;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter(server33, provider34, executor35, executor36, requestInterceptor39, (retrofit.converter.Converter) gsonConverter43, profiler44, errorHandler45, log49, logLevel51);
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter52.getLogLevel();
        retrofit.converter.Converter converter54 = restAdapter52.converter;
        java.util.concurrent.Executor executor55 = restAdapter52.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel56 = restAdapter52.getLogLevel();
        restAdapter23.setLogLevel(logLevel56);
        retrofit.client.Client.Provider provider58 = restAdapter23.getclientProvider();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "GET" + "'", str30, "GET");
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "http://example.com/" + "'", str32, "http://example.com/");
        org.junit.Assert.assertNotNull(server33);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Retrofit-" + "'", str38, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor39);
        org.junit.Assert.assertNotNull(request41);
        org.junit.Assert.assertNotNull(request42);
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter54);
        org.junit.Assert.assertNull(executor55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider58);
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0951");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = builder0.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel4 = builder0.logLevel;
        retrofit.Profiler profiler5 = builder0.profiler;
        retrofit.client.Client.Provider provider6 = builder0.getclientProvider();
        java.util.concurrent.Executor executor7 = builder0.httpExecutor;
        java.util.concurrent.Executor executor8 = builder0.httpExecutor;
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler5);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(executor8);
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0952");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        java.util.concurrent.Executor executor3 = null;
        builder0.httpExecutor = executor3;
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request6 = serializedObjectSupporter5.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter5.deserializeObjectConverter2();
        builder0.serializedObjectSupporter = serializedObjectSupporter5;
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter5.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter5.deserializeObjectConverter7();
        java.lang.String str11 = serializedObjectSupporter5.deserializeObjectString3();
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "GET" + "'", str11, "GET");
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0953");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.RequestInterceptor requestInterceptor3 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.mime.TypedString typedString4 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(requestInterceptor3);
        org.junit.Assert.assertNotNull(typedString4);
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0954");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = null;
        builder0.setcallbackExecutor(executor3);
        java.util.concurrent.Executor executor5 = builder0.httpExecutor;
        retrofit.Profiler profiler6 = null;
        builder0.profiler = profiler6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = builder8.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = builder8.serializedObjectSupporter;
        java.util.concurrent.Executor executor11 = null;
        builder8.httpExecutor = executor11;
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request14 = serializedObjectSupporter13.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter13.deserializeObjectConverter2();
        builder8.serializedObjectSupporter = serializedObjectSupporter13;
        retrofit.client.Request request17 = serializedObjectSupporter13.deserializeObjectRequest6();
        retrofit.client.Request request18 = serializedObjectSupporter13.deserializeObjectRequest4();
        retrofit.mime.TypedString typedString19 = serializedObjectSupporter13.deserializeObjectTypedOutput2();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter13.deserializeObjectConverter2();
        retrofit.RestAdapter.Builder builder21 = builder0.setConverter((retrofit.converter.Converter) gsonConverter20);
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        java.lang.String str23 = serializedObjectSupporter22.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter24 = serializedObjectSupporter22.deserializeObjectConverter3();
        retrofit.client.Request request25 = serializedObjectSupporter22.deserializeObjectRequest1();
        builder21.serializedObjectSupporter = serializedObjectSupporter22;
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter22.deserializeObjectConverter2();
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertNull(serializedObjectSupporter10);
        org.junit.Assert.assertNotNull(request14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(request18);
        org.junit.Assert.assertNotNull(typedString19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "GET" + "'", str23, "GET");
        org.junit.Assert.assertNotNull(gsonConverter24);
        org.junit.Assert.assertNotNull(request25);
        org.junit.Assert.assertNotNull(gsonConverter27);
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0955");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter7();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter7();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest8();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(request6);
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0956");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest3();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(request4);
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0957");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        java.lang.String str25 = restAdapter23.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor26 = restAdapter23.httpExecutor;
        retrofit.client.Client.Provider provider27 = restAdapter23.clientProvider;
        retrofit.RequestInterceptor requestInterceptor28 = restAdapter23.requestInterceptor;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Retrofit-Idle" + "'", str25, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertNotNull(requestInterceptor28);
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0958");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.RequestInterceptor requestInterceptor3 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.Server server6 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter2();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(requestInterceptor3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-Idle" + "'", str4, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(server6);
        org.junit.Assert.assertNotNull(gsonConverter7);
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0959");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        java.util.concurrent.Executor executor5 = builder0.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = builder8.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = builder8.serializedObjectSupporter;
        java.util.concurrent.Executor executor11 = null;
        builder8.httpExecutor = executor11;
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request14 = serializedObjectSupporter13.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter13.deserializeObjectConverter2();
        builder8.serializedObjectSupporter = serializedObjectSupporter13;
        retrofit.client.Request request17 = serializedObjectSupporter13.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter13.deserializeObjectConverter5();
        retrofit.Server server19 = serializedObjectSupporter13.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter13.deserializeObjectConverter2();
        builder0.converter = gsonConverter20;
        java.util.concurrent.Executor executor22 = builder0.getcallbackExecutor();
        retrofit.client.Client.Provider provider23 = builder0.getclientProvider();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        java.lang.String str25 = serializedObjectSupporter24.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor26 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter24.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter24.deserializeObjectConverter8();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter24.deserializeObjectConverter6();
        builder0.serializedObjectSupporter = serializedObjectSupporter24;
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(serializedObjectSupporter7);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertNull(serializedObjectSupporter10);
        org.junit.Assert.assertNotNull(request14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(server19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertNull(executor22);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Retrofit-" + "'", str25, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(gsonConverter29);
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0960");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.ErrorHandler errorHandler2 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter1();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(errorHandler2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(server4);
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0961");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor2 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter8();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString2();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter1();
        retrofit.client.Request request7 = serializedObjectSupporter0.deserializeObjectRequest7();
        java.lang.String str8 = request7.getUrl();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Retrofit-" + "'", str1, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Retrofit-Idle" + "'", str5, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0962");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest5();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter7();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request7 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter0.deserializeObjectConverter1();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "POST" + "'", str3, "POST");
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertNotNull(gsonConverter8);
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0963");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        java.util.List<retrofit.client.Header> headerList2 = request1.headers;
        java.util.List<retrofit.client.Header> headerList3 = request1.headers;
        java.util.List<retrofit.client.Header> headerList4 = request1.getHeaders();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(headerList2);
        org.junit.Assert.assertNotNull(headerList3);
        org.junit.Assert.assertNotNull(headerList4);
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0964");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(request6);
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0965");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        retrofit.Profiler profiler26 = restAdapter23.getprofiler();
        java.lang.String str27 = restAdapter23.getTHREAD_PREFIX();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Retrofit-" + "'", str27, "Retrofit-");
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0966");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter3();
        builder0.converter = gsonConverter5;
        retrofit.client.Client.Provider provider7 = null;
        builder0.clientProvider = provider7;
        retrofit.RestAdapter.LogLevel logLevel9 = builder0.logLevel;
        java.util.concurrent.Executor executor10 = null;
        builder0.setcallbackExecutor(executor10);
        retrofit.converter.Converter converter12 = builder0.converter;
        retrofit.RestAdapter.LogLevel logLevel13 = builder0.logLevel;
        boolean boolean14 = logLevel13.log();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(converter12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0967");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.getconverter();
        java.util.concurrent.Executor executor26 = restAdapter23.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor27 = restAdapter23.getrequestInterceptor();
        retrofit.Server server28 = restAdapter23.server;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor30 = null;
        builder29.sethttpExecutor(executor30);
        retrofit.RequestInterceptor requestInterceptor32 = null;
        builder29.requestInterceptor = requestInterceptor32;
        retrofit.Profiler profiler34 = null;
        builder29.profiler = profiler34;
        java.util.concurrent.Executor executor36 = builder29.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = new retrofit.SerializedObjectSupporter();
        java.lang.String str38 = serializedObjectSupporter37.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter37.deserializeObjectConverter3();
        java.lang.String str40 = serializedObjectSupporter37.deserializeObjectString4();
        retrofit.Server server41 = serializedObjectSupporter37.deserializeObjectServer1();
        retrofit.client.Client.Provider provider42 = null;
        java.util.concurrent.Executor executor43 = null;
        java.util.concurrent.Executor executor44 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = new retrofit.SerializedObjectSupporter();
        java.lang.String str46 = serializedObjectSupporter45.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor47 = serializedObjectSupporter45.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request49 = serializedObjectSupporter48.deserializeObjectRequest1();
        retrofit.client.Request request50 = serializedObjectSupporter48.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter51 = serializedObjectSupporter48.deserializeObjectConverter5();
        retrofit.Profiler profiler52 = null;
        retrofit.ErrorHandler errorHandler53 = null;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor55 = null;
        builder54.sethttpExecutor(executor55);
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        builder54.log = log57;
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter(server41, provider42, executor43, executor44, requestInterceptor47, (retrofit.converter.Converter) gsonConverter51, profiler52, errorHandler53, log57, logLevel59);
        java.util.concurrent.Executor executor61 = restAdapter60.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor62 = restAdapter60.requestInterceptor;
        retrofit.RestAdapter.Builder builder63 = builder29.setRequestInterceptor(requestInterceptor62);
        retrofit.RestAdapter.LogLevel logLevel64 = builder29.logLevel;
        restAdapter23.logLevel = logLevel64;
        retrofit.client.Client.Provider provider66 = restAdapter23.getclientProvider();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNull(executor36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "GET" + "'", str38, "GET");
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "http://example.com/" + "'", str40, "http://example.com/");
        org.junit.Assert.assertNotNull(server41);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Retrofit-" + "'", str46, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor47);
        org.junit.Assert.assertNotNull(request49);
        org.junit.Assert.assertNotNull(request50);
        org.junit.Assert.assertNotNull(gsonConverter51);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor61);
        org.junit.Assert.assertNotNull(requestInterceptor62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(provider66);
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0968");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor2 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter8();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString2();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter1();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Retrofit-" + "'", str1, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Retrofit-Idle" + "'", str5, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(gsonConverter7);
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0969");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = null;
        builder0.setcallbackExecutor(executor3);
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.FULL;
        builder0.logLevel = logLevel5;
        retrofit.client.Client.Provider provider7 = builder0.getclientProvider();
        java.util.concurrent.Executor executor8 = builder0.getcallbackExecutor();
        java.util.concurrent.Executor executor9 = builder0.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = new retrofit.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter10.deserializeObjectConverter3();
        java.lang.String str13 = serializedObjectSupporter10.deserializeObjectString4();
        retrofit.Server server14 = serializedObjectSupporter10.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter10.deserializeObjectConverter6();
        retrofit.converter.GsonConverter gsonConverter16 = serializedObjectSupporter10.deserializeObjectConverter6();
        retrofit.client.Request request17 = serializedObjectSupporter10.deserializeObjectRequest7();
        retrofit.RequestInterceptor requestInterceptor18 = serializedObjectSupporter10.deserializeObjectRequestInterceptor1();
        builder0.requestInterceptor = requestInterceptor18;
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean21 = logLevel20.log();
        retrofit.RestAdapter.Builder builder22 = builder0.setLogLevel(logLevel20);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "GET" + "'", str11, "GET");
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "http://example.com/" + "'", str13, "http://example.com/");
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(gsonConverter16);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(requestInterceptor18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(builder22);
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0970");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        java.lang.String str27 = restAdapter23.getTHREAD_PREFIX();
        retrofit.converter.Converter converter28 = restAdapter23.getconverter();
        retrofit.converter.Converter converter29 = restAdapter23.getconverter();
        retrofit.Profiler profiler30 = restAdapter23.getprofiler();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Retrofit-" + "'", str27, "Retrofit-");
        org.junit.Assert.assertNotNull(converter28);
        org.junit.Assert.assertNotNull(converter29);
        org.junit.Assert.assertNull(profiler30);
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0971");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter1();
        retrofit.RequestInterceptor requestInterceptor5 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str7 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.ErrorHandler errorHandler9 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(requestInterceptor5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Retrofit-Idle" + "'", str6, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertNotNull(errorHandler9);
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0972");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.converter.Converter converter3 = builder0.converter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("GET");
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor7 = null;
        builder6.sethttpExecutor(executor7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter3();
        builder6.converter = gsonConverter11;
        retrofit.client.Client.Provider provider13 = null;
        builder6.clientProvider = provider13;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter3();
        java.lang.String str18 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter15.deserializeObjectConverter6();
        builder6.converter = gsonConverter19;
        builder0.converter = gsonConverter19;
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        java.lang.String str23 = serializedObjectSupporter22.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter24 = serializedObjectSupporter22.deserializeObjectConverter3();
        java.lang.String str25 = serializedObjectSupporter22.deserializeObjectString4();
        retrofit.Server server26 = serializedObjectSupporter22.deserializeObjectServer1();
        retrofit.client.Client.Provider provider27 = null;
        java.util.concurrent.Executor executor28 = null;
        java.util.concurrent.Executor executor29 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        java.lang.String str31 = serializedObjectSupporter30.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter30.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request34 = serializedObjectSupporter33.deserializeObjectRequest1();
        retrofit.client.Request request35 = serializedObjectSupporter33.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter33.deserializeObjectConverter5();
        retrofit.Profiler profiler37 = null;
        retrofit.ErrorHandler errorHandler38 = null;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor40 = null;
        builder39.sethttpExecutor(executor40);
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        builder39.log = log42;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter(server26, provider27, executor28, executor29, requestInterceptor32, (retrofit.converter.Converter) gsonConverter36, profiler37, errorHandler38, log42, logLevel44);
        java.util.concurrent.Executor executor46 = restAdapter45.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor47 = restAdapter45.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor48 = restAdapter45.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor49 = restAdapter45.getrequestInterceptor();
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor51 = null;
        builder50.sethttpExecutor(executor51);
        retrofit.RequestInterceptor requestInterceptor53 = null;
        builder50.requestInterceptor = requestInterceptor53;
        retrofit.converter.Converter converter55 = builder50.converter;
        java.util.concurrent.Executor executor56 = null;
        builder50.httpExecutor = executor56;
        retrofit.RestAdapter.LogLevel logLevel58 = builder50.logLevel;
        restAdapter45.logLevel = logLevel58;
        builder0.logLevel = logLevel58;
        java.util.concurrent.Executor executor61 = builder0.getcallbackExecutor();
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter63 = builder62.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter64 = builder62.serializedObjectSupporter;
        retrofit.client.Client.Provider provider65 = null;
        builder62.clientProvider = provider65;
        java.util.concurrent.Executor executor67 = null;
        builder62.callbackExecutor = executor67;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor70 = null;
        builder69.setcallbackExecutor(executor70);
        java.util.concurrent.Executor executor72 = null;
        builder69.setcallbackExecutor(executor72);
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.FULL;
        builder69.logLevel = logLevel74;
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor77 = null;
        builder76.setcallbackExecutor(executor77);
        java.util.concurrent.Executor executor79 = null;
        builder76.setcallbackExecutor(executor79);
        builder76.ensureSaneDefaults();
        java.util.concurrent.Executor executor82 = builder76.callbackExecutor;
        builder69.sethttpExecutor(executor82);
        builder62.httpExecutor = executor82;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor86 = null;
        builder85.sethttpExecutor(executor86);
        retrofit.RestAdapter.Log log88 = null;
        builder85.log = log88;
        java.util.concurrent.Executor executor90 = builder85.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter91 = builder85.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter92 = builder85.serializedObjectSupporter;
        builder85.ensureSaneDefaults();
        java.util.concurrent.Executor executor94 = builder85.httpExecutor;
        retrofit.RestAdapter.Builder builder95 = builder0.setExecutors(executor82, executor94);
        retrofit.RestAdapter restAdapter96 = builder0.build();
        retrofit.ErrorHandler errorHandler97 = restAdapter96.geterrorHandler();
        java.util.concurrent.Executor executor98 = restAdapter96.callbackExecutor;
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "GET" + "'", str10, "GET");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "GET" + "'", str16, "GET");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "GET" + "'", str23, "GET");
        org.junit.Assert.assertNotNull(gsonConverter24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "http://example.com/" + "'", str25, "http://example.com/");
        org.junit.Assert.assertNotNull(server26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Retrofit-" + "'", str31, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(request34);
        org.junit.Assert.assertNotNull(request35);
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor46);
        org.junit.Assert.assertNotNull(requestInterceptor47);
        org.junit.Assert.assertNotNull(requestInterceptor48);
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNull(converter55);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor61);
        org.junit.Assert.assertNull(serializedObjectSupporter63);
        org.junit.Assert.assertNull(serializedObjectSupporter64);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(executor82);
        org.junit.Assert.assertNull(executor90);
        org.junit.Assert.assertNull(serializedObjectSupporter91);
        org.junit.Assert.assertNull(serializedObjectSupporter92);
        org.junit.Assert.assertNotNull(executor94);
        org.junit.Assert.assertNotNull(builder95);
        org.junit.Assert.assertNotNull(restAdapter96);
        org.junit.Assert.assertNotNull(errorHandler97);
        org.junit.Assert.assertNotNull(executor98);
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0973");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest8();
        java.lang.String str2 = request1.method;
        java.lang.String str3 = request1.url;
        retrofit.mime.TypedOutput typedOutput4 = request1.body;
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "GET" + "'", str2, "GET");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNull(typedOutput4);
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0974");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        java.util.concurrent.Executor executor3 = null;
        builder0.httpExecutor = executor3;
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request6 = serializedObjectSupporter5.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter5.deserializeObjectConverter2();
        builder0.serializedObjectSupporter = serializedObjectSupporter5;
        retrofit.client.Client.Provider provider9 = builder0.getclientProvider();
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = builder10.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = builder10.serializedObjectSupporter;
        java.util.concurrent.Executor executor13 = null;
        builder10.httpExecutor = executor13;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request16 = serializedObjectSupporter15.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter2();
        builder10.serializedObjectSupporter = serializedObjectSupporter15;
        retrofit.client.Request request19 = serializedObjectSupporter15.deserializeObjectRequest6();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter15.deserializeObjectConverter5();
        retrofit.Server server21 = serializedObjectSupporter15.deserializeObjectServer1();
        builder0.server = server21;
        retrofit.client.Client.Provider provider23 = builder0.getclientProvider();
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertNull(serializedObjectSupporter12);
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNotNull(request19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNull(provider23);
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0975");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter8();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.mime.TypedString typedString6 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        retrofit.Server server7 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str8 = serializedObjectSupporter0.deserializeObjectString1();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(typedString6);
        org.junit.Assert.assertNotNull(server7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Retrofit-" + "'", str8, "Retrofit-");
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0976");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter23.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        java.lang.String str27 = restAdapter23.getTHREAD_PREFIX();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = restAdapter23.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter23.logLevel;
        java.lang.String str30 = restAdapter23.getTHREAD_PREFIX();
        retrofit.Profiler profiler31 = restAdapter23.getprofiler();
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter23.logLevel;
        java.util.concurrent.Executor executor33 = restAdapter23.getcallbackExecutor();
        retrofit.Profiler profiler34 = restAdapter23.getprofiler();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Retrofit-" + "'", str27, "Retrofit-");
        org.junit.Assert.assertNull(serializedObjectSupporter28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Retrofit-" + "'", str30, "Retrofit-");
        org.junit.Assert.assertNull(profiler31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor33);
        org.junit.Assert.assertNull(profiler34);
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0977");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = null;
        builder0.setcallbackExecutor(executor3);
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.FULL;
        builder0.logLevel = logLevel5;
        retrofit.ErrorHandler errorHandler7 = builder0.errorHandler;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider10 = builder9.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder12 = builder9.setLogLevel(logLevel11);
        retrofit.converter.Converter converter13 = builder12.converter;
        retrofit.Profiler profiler14 = builder12.profiler;
        java.util.concurrent.Executor executor15 = builder12.callbackExecutor;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor17 = null;
        builder16.setcallbackExecutor(executor17);
        java.util.concurrent.Executor executor19 = null;
        builder16.setcallbackExecutor(executor19);
        retrofit.client.Client.Provider provider21 = null;
        builder16.clientProvider = provider21;
        retrofit.Profiler profiler23 = null;
        builder16.profiler = profiler23;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider26 = builder25.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder28 = builder25.setLogLevel(logLevel27);
        retrofit.converter.Converter converter29 = builder28.converter;
        builder28.ensureSaneDefaults();
        retrofit.client.Client.Provider provider31 = builder28.clientProvider;
        retrofit.RestAdapter.Builder builder32 = builder16.setClient(provider31);
        builder12.setclientProvider(provider31);
        retrofit.RestAdapter.Builder builder34 = builder0.setClient(provider31);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor36 = null;
        builder35.sethttpExecutor(executor36);
        retrofit.RestAdapter.Log log38 = null;
        builder35.log = log38;
        java.util.concurrent.Executor executor40 = builder35.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = builder35.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler42 = builder35.errorHandler;
        retrofit.converter.Converter converter43 = builder35.converter;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor45 = null;
        builder44.sethttpExecutor(executor45);
        builder44.ensureSaneDefaults();
        retrofit.client.Client.Provider provider48 = null;
        builder44.setclientProvider(provider48);
        retrofit.client.Client.Provider provider50 = null;
        builder44.setclientProvider(provider50);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor53 = null;
        builder52.setcallbackExecutor(executor53);
        java.util.concurrent.Executor executor55 = builder52.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel56 = builder52.logLevel;
        retrofit.Profiler profiler57 = builder52.profiler;
        retrofit.RestAdapter.Builder builder59 = builder52.setServer("hi!");
        retrofit.converter.Converter converter60 = builder59.converter;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider62 = builder61.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder64 = builder61.setLogLevel(logLevel63);
        retrofit.converter.Converter converter65 = builder64.converter;
        builder64.ensureSaneDefaults();
        retrofit.client.Client.Provider provider67 = builder64.clientProvider;
        builder59.clientProvider = provider67;
        retrofit.RestAdapter.Builder builder69 = builder44.setClient(provider67);
        builder35.clientProvider = provider67;
        builder34.clientProvider = provider67;
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(errorHandler7);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNull(profiler14);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(converter29);
        org.junit.Assert.assertNotNull(provider31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNull(serializedObjectSupporter41);
        org.junit.Assert.assertNull(errorHandler42);
        org.junit.Assert.assertNull(converter43);
        org.junit.Assert.assertNull(executor55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNull(converter60);
        org.junit.Assert.assertNull(provider62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNull(converter65);
        org.junit.Assert.assertNotNull(provider67);
        org.junit.Assert.assertNotNull(builder69);
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0978");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        java.util.concurrent.Executor executor3 = null;
        builder0.setcallbackExecutor(executor3);
        retrofit.client.Client.Provider provider5 = null;
        builder0.clientProvider = provider5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = builder7.serializedObjectSupporter;
        retrofit.Profiler profiler9 = builder7.profiler;
        retrofit.RestAdapter.LogLevel logLevel10 = builder7.logLevel;
        builder0.logLevel = logLevel10;
        retrofit.RestAdapter.Log log12 = null;
        builder0.log = log12;
        retrofit.client.Client.Provider provider14 = builder0.getclientProvider();
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertNull(profiler9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(provider14);
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0979");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        java.lang.String str26 = serializedObjectSupporter25.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter25.deserializeObjectConverter3();
        java.lang.String str28 = serializedObjectSupporter25.deserializeObjectString4();
        retrofit.client.Request request29 = serializedObjectSupporter25.deserializeObjectRequest8();
        java.lang.String str30 = request29.method;
        java.lang.String str31 = request29.getUrl();
        retrofit.client.Request request32 = restAdapter23.logAndReplaceRequest(request29);
        java.util.concurrent.Executor executor33 = restAdapter23.getcallbackExecutor();
        java.lang.Throwable throwable34 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter23.logException(throwable34, "http://example.com/");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "GET" + "'", str26, "GET");
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertNotNull(request29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "GET" + "'", str30, "GET");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "http://example.com/" + "'", str31, "http://example.com/");
        org.junit.Assert.assertNotNull(request32);
        org.junit.Assert.assertNull(executor33);
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0980");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor2 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter8();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString2();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter1();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter5();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Retrofit-" + "'", str1, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Retrofit-Idle" + "'", str5, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(gsonConverter7);
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0981");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor2 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter7();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString5();
        retrofit.mime.TypedString typedString6 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Retrofit-" + "'", str1, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "POST" + "'", str5, "POST");
        org.junit.Assert.assertNotNull(typedString6);
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0982");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.converter;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = builder27.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = builder27.serializedObjectSupporter;
        java.util.concurrent.Executor executor30 = null;
        builder27.httpExecutor = executor30;
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request33 = serializedObjectSupporter32.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter34 = serializedObjectSupporter32.deserializeObjectConverter2();
        builder27.serializedObjectSupporter = serializedObjectSupporter32;
        retrofit.client.Request request36 = serializedObjectSupporter32.deserializeObjectRequest6();
        java.lang.String str37 = request36.method;
        java.lang.String str38 = request36.method;
        retrofit.client.Request request39 = restAdapter23.logAndReplaceRequest(request36);
        java.util.List<retrofit.client.Header> headerList40 = request39.getHeaders();
        java.util.List<retrofit.client.Header> headerList41 = request39.headers;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNull(serializedObjectSupporter28);
        org.junit.Assert.assertNull(serializedObjectSupporter29);
        org.junit.Assert.assertNotNull(request33);
        org.junit.Assert.assertNotNull(gsonConverter34);
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "GET" + "'", str37, "GET");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "GET" + "'", str38, "GET");
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(headerList41);
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0983");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.RestAdapter.Log log4 = builder3.log;
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.HEADERS;
        builder3.logLevel = logLevel5;
        retrofit.ErrorHandler errorHandler7 = builder3.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean9 = logLevel8.log();
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.RestAdapter.LogLevel logLevel11 = builder10.logLevel;
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(errorHandler7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0984");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider6 = null;
        java.util.concurrent.Executor executor7 = null;
        java.util.concurrent.Executor executor8 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor11 = serializedObjectSupporter9.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor13 = null;
        builder12.sethttpExecutor(executor13);
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter3();
        builder12.converter = gsonConverter17;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = new retrofit.SerializedObjectSupporter();
        java.lang.String str22 = serializedObjectSupporter21.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter21.deserializeObjectConverter3();
        java.lang.String str24 = serializedObjectSupporter21.deserializeObjectString4();
        retrofit.Server server25 = serializedObjectSupporter21.deserializeObjectServer1();
        retrofit.client.Client.Provider provider26 = null;
        java.util.concurrent.Executor executor27 = null;
        java.util.concurrent.Executor executor28 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        java.lang.String str30 = serializedObjectSupporter29.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor31 = serializedObjectSupporter29.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request33 = serializedObjectSupporter32.deserializeObjectRequest1();
        retrofit.client.Request request34 = serializedObjectSupporter32.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter35 = serializedObjectSupporter32.deserializeObjectConverter5();
        retrofit.Profiler profiler36 = null;
        retrofit.ErrorHandler errorHandler37 = null;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor39 = null;
        builder38.sethttpExecutor(executor39);
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        builder38.log = log41;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter(server25, provider26, executor27, executor28, requestInterceptor31, (retrofit.converter.Converter) gsonConverter35, profiler36, errorHandler37, log41, logLevel43);
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = new retrofit.SerializedObjectSupporter();
        java.lang.String str46 = serializedObjectSupporter45.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter47 = serializedObjectSupporter45.deserializeObjectConverter3();
        java.lang.String str48 = serializedObjectSupporter45.deserializeObjectString4();
        retrofit.Server server49 = serializedObjectSupporter45.deserializeObjectServer1();
        retrofit.client.Client.Provider provider50 = null;
        java.util.concurrent.Executor executor51 = null;
        java.util.concurrent.Executor executor52 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter53 = new retrofit.SerializedObjectSupporter();
        java.lang.String str54 = serializedObjectSupporter53.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor55 = serializedObjectSupporter53.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request57 = serializedObjectSupporter56.deserializeObjectRequest1();
        retrofit.client.Request request58 = serializedObjectSupporter56.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter59 = serializedObjectSupporter56.deserializeObjectConverter5();
        retrofit.Profiler profiler60 = null;
        retrofit.ErrorHandler errorHandler61 = null;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor63 = null;
        builder62.sethttpExecutor(executor63);
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        builder62.log = log65;
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter(server49, provider50, executor51, executor52, requestInterceptor55, (retrofit.converter.Converter) gsonConverter59, profiler60, errorHandler61, log65, logLevel67);
        java.util.concurrent.Executor executor69 = restAdapter68.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor70 = restAdapter68.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor71 = restAdapter68.requestInterceptor;
        java.lang.String str72 = restAdapter68.getTHREAD_PREFIX();
        retrofit.SerializedObjectSupporter serializedObjectSupporter73 = restAdapter68.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel74 = restAdapter68.logLevel;
        retrofit.RestAdapter restAdapter75 = new retrofit.RestAdapter(server5, provider6, executor7, executor8, requestInterceptor11, (retrofit.converter.Converter) gsonConverter17, profiler19, errorHandler20, log41, logLevel74);
        retrofit.RestAdapter.LogLevel logLevel76 = restAdapter75.logLevel;
        retrofit.RestAdapter.Log log77 = restAdapter75.log;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Retrofit-" + "'", str10, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "GET" + "'", str16, "GET");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "GET" + "'", str22, "GET");
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Retrofit-" + "'", str30, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor31);
        org.junit.Assert.assertNotNull(request33);
        org.junit.Assert.assertNotNull(request34);
        org.junit.Assert.assertNotNull(gsonConverter35);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "GET" + "'", str46, "GET");
        org.junit.Assert.assertNotNull(gsonConverter47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "http://example.com/" + "'", str48, "http://example.com/");
        org.junit.Assert.assertNotNull(server49);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Retrofit-" + "'", str54, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor55);
        org.junit.Assert.assertNotNull(request57);
        org.junit.Assert.assertNotNull(request58);
        org.junit.Assert.assertNotNull(gsonConverter59);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor69);
        org.junit.Assert.assertNotNull(requestInterceptor70);
        org.junit.Assert.assertNotNull(requestInterceptor71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Retrofit-" + "'", str72, "Retrofit-");
        org.junit.Assert.assertNull(serializedObjectSupporter73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log77);
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0985");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.ErrorHandler errorHandler3 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest3();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections collections6 = serializedObjectSupporter0.deserializeObjectList1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Collections$UnmodifiableRandomAccessList cannot be cast to java.util.Collections");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(errorHandler3);
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertNotNull(request5);
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0986");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        java.lang.String str26 = restAdapter23.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        retrofit.Profiler profiler28 = restAdapter23.getprofiler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = restAdapter23.serializedObjectSupporter;
        retrofit.Profiler profiler30 = restAdapter23.getprofiler();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertNull(serializedObjectSupporter29);
        org.junit.Assert.assertNull(profiler30);
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0987");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter23.logLevel = logLevel25;
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = restAdapter23.serializedObjectSupporter;
        retrofit.RestAdapter.Log log28 = restAdapter23.log;
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request30 = serializedObjectSupporter29.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter32 = serializedObjectSupporter29.deserializeObjectConverter8();
        java.lang.String str33 = serializedObjectSupporter29.deserializeObjectString4();
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter29;
        java.util.concurrent.Executor executor35 = restAdapter23.gethttpExecutor();
        retrofit.Profiler profiler36 = restAdapter23.profiler;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(serializedObjectSupporter27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(request30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(gsonConverter32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNull(profiler36);
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0988");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        retrofit.converter.Converter converter5 = builder0.converter;
        java.util.concurrent.Executor executor6 = null;
        builder0.httpExecutor = executor6;
        java.util.concurrent.Executor executor8 = null;
        builder0.httpExecutor = executor8;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor11 = null;
        builder10.sethttpExecutor(executor11);
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        builder10.log = log13;
        log13.log("");
        log13.log("POST");
        builder0.log = log13;
        log13.log("POST");
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(log13);
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0989");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        retrofit.RestAdapter.Log log5 = builder0.log;
        retrofit.Profiler profiler6 = builder0.profiler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter7.deserializeObjectConverter3();
        java.lang.String str10 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.Server server11 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.client.Client.Provider provider12 = null;
        java.util.concurrent.Executor executor13 = null;
        java.util.concurrent.Executor executor14 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor17 = serializedObjectSupporter15.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request19 = serializedObjectSupporter18.deserializeObjectRequest1();
        retrofit.client.Request request20 = serializedObjectSupporter18.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter18.deserializeObjectConverter5();
        retrofit.Profiler profiler22 = null;
        retrofit.ErrorHandler errorHandler23 = null;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor25 = null;
        builder24.sethttpExecutor(executor25);
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        builder24.log = log27;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter(server11, provider12, executor13, executor14, requestInterceptor17, (retrofit.converter.Converter) gsonConverter21, profiler22, errorHandler23, log27, logLevel29);
        retrofit.RestAdapter.Builder builder31 = builder0.setConverter((retrofit.converter.Converter) gsonConverter21);
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        java.lang.String str33 = serializedObjectSupporter32.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter34 = serializedObjectSupporter32.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter35 = serializedObjectSupporter32.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter32.deserializeObjectConverter1();
        retrofit.Server server37 = serializedObjectSupporter32.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder38 = builder31.setServer(server37);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider40 = builder39.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder42 = builder39.setLogLevel(logLevel41);
        retrofit.converter.Converter converter43 = builder42.converter;
        java.util.concurrent.Executor executor44 = null;
        builder42.sethttpExecutor(executor44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider47 = builder46.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder49 = builder46.setLogLevel(logLevel48);
        retrofit.converter.Converter converter50 = builder49.converter;
        java.util.concurrent.Executor executor51 = null;
        builder49.sethttpExecutor(executor51);
        retrofit.RestAdapter.Builder builder54 = builder49.setServer("GET");
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor56 = null;
        builder55.setcallbackExecutor(executor56);
        java.util.concurrent.Executor executor58 = null;
        builder55.setcallbackExecutor(executor58);
        builder55.ensureSaneDefaults();
        java.util.concurrent.Executor executor61 = builder55.callbackExecutor;
        builder54.setcallbackExecutor(executor61);
        builder42.httpExecutor = executor61;
        builder38.setcallbackExecutor(executor61);
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNull(profiler6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "GET" + "'", str8, "GET");
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Retrofit-" + "'", str16, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor17);
        org.junit.Assert.assertNotNull(request19);
        org.junit.Assert.assertNotNull(request20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "GET" + "'", str33, "GET");
        org.junit.Assert.assertNotNull(gsonConverter34);
        org.junit.Assert.assertNotNull(gsonConverter35);
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(provider40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(converter43);
        org.junit.Assert.assertNull(provider47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNull(converter50);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(executor61);
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0990");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest5();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString5();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.ErrorHandler errorHandler5 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter6 = serializedObjectSupporter0.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "POST" + "'", str3, "POST");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-" + "'", str4, "Retrofit-");
        org.junit.Assert.assertNotNull(errorHandler5);
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0991");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.converter.Converter converter25 = restAdapter23.converter;
        java.lang.String str26 = restAdapter23.getIDLE_THREAD_NAME();
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = builder27.serializedObjectSupporter;
        retrofit.Profiler profiler29 = builder27.profiler;
        retrofit.RestAdapter.LogLevel logLevel30 = builder27.logLevel;
        restAdapter23.logLevel = logLevel30;
        java.util.concurrent.Executor executor32 = restAdapter23.gethttpExecutor();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
        org.junit.Assert.assertNull(serializedObjectSupporter28);
        org.junit.Assert.assertNull(profiler29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor32);
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0992");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = restAdapter23.callbackExecutor;
        java.lang.String str26 = restAdapter23.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor27 = restAdapter23.httpExecutor;
        retrofit.Profiler profiler28 = restAdapter23.getprofiler();
        java.util.concurrent.Executor executor29 = restAdapter23.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request31 = serializedObjectSupporter30.deserializeObjectRequest1();
        retrofit.client.Request request32 = serializedObjectSupporter30.deserializeObjectRequest8();
        retrofit.client.Request request33 = serializedObjectSupporter30.deserializeObjectRequest1();
        retrofit.client.Request request34 = restAdapter23.logAndReplaceRequest(request33);
        java.util.concurrent.Executor executor35 = restAdapter23.gethttpExecutor();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertNull(executor29);
        org.junit.Assert.assertNotNull(request31);
        org.junit.Assert.assertNotNull(request32);
        org.junit.Assert.assertNotNull(request33);
        org.junit.Assert.assertNotNull(request34);
        org.junit.Assert.assertNull(executor35);
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0993");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.RestAdapter.Log log25 = restAdapter23.log;
        retrofit.Server server26 = restAdapter23.server;
        retrofit.RestAdapter.LogLevel logLevel27 = restAdapter23.getLogLevel();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(server26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0994");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = null;
        builder17.sethttpExecutor(executor18);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log20, logLevel22);
        java.util.concurrent.Executor executor24 = restAdapter23.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter23.logLevel = logLevel25;
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = restAdapter23.serializedObjectSupporter;
        retrofit.RestAdapter.Log log28 = restAdapter23.log;
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request30 = serializedObjectSupporter29.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter32 = serializedObjectSupporter29.deserializeObjectConverter8();
        java.lang.String str33 = serializedObjectSupporter29.deserializeObjectString4();
        restAdapter23.serializedObjectSupporter = serializedObjectSupporter29;
        retrofit.RestAdapter.RestHandler restHandler35 = restAdapter23.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        java.lang.String str37 = serializedObjectSupporter36.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter3();
        java.lang.String str39 = serializedObjectSupporter36.deserializeObjectString4();
        retrofit.Server server40 = serializedObjectSupporter36.deserializeObjectServer1();
        retrofit.client.Client.Provider provider41 = null;
        java.util.concurrent.Executor executor42 = null;
        java.util.concurrent.Executor executor43 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = new retrofit.SerializedObjectSupporter();
        java.lang.String str45 = serializedObjectSupporter44.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor46 = serializedObjectSupporter44.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request48 = serializedObjectSupporter47.deserializeObjectRequest1();
        retrofit.client.Request request49 = serializedObjectSupporter47.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter50 = serializedObjectSupporter47.deserializeObjectConverter5();
        retrofit.Profiler profiler51 = null;
        retrofit.ErrorHandler errorHandler52 = null;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor54 = null;
        builder53.sethttpExecutor(executor54);
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        builder53.log = log56;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter59 = new retrofit.RestAdapter(server40, provider41, executor42, executor43, requestInterceptor46, (retrofit.converter.Converter) gsonConverter50, profiler51, errorHandler52, log56, logLevel58);
        java.util.concurrent.Executor executor60 = restAdapter59.getcallbackExecutor();
        java.util.concurrent.Executor executor61 = restAdapter59.callbackExecutor;
        java.lang.String str62 = restAdapter59.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor63 = restAdapter59.httpExecutor;
        retrofit.Profiler profiler64 = restAdapter59.getprofiler();
        retrofit.Server server65 = restAdapter59.getserver();
        retrofit.SerializedObjectSupporter serializedObjectSupporter66 = new retrofit.SerializedObjectSupporter();
        java.lang.String str67 = serializedObjectSupporter66.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter68 = serializedObjectSupporter66.deserializeObjectConverter3();
        java.lang.String str69 = serializedObjectSupporter66.deserializeObjectString4();
        retrofit.Server server70 = serializedObjectSupporter66.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter71 = serializedObjectSupporter66.deserializeObjectConverter6();
        retrofit.client.Request request72 = serializedObjectSupporter66.deserializeObjectRequest7();
        retrofit.converter.GsonConverter gsonConverter73 = serializedObjectSupporter66.deserializeObjectConverter8();
        retrofit.converter.GsonConverter gsonConverter74 = serializedObjectSupporter66.deserializeObjectConverter8();
        retrofit.mime.TypedString typedString75 = serializedObjectSupporter66.deserializeObjectTypedOutput2();
        restAdapter59.serializedObjectSupporter = serializedObjectSupporter66;
        retrofit.RestAdapter.Log log77 = restAdapter59.log;
        java.lang.reflect.Method method78 = null;
        java.lang.Object[] objArray79 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj80 = restHandler35.invoke((java.lang.Object) log77, method78, objArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "GET" + "'", str1, "GET");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(serializedObjectSupporter27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(request30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(gsonConverter32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "GET" + "'", str37, "GET");
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "http://example.com/" + "'", str39, "http://example.com/");
        org.junit.Assert.assertNotNull(server40);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Retrofit-" + "'", str45, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor46);
        org.junit.Assert.assertNotNull(request48);
        org.junit.Assert.assertNotNull(request49);
        org.junit.Assert.assertNotNull(gsonConverter50);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor60);
        org.junit.Assert.assertNull(executor61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Retrofit-Idle" + "'", str62, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor63);
        org.junit.Assert.assertNull(profiler64);
        org.junit.Assert.assertNotNull(server65);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "GET" + "'", str67, "GET");
        org.junit.Assert.assertNotNull(gsonConverter68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "http://example.com/" + "'", str69, "http://example.com/");
        org.junit.Assert.assertNotNull(server70);
        org.junit.Assert.assertNotNull(gsonConverter71);
        org.junit.Assert.assertNotNull(request72);
        org.junit.Assert.assertNotNull(gsonConverter73);
        org.junit.Assert.assertNotNull(gsonConverter74);
        org.junit.Assert.assertNotNull(typedString75);
        org.junit.Assert.assertNotNull(log77);
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0995");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest4();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request7 = serializedObjectSupporter0.deserializeObjectRequest3();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "GET" + "'", str3, "GET");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "GET" + "'", str5, "GET");
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(request7);
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0996");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor2 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest4();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Retrofit-" + "'", str1, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor2);
        org.junit.Assert.assertNotNull(request3);
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0997");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor2 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest6();
        java.lang.String str4 = request3.method;
        java.lang.String str5 = request3.url;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Retrofit-" + "'", str1, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0998");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        retrofit.client.Client.Provider provider3 = null;
        builder0.clientProvider = provider3;
        retrofit.RestAdapter.Log log5 = retrofit.RestAdapter.Log.NONE;
        builder0.log = log5;
        retrofit.ErrorHandler errorHandler7 = builder0.errorHandler;
        retrofit.Profiler profiler8 = null;
        builder0.profiler = profiler8;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNotNull(log5);
        org.junit.Assert.assertNull(errorHandler7);
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0999");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.sethttpExecutor(executor1);
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        java.util.concurrent.Executor executor5 = null;
        builder0.httpExecutor = executor5;
        java.util.concurrent.Executor executor7 = null;
        builder0.setcallbackExecutor(executor7);
        retrofit.client.Client.Provider provider9 = null;
        builder0.setclientProvider(provider9);
        retrofit.client.Client.Provider provider11 = null;
        builder0.setclientProvider(provider11);
        retrofit.Profiler profiler13 = builder0.profiler;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor15 = null;
        builder14.setcallbackExecutor(executor15);
        java.util.concurrent.Executor executor17 = null;
        builder14.setcallbackExecutor(executor17);
        retrofit.client.Client.Provider provider19 = null;
        builder14.clientProvider = provider19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = builder21.serializedObjectSupporter;
        retrofit.Profiler profiler23 = builder21.profiler;
        retrofit.RestAdapter.LogLevel logLevel24 = builder21.logLevel;
        builder14.logLevel = logLevel24;
        retrofit.RestAdapter.Log log26 = null;
        builder14.log = log26;
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        java.lang.String str29 = serializedObjectSupporter28.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter28.deserializeObjectConverter3();
        java.lang.String str31 = serializedObjectSupporter28.deserializeObjectString4();
        retrofit.Server server32 = serializedObjectSupporter28.deserializeObjectServer1();
        retrofit.client.Client.Provider provider33 = null;
        java.util.concurrent.Executor executor34 = null;
        java.util.concurrent.Executor executor35 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        java.lang.String str37 = serializedObjectSupporter36.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor38 = serializedObjectSupporter36.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request40 = serializedObjectSupporter39.deserializeObjectRequest1();
        retrofit.client.Request request41 = serializedObjectSupporter39.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter42 = serializedObjectSupporter39.deserializeObjectConverter5();
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor46 = null;
        builder45.sethttpExecutor(executor46);
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        builder45.log = log48;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter(server32, provider33, executor34, executor35, requestInterceptor38, (retrofit.converter.Converter) gsonConverter42, profiler43, errorHandler44, log48, logLevel50);
        java.util.concurrent.Executor executor52 = restAdapter51.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor53 = restAdapter51.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor54 = restAdapter51.requestInterceptor;
        builder14.requestInterceptor = requestInterceptor54;
        builder0.requestInterceptor = requestInterceptor54;
        org.junit.Assert.assertNull(profiler13);
        org.junit.Assert.assertNull(serializedObjectSupporter22);
        org.junit.Assert.assertNull(profiler23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "GET" + "'", str29, "GET");
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "http://example.com/" + "'", str31, "http://example.com/");
        org.junit.Assert.assertNotNull(server32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-" + "'", str37, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor38);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(request41);
        org.junit.Assert.assertNotNull(gsonConverter42);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor52);
        org.junit.Assert.assertNotNull(requestInterceptor53);
        org.junit.Assert.assertNotNull(requestInterceptor54);
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test1000");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider5 = builder4.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder7 = builder4.setLogLevel(logLevel6);
        retrofit.converter.Converter converter8 = builder7.converter;
        java.util.concurrent.Executor executor9 = null;
        builder7.sethttpExecutor(executor9);
        retrofit.RestAdapter.Builder builder12 = builder7.setServer("GET");
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor14 = null;
        builder13.setcallbackExecutor(executor14);
        java.util.concurrent.Executor executor16 = null;
        builder13.setcallbackExecutor(executor16);
        builder13.ensureSaneDefaults();
        java.util.concurrent.Executor executor19 = builder13.callbackExecutor;
        builder12.setcallbackExecutor(executor19);
        builder0.setcallbackExecutor(executor19);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor23 = null;
        builder22.setcallbackExecutor(executor23);
        java.util.concurrent.Executor executor25 = null;
        builder22.setcallbackExecutor(executor25);
        retrofit.client.Client.Provider provider27 = null;
        builder22.clientProvider = provider27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = builder29.serializedObjectSupporter;
        retrofit.Profiler profiler31 = builder29.profiler;
        retrofit.RestAdapter.LogLevel logLevel32 = builder29.logLevel;
        builder22.logLevel = logLevel32;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor35 = null;
        builder34.sethttpExecutor(executor35);
        retrofit.RestAdapter.Log log37 = null;
        builder34.log = log37;
        java.util.concurrent.Executor executor39 = builder34.callbackExecutor;
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        builder34.log = log40;
        log40.log("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder44 = builder22.setLog(log40);
        java.util.concurrent.Executor executor45 = builder22.httpExecutor;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log47 = builder46.log;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor49 = null;
        builder48.setcallbackExecutor(executor49);
        java.util.concurrent.Executor executor51 = null;
        builder48.setcallbackExecutor(executor51);
        retrofit.client.Client.Provider provider53 = null;
        builder48.clientProvider = provider53;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = builder55.serializedObjectSupporter;
        retrofit.Profiler profiler57 = builder55.profiler;
        retrofit.RestAdapter.LogLevel logLevel58 = builder55.logLevel;
        builder48.logLevel = logLevel58;
        builder46.logLevel = logLevel58;
        retrofit.SerializedObjectSupporter serializedObjectSupporter61 = new retrofit.SerializedObjectSupporter();
        java.lang.String str62 = serializedObjectSupporter61.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter63 = serializedObjectSupporter61.deserializeObjectConverter3();
        java.lang.String str64 = serializedObjectSupporter61.deserializeObjectString4();
        retrofit.Server server65 = serializedObjectSupporter61.deserializeObjectServer1();
        retrofit.client.Client.Provider provider66 = null;
        java.util.concurrent.Executor executor67 = null;
        java.util.concurrent.Executor executor68 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter69 = new retrofit.SerializedObjectSupporter();
        java.lang.String str70 = serializedObjectSupporter69.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor71 = serializedObjectSupporter69.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter72 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request73 = serializedObjectSupporter72.deserializeObjectRequest1();
        retrofit.client.Request request74 = serializedObjectSupporter72.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter75 = serializedObjectSupporter72.deserializeObjectConverter5();
        retrofit.Profiler profiler76 = null;
        retrofit.ErrorHandler errorHandler77 = null;
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor79 = null;
        builder78.sethttpExecutor(executor79);
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        builder78.log = log81;
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter84 = new retrofit.RestAdapter(server65, provider66, executor67, executor68, requestInterceptor71, (retrofit.converter.Converter) gsonConverter75, profiler76, errorHandler77, log81, logLevel83);
        retrofit.RestAdapter.LogLevel logLevel85 = restAdapter84.getLogLevel();
        retrofit.converter.Converter converter86 = restAdapter84.getconverter();
        retrofit.RestAdapter.LogLevel logLevel87 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean88 = logLevel87.log();
        boolean boolean89 = logLevel87.log();
        restAdapter84.setLogLevel(logLevel87);
        retrofit.RestAdapter.Builder builder91 = builder46.setLogLevel(logLevel87);
        builder22.logLevel = logLevel87;
        builder0.logLevel = logLevel87;
        retrofit.ErrorHandler errorHandler94 = builder0.errorHandler;
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(converter8);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(executor19);
        org.junit.Assert.assertNull(serializedObjectSupporter30);
        org.junit.Assert.assertNull(profiler31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor39);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNull(executor45);
        org.junit.Assert.assertNull(log47);
        org.junit.Assert.assertNull(serializedObjectSupporter56);
        org.junit.Assert.assertNull(profiler57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "GET" + "'", str62, "GET");
        org.junit.Assert.assertNotNull(gsonConverter63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "http://example.com/" + "'", str64, "http://example.com/");
        org.junit.Assert.assertNotNull(server65);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Retrofit-" + "'", str70, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor71);
        org.junit.Assert.assertNotNull(request73);
        org.junit.Assert.assertNotNull(request74);
        org.junit.Assert.assertNotNull(gsonConverter75);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(converter86);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNull(errorHandler94);
    }
}

