import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test001");
        retrofit.RestAdapter restAdapter0 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: reflection call to retrofit.RestAdapter$RestHandler with null for superclass argument");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test002");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter2 = serializedObjectSupporter0.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
    }

    @Test
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test003");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString5();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections collections3 = serializedObjectSupporter0.deserializeObjectList1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Collections$UnmodifiableRandomAccessList cannot be cast to java.util.Collections");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "POST" + "'", str2, "POST");
    }

    @Test
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test004");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.mime.TypedOutput typedOutput3 = request2.body;
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNull(typedOutput3);
    }

    @Test
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test005");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = builder5.serializedObjectSupporter;
        retrofit.Profiler profiler7 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder8 = builder5.setProfiler(profiler7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
    }

    @Test
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test006");
        retrofit.RestAdapter.LogLevel logLevel0 = retrofit.RestAdapter.LogLevel.NONE;
        org.junit.Assert.assertTrue("'" + logLevel0 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel0.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test007");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter2 = serializedObjectSupporter0.deserializeObjectLogLevel2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(server1);
    }

    @Test
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test008");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.converter.GsonConverter gsonConverter1 = serializedObjectSupporter0.deserializeObjectConverter8();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter2 = serializedObjectSupporter0.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(gsonConverter1);
    }

    @Test
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test009");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.Profiler profiler3 = builder2.profiler;
        java.util.concurrent.Executor executor4 = null;
        builder2.sethttpExecutor(executor4);
        retrofit.client.Client client6 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder7 = builder2.setClient(client6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(profiler3);
    }

    @Test
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test010");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.Profiler profiler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder5 = builder2.setProfiler(profiler4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(converter3);
    }

    @Test
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test011");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.client.Client client4 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder5 = builder2.setClient(client4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(converter3);
    }

    @Test
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test012");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.Profiler profiler3 = builder2.profiler;
        java.util.concurrent.Executor executor4 = null;
        builder2.sethttpExecutor(executor4);
        retrofit.Profiler profiler6 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder7 = builder2.setProfiler(profiler6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(profiler3);
    }

    @Test
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test013");
        java.lang.String str0 = retrofit.RestAdapter.IDLE_THREAD_NAME;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "Retrofit-Idle" + "'", str0, "Retrofit-Idle");
    }

    @Test
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test014");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest7();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter3 = serializedObjectSupporter0.deserializeObjectLogLevel2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
    }

    @Test
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test015");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = builder5.serializedObjectSupporter;
        java.util.concurrent.Executor executor7 = null;
        java.util.concurrent.Executor executor8 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder9 = builder5.setExecutors(executor7, executor8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
    }

    @Test
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test016");
        java.lang.String str0 = retrofit.RestAdapter.THREAD_PREFIX;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "Retrofit-" + "'", str0, "Retrofit-");
    }

    @Test
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test017");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        retrofit.RestAdapter.Log log6 = builder5.log;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(log6);
    }

    @Test
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test018");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request8 = serializedObjectSupporter7.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter7.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder11 = builder6.setConverter((retrofit.converter.Converter) gsonConverter10);
        java.util.concurrent.Executor executor12 = builder11.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server14 = serializedObjectSupporter13.deserializeObjectServer1();
        java.lang.String str15 = server14.getUrl();
        builder11.server = server14;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request19 = serializedObjectSupporter18.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter18.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter18.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder22 = builder17.setConverter((retrofit.converter.Converter) gsonConverter21);
        builder17.ensureSaneDefaults();
        retrofit.client.Client.Provider provider24 = builder17.clientProvider;
        java.util.concurrent.Executor executor25 = null;
        java.util.concurrent.Executor executor26 = null;
        retrofit.RequestInterceptor requestInterceptor27 = null;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request30 = serializedObjectSupporter29.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter32 = serializedObjectSupporter29.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder33 = builder28.setConverter((retrofit.converter.Converter) gsonConverter32);
        retrofit.Profiler profiler34 = null;
        retrofit.ErrorHandler errorHandler35 = null;
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        log36.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server14, provider24, executor25, executor26, requestInterceptor27, (retrofit.converter.Converter) gsonConverter32, profiler34, errorHandler35, log36, logLevel39);
        builder0.clientProvider = provider24;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNull(executor12);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "http://example.com" + "'", str15, "http://example.com");
        org.junit.Assert.assertNotNull(request19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(provider24);
        org.junit.Assert.assertNotNull(request30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(gsonConverter32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test019");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString3 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        retrofit.mime.TypedString typedString4 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter8();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter6 = serializedObjectSupporter0.deserializeObjectLogLevel1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(typedString3);
        org.junit.Assert.assertNotNull(typedString4);
        org.junit.Assert.assertNotNull(gsonConverter5);
    }

    @Test
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test020");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest7();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter4 = serializedObjectSupporter0.deserializeObjectLogLevel2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
    }

    @Test
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test021");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString3 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        retrofit.mime.TypedString typedString4 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections collections5 = serializedObjectSupporter0.deserializeObjectList1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Collections$UnmodifiableRandomAccessList cannot be cast to java.util.Collections");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(typedString3);
        org.junit.Assert.assertNotNull(typedString4);
    }

    @Test
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test022");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = null;
        restAdapter34.setLogLevel(logLevel35);
        retrofit.RestAdapter.RestHandler restHandler37 = restAdapter34.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = restHandler37.serializedObjectSupporter;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(serializedObjectSupporter38);
    }

    @Test
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test023");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.converter.GsonConverter gsonConverter1 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        org.junit.Assert.assertNotNull(gsonConverter1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNull(typedOutput5);
    }

    @Test
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test024");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.Profiler profiler3 = builder2.profiler;
        java.util.concurrent.Executor executor4 = null;
        builder2.sethttpExecutor(executor4);
        retrofit.client.Client.Provider provider6 = null;
        builder2.clientProvider = provider6;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(profiler3);
    }

    @Test
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test025");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.Server server9 = new retrofit.Server("hi!", "default");
        builder5.server = server9;
        java.lang.String str11 = server9.apiUrl;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test026");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter2 = serializedObjectSupporter0.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(server1);
    }

    @Test
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test027");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        java.util.concurrent.Executor executor42 = restAdapter34.getcallbackExecutor();
        java.lang.String str43 = restAdapter34.getIDLE_THREAD_NAME();
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = restAdapter34.serializedObjectSupporter;
        retrofit.client.Response response46 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response48 = restAdapter34.logAndReplaceResponse("default", response46, (long) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Retrofit-Idle" + "'", str43, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(serializedObjectSupporter44);
    }

    @Test
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test028");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.mime.TypedOutput typedOutput5 = request4.body;
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNull(typedOutput5);
    }

    @Test
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test029");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        builder0.logLevel = logLevel3;
        retrofit.client.Client.Provider provider5 = builder0.clientProvider;
        java.util.concurrent.Executor executor6 = null;
        builder0.setcallbackExecutor(executor6);
        java.util.concurrent.Executor executor8 = null;
        builder0.callbackExecutor = executor8;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(provider5);
    }

    @Test
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test030");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = null;
        builder5.httpExecutor = executor6;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = builder5.serializedObjectSupporter;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder11 = builder5.setExecutors(executor9, executor10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
    }

    @Test
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test031");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        java.lang.String str11 = server8.getUrl();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "http://example.com" + "'", str11, "http://example.com");
    }

    @Test
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test032");
        java.lang.String str0 = retrofit.Server.DEFAULT_NAME;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "default" + "'", str0, "default");
    }

    @Test
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test033");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest1();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter3 = serializedObjectSupporter0.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertNotNull(request2);
    }

    @Test
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test034");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.ErrorHandler errorHandler5 = builder4.errorHandler;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(errorHandler5);
    }

    @Test
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test035");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest7();
        java.util.List<retrofit.client.Header> headerList5 = request4.headers;
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "POST" + "'", str2, "POST");
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(headerList5);
    }

    @Test
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test036");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request7 = serializedObjectSupporter6.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter6.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter6.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder10 = builder5.setConverter((retrofit.converter.Converter) gsonConverter9);
        java.util.concurrent.Executor executor11 = builder10.getcallbackExecutor();
        retrofit.Server server14 = new retrofit.Server("hi!", "default");
        builder10.server = server14;
        java.util.concurrent.Executor executor16 = null;
        builder10.sethttpExecutor(executor16);
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request20 = serializedObjectSupporter19.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter19.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter19.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder23 = builder18.setConverter((retrofit.converter.Converter) gsonConverter22);
        java.util.concurrent.Executor executor24 = builder23.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server26 = serializedObjectSupporter25.deserializeObjectServer1();
        java.lang.String str27 = server26.getUrl();
        builder23.server = server26;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request31 = serializedObjectSupporter30.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter32 = serializedObjectSupporter30.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter30.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder34 = builder29.setConverter((retrofit.converter.Converter) gsonConverter33);
        builder29.ensureSaneDefaults();
        retrofit.client.Client.Provider provider36 = builder29.clientProvider;
        java.util.concurrent.Executor executor37 = null;
        java.util.concurrent.Executor executor38 = null;
        retrofit.RequestInterceptor requestInterceptor39 = null;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request42 = serializedObjectSupporter41.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter41.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter44 = serializedObjectSupporter41.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder45 = builder40.setConverter((retrofit.converter.Converter) gsonConverter44);
        retrofit.Profiler profiler46 = null;
        retrofit.ErrorHandler errorHandler47 = null;
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        log48.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter(server26, provider36, executor37, executor38, requestInterceptor39, (retrofit.converter.Converter) gsonConverter44, profiler46, errorHandler47, log48, logLevel51);
        retrofit.RestAdapter.Builder builder53 = builder10.setClient(provider36);
        builder4.setclientProvider(provider36);
        retrofit.Profiler profiler55 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder56 = builder4.setProfiler(profiler55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNotNull(request20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(server26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "http://example.com" + "'", str27, "http://example.com");
        org.junit.Assert.assertNotNull(request31);
        org.junit.Assert.assertNotNull(gsonConverter32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(provider36);
        org.junit.Assert.assertNotNull(request42);
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertNotNull(gsonConverter44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
    }

    @Test
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test037");
        retrofit.Server server2 = new retrofit.Server("http://example.com", "POST");
    }

    @Test
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test038");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter2 = serializedObjectSupporter0.deserializeObjectLogLevel2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
    }

    @Test
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test039");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.converter.GsonConverter gsonConverter1 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest1();
        org.junit.Assert.assertNotNull(gsonConverter1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(request5);
    }

    @Test
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test040");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        retrofit.Server server7 = new retrofit.Server("http://example.com");
        builder0.server = server7;
        java.lang.String str9 = server7.getapiUrl();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
    }

    @Test
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test041");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.mime.TypedOutput typedOutput7 = request6.body;
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNull(typedOutput7);
    }

    @Test
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test042");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        java.util.concurrent.Executor executor35 = restAdapter34.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request37 = serializedObjectSupporter36.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter4();
        retrofit.client.Request request39 = serializedObjectSupporter36.deserializeObjectRequest4();
        retrofit.client.Request request40 = restAdapter34.logAndReplaceRequest(request39);
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter34.new RestHandler();
        retrofit.converter.Converter converter42 = restAdapter34.converter;
        java.lang.Throwable throwable43 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter34.logException(throwable43, "Retrofit-Idle");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNotNull(request37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(converter42);
    }

    @Test
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test043");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter42 = serializedObjectSupporter41.deserializeObjectLogLevel2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
    }

    @Test
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test044");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.Server server9 = new retrofit.Server("hi!", "default");
        builder5.server = server9;
        java.util.concurrent.Executor executor11 = null;
        builder5.sethttpExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request15 = serializedObjectSupporter14.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter16 = serializedObjectSupporter14.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter14.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder18 = builder13.setConverter((retrofit.converter.Converter) gsonConverter17);
        java.util.concurrent.Executor executor19 = builder18.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server21 = serializedObjectSupporter20.deserializeObjectServer1();
        java.lang.String str22 = server21.getUrl();
        builder18.server = server21;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request26 = serializedObjectSupporter25.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter25.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter25.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder29 = builder24.setConverter((retrofit.converter.Converter) gsonConverter28);
        builder24.ensureSaneDefaults();
        retrofit.client.Client.Provider provider31 = builder24.clientProvider;
        java.util.concurrent.Executor executor32 = null;
        java.util.concurrent.Executor executor33 = null;
        retrofit.RequestInterceptor requestInterceptor34 = null;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request37 = serializedObjectSupporter36.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter36.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder40 = builder35.setConverter((retrofit.converter.Converter) gsonConverter39);
        retrofit.Profiler profiler41 = null;
        retrofit.ErrorHandler errorHandler42 = null;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        log43.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter(server21, provider31, executor32, executor33, requestInterceptor34, (retrofit.converter.Converter) gsonConverter39, profiler41, errorHandler42, log43, logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder5.setClient(provider31);
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server50 = serializedObjectSupporter49.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor51 = serializedObjectSupporter49.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder52 = builder48.setRequestInterceptor(requestInterceptor51);
        retrofit.RestAdapter.LogLevel logLevel53 = builder52.logLevel;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(request15);
        org.junit.Assert.assertNotNull(gsonConverter16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(executor19);
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "http://example.com" + "'", str22, "http://example.com");
        org.junit.Assert.assertNotNull(request26);
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(provider31);
        org.junit.Assert.assertNotNull(request37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(server50);
        org.junit.Assert.assertNotNull(requestInterceptor51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test045");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = null;
        restAdapter34.setLogLevel(logLevel35);
        retrofit.client.Response response38 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response40 = restAdapter34.logAndReplaceResponse("default", response38, (long) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test046");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        java.util.concurrent.Executor executor42 = restAdapter34.getcallbackExecutor();
        retrofit.client.Response response44 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response46 = restAdapter34.logAndReplaceResponse("Retrofit-", response44, (long) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertNull(executor42);
    }

    @Test
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test047");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter3 = serializedObjectSupporter0.deserializeObjectLogLevel2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Retrofit-" + "'", str2, "Retrofit-");
    }

    @Test
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test048");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest5();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter5 = serializedObjectSupporter0.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(request4);
    }

    @Test
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test049");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        java.util.concurrent.Executor executor35 = restAdapter34.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request37 = serializedObjectSupporter36.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter4();
        retrofit.client.Request request39 = serializedObjectSupporter36.deserializeObjectRequest4();
        retrofit.client.Request request40 = restAdapter34.logAndReplaceRequest(request39);
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter34.new RestHandler();
        retrofit.Server server42 = restAdapter34.getserver();
        java.lang.String str43 = server42.getapiUrl();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNotNull(request37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(server42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "http://example.com" + "'", str43, "http://example.com");
    }

    @Test
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test050");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest7();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter4 = serializedObjectSupporter0.deserializeObjectLogLevel1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
    }

    @Test
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test051");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str2 = server1.getUrl();
        java.lang.String str3 = server1.name;
        java.lang.String str4 = server1.getUrl();
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com" + "'", str2, "http://example.com");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "default" + "'", str3, "default");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com" + "'", str4, "http://example.com");
    }

    @Test
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test052");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest8();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString3();
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
    }

    @Test
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test053");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        java.util.concurrent.Executor executor35 = restAdapter34.getcallbackExecutor();
        retrofit.RestAdapter.RestHandler restHandler36 = restAdapter34.new RestHandler();
        retrofit.client.Client.Provider provider37 = restAdapter34.getclientProvider();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNotNull(provider37);
    }

    @Test
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test054");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = builder5.serializedObjectSupporter;
        retrofit.Profiler profiler7 = null;
        builder5.profiler = profiler7;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder11 = builder5.setExecutors(executor9, executor10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
    }

    @Test
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test055");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.mime.TypedOutput typedOutput4 = request3.getBody();
        java.lang.Class<?> wildcardClass5 = request3.getClass();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNull(typedOutput4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test056");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        java.util.concurrent.Executor executor42 = restAdapter34.getcallbackExecutor();
        java.lang.String str43 = restAdapter34.getIDLE_THREAD_NAME();
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = restAdapter34.serializedObjectSupporter;
        java.util.concurrent.Executor executor45 = restAdapter34.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request47 = serializedObjectSupporter46.deserializeObjectRequest5();
        java.lang.String str48 = serializedObjectSupporter46.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter49 = serializedObjectSupporter46.deserializeObjectConverter8();
        retrofit.client.Request request50 = serializedObjectSupporter46.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter46;
        java.lang.Throwable throwable52 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter34.logException(throwable52, "http://example.com/");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Retrofit-Idle" + "'", str43, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(serializedObjectSupporter44);
        org.junit.Assert.assertNull(executor45);
        org.junit.Assert.assertNotNull(request47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "POST" + "'", str48, "POST");
        org.junit.Assert.assertNotNull(gsonConverter49);
        org.junit.Assert.assertNotNull(request50);
    }

    @Test
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test057");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString3 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter5();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter6 = serializedObjectSupporter0.deserializeObjectLogLevel2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(typedString3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-" + "'", str4, "Retrofit-");
        org.junit.Assert.assertNotNull(gsonConverter5);
    }

    @Test
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test058");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest7();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter3 = serializedObjectSupporter0.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertNotNull(request2);
    }

    @Test
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test059");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.converter.GsonConverter gsonConverter1 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest8();
        java.util.List<retrofit.client.Header> headerList5 = request4.headers;
        java.lang.String str6 = request4.method;
        org.junit.Assert.assertNotNull(gsonConverter1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(headerList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "GET" + "'", str6, "GET");
    }

    @Test
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test060");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        java.util.concurrent.Executor executor3 = null;
        builder2.sethttpExecutor(executor3);
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server6 = serializedObjectSupporter5.deserializeObjectServer1();
        retrofit.client.Request request7 = serializedObjectSupporter5.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler8 = serializedObjectSupporter5.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder9 = builder2.setErrorHandler(errorHandler8);
        retrofit.Profiler profiler10 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder11 = builder9.setProfiler(profiler10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(server6);
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertNotNull(errorHandler8);
        org.junit.Assert.assertNotNull(builder9);
    }

    @Test
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test061");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request5 = serializedObjectSupporter4.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter4.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder8 = builder3.setConverter((retrofit.converter.Converter) gsonConverter7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = builder8.serializedObjectSupporter;
        java.util.concurrent.Executor executor10 = builder8.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server12 = serializedObjectSupporter11.deserializeObjectServer1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler14 = serializedObjectSupporter11.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder15 = builder8.setErrorHandler(errorHandler14);
        builder2.errorHandler = errorHandler14;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request19 = serializedObjectSupporter18.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter18.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter18.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder22 = builder17.setConverter((retrofit.converter.Converter) gsonConverter21);
        java.util.concurrent.Executor executor23 = builder22.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server25 = serializedObjectSupporter24.deserializeObjectServer1();
        java.lang.String str26 = server25.getUrl();
        builder22.server = server25;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request30 = serializedObjectSupporter29.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter32 = serializedObjectSupporter29.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder33 = builder28.setConverter((retrofit.converter.Converter) gsonConverter32);
        builder28.ensureSaneDefaults();
        retrofit.client.Client.Provider provider35 = builder28.clientProvider;
        java.util.concurrent.Executor executor36 = null;
        java.util.concurrent.Executor executor37 = null;
        retrofit.RequestInterceptor requestInterceptor38 = null;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request41 = serializedObjectSupporter40.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter42 = serializedObjectSupporter40.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter40.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder44 = builder39.setConverter((retrofit.converter.Converter) gsonConverter43);
        retrofit.Profiler profiler45 = null;
        retrofit.ErrorHandler errorHandler46 = null;
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        log47.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter(server25, provider35, executor36, executor37, requestInterceptor38, (retrofit.converter.Converter) gsonConverter43, profiler45, errorHandler46, log47, logLevel50);
        java.util.concurrent.Executor executor52 = restAdapter51.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter53 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request54 = serializedObjectSupporter53.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter55 = serializedObjectSupporter53.deserializeObjectConverter4();
        retrofit.client.Request request56 = serializedObjectSupporter53.deserializeObjectRequest4();
        retrofit.client.Request request57 = restAdapter51.logAndReplaceRequest(request56);
        retrofit.RestAdapter.RestHandler restHandler58 = restAdapter51.new RestHandler();
        retrofit.Server server59 = restAdapter51.getserver();
        builder2.server = server59;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertNull(executor10);
        org.junit.Assert.assertNotNull(server12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(errorHandler14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(request19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNull(executor23);
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "http://example.com" + "'", str26, "http://example.com");
        org.junit.Assert.assertNotNull(request30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(gsonConverter32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(provider35);
        org.junit.Assert.assertNotNull(request41);
        org.junit.Assert.assertNotNull(gsonConverter42);
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor52);
        org.junit.Assert.assertNotNull(request54);
        org.junit.Assert.assertNotNull(gsonConverter55);
        org.junit.Assert.assertNotNull(request56);
        org.junit.Assert.assertNotNull(request57);
        org.junit.Assert.assertNotNull(server59);
    }

    @Test
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test062");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = builder5.serializedObjectSupporter;
        java.util.concurrent.Executor executor7 = builder5.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server9 = serializedObjectSupporter8.deserializeObjectServer1();
        retrofit.client.Request request10 = serializedObjectSupporter8.deserializeObjectRequest8();
        retrofit.Server server11 = serializedObjectSupporter8.deserializeObjectServer1();
        builder5.server = server11;
        java.lang.String str13 = server11.name;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "default" + "'", str13, "default");
    }

    @Test
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test063");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.Profiler profiler3 = builder2.profiler;
        java.util.concurrent.Executor executor4 = null;
        builder2.sethttpExecutor(executor4);
        retrofit.Server server6 = builder2.server;
        retrofit.RequestInterceptor requestInterceptor7 = builder2.requestInterceptor;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(profiler3);
        org.junit.Assert.assertNotNull(server6);
        org.junit.Assert.assertNull(requestInterceptor7);
    }

    @Test
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test064");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        java.lang.String str35 = restAdapter34.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor36 = restAdapter34.getcallbackExecutor();
        java.lang.Throwable throwable37 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter34.logException(throwable37, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Retrofit-Idle" + "'", str35, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor36);
    }

    @Test
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test065");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = null;
        restAdapter34.setLogLevel(logLevel35);
        java.util.concurrent.Executor executor37 = restAdapter34.gethttpExecutor();
        retrofit.converter.Converter converter38 = restAdapter34.converter;
        retrofit.ErrorHandler errorHandler39 = restAdapter34.errorHandler;
        java.lang.Throwable throwable40 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter34.logException(throwable40, "Retrofit-");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertNotNull(converter38);
        org.junit.Assert.assertNull(errorHandler39);
    }

    @Test
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test066");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.Server server3 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest4();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter6 = serializedObjectSupporter0.deserializeObjectLogLevel1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(request5);
    }

    @Test
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test067");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter40 = serializedObjectSupporter35.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
    }

    @Test
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test068");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request6 = serializedObjectSupporter5.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter5.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter5.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder9 = builder4.setConverter((retrofit.converter.Converter) gsonConverter8);
        java.util.concurrent.Executor executor10 = builder9.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server12 = serializedObjectSupporter11.deserializeObjectServer1();
        java.lang.String str13 = server12.getUrl();
        builder9.server = server12;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request17 = serializedObjectSupporter16.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter16.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter16.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder20 = builder15.setConverter((retrofit.converter.Converter) gsonConverter19);
        builder15.ensureSaneDefaults();
        retrofit.client.Client.Provider provider22 = builder15.clientProvider;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request28 = serializedObjectSupporter27.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter27.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter27.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder31 = builder26.setConverter((retrofit.converter.Converter) gsonConverter30);
        retrofit.Profiler profiler32 = null;
        retrofit.ErrorHandler errorHandler33 = null;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        log34.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server12, provider22, executor23, executor24, requestInterceptor25, (retrofit.converter.Converter) gsonConverter30, profiler32, errorHandler33, log34, logLevel37);
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request40 = serializedObjectSupporter39.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter39.deserializeObjectConverter4();
        retrofit.client.Request request42 = serializedObjectSupporter39.deserializeObjectRequest7();
        restAdapter38.serializedObjectSupporter = serializedObjectSupporter39;
        builder2.serializedObjectSupporter = serializedObjectSupporter39;
        retrofit.client.Request request45 = serializedObjectSupporter39.deserializeObjectRequest7();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter46 = serializedObjectSupporter39.deserializeObjectLogLevel1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(executor10);
        org.junit.Assert.assertNotNull(server12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "http://example.com" + "'", str13, "http://example.com");
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(provider22);
        org.junit.Assert.assertNotNull(request28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(gsonConverter41);
        org.junit.Assert.assertNotNull(request42);
        org.junit.Assert.assertNotNull(request45);
    }

    @Test
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test069");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter7();
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Retrofit-" + "'", str2, "Retrofit-");
        org.junit.Assert.assertNotNull(gsonConverter3);
    }

    @Test
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test070");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor2 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter7();
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertNotNull(requestInterceptor2);
        org.junit.Assert.assertNotNull(gsonConverter3);
    }

    @Test
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test071");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest7();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter4 = serializedObjectSupporter0.deserializeObjectLogLevel2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(request3);
    }

    @Test
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test072");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = null;
        restAdapter34.setLogLevel(logLevel35);
        retrofit.Server server37 = restAdapter34.server;
        retrofit.client.Request request38 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request39 = restAdapter34.logAndReplaceRequest(request38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server37);
    }

    @Test
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test073");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("default");
        retrofit.Profiler profiler5 = null;
        builder4.profiler = profiler5;
        java.util.concurrent.Executor executor7 = null;
        java.util.concurrent.Executor executor8 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder9 = builder4.setExecutors(executor7, executor8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test074");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("default");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder7 = builder5.setServer("hi!");
        retrofit.converter.Converter converter8 = builder7.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = builder7.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel10 = builder7.logLevel;
        builder4.logLevel = logLevel10;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder14 = builder12.setServer("hi!");
        retrofit.RestAdapter.Builder builder16 = builder14.setServer("hi!");
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request19 = serializedObjectSupporter18.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter18.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter18.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder22 = builder17.setConverter((retrofit.converter.Converter) gsonConverter21);
        java.util.concurrent.Executor executor23 = builder22.getcallbackExecutor();
        retrofit.Server server26 = new retrofit.Server("hi!", "default");
        builder22.server = server26;
        java.util.concurrent.Executor executor28 = null;
        builder22.sethttpExecutor(executor28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request32 = serializedObjectSupporter31.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter34 = serializedObjectSupporter31.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder35 = builder30.setConverter((retrofit.converter.Converter) gsonConverter34);
        java.util.concurrent.Executor executor36 = builder35.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server38 = serializedObjectSupporter37.deserializeObjectServer1();
        java.lang.String str39 = server38.getUrl();
        builder35.server = server38;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request43 = serializedObjectSupporter42.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter44 = serializedObjectSupporter42.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter45 = serializedObjectSupporter42.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder46 = builder41.setConverter((retrofit.converter.Converter) gsonConverter45);
        builder41.ensureSaneDefaults();
        retrofit.client.Client.Provider provider48 = builder41.clientProvider;
        java.util.concurrent.Executor executor49 = null;
        java.util.concurrent.Executor executor50 = null;
        retrofit.RequestInterceptor requestInterceptor51 = null;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter53 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request54 = serializedObjectSupporter53.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter55 = serializedObjectSupporter53.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter56 = serializedObjectSupporter53.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder57 = builder52.setConverter((retrofit.converter.Converter) gsonConverter56);
        retrofit.Profiler profiler58 = null;
        retrofit.ErrorHandler errorHandler59 = null;
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        log60.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter(server38, provider48, executor49, executor50, requestInterceptor51, (retrofit.converter.Converter) gsonConverter56, profiler58, errorHandler59, log60, logLevel63);
        retrofit.RestAdapter.Builder builder65 = builder22.setClient(provider48);
        builder16.setclientProvider(provider48);
        retrofit.client.Client.Provider provider67 = builder16.getclientProvider();
        builder4.setclientProvider(provider67);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(converter8);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(request19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNull(executor23);
        org.junit.Assert.assertNotNull(request32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(gsonConverter34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNull(executor36);
        org.junit.Assert.assertNotNull(server38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "http://example.com" + "'", str39, "http://example.com");
        org.junit.Assert.assertNotNull(request43);
        org.junit.Assert.assertNotNull(gsonConverter44);
        org.junit.Assert.assertNotNull(gsonConverter45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(provider48);
        org.junit.Assert.assertNotNull(request54);
        org.junit.Assert.assertNotNull(gsonConverter55);
        org.junit.Assert.assertNotNull(gsonConverter56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(provider67);
    }

    @Test
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test075");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("default");
        retrofit.Profiler profiler5 = null;
        builder4.profiler = profiler5;
        java.util.concurrent.Executor executor7 = null;
        builder4.callbackExecutor = executor7;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test076");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = null;
        restAdapter34.setLogLevel(logLevel35);
        retrofit.Server server37 = restAdapter34.server;
        retrofit.RestAdapter.RestHandler restHandler38 = restAdapter34.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor39 = restAdapter34.getrequestInterceptor();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNull(requestInterceptor39);
    }

    @Test
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test077");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request5 = serializedObjectSupporter4.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter4.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter8();
        retrofit.client.Request request8 = serializedObjectSupporter4.deserializeObjectRequest5();
        retrofit.Server server9 = serializedObjectSupporter4.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder15 = builder10.setConverter((retrofit.converter.Converter) gsonConverter14);
        builder10.ensureSaneDefaults();
        retrofit.client.Client.Provider provider17 = builder10.clientProvider;
        java.util.concurrent.Executor executor18 = null;
        java.util.concurrent.Executor executor19 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server21 = serializedObjectSupporter20.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor22 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request25 = serializedObjectSupporter24.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter24.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter24.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder28 = builder23.setConverter((retrofit.converter.Converter) gsonConverter27);
        retrofit.Profiler profiler29 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server31 = serializedObjectSupporter30.deserializeObjectServer1();
        retrofit.client.Request request32 = serializedObjectSupporter30.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler33 = serializedObjectSupporter30.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        log34.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server9, provider17, executor18, executor19, requestInterceptor22, (retrofit.converter.Converter) gsonConverter27, profiler29, errorHandler33, log34, logLevel37);
        retrofit.RestAdapter.Builder builder39 = builder2.setClient(provider17);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request42 = serializedObjectSupporter41.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter41.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter44 = serializedObjectSupporter41.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder45 = builder40.setConverter((retrofit.converter.Converter) gsonConverter44);
        java.util.concurrent.Executor executor46 = builder45.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server48 = serializedObjectSupporter47.deserializeObjectServer1();
        java.lang.String str49 = server48.getUrl();
        builder45.server = server48;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request53 = serializedObjectSupporter52.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter54 = serializedObjectSupporter52.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter55 = serializedObjectSupporter52.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder56 = builder51.setConverter((retrofit.converter.Converter) gsonConverter55);
        builder51.ensureSaneDefaults();
        retrofit.client.Client.Provider provider58 = builder51.clientProvider;
        java.util.concurrent.Executor executor59 = null;
        java.util.concurrent.Executor executor60 = null;
        retrofit.RequestInterceptor requestInterceptor61 = null;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter63 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request64 = serializedObjectSupporter63.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter65 = serializedObjectSupporter63.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter66 = serializedObjectSupporter63.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder67 = builder62.setConverter((retrofit.converter.Converter) gsonConverter66);
        retrofit.Profiler profiler68 = null;
        retrofit.ErrorHandler errorHandler69 = null;
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        log70.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter74 = new retrofit.RestAdapter(server48, provider58, executor59, executor60, requestInterceptor61, (retrofit.converter.Converter) gsonConverter66, profiler68, errorHandler69, log70, logLevel73);
        retrofit.RestAdapter.Builder builder75 = builder2.setClient(provider58);
        retrofit.RestAdapter.LogLevel logLevel76 = builder75.logLevel;
        java.util.concurrent.Executor executor77 = builder75.callbackExecutor;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(provider17);
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNotNull(requestInterceptor22);
        org.junit.Assert.assertNotNull(request25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(server31);
        org.junit.Assert.assertNotNull(request32);
        org.junit.Assert.assertNotNull(errorHandler33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(request42);
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertNotNull(gsonConverter44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNull(executor46);
        org.junit.Assert.assertNotNull(server48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "http://example.com" + "'", str49, "http://example.com");
        org.junit.Assert.assertNotNull(request53);
        org.junit.Assert.assertNotNull(gsonConverter54);
        org.junit.Assert.assertNotNull(gsonConverter55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(provider58);
        org.junit.Assert.assertNotNull(request64);
        org.junit.Assert.assertNotNull(gsonConverter65);
        org.junit.Assert.assertNotNull(gsonConverter66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor77);
    }

    @Test
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test078");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.client.Client.Provider provider5 = builder2.getclientProvider();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(provider5);
    }

    @Test
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test079");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString3 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest1();
        java.lang.String str7 = request6.method;
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(typedString3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-" + "'", str4, "Retrofit-");
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "GET" + "'", str7, "GET");
    }

    @Test
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test080");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = builder5.serializedObjectSupporter;
        java.util.concurrent.Executor executor7 = builder5.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server9 = serializedObjectSupporter8.deserializeObjectServer1();
        retrofit.client.Request request10 = serializedObjectSupporter8.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler11 = serializedObjectSupporter8.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder12 = builder5.setErrorHandler(errorHandler11);
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request14 = serializedObjectSupporter13.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter13.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter16 = serializedObjectSupporter13.deserializeObjectConverter8();
        retrofit.client.Request request17 = serializedObjectSupporter13.deserializeObjectRequest5();
        retrofit.Server server18 = serializedObjectSupporter13.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request21 = serializedObjectSupporter20.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter20.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder24 = builder19.setConverter((retrofit.converter.Converter) gsonConverter23);
        builder19.ensureSaneDefaults();
        retrofit.client.Client.Provider provider26 = builder19.clientProvider;
        java.util.concurrent.Executor executor27 = null;
        java.util.concurrent.Executor executor28 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server30 = serializedObjectSupporter29.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor31 = serializedObjectSupporter29.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request34 = serializedObjectSupporter33.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter35 = serializedObjectSupporter33.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter33.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder37 = builder32.setConverter((retrofit.converter.Converter) gsonConverter36);
        retrofit.Profiler profiler38 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server40 = serializedObjectSupporter39.deserializeObjectServer1();
        retrofit.client.Request request41 = serializedObjectSupporter39.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler42 = serializedObjectSupporter39.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        log43.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter(server18, provider26, executor27, executor28, requestInterceptor31, (retrofit.converter.Converter) gsonConverter36, profiler38, errorHandler42, log43, logLevel46);
        builder5.requestInterceptor = requestInterceptor31;
        retrofit.Server server49 = builder5.server;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertNotNull(errorHandler11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(request14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(gsonConverter16);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(server18);
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(provider26);
        org.junit.Assert.assertNotNull(server30);
        org.junit.Assert.assertNotNull(requestInterceptor31);
        org.junit.Assert.assertNotNull(request34);
        org.junit.Assert.assertNotNull(gsonConverter35);
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(server40);
        org.junit.Assert.assertNotNull(request41);
        org.junit.Assert.assertNotNull(errorHandler42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server49);
    }

    @Test
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test081");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        java.util.concurrent.Executor executor35 = restAdapter34.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request37 = serializedObjectSupporter36.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter4();
        retrofit.client.Request request39 = serializedObjectSupporter36.deserializeObjectRequest4();
        retrofit.client.Request request40 = restAdapter34.logAndReplaceRequest(request39);
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter34.new RestHandler();
        retrofit.Server server42 = restAdapter34.getserver();
        java.lang.String str43 = server42.apiUrl;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNotNull(request37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(server42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "http://example.com" + "'", str43, "http://example.com");
    }

    @Test
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test082");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = null;
        restAdapter34.setLogLevel(logLevel35);
        retrofit.RestAdapter.RestHandler restHandler37 = restAdapter34.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor38 = restAdapter34.requestInterceptor;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(requestInterceptor38);
    }

    @Test
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test083");
        retrofit.Server server2 = new retrofit.Server("", "Retrofit-");
        java.lang.String str3 = server2.apiUrl;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
    }

    @Test
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test084");
        retrofit.Server server2 = new retrofit.Server("Retrofit-Idle", "GET");
    }

    @Test
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test085");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request4 = serializedObjectSupporter3.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter5();
        builder0.converter = gsonConverter5;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request8 = serializedObjectSupporter7.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter7.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString10 = serializedObjectSupporter7.deserializeObjectTypedOutput2();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString1();
        builder0.serializedObjectSupporter = serializedObjectSupporter7;
        retrofit.Server server13 = serializedObjectSupporter7.deserializeObjectServer1();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter14 = serializedObjectSupporter7.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(typedString10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-" + "'", str11, "Retrofit-");
        org.junit.Assert.assertNotNull(server13);
    }

    @Test
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test086");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest4();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter3 = serializedObjectSupporter0.deserializeObjectLogLevel1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertNotNull(request2);
    }

    @Test
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test087");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.client.Client.Provider provider35 = restAdapter34.clientProvider;
        java.lang.String str36 = restAdapter34.getTHREAD_PREFIX();
        java.util.concurrent.Executor executor37 = restAdapter34.callbackExecutor;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(provider35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Retrofit-" + "'", str36, "Retrofit-");
        org.junit.Assert.assertNull(executor37);
    }

    @Test
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test088");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        java.util.concurrent.Executor executor41 = restAdapter34.httpExecutor;
        java.lang.String str42 = restAdapter34.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor43 = restAdapter34.gethttpExecutor();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNull(executor41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Retrofit-Idle" + "'", str42, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor43);
    }

    @Test
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test089");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.client.Client.Provider provider35 = restAdapter34.clientProvider;
        java.lang.String str36 = restAdapter34.getTHREAD_PREFIX();
        retrofit.Profiler profiler37 = restAdapter34.getprofiler();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(provider35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Retrofit-" + "'", str36, "Retrofit-");
        org.junit.Assert.assertNull(profiler37);
    }

    @Test
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test090");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = builder2.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request7 = serializedObjectSupporter6.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter6.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter6.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder10 = builder5.setConverter((retrofit.converter.Converter) gsonConverter9);
        java.util.concurrent.Executor executor11 = builder10.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server13 = serializedObjectSupporter12.deserializeObjectServer1();
        java.lang.String str14 = server13.getUrl();
        builder10.server = server13;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request18 = serializedObjectSupporter17.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter17.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter17.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder21 = builder16.setConverter((retrofit.converter.Converter) gsonConverter20);
        builder16.ensureSaneDefaults();
        retrofit.client.Client.Provider provider23 = builder16.clientProvider;
        java.util.concurrent.Executor executor24 = null;
        java.util.concurrent.Executor executor25 = null;
        retrofit.RequestInterceptor requestInterceptor26 = null;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request29 = serializedObjectSupporter28.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter28.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter28.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder32 = builder27.setConverter((retrofit.converter.Converter) gsonConverter31);
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        log35.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter(server13, provider23, executor24, executor25, requestInterceptor26, (retrofit.converter.Converter) gsonConverter31, profiler33, errorHandler34, log35, logLevel38);
        java.util.concurrent.Executor executor40 = restAdapter39.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request42 = serializedObjectSupporter41.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter41.deserializeObjectConverter4();
        retrofit.client.Request request44 = serializedObjectSupporter41.deserializeObjectRequest4();
        retrofit.client.Request request45 = restAdapter39.logAndReplaceRequest(request44);
        retrofit.RestAdapter.RestHandler restHandler46 = restAdapter39.new RestHandler();
        retrofit.Server server47 = restAdapter39.getserver();
        java.lang.String str48 = server47.name;
        retrofit.RestAdapter.Builder builder49 = builder2.setServer(server47);
        java.lang.String str50 = server47.apiUrl;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(serializedObjectSupporter4);
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "http://example.com" + "'", str14, "http://example.com");
        org.junit.Assert.assertNotNull(request18);
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(provider23);
        org.junit.Assert.assertNotNull(request29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(request42);
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertNotNull(request44);
        org.junit.Assert.assertNotNull(request45);
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "default" + "'", str48, "default");
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "http://example.com" + "'", str50, "http://example.com");
    }

    @Test
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test091");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("default");
        retrofit.Profiler profiler5 = null;
        builder4.profiler = profiler5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request9 = serializedObjectSupporter8.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter8.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter8.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder12 = builder7.setConverter((retrofit.converter.Converter) gsonConverter11);
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = builder12.serializedObjectSupporter;
        java.util.concurrent.Executor executor14 = builder12.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server16 = serializedObjectSupporter15.deserializeObjectServer1();
        retrofit.client.Request request17 = serializedObjectSupporter15.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler18 = serializedObjectSupporter15.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder19 = builder12.setErrorHandler(errorHandler18);
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request21 = serializedObjectSupporter20.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter20.deserializeObjectConverter8();
        retrofit.client.Request request24 = serializedObjectSupporter20.deserializeObjectRequest5();
        retrofit.Server server25 = serializedObjectSupporter20.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request28 = serializedObjectSupporter27.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter27.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter27.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder31 = builder26.setConverter((retrofit.converter.Converter) gsonConverter30);
        builder26.ensureSaneDefaults();
        retrofit.client.Client.Provider provider33 = builder26.clientProvider;
        java.util.concurrent.Executor executor34 = null;
        java.util.concurrent.Executor executor35 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server37 = serializedObjectSupporter36.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor38 = serializedObjectSupporter36.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request41 = serializedObjectSupporter40.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter42 = serializedObjectSupporter40.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter40.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder44 = builder39.setConverter((retrofit.converter.Converter) gsonConverter43);
        retrofit.Profiler profiler45 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server47 = serializedObjectSupporter46.deserializeObjectServer1();
        retrofit.client.Request request48 = serializedObjectSupporter46.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler49 = serializedObjectSupporter46.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        log50.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter(server25, provider33, executor34, executor35, requestInterceptor38, (retrofit.converter.Converter) gsonConverter43, profiler45, errorHandler49, log50, logLevel53);
        builder12.requestInterceptor = requestInterceptor38;
        retrofit.RestAdapter.Builder builder56 = builder4.setRequestInterceptor(requestInterceptor38);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(request9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(serializedObjectSupporter13);
        org.junit.Assert.assertNull(executor14);
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(errorHandler18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertNotNull(request28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(provider33);
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(requestInterceptor38);
        org.junit.Assert.assertNotNull(request41);
        org.junit.Assert.assertNotNull(gsonConverter42);
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertNotNull(request48);
        org.junit.Assert.assertNotNull(errorHandler49);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder56);
    }

    @Test
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test092");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.Profiler profiler7 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder8 = builder5.setProfiler(profiler7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
    }

    @Test
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test093");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request4 = serializedObjectSupporter3.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter5();
        builder0.converter = gsonConverter5;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request8 = serializedObjectSupporter7.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter7.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString10 = serializedObjectSupporter7.deserializeObjectTypedOutput2();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString1();
        builder0.serializedObjectSupporter = serializedObjectSupporter7;
        retrofit.client.Request request13 = serializedObjectSupporter7.deserializeObjectRequest5();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter14 = serializedObjectSupporter7.deserializeObjectLogLevel2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(typedString10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-" + "'", str11, "Retrofit-");
        org.junit.Assert.assertNotNull(request13);
    }

    @Test
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test094");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.Server server9 = new retrofit.Server("hi!", "default");
        builder5.server = server9;
        java.util.concurrent.Executor executor11 = null;
        builder5.sethttpExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request15 = serializedObjectSupporter14.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter16 = serializedObjectSupporter14.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter14.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder18 = builder13.setConverter((retrofit.converter.Converter) gsonConverter17);
        java.util.concurrent.Executor executor19 = builder18.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server21 = serializedObjectSupporter20.deserializeObjectServer1();
        java.lang.String str22 = server21.getUrl();
        builder18.server = server21;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request26 = serializedObjectSupporter25.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter25.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter25.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder29 = builder24.setConverter((retrofit.converter.Converter) gsonConverter28);
        builder24.ensureSaneDefaults();
        retrofit.client.Client.Provider provider31 = builder24.clientProvider;
        java.util.concurrent.Executor executor32 = null;
        java.util.concurrent.Executor executor33 = null;
        retrofit.RequestInterceptor requestInterceptor34 = null;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request37 = serializedObjectSupporter36.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter36.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder40 = builder35.setConverter((retrofit.converter.Converter) gsonConverter39);
        retrofit.Profiler profiler41 = null;
        retrofit.ErrorHandler errorHandler42 = null;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        log43.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter(server21, provider31, executor32, executor33, requestInterceptor34, (retrofit.converter.Converter) gsonConverter39, profiler41, errorHandler42, log43, logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder5.setClient(provider31);
        java.util.concurrent.Executor executor49 = null;
        builder48.setcallbackExecutor(executor49);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(request15);
        org.junit.Assert.assertNotNull(gsonConverter16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(executor19);
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "http://example.com" + "'", str22, "http://example.com");
        org.junit.Assert.assertNotNull(request26);
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(provider31);
        org.junit.Assert.assertNotNull(request37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
    }

    @Test
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test095");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest7();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString5();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter4 = serializedObjectSupporter0.deserializeObjectLogLevel2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "POST" + "'", str3, "POST");
    }

    @Test
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test096");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request8 = serializedObjectSupporter7.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter7.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder11 = builder6.setConverter((retrofit.converter.Converter) gsonConverter10);
        builder6.ensureSaneDefaults();
        retrofit.client.Client.Provider provider13 = builder6.clientProvider;
        java.util.concurrent.Executor executor14 = null;
        java.util.concurrent.Executor executor15 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server17 = serializedObjectSupporter16.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor18 = serializedObjectSupporter16.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request21 = serializedObjectSupporter20.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter20.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder24 = builder19.setConverter((retrofit.converter.Converter) gsonConverter23);
        retrofit.Profiler profiler25 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server27 = serializedObjectSupporter26.deserializeObjectServer1();
        retrofit.client.Request request28 = serializedObjectSupporter26.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler29 = serializedObjectSupporter26.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server5, provider13, executor14, executor15, requestInterceptor18, (retrofit.converter.Converter) gsonConverter23, profiler25, errorHandler29, log30, logLevel33);
        log30.log("POST");
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(provider13);
        org.junit.Assert.assertNotNull(server17);
        org.junit.Assert.assertNotNull(requestInterceptor18);
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertNotNull(request28);
        org.junit.Assert.assertNotNull(errorHandler29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test097");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request5 = serializedObjectSupporter4.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter4.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter8();
        retrofit.client.Request request8 = serializedObjectSupporter4.deserializeObjectRequest5();
        retrofit.Server server9 = serializedObjectSupporter4.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder15 = builder10.setConverter((retrofit.converter.Converter) gsonConverter14);
        builder10.ensureSaneDefaults();
        retrofit.client.Client.Provider provider17 = builder10.clientProvider;
        java.util.concurrent.Executor executor18 = null;
        java.util.concurrent.Executor executor19 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server21 = serializedObjectSupporter20.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor22 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request25 = serializedObjectSupporter24.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter24.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter24.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder28 = builder23.setConverter((retrofit.converter.Converter) gsonConverter27);
        retrofit.Profiler profiler29 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server31 = serializedObjectSupporter30.deserializeObjectServer1();
        retrofit.client.Request request32 = serializedObjectSupporter30.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler33 = serializedObjectSupporter30.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        log34.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server9, provider17, executor18, executor19, requestInterceptor22, (retrofit.converter.Converter) gsonConverter27, profiler29, errorHandler33, log34, logLevel37);
        retrofit.RestAdapter.Builder builder39 = builder2.setClient(provider17);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request42 = serializedObjectSupporter41.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter41.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter44 = serializedObjectSupporter41.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder45 = builder40.setConverter((retrofit.converter.Converter) gsonConverter44);
        java.util.concurrent.Executor executor46 = builder45.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server48 = serializedObjectSupporter47.deserializeObjectServer1();
        java.lang.String str49 = server48.getUrl();
        builder45.server = server48;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request53 = serializedObjectSupporter52.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter54 = serializedObjectSupporter52.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter55 = serializedObjectSupporter52.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder56 = builder51.setConverter((retrofit.converter.Converter) gsonConverter55);
        builder51.ensureSaneDefaults();
        retrofit.client.Client.Provider provider58 = builder51.clientProvider;
        java.util.concurrent.Executor executor59 = null;
        java.util.concurrent.Executor executor60 = null;
        retrofit.RequestInterceptor requestInterceptor61 = null;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter63 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request64 = serializedObjectSupporter63.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter65 = serializedObjectSupporter63.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter66 = serializedObjectSupporter63.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder67 = builder62.setConverter((retrofit.converter.Converter) gsonConverter66);
        retrofit.Profiler profiler68 = null;
        retrofit.ErrorHandler errorHandler69 = null;
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        log70.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter74 = new retrofit.RestAdapter(server48, provider58, executor59, executor60, requestInterceptor61, (retrofit.converter.Converter) gsonConverter66, profiler68, errorHandler69, log70, logLevel73);
        retrofit.RestAdapter.Builder builder75 = builder2.setClient(provider58);
        retrofit.SerializedObjectSupporter serializedObjectSupporter76 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request77 = serializedObjectSupporter76.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter78 = serializedObjectSupporter76.deserializeObjectConverter5();
        builder2.serializedObjectSupporter = serializedObjectSupporter76;
        retrofit.converter.GsonConverter gsonConverter80 = serializedObjectSupporter76.deserializeObjectConverter1();
        retrofit.converter.GsonConverter gsonConverter81 = serializedObjectSupporter76.deserializeObjectConverter6();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(provider17);
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNotNull(requestInterceptor22);
        org.junit.Assert.assertNotNull(request25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(server31);
        org.junit.Assert.assertNotNull(request32);
        org.junit.Assert.assertNotNull(errorHandler33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(request42);
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertNotNull(gsonConverter44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNull(executor46);
        org.junit.Assert.assertNotNull(server48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "http://example.com" + "'", str49, "http://example.com");
        org.junit.Assert.assertNotNull(request53);
        org.junit.Assert.assertNotNull(gsonConverter54);
        org.junit.Assert.assertNotNull(gsonConverter55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(provider58);
        org.junit.Assert.assertNotNull(request64);
        org.junit.Assert.assertNotNull(gsonConverter65);
        org.junit.Assert.assertNotNull(gsonConverter66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(request77);
        org.junit.Assert.assertNotNull(gsonConverter78);
        org.junit.Assert.assertNotNull(gsonConverter80);
        org.junit.Assert.assertNotNull(gsonConverter81);
    }

    @Test
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test098");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("default");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder7 = builder5.setServer("hi!");
        retrofit.converter.Converter converter8 = builder7.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = builder7.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel10 = builder7.logLevel;
        builder4.logLevel = logLevel10;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request14 = serializedObjectSupporter13.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter13.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter16 = serializedObjectSupporter13.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder17 = builder12.setConverter((retrofit.converter.Converter) gsonConverter16);
        java.util.concurrent.Executor executor18 = builder17.getcallbackExecutor();
        retrofit.Server server21 = new retrofit.Server("hi!", "default");
        builder17.server = server21;
        java.util.concurrent.Executor executor23 = null;
        builder17.sethttpExecutor(executor23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request27 = serializedObjectSupporter26.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter26.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder30 = builder25.setConverter((retrofit.converter.Converter) gsonConverter29);
        java.util.concurrent.Executor executor31 = builder30.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server33 = serializedObjectSupporter32.deserializeObjectServer1();
        java.lang.String str34 = server33.getUrl();
        builder30.server = server33;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request38 = serializedObjectSupporter37.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter37.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter40 = serializedObjectSupporter37.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder41 = builder36.setConverter((retrofit.converter.Converter) gsonConverter40);
        builder36.ensureSaneDefaults();
        retrofit.client.Client.Provider provider43 = builder36.clientProvider;
        java.util.concurrent.Executor executor44 = null;
        java.util.concurrent.Executor executor45 = null;
        retrofit.RequestInterceptor requestInterceptor46 = null;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request49 = serializedObjectSupporter48.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter50 = serializedObjectSupporter48.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter51 = serializedObjectSupporter48.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder52 = builder47.setConverter((retrofit.converter.Converter) gsonConverter51);
        retrofit.Profiler profiler53 = null;
        retrofit.ErrorHandler errorHandler54 = null;
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        log55.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter59 = new retrofit.RestAdapter(server33, provider43, executor44, executor45, requestInterceptor46, (retrofit.converter.Converter) gsonConverter51, profiler53, errorHandler54, log55, logLevel58);
        retrofit.RestAdapter.Builder builder60 = builder17.setClient(provider43);
        builder4.setclientProvider(provider43);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(converter8);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(request14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(gsonConverter16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(executor18);
        org.junit.Assert.assertNotNull(request27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(executor31);
        org.junit.Assert.assertNotNull(server33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "http://example.com" + "'", str34, "http://example.com");
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertNotNull(gsonConverter40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(provider43);
        org.junit.Assert.assertNotNull(request49);
        org.junit.Assert.assertNotNull(gsonConverter50);
        org.junit.Assert.assertNotNull(gsonConverter51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder60);
    }

    @Test
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test099");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        java.lang.String str42 = serializedObjectSupporter41.deserializeObjectString2();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter43 = serializedObjectSupporter41.deserializeObjectLogLevel2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Retrofit-Idle" + "'", str42, "Retrofit-Idle");
    }

    @Test
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test100");
        retrofit.Server server2 = new retrofit.Server("hi!", "");
    }

    @Test
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test101");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString3 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter8();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.client.Request request7 = serializedObjectSupporter0.deserializeObjectRequest6();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections collections8 = serializedObjectSupporter0.deserializeObjectList1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Collections$UnmodifiableRandomAccessList cannot be cast to java.util.Collections");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(typedString3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Retrofit-" + "'", str5, "Retrofit-");
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(request7);
    }

    @Test
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test102");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.Profiler profiler3 = builder2.profiler;
        java.util.concurrent.Executor executor4 = null;
        builder2.sethttpExecutor(executor4);
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server7 = serializedObjectSupporter6.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder9 = builder2.setRequestInterceptor(requestInterceptor8);
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = new retrofit.SerializedObjectSupporter();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter10.deserializeObjectConverter8();
        retrofit.client.Request request12 = serializedObjectSupporter10.deserializeObjectRequest4();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter10.deserializeObjectConverter7();
        builder2.converter = gsonConverter13;
        retrofit.Profiler profiler15 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder16 = builder2.setProfiler(profiler15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(profiler3);
        org.junit.Assert.assertNotNull(server7);
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(gsonConverter13);
    }

    @Test
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test103");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.Server server13 = new retrofit.Server("Retrofit-", "POST");
        builder5.server = server13;
        java.util.concurrent.Executor executor15 = builder5.httpExecutor;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNull(executor15);
    }

    @Test
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test104");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = null;
        restAdapter34.setLogLevel(logLevel35);
        retrofit.Server server37 = restAdapter34.server;
        retrofit.RestAdapter.RestHandler restHandler38 = restAdapter34.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = restAdapter34.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter34.logLevel = logLevel40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder44 = builder42.setServer("hi!");
        retrofit.RestAdapter.Builder builder46 = builder42.setServer("default");
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder49 = builder47.setServer("hi!");
        retrofit.converter.Converter converter50 = builder49.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter51 = builder49.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel52 = builder49.logLevel;
        builder46.logLevel = logLevel52;
        restAdapter34.logLevel = logLevel52;
        java.lang.Throwable throwable55 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter34.logException(throwable55, "default");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNull(serializedObjectSupporter39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNull(converter50);
        org.junit.Assert.assertNull(serializedObjectSupporter51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test105");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str6 = server5.getUrl();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com" + "'", str6, "http://example.com");
    }

    @Test
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test106");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        java.util.concurrent.Executor executor3 = null;
        builder2.sethttpExecutor(executor3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request7 = serializedObjectSupporter6.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter6.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter6.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder10 = builder5.setConverter((retrofit.converter.Converter) gsonConverter9);
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = builder10.serializedObjectSupporter;
        java.util.concurrent.Executor executor12 = builder10.httpExecutor;
        retrofit.RestAdapter.Log log13 = builder10.log;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request16 = serializedObjectSupporter15.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter15.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder19 = builder14.setConverter((retrofit.converter.Converter) gsonConverter18);
        java.util.concurrent.Executor executor20 = builder19.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server22 = serializedObjectSupporter21.deserializeObjectServer1();
        java.lang.String str23 = server22.getUrl();
        builder19.server = server22;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request27 = serializedObjectSupporter26.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter26.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder30 = builder25.setConverter((retrofit.converter.Converter) gsonConverter29);
        builder25.ensureSaneDefaults();
        retrofit.client.Client.Provider provider32 = builder25.clientProvider;
        java.util.concurrent.Executor executor33 = null;
        java.util.concurrent.Executor executor34 = null;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request38 = serializedObjectSupporter37.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter37.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter40 = serializedObjectSupporter37.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder41 = builder36.setConverter((retrofit.converter.Converter) gsonConverter40);
        retrofit.Profiler profiler42 = null;
        retrofit.ErrorHandler errorHandler43 = null;
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        log44.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server22, provider32, executor33, executor34, requestInterceptor35, (retrofit.converter.Converter) gsonConverter40, profiler42, errorHandler43, log44, logLevel47);
        java.util.concurrent.Executor executor49 = restAdapter48.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter50 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request51 = serializedObjectSupporter50.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter52 = serializedObjectSupporter50.deserializeObjectConverter4();
        retrofit.client.Request request53 = serializedObjectSupporter50.deserializeObjectRequest4();
        retrofit.client.Request request54 = restAdapter48.logAndReplaceRequest(request53);
        retrofit.RestAdapter.RestHandler restHandler55 = restAdapter48.new RestHandler();
        retrofit.converter.Converter converter56 = restAdapter48.converter;
        java.util.concurrent.Executor executor57 = restAdapter48.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel58 = restAdapter48.getLogLevel();
        retrofit.RestAdapter.Builder builder59 = builder10.setLogLevel(logLevel58);
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder62 = builder60.setServer("hi!");
        java.util.concurrent.Executor executor63 = null;
        builder62.sethttpExecutor(executor63);
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server66 = serializedObjectSupporter65.deserializeObjectServer1();
        retrofit.client.Request request67 = serializedObjectSupporter65.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler68 = serializedObjectSupporter65.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder69 = builder62.setErrorHandler(errorHandler68);
        retrofit.RestAdapter.Builder builder70 = builder10.setErrorHandler(errorHandler68);
        retrofit.RestAdapter.Builder builder71 = builder2.setErrorHandler(errorHandler68);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertNull(executor12);
        org.junit.Assert.assertNull(log13);
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNull(executor20);
        org.junit.Assert.assertNotNull(server22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "http://example.com" + "'", str23, "http://example.com");
        org.junit.Assert.assertNotNull(request27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(provider32);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertNotNull(gsonConverter40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor49);
        org.junit.Assert.assertNotNull(request51);
        org.junit.Assert.assertNotNull(gsonConverter52);
        org.junit.Assert.assertNotNull(request53);
        org.junit.Assert.assertNotNull(request54);
        org.junit.Assert.assertNotNull(converter56);
        org.junit.Assert.assertNull(executor57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(server66);
        org.junit.Assert.assertNotNull(request67);
        org.junit.Assert.assertNotNull(errorHandler68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder71);
    }

    @Test
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test107");
        retrofit.Server server1 = new retrofit.Server("Retrofit-");
        java.lang.String str2 = server1.getUrl();
        java.lang.String str3 = server1.getapiUrl();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Retrofit-" + "'", str2, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Retrofit-" + "'", str3, "Retrofit-");
    }

    @Test
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test108");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request5 = serializedObjectSupporter4.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter4.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter8();
        retrofit.client.Request request8 = serializedObjectSupporter4.deserializeObjectRequest5();
        retrofit.Server server9 = serializedObjectSupporter4.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder15 = builder10.setConverter((retrofit.converter.Converter) gsonConverter14);
        builder10.ensureSaneDefaults();
        retrofit.client.Client.Provider provider17 = builder10.clientProvider;
        java.util.concurrent.Executor executor18 = null;
        java.util.concurrent.Executor executor19 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server21 = serializedObjectSupporter20.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor22 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request25 = serializedObjectSupporter24.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter24.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter24.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder28 = builder23.setConverter((retrofit.converter.Converter) gsonConverter27);
        retrofit.Profiler profiler29 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server31 = serializedObjectSupporter30.deserializeObjectServer1();
        retrofit.client.Request request32 = serializedObjectSupporter30.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler33 = serializedObjectSupporter30.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        log34.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server9, provider17, executor18, executor19, requestInterceptor22, (retrofit.converter.Converter) gsonConverter27, profiler29, errorHandler33, log34, logLevel37);
        retrofit.RestAdapter.Builder builder39 = builder2.setClient(provider17);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request42 = serializedObjectSupporter41.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter41.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter44 = serializedObjectSupporter41.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder45 = builder40.setConverter((retrofit.converter.Converter) gsonConverter44);
        java.util.concurrent.Executor executor46 = builder45.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server48 = serializedObjectSupporter47.deserializeObjectServer1();
        java.lang.String str49 = server48.getUrl();
        builder45.server = server48;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request53 = serializedObjectSupporter52.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter54 = serializedObjectSupporter52.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter55 = serializedObjectSupporter52.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder56 = builder51.setConverter((retrofit.converter.Converter) gsonConverter55);
        builder51.ensureSaneDefaults();
        retrofit.client.Client.Provider provider58 = builder51.clientProvider;
        java.util.concurrent.Executor executor59 = null;
        java.util.concurrent.Executor executor60 = null;
        retrofit.RequestInterceptor requestInterceptor61 = null;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter63 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request64 = serializedObjectSupporter63.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter65 = serializedObjectSupporter63.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter66 = serializedObjectSupporter63.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder67 = builder62.setConverter((retrofit.converter.Converter) gsonConverter66);
        retrofit.Profiler profiler68 = null;
        retrofit.ErrorHandler errorHandler69 = null;
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        log70.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter74 = new retrofit.RestAdapter(server48, provider58, executor59, executor60, requestInterceptor61, (retrofit.converter.Converter) gsonConverter66, profiler68, errorHandler69, log70, logLevel73);
        retrofit.RestAdapter.Builder builder75 = builder2.setClient(provider58);
        retrofit.RestAdapter.Log log76 = builder75.log;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(provider17);
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNotNull(requestInterceptor22);
        org.junit.Assert.assertNotNull(request25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(server31);
        org.junit.Assert.assertNotNull(request32);
        org.junit.Assert.assertNotNull(errorHandler33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(request42);
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertNotNull(gsonConverter44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNull(executor46);
        org.junit.Assert.assertNotNull(server48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "http://example.com" + "'", str49, "http://example.com");
        org.junit.Assert.assertNotNull(request53);
        org.junit.Assert.assertNotNull(gsonConverter54);
        org.junit.Assert.assertNotNull(gsonConverter55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(provider58);
        org.junit.Assert.assertNotNull(request64);
        org.junit.Assert.assertNotNull(gsonConverter65);
        org.junit.Assert.assertNotNull(gsonConverter66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNull(log76);
    }

    @Test
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test109");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server41 = serializedObjectSupporter40.deserializeObjectServer1();
        retrofit.client.Request request42 = serializedObjectSupporter40.deserializeObjectRequest8();
        retrofit.client.Request request43 = restAdapter34.logAndReplaceRequest(request42);
        java.util.concurrent.Executor executor44 = restAdapter34.httpExecutor;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request47 = serializedObjectSupporter46.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter48 = serializedObjectSupporter46.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter49 = serializedObjectSupporter46.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder50 = builder45.setConverter((retrofit.converter.Converter) gsonConverter49);
        java.util.concurrent.Executor executor51 = builder50.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server53 = serializedObjectSupporter52.deserializeObjectServer1();
        java.lang.String str54 = server53.getUrl();
        builder50.server = server53;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter57 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request58 = serializedObjectSupporter57.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter59 = serializedObjectSupporter57.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter60 = serializedObjectSupporter57.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder61 = builder56.setConverter((retrofit.converter.Converter) gsonConverter60);
        builder56.ensureSaneDefaults();
        retrofit.client.Client.Provider provider63 = builder56.clientProvider;
        java.util.concurrent.Executor executor64 = null;
        java.util.concurrent.Executor executor65 = null;
        retrofit.RequestInterceptor requestInterceptor66 = null;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter68 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request69 = serializedObjectSupporter68.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter70 = serializedObjectSupporter68.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter71 = serializedObjectSupporter68.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder72 = builder67.setConverter((retrofit.converter.Converter) gsonConverter71);
        retrofit.Profiler profiler73 = null;
        retrofit.ErrorHandler errorHandler74 = null;
        retrofit.RestAdapter.Log log75 = retrofit.RestAdapter.Log.NONE;
        log75.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter79 = new retrofit.RestAdapter(server53, provider63, executor64, executor65, requestInterceptor66, (retrofit.converter.Converter) gsonConverter71, profiler73, errorHandler74, log75, logLevel78);
        java.util.concurrent.Executor executor80 = restAdapter79.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter81 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request82 = serializedObjectSupporter81.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter83 = serializedObjectSupporter81.deserializeObjectConverter4();
        retrofit.client.Request request84 = serializedObjectSupporter81.deserializeObjectRequest4();
        retrofit.client.Request request85 = restAdapter79.logAndReplaceRequest(request84);
        retrofit.RestAdapter.RestHandler restHandler86 = restAdapter79.new RestHandler();
        retrofit.converter.Converter converter87 = restAdapter79.converter;
        java.util.concurrent.Executor executor88 = restAdapter79.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel89 = restAdapter79.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler90 = restAdapter79.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel91 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter79.setLogLevel(logLevel91);
        restAdapter34.logLevel = logLevel91;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNotNull(server41);
        org.junit.Assert.assertNotNull(request42);
        org.junit.Assert.assertNotNull(request43);
        org.junit.Assert.assertNull(executor44);
        org.junit.Assert.assertNotNull(request47);
        org.junit.Assert.assertNotNull(gsonConverter48);
        org.junit.Assert.assertNotNull(gsonConverter49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(executor51);
        org.junit.Assert.assertNotNull(server53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "http://example.com" + "'", str54, "http://example.com");
        org.junit.Assert.assertNotNull(request58);
        org.junit.Assert.assertNotNull(gsonConverter59);
        org.junit.Assert.assertNotNull(gsonConverter60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(provider63);
        org.junit.Assert.assertNotNull(request69);
        org.junit.Assert.assertNotNull(gsonConverter70);
        org.junit.Assert.assertNotNull(gsonConverter71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log75);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor80);
        org.junit.Assert.assertNotNull(request82);
        org.junit.Assert.assertNotNull(gsonConverter83);
        org.junit.Assert.assertNotNull(request84);
        org.junit.Assert.assertNotNull(request85);
        org.junit.Assert.assertNotNull(converter87);
        org.junit.Assert.assertNull(executor88);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel91 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel91.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test110");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.converter.GsonConverter gsonConverter1 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter1();
        org.junit.Assert.assertNotNull(gsonConverter1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
    }

    @Test
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test111");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = null;
        restAdapter34.setLogLevel(logLevel35);
        retrofit.Server server37 = restAdapter34.server;
        retrofit.RestAdapter.RestHandler restHandler38 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler39 = restAdapter34.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request41 = serializedObjectSupporter40.deserializeObjectRequest5();
        java.util.List<retrofit.client.Header> headerList42 = request41.headers;
        java.lang.reflect.Method method43 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler45 = serializedObjectSupporter44.deserializeObjectErrorHandler1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request47 = serializedObjectSupporter46.deserializeObjectRequest5();
        java.util.List<retrofit.client.Header> headerList48 = request47.headers;
        retrofit.SerializedObjectSupporter serializedObjectSupporter50 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request51 = serializedObjectSupporter50.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter52 = serializedObjectSupporter50.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter53 = serializedObjectSupporter50.deserializeObjectConverter8();
        java.lang.Object[] objArray54 = new java.lang.Object[] { serializedObjectSupporter44, headerList48, "GET", gsonConverter53 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj55 = restHandler39.invoke((java.lang.Object) request41, method43, objArray54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(request41);
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(errorHandler45);
        org.junit.Assert.assertNotNull(request47);
        org.junit.Assert.assertNotNull(headerList48);
        org.junit.Assert.assertNotNull(request51);
        org.junit.Assert.assertNotNull(gsonConverter52);
        org.junit.Assert.assertNotNull(gsonConverter53);
        org.junit.Assert.assertNotNull(objArray54);
    }

    @Test
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test112");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        java.util.concurrent.Executor executor35 = restAdapter34.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request37 = serializedObjectSupporter36.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter4();
        retrofit.client.Request request39 = serializedObjectSupporter36.deserializeObjectRequest4();
        retrofit.client.Request request40 = restAdapter34.logAndReplaceRequest(request39);
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter34.new RestHandler();
        java.lang.String str42 = restAdapter34.getTHREAD_PREFIX();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNotNull(request37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Retrofit-" + "'", str42, "Retrofit-");
    }

    @Test
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test113");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        java.util.concurrent.Executor executor35 = restAdapter34.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request37 = serializedObjectSupporter36.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter4();
        retrofit.client.Request request39 = serializedObjectSupporter36.deserializeObjectRequest4();
        retrofit.client.Request request40 = restAdapter34.logAndReplaceRequest(request39);
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter34.new RestHandler();
        retrofit.converter.Converter converter42 = restAdapter34.converter;
        java.util.concurrent.Executor executor43 = restAdapter34.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor44 = restAdapter34.getrequestInterceptor();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request47 = serializedObjectSupporter46.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter48 = serializedObjectSupporter46.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter49 = serializedObjectSupporter46.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder50 = builder45.setConverter((retrofit.converter.Converter) gsonConverter49);
        java.util.concurrent.Executor executor51 = builder50.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server53 = serializedObjectSupporter52.deserializeObjectServer1();
        java.lang.String str54 = server53.getUrl();
        builder50.server = server53;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter57 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request58 = serializedObjectSupporter57.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter59 = serializedObjectSupporter57.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter60 = serializedObjectSupporter57.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder61 = builder56.setConverter((retrofit.converter.Converter) gsonConverter60);
        builder56.ensureSaneDefaults();
        retrofit.client.Client.Provider provider63 = builder56.clientProvider;
        java.util.concurrent.Executor executor64 = null;
        java.util.concurrent.Executor executor65 = null;
        retrofit.RequestInterceptor requestInterceptor66 = null;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter68 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request69 = serializedObjectSupporter68.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter70 = serializedObjectSupporter68.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter71 = serializedObjectSupporter68.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder72 = builder67.setConverter((retrofit.converter.Converter) gsonConverter71);
        retrofit.Profiler profiler73 = null;
        retrofit.ErrorHandler errorHandler74 = null;
        retrofit.RestAdapter.Log log75 = retrofit.RestAdapter.Log.NONE;
        log75.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter79 = new retrofit.RestAdapter(server53, provider63, executor64, executor65, requestInterceptor66, (retrofit.converter.Converter) gsonConverter71, profiler73, errorHandler74, log75, logLevel78);
        java.util.concurrent.Executor executor80 = restAdapter79.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter81 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request82 = serializedObjectSupporter81.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter83 = serializedObjectSupporter81.deserializeObjectConverter4();
        retrofit.client.Request request84 = serializedObjectSupporter81.deserializeObjectRequest4();
        retrofit.client.Request request85 = restAdapter79.logAndReplaceRequest(request84);
        retrofit.RestAdapter.RestHandler restHandler86 = restAdapter79.new RestHandler();
        retrofit.converter.Converter converter87 = restAdapter79.converter;
        java.util.concurrent.Executor executor88 = restAdapter79.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel89 = restAdapter79.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler90 = restAdapter79.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel91 = restAdapter79.logLevel;
        restAdapter34.logLevel = logLevel91;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNotNull(request37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(converter42);
        org.junit.Assert.assertNull(executor43);
        org.junit.Assert.assertNull(requestInterceptor44);
        org.junit.Assert.assertNotNull(request47);
        org.junit.Assert.assertNotNull(gsonConverter48);
        org.junit.Assert.assertNotNull(gsonConverter49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(executor51);
        org.junit.Assert.assertNotNull(server53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "http://example.com" + "'", str54, "http://example.com");
        org.junit.Assert.assertNotNull(request58);
        org.junit.Assert.assertNotNull(gsonConverter59);
        org.junit.Assert.assertNotNull(gsonConverter60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(provider63);
        org.junit.Assert.assertNotNull(request69);
        org.junit.Assert.assertNotNull(gsonConverter70);
        org.junit.Assert.assertNotNull(gsonConverter71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log75);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor80);
        org.junit.Assert.assertNotNull(request82);
        org.junit.Assert.assertNotNull(gsonConverter83);
        org.junit.Assert.assertNotNull(request84);
        org.junit.Assert.assertNotNull(request85);
        org.junit.Assert.assertNotNull(converter87);
        org.junit.Assert.assertNull(executor88);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel91 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel91.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test114");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = builder5.serializedObjectSupporter;
        java.util.concurrent.Executor executor7 = builder5.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server9 = serializedObjectSupporter8.deserializeObjectServer1();
        retrofit.client.Request request10 = serializedObjectSupporter8.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler11 = serializedObjectSupporter8.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder12 = builder5.setErrorHandler(errorHandler11);
        retrofit.RestAdapter.Builder builder14 = builder5.setServer("hi!");
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server16 = serializedObjectSupporter15.deserializeObjectServer1();
        retrofit.client.Request request17 = serializedObjectSupporter15.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler18 = serializedObjectSupporter15.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder19 = builder5.setErrorHandler(errorHandler18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("hi!");
        retrofit.converter.Converter converter23 = builder22.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request25 = serializedObjectSupporter24.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter24.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter24.deserializeObjectConverter8();
        retrofit.client.Request request28 = serializedObjectSupporter24.deserializeObjectRequest5();
        retrofit.Server server29 = serializedObjectSupporter24.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request32 = serializedObjectSupporter31.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter34 = serializedObjectSupporter31.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder35 = builder30.setConverter((retrofit.converter.Converter) gsonConverter34);
        builder30.ensureSaneDefaults();
        retrofit.client.Client.Provider provider37 = builder30.clientProvider;
        java.util.concurrent.Executor executor38 = null;
        java.util.concurrent.Executor executor39 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server41 = serializedObjectSupporter40.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor42 = serializedObjectSupporter40.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request45 = serializedObjectSupporter44.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter44.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter47 = serializedObjectSupporter44.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder48 = builder43.setConverter((retrofit.converter.Converter) gsonConverter47);
        retrofit.Profiler profiler49 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter50 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server51 = serializedObjectSupporter50.deserializeObjectServer1();
        retrofit.client.Request request52 = serializedObjectSupporter50.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler53 = serializedObjectSupporter50.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        log54.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter58 = new retrofit.RestAdapter(server29, provider37, executor38, executor39, requestInterceptor42, (retrofit.converter.Converter) gsonConverter47, profiler49, errorHandler53, log54, logLevel57);
        retrofit.RestAdapter.Builder builder59 = builder22.setClient(provider37);
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter61 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request62 = serializedObjectSupporter61.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter63 = serializedObjectSupporter61.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter64 = serializedObjectSupporter61.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder65 = builder60.setConverter((retrofit.converter.Converter) gsonConverter64);
        java.util.concurrent.Executor executor66 = builder65.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter67 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server68 = serializedObjectSupporter67.deserializeObjectServer1();
        java.lang.String str69 = server68.getUrl();
        builder65.server = server68;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter72 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request73 = serializedObjectSupporter72.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter74 = serializedObjectSupporter72.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter75 = serializedObjectSupporter72.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder76 = builder71.setConverter((retrofit.converter.Converter) gsonConverter75);
        builder71.ensureSaneDefaults();
        retrofit.client.Client.Provider provider78 = builder71.clientProvider;
        java.util.concurrent.Executor executor79 = null;
        java.util.concurrent.Executor executor80 = null;
        retrofit.RequestInterceptor requestInterceptor81 = null;
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter83 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request84 = serializedObjectSupporter83.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter85 = serializedObjectSupporter83.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter86 = serializedObjectSupporter83.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder87 = builder82.setConverter((retrofit.converter.Converter) gsonConverter86);
        retrofit.Profiler profiler88 = null;
        retrofit.ErrorHandler errorHandler89 = null;
        retrofit.RestAdapter.Log log90 = retrofit.RestAdapter.Log.NONE;
        log90.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel93 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter94 = new retrofit.RestAdapter(server68, provider78, executor79, executor80, requestInterceptor81, (retrofit.converter.Converter) gsonConverter86, profiler88, errorHandler89, log90, logLevel93);
        retrofit.RestAdapter.Builder builder95 = builder22.setClient(provider78);
        retrofit.RestAdapter.Builder builder96 = builder5.setClient(provider78);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertNotNull(errorHandler11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(errorHandler18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNull(converter23);
        org.junit.Assert.assertNotNull(request25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertNotNull(request28);
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertNotNull(request32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(gsonConverter34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(provider37);
        org.junit.Assert.assertNotNull(server41);
        org.junit.Assert.assertNotNull(requestInterceptor42);
        org.junit.Assert.assertNotNull(request45);
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNotNull(gsonConverter47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(server51);
        org.junit.Assert.assertNotNull(request52);
        org.junit.Assert.assertNotNull(errorHandler53);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(request62);
        org.junit.Assert.assertNotNull(gsonConverter63);
        org.junit.Assert.assertNotNull(gsonConverter64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNull(executor66);
        org.junit.Assert.assertNotNull(server68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "http://example.com" + "'", str69, "http://example.com");
        org.junit.Assert.assertNotNull(request73);
        org.junit.Assert.assertNotNull(gsonConverter74);
        org.junit.Assert.assertNotNull(gsonConverter75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(provider78);
        org.junit.Assert.assertNotNull(request84);
        org.junit.Assert.assertNotNull(gsonConverter85);
        org.junit.Assert.assertNotNull(gsonConverter86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(log90);
        org.junit.Assert.assertTrue("'" + logLevel93 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel93.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder95);
        org.junit.Assert.assertNotNull(builder96);
    }

    @Test
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test115");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        java.util.concurrent.Executor executor35 = restAdapter34.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request37 = serializedObjectSupporter36.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter4();
        retrofit.client.Request request39 = serializedObjectSupporter36.deserializeObjectRequest4();
        retrofit.client.Request request40 = restAdapter34.logAndReplaceRequest(request39);
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter34.new RestHandler();
        retrofit.converter.Converter converter42 = restAdapter34.converter;
        java.util.concurrent.Executor executor43 = restAdapter34.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel46 = null;
        restAdapter34.logLevel = logLevel46;
        retrofit.ErrorHandler errorHandler48 = restAdapter34.errorHandler;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNotNull(request37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(converter42);
        org.junit.Assert.assertNull(executor43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(errorHandler48);
    }

    @Test
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test116");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        retrofit.RequestInterceptor requestInterceptor42 = serializedObjectSupporter41.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter41.deserializeObjectConverter4();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertNotNull(requestInterceptor42);
        org.junit.Assert.assertNotNull(gsonConverter43);
    }

    @Test
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test117");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.Profiler profiler7 = null;
        builder5.profiler = profiler7;
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter9.deserializeObjectConverter8();
        retrofit.client.Request request11 = serializedObjectSupporter9.deserializeObjectRequest4();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter7();
        retrofit.RequestInterceptor requestInterceptor13 = serializedObjectSupporter9.deserializeObjectRequestInterceptor1();
        builder5.requestInterceptor = requestInterceptor13;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNotNull(requestInterceptor13);
    }

    @Test
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test118");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.converter.Converter converter3 = builder2.converter;
        java.util.concurrent.Executor executor4 = null;
        builder2.httpExecutor = executor4;
        retrofit.RestAdapter.LogLevel logLevel6 = builder2.logLevel;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test119");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = null;
        restAdapter34.setLogLevel(logLevel35);
        retrofit.Server server37 = restAdapter34.server;
        retrofit.RestAdapter.RestHandler restHandler38 = restAdapter34.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = restAdapter34.serializedObjectSupporter;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server42 = serializedObjectSupporter41.deserializeObjectServer1();
        retrofit.client.Request request43 = serializedObjectSupporter41.deserializeObjectRequest8();
        java.lang.String str44 = serializedObjectSupporter41.deserializeObjectString4();
        retrofit.client.Request request45 = serializedObjectSupporter41.deserializeObjectRequest6();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request46 = restAdapter34.logAndReplaceRequest(request45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNull(serializedObjectSupporter39);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(server42);
        org.junit.Assert.assertNotNull(request43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "http://example.com/" + "'", str44, "http://example.com/");
        org.junit.Assert.assertNotNull(request45);
    }

    @Test
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test120");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        builder0.logLevel = logLevel3;
        retrofit.client.Client.Provider provider5 = builder0.clientProvider;
        java.util.concurrent.Executor executor6 = null;
        builder0.setcallbackExecutor(executor6);
        retrofit.RequestInterceptor requestInterceptor8 = builder0.requestInterceptor;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNull(requestInterceptor8);
    }

    @Test
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test121");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest3();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest7();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(request4);
    }

    @Test
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test122");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString3 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        retrofit.mime.TypedString typedString4 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter5();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter7 = serializedObjectSupporter0.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(typedString3);
        org.junit.Assert.assertNotNull(typedString4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(gsonConverter6);
    }

    @Test
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test123");
        retrofit.Server server2 = new retrofit.Server("", "default");
        java.lang.String str3 = server2.getDEFAULT_NAME();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "default" + "'", str3, "default");
    }

    @Test
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test124");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.converter.GsonConverter gsonConverter1 = serializedObjectSupporter0.deserializeObjectConverter8();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter5();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections collections4 = serializedObjectSupporter0.deserializeObjectList1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Collections$UnmodifiableRandomAccessList cannot be cast to java.util.Collections");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(gsonConverter1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Retrofit-" + "'", str2, "Retrofit-");
        org.junit.Assert.assertNotNull(gsonConverter3);
    }

    @Test
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test125");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString5();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest4();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter6 = serializedObjectSupporter0.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "POST" + "'", str2, "POST");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Retrofit-Idle" + "'", str3, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(request5);
    }

    @Test
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test126");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = builder5.serializedObjectSupporter;
        java.util.concurrent.Executor executor7 = builder5.httpExecutor;
        retrofit.RestAdapter.Builder builder9 = builder5.setServer("GET");
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNotNull(builder9);
    }

    @Test
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test127");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request6 = serializedObjectSupporter5.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter5.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter5.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder9 = builder4.setConverter((retrofit.converter.Converter) gsonConverter8);
        java.util.concurrent.Executor executor10 = builder9.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server12 = serializedObjectSupporter11.deserializeObjectServer1();
        java.lang.String str13 = server12.getUrl();
        builder9.server = server12;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request17 = serializedObjectSupporter16.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter16.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter16.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder20 = builder15.setConverter((retrofit.converter.Converter) gsonConverter19);
        builder15.ensureSaneDefaults();
        retrofit.client.Client.Provider provider22 = builder15.clientProvider;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request28 = serializedObjectSupporter27.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter27.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter27.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder31 = builder26.setConverter((retrofit.converter.Converter) gsonConverter30);
        retrofit.Profiler profiler32 = null;
        retrofit.ErrorHandler errorHandler33 = null;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        log34.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server12, provider22, executor23, executor24, requestInterceptor25, (retrofit.converter.Converter) gsonConverter30, profiler32, errorHandler33, log34, logLevel37);
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request40 = serializedObjectSupporter39.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter39.deserializeObjectConverter4();
        retrofit.client.Request request42 = serializedObjectSupporter39.deserializeObjectRequest7();
        restAdapter38.serializedObjectSupporter = serializedObjectSupporter39;
        builder2.serializedObjectSupporter = serializedObjectSupporter39;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter45 = serializedObjectSupporter39.deserializeObjectLogLevel1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(executor10);
        org.junit.Assert.assertNotNull(server12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "http://example.com" + "'", str13, "http://example.com");
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(provider22);
        org.junit.Assert.assertNotNull(request28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(gsonConverter41);
        org.junit.Assert.assertNotNull(request42);
    }

    @Test
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test128");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString3 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter3();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(typedString3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(gsonConverter6);
    }

    @Test
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test129");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("default");
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.HEADERS;
        builder4.logLevel = logLevel5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request9 = serializedObjectSupporter8.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter8.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter8.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder12 = builder7.setConverter((retrofit.converter.Converter) gsonConverter11);
        java.util.concurrent.Executor executor13 = builder12.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server15 = serializedObjectSupporter14.deserializeObjectServer1();
        java.lang.String str16 = server15.getUrl();
        builder12.server = server15;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request20 = serializedObjectSupporter19.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter19.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter19.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder23 = builder18.setConverter((retrofit.converter.Converter) gsonConverter22);
        builder18.ensureSaneDefaults();
        retrofit.client.Client.Provider provider25 = builder18.clientProvider;
        java.util.concurrent.Executor executor26 = null;
        java.util.concurrent.Executor executor27 = null;
        retrofit.RequestInterceptor requestInterceptor28 = null;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request31 = serializedObjectSupporter30.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter32 = serializedObjectSupporter30.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter30.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder34 = builder29.setConverter((retrofit.converter.Converter) gsonConverter33);
        retrofit.Profiler profiler35 = null;
        retrofit.ErrorHandler errorHandler36 = null;
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        log37.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter(server15, provider25, executor26, executor27, requestInterceptor28, (retrofit.converter.Converter) gsonConverter33, profiler35, errorHandler36, log37, logLevel40);
        java.util.concurrent.Executor executor42 = restAdapter41.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request44 = serializedObjectSupporter43.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter45 = serializedObjectSupporter43.deserializeObjectConverter4();
        retrofit.client.Request request46 = serializedObjectSupporter43.deserializeObjectRequest4();
        retrofit.client.Request request47 = restAdapter41.logAndReplaceRequest(request46);
        retrofit.RestAdapter.RestHandler restHandler48 = restAdapter41.new RestHandler();
        retrofit.converter.Converter converter49 = restAdapter41.converter;
        java.util.concurrent.Executor executor50 = restAdapter41.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel51 = restAdapter41.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel52 = restAdapter41.logLevel;
        retrofit.RestAdapter.Builder builder53 = builder4.setLogLevel(logLevel52);
        retrofit.client.Client client54 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder55 = builder53.setClient(client54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(request9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNotNull(server15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com" + "'", str16, "http://example.com");
        org.junit.Assert.assertNotNull(request20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(provider25);
        org.junit.Assert.assertNotNull(request31);
        org.junit.Assert.assertNotNull(gsonConverter32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertNotNull(request44);
        org.junit.Assert.assertNotNull(gsonConverter45);
        org.junit.Assert.assertNotNull(request46);
        org.junit.Assert.assertNotNull(request47);
        org.junit.Assert.assertNotNull(converter49);
        org.junit.Assert.assertNull(executor50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
    }

    @Test
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test130");
        retrofit.Server server2 = new retrofit.Server("hi!", "default");
        java.lang.String str3 = server2.getDEFAULT_NAME();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "default" + "'", str3, "default");
    }

    @Test
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test131");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = null;
        restAdapter34.setLogLevel(logLevel35);
        java.util.concurrent.Executor executor37 = restAdapter34.gethttpExecutor();
        retrofit.converter.Converter converter38 = restAdapter34.converter;
        retrofit.ErrorHandler errorHandler39 = restAdapter34.errorHandler;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("hi!");
        retrofit.converter.Converter converter43 = builder42.converter;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request46 = serializedObjectSupporter45.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter47 = serializedObjectSupporter45.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter48 = serializedObjectSupporter45.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder49 = builder44.setConverter((retrofit.converter.Converter) gsonConverter48);
        java.util.concurrent.Executor executor50 = builder49.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter51 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server52 = serializedObjectSupporter51.deserializeObjectServer1();
        java.lang.String str53 = server52.getUrl();
        builder49.server = server52;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request57 = serializedObjectSupporter56.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter58 = serializedObjectSupporter56.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter59 = serializedObjectSupporter56.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder60 = builder55.setConverter((retrofit.converter.Converter) gsonConverter59);
        builder55.ensureSaneDefaults();
        retrofit.client.Client.Provider provider62 = builder55.clientProvider;
        java.util.concurrent.Executor executor63 = null;
        java.util.concurrent.Executor executor64 = null;
        retrofit.RequestInterceptor requestInterceptor65 = null;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter67 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request68 = serializedObjectSupporter67.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter69 = serializedObjectSupporter67.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter70 = serializedObjectSupporter67.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder71 = builder66.setConverter((retrofit.converter.Converter) gsonConverter70);
        retrofit.Profiler profiler72 = null;
        retrofit.ErrorHandler errorHandler73 = null;
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        log74.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter78 = new retrofit.RestAdapter(server52, provider62, executor63, executor64, requestInterceptor65, (retrofit.converter.Converter) gsonConverter70, profiler72, errorHandler73, log74, logLevel77);
        retrofit.SerializedObjectSupporter serializedObjectSupporter79 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request80 = serializedObjectSupporter79.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter81 = serializedObjectSupporter79.deserializeObjectConverter4();
        retrofit.client.Request request82 = serializedObjectSupporter79.deserializeObjectRequest7();
        restAdapter78.serializedObjectSupporter = serializedObjectSupporter79;
        builder42.serializedObjectSupporter = serializedObjectSupporter79;
        retrofit.client.Request request85 = serializedObjectSupporter79.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter79;
        retrofit.RestAdapter.LogLevel logLevel87 = restAdapter34.logLevel;
        retrofit.SerializedObjectSupporter serializedObjectSupporter88 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request89 = serializedObjectSupporter88.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter90 = serializedObjectSupporter88.deserializeObjectConverter4();
        retrofit.client.Request request91 = serializedObjectSupporter88.deserializeObjectRequest4();
        retrofit.client.Request request92 = serializedObjectSupporter88.deserializeObjectRequest7();
        retrofit.mime.TypedOutput typedOutput93 = request92.body;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request94 = restAdapter34.logAndReplaceRequest(request92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertNotNull(converter38);
        org.junit.Assert.assertNull(errorHandler39);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(converter43);
        org.junit.Assert.assertNotNull(request46);
        org.junit.Assert.assertNotNull(gsonConverter47);
        org.junit.Assert.assertNotNull(gsonConverter48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNull(executor50);
        org.junit.Assert.assertNotNull(server52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "http://example.com" + "'", str53, "http://example.com");
        org.junit.Assert.assertNotNull(request57);
        org.junit.Assert.assertNotNull(gsonConverter58);
        org.junit.Assert.assertNotNull(gsonConverter59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(provider62);
        org.junit.Assert.assertNotNull(request68);
        org.junit.Assert.assertNotNull(gsonConverter69);
        org.junit.Assert.assertNotNull(gsonConverter70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request80);
        org.junit.Assert.assertNotNull(gsonConverter81);
        org.junit.Assert.assertNotNull(request82);
        org.junit.Assert.assertNotNull(request85);
        org.junit.Assert.assertNull(logLevel87);
        org.junit.Assert.assertNotNull(request89);
        org.junit.Assert.assertNotNull(gsonConverter90);
        org.junit.Assert.assertNotNull(request91);
        org.junit.Assert.assertNotNull(request92);
        org.junit.Assert.assertNull(typedOutput93);
    }

    @Test
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test132");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server41 = serializedObjectSupporter40.deserializeObjectServer1();
        retrofit.client.Request request42 = serializedObjectSupporter40.deserializeObjectRequest8();
        retrofit.client.Request request43 = restAdapter34.logAndReplaceRequest(request42);
        retrofit.mime.TypedOutput typedOutput44 = request43.body;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNotNull(server41);
        org.junit.Assert.assertNotNull(request42);
        org.junit.Assert.assertNotNull(request43);
        org.junit.Assert.assertNull(typedOutput44);
    }

    @Test
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test133");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        java.util.concurrent.Executor executor35 = restAdapter34.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request37 = serializedObjectSupporter36.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter4();
        retrofit.client.Request request39 = serializedObjectSupporter36.deserializeObjectRequest4();
        retrofit.client.Request request40 = restAdapter34.logAndReplaceRequest(request39);
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter34.new RestHandler();
        retrofit.converter.Converter converter42 = restAdapter34.converter;
        java.util.concurrent.Executor executor43 = restAdapter34.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter34.setLogLevel(logLevel46);
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request49 = serializedObjectSupporter48.deserializeObjectRequest5();
        retrofit.client.Request request50 = restAdapter34.logAndReplaceRequest(request49);
        retrofit.SerializedObjectSupporter serializedObjectSupporter51 = restAdapter34.serializedObjectSupporter;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNotNull(request37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(converter42);
        org.junit.Assert.assertNull(executor43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(request49);
        org.junit.Assert.assertNotNull(request50);
        org.junit.Assert.assertNull(serializedObjectSupporter51);
    }

    @Test
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test134");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        builder0.logLevel = logLevel3;
        retrofit.client.Client.Provider provider5 = builder0.clientProvider;
        java.util.concurrent.Executor executor6 = null;
        builder0.setcallbackExecutor(executor6);
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter8.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder10 = builder0.setConverter((retrofit.converter.Converter) gsonConverter9);
        retrofit.Profiler profiler11 = builder10.profiler;
        retrofit.Server server14 = new retrofit.Server("Retrofit-Idle", "http://example.com/");
        java.lang.String str15 = server14.getapiUrl();
        builder10.server = server14;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Retrofit-Idle" + "'", str15, "Retrofit-Idle");
    }

    @Test
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test135");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        java.util.concurrent.Executor executor42 = restAdapter34.getcallbackExecutor();
        java.lang.String str43 = restAdapter34.getIDLE_THREAD_NAME();
        retrofit.RestAdapter.RestHandler restHandler44 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter34.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = restHandler45.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = restHandler45.serializedObjectSupporter;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Retrofit-Idle" + "'", str43, "Retrofit-Idle");
        org.junit.Assert.assertNull(serializedObjectSupporter46);
        org.junit.Assert.assertNull(serializedObjectSupporter47);
    }

    @Test
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test136");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        java.util.concurrent.Executor executor42 = restAdapter34.getcallbackExecutor();
        java.lang.String str43 = restAdapter34.getIDLE_THREAD_NAME();
        retrofit.RestAdapter.RestHandler restHandler44 = restAdapter34.new RestHandler();
        java.util.concurrent.Executor executor45 = restAdapter34.getcallbackExecutor();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Retrofit-Idle" + "'", str43, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor45);
    }

    @Test
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test137");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request4 = serializedObjectSupporter3.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter5();
        builder0.converter = gsonConverter5;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request8 = serializedObjectSupporter7.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter7.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString10 = serializedObjectSupporter7.deserializeObjectTypedOutput2();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString1();
        builder0.serializedObjectSupporter = serializedObjectSupporter7;
        retrofit.ErrorHandler errorHandler13 = builder0.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = builder0.serializedObjectSupporter;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(typedString10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-" + "'", str11, "Retrofit-");
        org.junit.Assert.assertNull(errorHandler13);
        org.junit.Assert.assertNotNull(serializedObjectSupporter14);
    }

    @Test
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test138");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = builder2.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request7 = serializedObjectSupporter6.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter6.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter6.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder10 = builder5.setConverter((retrofit.converter.Converter) gsonConverter9);
        java.util.concurrent.Executor executor11 = builder10.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server13 = serializedObjectSupporter12.deserializeObjectServer1();
        java.lang.String str14 = server13.getUrl();
        builder10.server = server13;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request18 = serializedObjectSupporter17.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter17.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter17.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder21 = builder16.setConverter((retrofit.converter.Converter) gsonConverter20);
        builder16.ensureSaneDefaults();
        retrofit.client.Client.Provider provider23 = builder16.clientProvider;
        java.util.concurrent.Executor executor24 = null;
        java.util.concurrent.Executor executor25 = null;
        retrofit.RequestInterceptor requestInterceptor26 = null;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request29 = serializedObjectSupporter28.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter28.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter28.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder32 = builder27.setConverter((retrofit.converter.Converter) gsonConverter31);
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        log35.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter(server13, provider23, executor24, executor25, requestInterceptor26, (retrofit.converter.Converter) gsonConverter31, profiler33, errorHandler34, log35, logLevel38);
        java.util.concurrent.Executor executor40 = restAdapter39.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request42 = serializedObjectSupporter41.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter41.deserializeObjectConverter4();
        retrofit.client.Request request44 = serializedObjectSupporter41.deserializeObjectRequest4();
        retrofit.client.Request request45 = restAdapter39.logAndReplaceRequest(request44);
        retrofit.RestAdapter.RestHandler restHandler46 = restAdapter39.new RestHandler();
        retrofit.Server server47 = restAdapter39.getserver();
        java.lang.String str48 = server47.name;
        retrofit.RestAdapter.Builder builder49 = builder2.setServer(server47);
        retrofit.ErrorHandler errorHandler50 = builder2.errorHandler;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(serializedObjectSupporter4);
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "http://example.com" + "'", str14, "http://example.com");
        org.junit.Assert.assertNotNull(request18);
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(provider23);
        org.junit.Assert.assertNotNull(request29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(request42);
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertNotNull(request44);
        org.junit.Assert.assertNotNull(request45);
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "default" + "'", str48, "default");
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNull(errorHandler50);
    }

    @Test
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test139");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        java.util.concurrent.Executor executor35 = restAdapter34.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request37 = serializedObjectSupporter36.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter4();
        retrofit.client.Request request39 = serializedObjectSupporter36.deserializeObjectRequest4();
        retrofit.client.Request request40 = restAdapter34.logAndReplaceRequest(request39);
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter34.new RestHandler();
        retrofit.converter.Converter converter42 = restAdapter34.converter;
        java.util.concurrent.Executor executor43 = restAdapter34.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor44 = restAdapter34.getrequestInterceptor();
        java.util.concurrent.Executor executor45 = restAdapter34.getcallbackExecutor();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNotNull(request37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(converter42);
        org.junit.Assert.assertNull(executor43);
        org.junit.Assert.assertNull(requestInterceptor44);
        org.junit.Assert.assertNull(executor45);
    }

    @Test
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test140");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.Server server9 = new retrofit.Server("hi!", "default");
        builder5.server = server9;
        retrofit.Profiler profiler11 = builder5.profiler;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNull(profiler11);
    }

    @Test
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test141");
        retrofit.Server server1 = new retrofit.Server("Retrofit-");
        java.lang.String str2 = server1.apiUrl;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Retrofit-" + "'", str2, "Retrofit-");
    }

    @Test
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test142");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str2 = server1.getUrl();
        java.lang.String str3 = server1.name;
        java.lang.String str4 = server1.getName();
        java.lang.String str5 = server1.getName();
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com" + "'", str2, "http://example.com");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "default" + "'", str3, "default");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "default" + "'", str4, "default");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "default" + "'", str5, "default");
    }

    @Test
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test143");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.converter.GsonConverter gsonConverter1 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.Server server3 = serializedObjectSupporter0.deserializeObjectServer1();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter4 = serializedObjectSupporter0.deserializeObjectLogLevel2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(gsonConverter1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(server3);
    }

    @Test
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test144");
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request8 = serializedObjectSupporter7.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter7.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString10 = serializedObjectSupporter7.deserializeObjectTypedOutput2();
        retrofit.client.Request request11 = new retrofit.client.Request("http://example.com/", "Retrofit-", (java.util.List<retrofit.client.Header>) headerList5, (retrofit.mime.TypedOutput) typedString10);
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString15 = serializedObjectSupporter12.deserializeObjectTypedOutput2();
        java.lang.String str16 = serializedObjectSupporter12.deserializeObjectString1();
        java.lang.String str17 = serializedObjectSupporter12.deserializeObjectString2();
        retrofit.mime.TypedString typedString18 = serializedObjectSupporter12.deserializeObjectTypedOutput2();
        retrofit.client.Request request19 = new retrofit.client.Request("http://example.com/", "default", (java.util.List<retrofit.client.Header>) headerList5, (retrofit.mime.TypedOutput) typedString18);
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(typedString10);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(typedString15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Retrofit-" + "'", str16, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Retrofit-Idle" + "'", str17, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(typedString18);
    }

    @Test
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test145");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RequestInterceptor requestInterceptor1 = builder0.requestInterceptor;
        java.util.concurrent.Executor executor2 = builder0.getcallbackExecutor();
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request5 = serializedObjectSupporter4.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter4.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder8 = builder3.setConverter((retrofit.converter.Converter) gsonConverter7);
        java.util.concurrent.Executor executor9 = builder8.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server11 = serializedObjectSupporter10.deserializeObjectServer1();
        java.lang.String str12 = server11.getUrl();
        builder8.server = server11;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request16 = serializedObjectSupporter15.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter15.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder19 = builder14.setConverter((retrofit.converter.Converter) gsonConverter18);
        builder14.ensureSaneDefaults();
        retrofit.client.Client.Provider provider21 = builder14.clientProvider;
        java.util.concurrent.Executor executor22 = null;
        java.util.concurrent.Executor executor23 = null;
        retrofit.RequestInterceptor requestInterceptor24 = null;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request27 = serializedObjectSupporter26.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter26.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder30 = builder25.setConverter((retrofit.converter.Converter) gsonConverter29);
        retrofit.Profiler profiler31 = null;
        retrofit.ErrorHandler errorHandler32 = null;
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        log33.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server11, provider21, executor22, executor23, requestInterceptor24, (retrofit.converter.Converter) gsonConverter29, profiler31, errorHandler32, log33, logLevel36);
        java.util.concurrent.Executor executor38 = restAdapter37.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request40 = serializedObjectSupporter39.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter39.deserializeObjectConverter4();
        retrofit.client.Request request42 = serializedObjectSupporter39.deserializeObjectRequest4();
        retrofit.client.Request request43 = restAdapter37.logAndReplaceRequest(request42);
        retrofit.RestAdapter.RestHandler restHandler44 = restAdapter37.new RestHandler();
        retrofit.Server server45 = restAdapter37.getserver();
        retrofit.converter.Converter converter46 = restAdapter37.getconverter();
        retrofit.RestAdapter.Builder builder47 = builder0.setConverter(converter46);
        org.junit.Assert.assertNull(requestInterceptor1);
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com" + "'", str12, "http://example.com");
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(provider21);
        org.junit.Assert.assertNotNull(request27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor38);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(gsonConverter41);
        org.junit.Assert.assertNotNull(request42);
        org.junit.Assert.assertNotNull(request43);
        org.junit.Assert.assertNotNull(server45);
        org.junit.Assert.assertNotNull(converter46);
        org.junit.Assert.assertNotNull(builder47);
    }

    @Test
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test146");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request4 = serializedObjectSupporter3.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter5();
        builder0.converter = gsonConverter5;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request8 = serializedObjectSupporter7.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter7.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString10 = serializedObjectSupporter7.deserializeObjectTypedOutput2();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString1();
        builder0.serializedObjectSupporter = serializedObjectSupporter7;
        retrofit.client.Request request13 = serializedObjectSupporter7.deserializeObjectRequest5();
        retrofit.client.Request request14 = serializedObjectSupporter7.deserializeObjectRequest4();
        java.lang.String str15 = serializedObjectSupporter7.deserializeObjectString5();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(typedString10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-" + "'", str11, "Retrofit-");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(request14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "POST" + "'", str15, "POST");
    }

    @Test
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test147");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        java.util.concurrent.Executor executor3 = null;
        builder2.sethttpExecutor(executor3);
        retrofit.client.Client.Provider provider5 = null;
        builder2.setclientProvider(provider5);
        java.util.concurrent.Executor executor7 = builder2.httpExecutor;
        java.util.concurrent.Executor executor8 = null;
        builder2.httpExecutor = executor8;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(executor7);
    }

    @Test
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test148");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.RestAdapter.RestHandler restHandler35 = restAdapter34.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = restHandler35.serializedObjectSupporter;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(serializedObjectSupporter36);
    }

    @Test
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test149");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        java.util.concurrent.Executor executor35 = restAdapter34.getcallbackExecutor();
        java.util.concurrent.Executor executor36 = restAdapter34.gethttpExecutor();
        java.lang.Throwable throwable37 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter34.logException(throwable37, "Retrofit-");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNull(executor36);
    }

    @Test
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test150");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("default");
        retrofit.Profiler profiler5 = null;
        builder4.profiler = profiler5;
        retrofit.Server server7 = builder4.server;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(server7);
    }

    @Test
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test151");
        retrofit.Server server2 = new retrofit.Server("", "GET");
    }

    @Test
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test152");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        java.util.concurrent.Executor executor35 = restAdapter34.getcallbackExecutor();
        retrofit.RestAdapter.Log log36 = restAdapter34.log;
        java.lang.Class<?> wildcardClass37 = log36.getClass();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test153");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        java.util.concurrent.Executor executor42 = restAdapter34.getcallbackExecutor();
        java.lang.String str43 = restAdapter34.getIDLE_THREAD_NAME();
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = restAdapter34.serializedObjectSupporter;
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter34.new RestHandler();
        java.util.concurrent.Executor executor46 = restAdapter34.getcallbackExecutor();
        retrofit.client.Response response48 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response50 = restAdapter34.logAndReplaceResponse("POST", response48, 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Retrofit-Idle" + "'", str43, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(serializedObjectSupporter44);
        org.junit.Assert.assertNull(executor46);
    }

    @Test
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test154");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request4 = serializedObjectSupporter3.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter5();
        builder0.converter = gsonConverter5;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request8 = serializedObjectSupporter7.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter7.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString10 = serializedObjectSupporter7.deserializeObjectTypedOutput2();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString1();
        builder0.serializedObjectSupporter = serializedObjectSupporter7;
        retrofit.client.Request request13 = serializedObjectSupporter7.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter7.deserializeObjectConverter6();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(typedString10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-" + "'", str11, "Retrofit-");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
    }

    @Test
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test155");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = builder2.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel5 = builder2.logLevel;
        retrofit.Server server6 = null;
        builder2.server = server6;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = builder2.serializedObjectSupporter;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(serializedObjectSupporter4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(serializedObjectSupporter8);
    }

    @Test
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test156");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.Server server7 = builder0.server;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(server7);
    }

    @Test
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test157");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("default");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder7 = builder5.setServer("hi!");
        retrofit.converter.Converter converter8 = builder7.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = builder7.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel10 = builder7.logLevel;
        builder4.logLevel = logLevel10;
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        java.lang.String str14 = serializedObjectSupporter12.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.client.Request request16 = serializedObjectSupporter12.deserializeObjectRequest7();
        retrofit.Server server17 = serializedObjectSupporter12.deserializeObjectServer1();
        builder4.server = server17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request21 = serializedObjectSupporter20.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter20.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder24 = builder19.setConverter((retrofit.converter.Converter) gsonConverter23);
        java.util.concurrent.Executor executor25 = builder24.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server27 = serializedObjectSupporter26.deserializeObjectServer1();
        java.lang.String str28 = server27.getUrl();
        builder24.server = server27;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request32 = serializedObjectSupporter31.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter34 = serializedObjectSupporter31.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder35 = builder30.setConverter((retrofit.converter.Converter) gsonConverter34);
        builder30.ensureSaneDefaults();
        retrofit.client.Client.Provider provider37 = builder30.clientProvider;
        java.util.concurrent.Executor executor38 = null;
        java.util.concurrent.Executor executor39 = null;
        retrofit.RequestInterceptor requestInterceptor40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request43 = serializedObjectSupporter42.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter44 = serializedObjectSupporter42.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter45 = serializedObjectSupporter42.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder46 = builder41.setConverter((retrofit.converter.Converter) gsonConverter45);
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        log49.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server27, provider37, executor38, executor39, requestInterceptor40, (retrofit.converter.Converter) gsonConverter45, profiler47, errorHandler48, log49, logLevel52);
        retrofit.SerializedObjectSupporter serializedObjectSupporter54 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request55 = serializedObjectSupporter54.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter56 = serializedObjectSupporter54.deserializeObjectConverter4();
        retrofit.client.Request request57 = serializedObjectSupporter54.deserializeObjectRequest7();
        restAdapter53.serializedObjectSupporter = serializedObjectSupporter54;
        java.util.concurrent.Executor executor59 = restAdapter53.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = restAdapter53.serializedObjectSupporter;
        java.util.concurrent.Executor executor61 = restAdapter53.getcallbackExecutor();
        java.lang.String str62 = restAdapter53.getIDLE_THREAD_NAME();
        retrofit.SerializedObjectSupporter serializedObjectSupporter63 = restAdapter53.serializedObjectSupporter;
        builder4.serializedObjectSupporter = serializedObjectSupporter63;
        java.util.concurrent.Executor executor65 = null;
        builder4.callbackExecutor = executor65;
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder68 = builder4.setLog(log67);
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder71 = builder69.setServer("hi!");
        java.util.concurrent.Executor executor72 = null;
        builder71.sethttpExecutor(executor72);
        retrofit.Server server74 = builder71.server;
        retrofit.RestAdapter.LogLevel logLevel75 = builder71.logLevel;
        builder68.logLevel = logLevel75;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(converter8);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "POST" + "'", str14, "POST");
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertNotNull(server17);
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com" + "'", str28, "http://example.com");
        org.junit.Assert.assertNotNull(request32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(gsonConverter34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(provider37);
        org.junit.Assert.assertNotNull(request43);
        org.junit.Assert.assertNotNull(gsonConverter44);
        org.junit.Assert.assertNotNull(gsonConverter45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request55);
        org.junit.Assert.assertNotNull(gsonConverter56);
        org.junit.Assert.assertNotNull(request57);
        org.junit.Assert.assertNull(executor59);
        org.junit.Assert.assertNotNull(serializedObjectSupporter60);
        org.junit.Assert.assertNull(executor61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Retrofit-Idle" + "'", str62, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(serializedObjectSupporter63);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(server74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test158");
        retrofit.Server server1 = new retrofit.Server("");
    }

    @Test
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test159");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RequestInterceptor requestInterceptor1 = builder0.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor2 = builder0.requestInterceptor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = builder0.serializedObjectSupporter;
        org.junit.Assert.assertNull(requestInterceptor1);
        org.junit.Assert.assertNull(requestInterceptor2);
        org.junit.Assert.assertNull(serializedObjectSupporter3);
    }

    @Test
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test160");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest7();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString3();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "GET" + "'", str3, "GET");
    }

    @Test
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test161");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        java.util.concurrent.Executor executor3 = null;
        builder2.sethttpExecutor(executor3);
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server6 = serializedObjectSupporter5.deserializeObjectServer1();
        retrofit.client.Request request7 = serializedObjectSupporter5.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler8 = serializedObjectSupporter5.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder9 = builder2.setErrorHandler(errorHandler8);
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request11 = serializedObjectSupporter10.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter10.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder13 = builder9.setConverter((retrofit.converter.Converter) gsonConverter12);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request16 = serializedObjectSupporter15.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter15.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder19 = builder14.setConverter((retrofit.converter.Converter) gsonConverter18);
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = builder19.serializedObjectSupporter;
        java.util.concurrent.Executor executor21 = builder19.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server23 = serializedObjectSupporter22.deserializeObjectServer1();
        retrofit.client.Request request24 = serializedObjectSupporter22.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter22.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder26 = builder19.setErrorHandler(errorHandler25);
        builder26.ensureSaneDefaults();
        java.util.concurrent.Executor executor28 = builder26.getcallbackExecutor();
        java.util.concurrent.Executor executor29 = null;
        retrofit.RestAdapter.Builder builder30 = builder13.setExecutors(executor28, executor29);
        retrofit.RestAdapter.LogLevel logLevel31 = builder13.logLevel;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(server6);
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertNotNull(errorHandler8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNull(serializedObjectSupporter20);
        org.junit.Assert.assertNull(executor21);
        org.junit.Assert.assertNotNull(server23);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(executor28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test162");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RequestInterceptor requestInterceptor1 = builder0.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor2 = builder0.requestInterceptor;
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder5 = builder3.setServer("hi!");
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request7 = serializedObjectSupporter6.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter6.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter6.deserializeObjectConverter8();
        retrofit.client.Request request10 = serializedObjectSupporter6.deserializeObjectRequest5();
        retrofit.Server server11 = serializedObjectSupporter6.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request14 = serializedObjectSupporter13.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter13.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter16 = serializedObjectSupporter13.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder17 = builder12.setConverter((retrofit.converter.Converter) gsonConverter16);
        builder12.ensureSaneDefaults();
        retrofit.client.Client.Provider provider19 = builder12.clientProvider;
        java.util.concurrent.Executor executor20 = null;
        java.util.concurrent.Executor executor21 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server23 = serializedObjectSupporter22.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor24 = serializedObjectSupporter22.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request27 = serializedObjectSupporter26.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter26.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder30 = builder25.setConverter((retrofit.converter.Converter) gsonConverter29);
        retrofit.Profiler profiler31 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server33 = serializedObjectSupporter32.deserializeObjectServer1();
        retrofit.client.Request request34 = serializedObjectSupporter32.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler35 = serializedObjectSupporter32.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        log36.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server11, provider19, executor20, executor21, requestInterceptor24, (retrofit.converter.Converter) gsonConverter29, profiler31, errorHandler35, log36, logLevel39);
        builder5.setclientProvider(provider19);
        builder0.setclientProvider(provider19);
        org.junit.Assert.assertNull(requestInterceptor1);
        org.junit.Assert.assertNull(requestInterceptor2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(request14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(gsonConverter16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(provider19);
        org.junit.Assert.assertNotNull(server23);
        org.junit.Assert.assertNotNull(requestInterceptor24);
        org.junit.Assert.assertNotNull(request27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(server33);
        org.junit.Assert.assertNotNull(request34);
        org.junit.Assert.assertNotNull(errorHandler35);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test163");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter1();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter8();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(gsonConverter6);
    }

    @Test
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test164");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request5 = serializedObjectSupporter4.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter4.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter8();
        retrofit.client.Request request8 = serializedObjectSupporter4.deserializeObjectRequest5();
        retrofit.Server server9 = serializedObjectSupporter4.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder15 = builder10.setConverter((retrofit.converter.Converter) gsonConverter14);
        builder10.ensureSaneDefaults();
        retrofit.client.Client.Provider provider17 = builder10.clientProvider;
        java.util.concurrent.Executor executor18 = null;
        java.util.concurrent.Executor executor19 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server21 = serializedObjectSupporter20.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor22 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request25 = serializedObjectSupporter24.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter24.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter24.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder28 = builder23.setConverter((retrofit.converter.Converter) gsonConverter27);
        retrofit.Profiler profiler29 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server31 = serializedObjectSupporter30.deserializeObjectServer1();
        retrofit.client.Request request32 = serializedObjectSupporter30.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler33 = serializedObjectSupporter30.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        log34.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server9, provider17, executor18, executor19, requestInterceptor22, (retrofit.converter.Converter) gsonConverter27, profiler29, errorHandler33, log34, logLevel37);
        retrofit.RestAdapter.Builder builder39 = builder2.setClient(provider17);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request42 = serializedObjectSupporter41.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter41.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter44 = serializedObjectSupporter41.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder45 = builder40.setConverter((retrofit.converter.Converter) gsonConverter44);
        java.util.concurrent.Executor executor46 = builder45.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server48 = serializedObjectSupporter47.deserializeObjectServer1();
        java.lang.String str49 = server48.getUrl();
        builder45.server = server48;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request53 = serializedObjectSupporter52.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter54 = serializedObjectSupporter52.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter55 = serializedObjectSupporter52.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder56 = builder51.setConverter((retrofit.converter.Converter) gsonConverter55);
        builder51.ensureSaneDefaults();
        retrofit.client.Client.Provider provider58 = builder51.clientProvider;
        java.util.concurrent.Executor executor59 = null;
        java.util.concurrent.Executor executor60 = null;
        retrofit.RequestInterceptor requestInterceptor61 = null;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter63 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request64 = serializedObjectSupporter63.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter65 = serializedObjectSupporter63.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter66 = serializedObjectSupporter63.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder67 = builder62.setConverter((retrofit.converter.Converter) gsonConverter66);
        retrofit.Profiler profiler68 = null;
        retrofit.ErrorHandler errorHandler69 = null;
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        log70.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter74 = new retrofit.RestAdapter(server48, provider58, executor59, executor60, requestInterceptor61, (retrofit.converter.Converter) gsonConverter66, profiler68, errorHandler69, log70, logLevel73);
        retrofit.RestAdapter.Builder builder75 = builder2.setClient(provider58);
        retrofit.RestAdapter.LogLevel logLevel76 = builder75.logLevel;
        retrofit.converter.Converter converter77 = builder75.converter;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(provider17);
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNotNull(requestInterceptor22);
        org.junit.Assert.assertNotNull(request25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(server31);
        org.junit.Assert.assertNotNull(request32);
        org.junit.Assert.assertNotNull(errorHandler33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(request42);
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertNotNull(gsonConverter44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNull(executor46);
        org.junit.Assert.assertNotNull(server48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "http://example.com" + "'", str49, "http://example.com");
        org.junit.Assert.assertNotNull(request53);
        org.junit.Assert.assertNotNull(gsonConverter54);
        org.junit.Assert.assertNotNull(gsonConverter55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(provider58);
        org.junit.Assert.assertNotNull(request64);
        org.junit.Assert.assertNotNull(gsonConverter65);
        org.junit.Assert.assertNotNull(gsonConverter66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter77);
    }

    @Test
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test165");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        java.lang.String str2 = request1.getUrl();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
    }

    @Test
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test166");
        retrofit.Server server2 = new retrofit.Server("GET", "");
    }

    @Test
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test167");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.converter.GsonConverter gsonConverter1 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter8();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter4 = serializedObjectSupporter0.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(gsonConverter1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
    }

    @Test
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test168");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        retrofit.converter.GsonConverter gsonConverter42 = serializedObjectSupporter41.deserializeObjectConverter2();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter43 = serializedObjectSupporter41.deserializeObjectLogLevel2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertNotNull(gsonConverter42);
    }

    @Test
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test169");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest8();
        java.lang.String str6 = request5.url;
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
    }

    @Test
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test170");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request4 = serializedObjectSupporter3.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter5();
        builder0.converter = gsonConverter5;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request8 = serializedObjectSupporter7.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter7.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString10 = serializedObjectSupporter7.deserializeObjectTypedOutput2();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString1();
        builder0.serializedObjectSupporter = serializedObjectSupporter7;
        retrofit.Server server15 = new retrofit.Server("default", "POST");
        retrofit.RestAdapter.Builder builder16 = builder0.setServer(server15);
        java.lang.String str17 = server15.getapiUrl();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(typedString10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-" + "'", str11, "Retrofit-");
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "default" + "'", str17, "default");
    }

    @Test
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test171");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = null;
        restAdapter34.setLogLevel(logLevel35);
        retrofit.Server server37 = restAdapter34.server;
        retrofit.RestAdapter.RestHandler restHandler38 = restAdapter34.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = restAdapter34.serializedObjectSupporter;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter34.new RestHandler();
        java.util.concurrent.Executor executor42 = restAdapter34.gethttpExecutor();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNull(serializedObjectSupporter39);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNull(executor42);
    }

    @Test
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test172");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request4 = serializedObjectSupporter3.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter5();
        builder0.converter = gsonConverter5;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request8 = serializedObjectSupporter7.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter7.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString10 = serializedObjectSupporter7.deserializeObjectTypedOutput2();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString1();
        builder0.serializedObjectSupporter = serializedObjectSupporter7;
        java.util.concurrent.Executor executor13 = builder0.httpExecutor;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder16 = builder14.setServer("hi!");
        retrofit.RestAdapter.Builder builder18 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request21 = serializedObjectSupporter20.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter20.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder24 = builder19.setConverter((retrofit.converter.Converter) gsonConverter23);
        java.util.concurrent.Executor executor25 = builder24.getcallbackExecutor();
        retrofit.Server server28 = new retrofit.Server("hi!", "default");
        builder24.server = server28;
        java.util.concurrent.Executor executor30 = null;
        builder24.sethttpExecutor(executor30);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request34 = serializedObjectSupporter33.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter35 = serializedObjectSupporter33.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter33.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder37 = builder32.setConverter((retrofit.converter.Converter) gsonConverter36);
        java.util.concurrent.Executor executor38 = builder37.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server40 = serializedObjectSupporter39.deserializeObjectServer1();
        java.lang.String str41 = server40.getUrl();
        builder37.server = server40;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request45 = serializedObjectSupporter44.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter44.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter47 = serializedObjectSupporter44.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder48 = builder43.setConverter((retrofit.converter.Converter) gsonConverter47);
        builder43.ensureSaneDefaults();
        retrofit.client.Client.Provider provider50 = builder43.clientProvider;
        java.util.concurrent.Executor executor51 = null;
        java.util.concurrent.Executor executor52 = null;
        retrofit.RequestInterceptor requestInterceptor53 = null;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request56 = serializedObjectSupporter55.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter57 = serializedObjectSupporter55.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter58 = serializedObjectSupporter55.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder59 = builder54.setConverter((retrofit.converter.Converter) gsonConverter58);
        retrofit.Profiler profiler60 = null;
        retrofit.ErrorHandler errorHandler61 = null;
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        log62.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter(server40, provider50, executor51, executor52, requestInterceptor53, (retrofit.converter.Converter) gsonConverter58, profiler60, errorHandler61, log62, logLevel65);
        retrofit.RestAdapter.Builder builder67 = builder24.setClient(provider50);
        builder18.setclientProvider(provider50);
        retrofit.client.Client.Provider provider69 = builder18.getclientProvider();
        retrofit.RestAdapter.Builder builder70 = builder0.setClient(provider69);
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder72 = builder70.setLogLevel(logLevel71);
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder75 = builder73.setServer("hi!");
        retrofit.RestAdapter.Log log76 = retrofit.RestAdapter.Log.NONE;
        log76.log("hi!");
        builder73.log = log76;
        builder72.log = log76;
        builder72.ensureSaneDefaults();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(typedString10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-" + "'", str11, "Retrofit-");
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNotNull(request34);
        org.junit.Assert.assertNotNull(gsonConverter35);
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(executor38);
        org.junit.Assert.assertNotNull(server40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "http://example.com" + "'", str41, "http://example.com");
        org.junit.Assert.assertNotNull(request45);
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNotNull(gsonConverter47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(provider50);
        org.junit.Assert.assertNotNull(request56);
        org.junit.Assert.assertNotNull(gsonConverter57);
        org.junit.Assert.assertNotNull(gsonConverter58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(provider69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(log76);
    }

    @Test
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test173");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request11 = serializedObjectSupporter10.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter10.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString13 = serializedObjectSupporter10.deserializeObjectTypedOutput2();
        retrofit.client.Request request14 = new retrofit.client.Request("http://example.com/", "Retrofit-", (java.util.List<retrofit.client.Header>) headerList8, (retrofit.mime.TypedOutput) typedString13);
        retrofit.client.Request request15 = new retrofit.client.Request("Retrofit-", "default", (java.util.List<retrofit.client.Header>) headerList3, (retrofit.mime.TypedOutput) typedString13);
        retrofit.mime.TypedOutput typedOutput16 = request15.body;
        java.lang.String str17 = request15.getMethod();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNotNull(typedString13);
        org.junit.Assert.assertNotNull(typedOutput16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Retrofit-" + "'", str17, "Retrofit-");
    }

    @Test
    public void test174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test174");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString3 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.Server server6 = serializedObjectSupporter0.deserializeObjectServer1();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter7 = serializedObjectSupporter0.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(typedString3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-" + "'", str4, "Retrofit-");
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(server6);
    }

    @Test
    public void test175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test175");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter4();
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Retrofit-" + "'", str2, "Retrofit-");
        org.junit.Assert.assertNotNull(gsonConverter3);
    }

    @Test
    public void test176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test176");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter40 = serializedObjectSupporter35.deserializeObjectLogLevel2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
    }

    @Test
    public void test177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test177");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request5 = serializedObjectSupporter4.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter4.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter8();
        retrofit.client.Request request8 = serializedObjectSupporter4.deserializeObjectRequest5();
        retrofit.Server server9 = serializedObjectSupporter4.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder15 = builder10.setConverter((retrofit.converter.Converter) gsonConverter14);
        builder10.ensureSaneDefaults();
        retrofit.client.Client.Provider provider17 = builder10.clientProvider;
        java.util.concurrent.Executor executor18 = null;
        java.util.concurrent.Executor executor19 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server21 = serializedObjectSupporter20.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor22 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request25 = serializedObjectSupporter24.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter24.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter24.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder28 = builder23.setConverter((retrofit.converter.Converter) gsonConverter27);
        retrofit.Profiler profiler29 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server31 = serializedObjectSupporter30.deserializeObjectServer1();
        retrofit.client.Request request32 = serializedObjectSupporter30.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler33 = serializedObjectSupporter30.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        log34.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server9, provider17, executor18, executor19, requestInterceptor22, (retrofit.converter.Converter) gsonConverter27, profiler29, errorHandler33, log34, logLevel37);
        retrofit.RestAdapter.Builder builder39 = builder2.setClient(provider17);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request42 = serializedObjectSupporter41.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter41.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter44 = serializedObjectSupporter41.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder45 = builder40.setConverter((retrofit.converter.Converter) gsonConverter44);
        java.util.concurrent.Executor executor46 = builder45.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server48 = serializedObjectSupporter47.deserializeObjectServer1();
        java.lang.String str49 = server48.getUrl();
        builder45.server = server48;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request53 = serializedObjectSupporter52.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter54 = serializedObjectSupporter52.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter55 = serializedObjectSupporter52.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder56 = builder51.setConverter((retrofit.converter.Converter) gsonConverter55);
        builder51.ensureSaneDefaults();
        retrofit.client.Client.Provider provider58 = builder51.clientProvider;
        java.util.concurrent.Executor executor59 = null;
        java.util.concurrent.Executor executor60 = null;
        retrofit.RequestInterceptor requestInterceptor61 = null;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter63 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request64 = serializedObjectSupporter63.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter65 = serializedObjectSupporter63.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter66 = serializedObjectSupporter63.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder67 = builder62.setConverter((retrofit.converter.Converter) gsonConverter66);
        retrofit.Profiler profiler68 = null;
        retrofit.ErrorHandler errorHandler69 = null;
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        log70.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter74 = new retrofit.RestAdapter(server48, provider58, executor59, executor60, requestInterceptor61, (retrofit.converter.Converter) gsonConverter66, profiler68, errorHandler69, log70, logLevel73);
        retrofit.RestAdapter.Builder builder75 = builder2.setClient(provider58);
        retrofit.SerializedObjectSupporter serializedObjectSupporter76 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request77 = serializedObjectSupporter76.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter78 = serializedObjectSupporter76.deserializeObjectConverter5();
        builder2.serializedObjectSupporter = serializedObjectSupporter76;
        retrofit.client.Request request80 = serializedObjectSupporter76.deserializeObjectRequest4();
        retrofit.client.Request request81 = serializedObjectSupporter76.deserializeObjectRequest8();
        java.lang.String str82 = request81.getUrl();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(provider17);
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNotNull(requestInterceptor22);
        org.junit.Assert.assertNotNull(request25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(server31);
        org.junit.Assert.assertNotNull(request32);
        org.junit.Assert.assertNotNull(errorHandler33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(request42);
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertNotNull(gsonConverter44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNull(executor46);
        org.junit.Assert.assertNotNull(server48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "http://example.com" + "'", str49, "http://example.com");
        org.junit.Assert.assertNotNull(request53);
        org.junit.Assert.assertNotNull(gsonConverter54);
        org.junit.Assert.assertNotNull(gsonConverter55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(provider58);
        org.junit.Assert.assertNotNull(request64);
        org.junit.Assert.assertNotNull(gsonConverter65);
        org.junit.Assert.assertNotNull(gsonConverter66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(request77);
        org.junit.Assert.assertNotNull(gsonConverter78);
        org.junit.Assert.assertNotNull(request80);
        org.junit.Assert.assertNotNull(request81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "http://example.com/" + "'", str82, "http://example.com/");
    }

    @Test
    public void test178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test178");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = builder5.serializedObjectSupporter;
        java.util.concurrent.Executor executor7 = builder5.httpExecutor;
        retrofit.RestAdapter.Log log8 = builder5.log;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request11 = serializedObjectSupporter10.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter10.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter10.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder14 = builder9.setConverter((retrofit.converter.Converter) gsonConverter13);
        java.util.concurrent.Executor executor15 = builder14.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server17 = serializedObjectSupporter16.deserializeObjectServer1();
        java.lang.String str18 = server17.getUrl();
        builder14.server = server17;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request22 = serializedObjectSupporter21.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter21.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter24 = serializedObjectSupporter21.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder25 = builder20.setConverter((retrofit.converter.Converter) gsonConverter24);
        builder20.ensureSaneDefaults();
        retrofit.client.Client.Provider provider27 = builder20.clientProvider;
        java.util.concurrent.Executor executor28 = null;
        java.util.concurrent.Executor executor29 = null;
        retrofit.RequestInterceptor requestInterceptor30 = null;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request33 = serializedObjectSupporter32.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter34 = serializedObjectSupporter32.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter35 = serializedObjectSupporter32.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder36 = builder31.setConverter((retrofit.converter.Converter) gsonConverter35);
        retrofit.Profiler profiler37 = null;
        retrofit.ErrorHandler errorHandler38 = null;
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        log39.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter(server17, provider27, executor28, executor29, requestInterceptor30, (retrofit.converter.Converter) gsonConverter35, profiler37, errorHandler38, log39, logLevel42);
        java.util.concurrent.Executor executor44 = restAdapter43.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request46 = serializedObjectSupporter45.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter47 = serializedObjectSupporter45.deserializeObjectConverter4();
        retrofit.client.Request request48 = serializedObjectSupporter45.deserializeObjectRequest4();
        retrofit.client.Request request49 = restAdapter43.logAndReplaceRequest(request48);
        retrofit.RestAdapter.RestHandler restHandler50 = restAdapter43.new RestHandler();
        retrofit.converter.Converter converter51 = restAdapter43.converter;
        java.util.concurrent.Executor executor52 = restAdapter43.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter43.getLogLevel();
        retrofit.RestAdapter.Builder builder54 = builder5.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder57 = builder55.setServer("hi!");
        java.util.concurrent.Executor executor58 = null;
        builder57.sethttpExecutor(executor58);
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server61 = serializedObjectSupporter60.deserializeObjectServer1();
        retrofit.client.Request request62 = serializedObjectSupporter60.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler63 = serializedObjectSupporter60.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder64 = builder57.setErrorHandler(errorHandler63);
        retrofit.RestAdapter.Builder builder65 = builder5.setErrorHandler(errorHandler63);
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder68 = builder66.setServer("hi!");
        java.util.concurrent.Executor executor69 = null;
        builder68.sethttpExecutor(executor69);
        retrofit.SerializedObjectSupporter serializedObjectSupporter71 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server72 = serializedObjectSupporter71.deserializeObjectServer1();
        retrofit.client.Request request73 = serializedObjectSupporter71.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler74 = serializedObjectSupporter71.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder75 = builder68.setErrorHandler(errorHandler74);
        retrofit.SerializedObjectSupporter serializedObjectSupporter76 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request77 = serializedObjectSupporter76.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter78 = serializedObjectSupporter76.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder79 = builder75.setConverter((retrofit.converter.Converter) gsonConverter78);
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter81 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request82 = serializedObjectSupporter81.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter83 = serializedObjectSupporter81.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter84 = serializedObjectSupporter81.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder85 = builder80.setConverter((retrofit.converter.Converter) gsonConverter84);
        retrofit.SerializedObjectSupporter serializedObjectSupporter86 = builder85.serializedObjectSupporter;
        java.util.concurrent.Executor executor87 = builder85.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter88 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server89 = serializedObjectSupporter88.deserializeObjectServer1();
        retrofit.client.Request request90 = serializedObjectSupporter88.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler91 = serializedObjectSupporter88.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder92 = builder85.setErrorHandler(errorHandler91);
        builder92.ensureSaneDefaults();
        java.util.concurrent.Executor executor94 = builder92.getcallbackExecutor();
        java.util.concurrent.Executor executor95 = null;
        retrofit.RestAdapter.Builder builder96 = builder79.setExecutors(executor94, executor95);
        builder5.callbackExecutor = executor94;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(log8);
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNotNull(server17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com" + "'", str18, "http://example.com");
        org.junit.Assert.assertNotNull(request22);
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertNotNull(gsonConverter24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(provider27);
        org.junit.Assert.assertNotNull(request33);
        org.junit.Assert.assertNotNull(gsonConverter34);
        org.junit.Assert.assertNotNull(gsonConverter35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor44);
        org.junit.Assert.assertNotNull(request46);
        org.junit.Assert.assertNotNull(gsonConverter47);
        org.junit.Assert.assertNotNull(request48);
        org.junit.Assert.assertNotNull(request49);
        org.junit.Assert.assertNotNull(converter51);
        org.junit.Assert.assertNull(executor52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(server61);
        org.junit.Assert.assertNotNull(request62);
        org.junit.Assert.assertNotNull(errorHandler63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(server72);
        org.junit.Assert.assertNotNull(request73);
        org.junit.Assert.assertNotNull(errorHandler74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(request77);
        org.junit.Assert.assertNotNull(gsonConverter78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(request82);
        org.junit.Assert.assertNotNull(gsonConverter83);
        org.junit.Assert.assertNotNull(gsonConverter84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNull(serializedObjectSupporter86);
        org.junit.Assert.assertNull(executor87);
        org.junit.Assert.assertNotNull(server89);
        org.junit.Assert.assertNotNull(request90);
        org.junit.Assert.assertNotNull(errorHandler91);
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertNotNull(executor94);
        org.junit.Assert.assertNotNull(builder96);
    }

    @Test
    public void test179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test179");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest5();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString3();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Retrofit-Idle" + "'", str5, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "GET" + "'", str6, "GET");
    }

    @Test
    public void test180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test180");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = null;
        builder5.httpExecutor = executor6;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = builder5.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel9 = builder5.logLevel;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test181");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        java.util.concurrent.Executor executor35 = restAdapter34.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request37 = serializedObjectSupporter36.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter4();
        retrofit.client.Request request39 = serializedObjectSupporter36.deserializeObjectRequest4();
        retrofit.client.Request request40 = restAdapter34.logAndReplaceRequest(request39);
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter34.new RestHandler();
        retrofit.converter.Converter converter42 = restAdapter34.converter;
        java.util.concurrent.Executor executor43 = restAdapter34.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter34.setLogLevel(logLevel46);
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request49 = serializedObjectSupporter48.deserializeObjectRequest5();
        retrofit.client.Request request50 = restAdapter34.logAndReplaceRequest(request49);
        retrofit.mime.TypedOutput typedOutput51 = request49.getBody();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNotNull(request37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(converter42);
        org.junit.Assert.assertNull(executor43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(request49);
        org.junit.Assert.assertNotNull(request50);
        org.junit.Assert.assertNull(typedOutput51);
    }

    @Test
    public void test182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test182");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request6 = serializedObjectSupporter5.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter5.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter5.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder9 = builder4.setConverter((retrofit.converter.Converter) gsonConverter8);
        java.util.concurrent.Executor executor10 = builder9.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server12 = serializedObjectSupporter11.deserializeObjectServer1();
        java.lang.String str13 = server12.getUrl();
        builder9.server = server12;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request17 = serializedObjectSupporter16.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter16.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter16.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder20 = builder15.setConverter((retrofit.converter.Converter) gsonConverter19);
        builder15.ensureSaneDefaults();
        retrofit.client.Client.Provider provider22 = builder15.clientProvider;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request28 = serializedObjectSupporter27.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter27.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter27.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder31 = builder26.setConverter((retrofit.converter.Converter) gsonConverter30);
        retrofit.Profiler profiler32 = null;
        retrofit.ErrorHandler errorHandler33 = null;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        log34.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server12, provider22, executor23, executor24, requestInterceptor25, (retrofit.converter.Converter) gsonConverter30, profiler32, errorHandler33, log34, logLevel37);
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request40 = serializedObjectSupporter39.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter39.deserializeObjectConverter4();
        retrofit.client.Request request42 = serializedObjectSupporter39.deserializeObjectRequest7();
        restAdapter38.serializedObjectSupporter = serializedObjectSupporter39;
        builder2.serializedObjectSupporter = serializedObjectSupporter39;
        retrofit.client.Request request45 = serializedObjectSupporter39.deserializeObjectRequest7();
        retrofit.client.Request request46 = serializedObjectSupporter39.deserializeObjectRequest1();
        retrofit.client.Request request47 = serializedObjectSupporter39.deserializeObjectRequest8();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(executor10);
        org.junit.Assert.assertNotNull(server12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "http://example.com" + "'", str13, "http://example.com");
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(provider22);
        org.junit.Assert.assertNotNull(request28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(gsonConverter41);
        org.junit.Assert.assertNotNull(request42);
        org.junit.Assert.assertNotNull(request45);
        org.junit.Assert.assertNotNull(request46);
        org.junit.Assert.assertNotNull(request47);
    }

    @Test
    public void test183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test183");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor2 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertNotNull(requestInterceptor2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
    }

    @Test
    public void test184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test184");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        java.lang.String str42 = restAdapter34.getTHREAD_PREFIX();
        retrofit.RestAdapter.RestHandler restHandler43 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler44 = restAdapter34.new RestHandler();
        java.util.concurrent.Executor executor45 = restAdapter34.getcallbackExecutor();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Retrofit-" + "'", str42, "Retrofit-");
        org.junit.Assert.assertNull(executor45);
    }

    @Test
    public void test185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test185");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request6 = serializedObjectSupporter5.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter5.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter5.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder9 = builder4.setConverter((retrofit.converter.Converter) gsonConverter8);
        java.util.concurrent.Executor executor10 = builder9.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server12 = serializedObjectSupporter11.deserializeObjectServer1();
        java.lang.String str13 = server12.getUrl();
        builder9.server = server12;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request17 = serializedObjectSupporter16.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter16.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter16.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder20 = builder15.setConverter((retrofit.converter.Converter) gsonConverter19);
        builder15.ensureSaneDefaults();
        retrofit.client.Client.Provider provider22 = builder15.clientProvider;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request28 = serializedObjectSupporter27.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter27.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter27.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder31 = builder26.setConverter((retrofit.converter.Converter) gsonConverter30);
        retrofit.Profiler profiler32 = null;
        retrofit.ErrorHandler errorHandler33 = null;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        log34.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server12, provider22, executor23, executor24, requestInterceptor25, (retrofit.converter.Converter) gsonConverter30, profiler32, errorHandler33, log34, logLevel37);
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request40 = serializedObjectSupporter39.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter39.deserializeObjectConverter4();
        retrofit.client.Request request42 = serializedObjectSupporter39.deserializeObjectRequest7();
        restAdapter38.serializedObjectSupporter = serializedObjectSupporter39;
        builder2.serializedObjectSupporter = serializedObjectSupporter39;
        retrofit.converter.Converter converter45 = builder2.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server47 = serializedObjectSupporter46.deserializeObjectServer1();
        retrofit.client.Request request48 = serializedObjectSupporter46.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler49 = serializedObjectSupporter46.deserializeObjectErrorHandler1();
        builder2.errorHandler = errorHandler49;
        java.util.concurrent.Executor executor51 = null;
        builder2.setcallbackExecutor(executor51);
        java.util.concurrent.Executor executor53 = builder2.getcallbackExecutor();
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder56 = builder54.setServer("hi!");
        retrofit.RestAdapter.Builder builder58 = builder54.setServer("default");
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder61 = builder59.setServer("hi!");
        retrofit.converter.Converter converter62 = builder61.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter63 = builder61.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel64 = builder61.logLevel;
        builder58.logLevel = logLevel64;
        builder2.logLevel = logLevel64;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(executor10);
        org.junit.Assert.assertNotNull(server12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "http://example.com" + "'", str13, "http://example.com");
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(provider22);
        org.junit.Assert.assertNotNull(request28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(gsonConverter41);
        org.junit.Assert.assertNotNull(request42);
        org.junit.Assert.assertNull(converter45);
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertNotNull(request48);
        org.junit.Assert.assertNotNull(errorHandler49);
        org.junit.Assert.assertNull(executor53);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNull(converter62);
        org.junit.Assert.assertNull(serializedObjectSupporter63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test186");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest7();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter3 = serializedObjectSupporter0.deserializeObjectLogLevel2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertNotNull(request2);
    }

    @Test
    public void test187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test187");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.Server server3 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.Server server6 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request7 = serializedObjectSupporter0.deserializeObjectRequest2();
        retrofit.client.Request request8 = serializedObjectSupporter0.deserializeObjectRequest6();
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(server6);
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertNotNull(request8);
    }

    @Test
    public void test188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test188");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        java.util.concurrent.Executor executor42 = restAdapter34.getcallbackExecutor();
        retrofit.RestAdapter.RestHandler restHandler43 = restAdapter34.new RestHandler();
        retrofit.converter.Converter converter44 = restAdapter34.getconverter();
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request46 = serializedObjectSupporter45.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter47 = serializedObjectSupporter45.deserializeObjectConverter4();
        retrofit.client.Request request48 = serializedObjectSupporter45.deserializeObjectRequest7();
        retrofit.converter.GsonConverter gsonConverter49 = serializedObjectSupporter45.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter50 = serializedObjectSupporter45.deserializeObjectConverter1();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter45;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertNotNull(converter44);
        org.junit.Assert.assertNotNull(request46);
        org.junit.Assert.assertNotNull(gsonConverter47);
        org.junit.Assert.assertNotNull(request48);
        org.junit.Assert.assertNotNull(gsonConverter49);
        org.junit.Assert.assertNotNull(gsonConverter50);
    }

    @Test
    public void test189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test189");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.client.Client.Provider provider7 = builder0.clientProvider;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server9 = serializedObjectSupporter8.deserializeObjectServer1();
        retrofit.client.Request request10 = serializedObjectSupporter8.deserializeObjectRequest8();
        java.lang.String str11 = serializedObjectSupporter8.deserializeObjectString4();
        builder0.serializedObjectSupporter = serializedObjectSupporter8;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(provider7);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "http://example.com/" + "'", str11, "http://example.com/");
    }

    @Test
    public void test190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test190");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request8 = serializedObjectSupporter7.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter7.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder11 = builder6.setConverter((retrofit.converter.Converter) gsonConverter10);
        builder6.ensureSaneDefaults();
        retrofit.client.Client.Provider provider13 = builder6.clientProvider;
        java.util.concurrent.Executor executor14 = null;
        java.util.concurrent.Executor executor15 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server17 = serializedObjectSupporter16.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor18 = serializedObjectSupporter16.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request21 = serializedObjectSupporter20.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter20.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder24 = builder19.setConverter((retrofit.converter.Converter) gsonConverter23);
        retrofit.Profiler profiler25 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server27 = serializedObjectSupporter26.deserializeObjectServer1();
        retrofit.client.Request request28 = serializedObjectSupporter26.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler29 = serializedObjectSupporter26.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server5, provider13, executor14, executor15, requestInterceptor18, (retrofit.converter.Converter) gsonConverter23, profiler25, errorHandler29, log30, logLevel33);
        retrofit.RequestInterceptor requestInterceptor35 = restAdapter34.getrequestInterceptor();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(provider13);
        org.junit.Assert.assertNotNull(server17);
        org.junit.Assert.assertNotNull(requestInterceptor18);
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertNotNull(request28);
        org.junit.Assert.assertNotNull(errorHandler29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(requestInterceptor35);
    }

    @Test
    public void test191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test191");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.Server server3 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.Server server6 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.mime.TypedString typedString7 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter8 = serializedObjectSupporter0.deserializeObjectLogLevel1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(server6);
        org.junit.Assert.assertNotNull(typedString7);
    }

    @Test
    public void test192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test192");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest8();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter3 = serializedObjectSupporter0.deserializeObjectLogLevel2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertNotNull(request2);
    }

    @Test
    public void test193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test193");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString3 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.ErrorHandler errorHandler6 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.client.Request request7 = serializedObjectSupporter0.deserializeObjectRequest7();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(typedString3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-" + "'", str4, "Retrofit-");
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(errorHandler6);
        org.junit.Assert.assertNotNull(request7);
    }

    @Test
    public void test194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test194");
        retrofit.RestAdapter.LogLevel logLevel0 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean1 = logLevel0.log();
        org.junit.Assert.assertTrue("'" + logLevel0 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel0.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
    }

    @Test
    public void test195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test195");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        java.util.concurrent.Executor executor42 = restAdapter34.getcallbackExecutor();
        java.lang.String str43 = restAdapter34.getIDLE_THREAD_NAME();
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = restAdapter34.serializedObjectSupporter;
        java.util.concurrent.Executor executor45 = restAdapter34.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request47 = serializedObjectSupporter46.deserializeObjectRequest5();
        java.lang.String str48 = serializedObjectSupporter46.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter49 = serializedObjectSupporter46.deserializeObjectConverter8();
        retrofit.client.Request request50 = serializedObjectSupporter46.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter46;
        retrofit.RestAdapter.Log log52 = restAdapter34.log;
        retrofit.Profiler profiler53 = restAdapter34.profiler;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Retrofit-Idle" + "'", str43, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(serializedObjectSupporter44);
        org.junit.Assert.assertNull(executor45);
        org.junit.Assert.assertNotNull(request47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "POST" + "'", str48, "POST");
        org.junit.Assert.assertNotNull(gsonConverter49);
        org.junit.Assert.assertNotNull(request50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNull(profiler53);
    }

    @Test
    public void test196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test196");
        retrofit.Server server1 = new retrofit.Server("GET");
    }

    @Test
    public void test197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test197");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString3 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter8();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter5 = serializedObjectSupporter0.deserializeObjectLogLevel1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(typedString3);
        org.junit.Assert.assertNotNull(gsonConverter4);
    }

    @Test
    public void test198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test198");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.Profiler profiler3 = builder2.profiler;
        java.util.concurrent.Executor executor4 = null;
        builder2.sethttpExecutor(executor4);
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server7 = serializedObjectSupporter6.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder9 = builder2.setRequestInterceptor(requestInterceptor8);
        retrofit.Server server10 = builder9.server;
        java.util.concurrent.Executor executor11 = builder9.callbackExecutor;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(profiler3);
        org.junit.Assert.assertNotNull(server7);
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(server10);
        org.junit.Assert.assertNull(executor11);
    }

    @Test
    public void test199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test199");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        builder0.logLevel = logLevel3;
        retrofit.client.Client.Provider provider5 = builder0.clientProvider;
        java.util.concurrent.Executor executor6 = null;
        builder0.setcallbackExecutor(executor6);
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter8.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder10 = builder0.setConverter((retrofit.converter.Converter) gsonConverter9);
        retrofit.Profiler profiler11 = builder10.profiler;
        retrofit.RequestInterceptor requestInterceptor12 = builder10.requestInterceptor;
        retrofit.Profiler profiler13 = null;
        builder10.profiler = profiler13;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request17 = serializedObjectSupporter16.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter16.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter16.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder20 = builder15.setConverter((retrofit.converter.Converter) gsonConverter19);
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = builder20.serializedObjectSupporter;
        java.util.concurrent.Executor executor22 = builder20.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server24 = serializedObjectSupporter23.deserializeObjectServer1();
        retrofit.client.Request request25 = serializedObjectSupporter23.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler26 = serializedObjectSupporter23.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder27 = builder20.setErrorHandler(errorHandler26);
        builder27.ensureSaneDefaults();
        java.util.concurrent.Executor executor29 = builder27.getcallbackExecutor();
        builder10.setcallbackExecutor(executor29);
        retrofit.Server server31 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder32 = builder10.setServer(server31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(requestInterceptor12);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNull(serializedObjectSupporter21);
        org.junit.Assert.assertNull(executor22);
        org.junit.Assert.assertNotNull(server24);
        org.junit.Assert.assertNotNull(request25);
        org.junit.Assert.assertNotNull(errorHandler26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(executor29);
    }

    @Test
    public void test200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test200");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.Profiler profiler3 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder4 = builder0.setProfiler(profiler3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
    }

    @Test
    public void test201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test201");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("default");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder7 = builder5.setServer("hi!");
        retrofit.converter.Converter converter8 = builder7.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = builder7.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel10 = builder7.logLevel;
        builder4.logLevel = logLevel10;
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        java.lang.String str14 = serializedObjectSupporter12.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.client.Request request16 = serializedObjectSupporter12.deserializeObjectRequest7();
        retrofit.Server server17 = serializedObjectSupporter12.deserializeObjectServer1();
        builder4.server = server17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request21 = serializedObjectSupporter20.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter20.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder24 = builder19.setConverter((retrofit.converter.Converter) gsonConverter23);
        java.util.concurrent.Executor executor25 = builder24.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server27 = serializedObjectSupporter26.deserializeObjectServer1();
        java.lang.String str28 = server27.getUrl();
        builder24.server = server27;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request32 = serializedObjectSupporter31.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter34 = serializedObjectSupporter31.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder35 = builder30.setConverter((retrofit.converter.Converter) gsonConverter34);
        builder30.ensureSaneDefaults();
        retrofit.client.Client.Provider provider37 = builder30.clientProvider;
        java.util.concurrent.Executor executor38 = null;
        java.util.concurrent.Executor executor39 = null;
        retrofit.RequestInterceptor requestInterceptor40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request43 = serializedObjectSupporter42.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter44 = serializedObjectSupporter42.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter45 = serializedObjectSupporter42.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder46 = builder41.setConverter((retrofit.converter.Converter) gsonConverter45);
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        log49.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server27, provider37, executor38, executor39, requestInterceptor40, (retrofit.converter.Converter) gsonConverter45, profiler47, errorHandler48, log49, logLevel52);
        retrofit.SerializedObjectSupporter serializedObjectSupporter54 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request55 = serializedObjectSupporter54.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter56 = serializedObjectSupporter54.deserializeObjectConverter4();
        retrofit.client.Request request57 = serializedObjectSupporter54.deserializeObjectRequest7();
        restAdapter53.serializedObjectSupporter = serializedObjectSupporter54;
        java.util.concurrent.Executor executor59 = restAdapter53.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = restAdapter53.serializedObjectSupporter;
        java.util.concurrent.Executor executor61 = restAdapter53.getcallbackExecutor();
        java.lang.String str62 = restAdapter53.getIDLE_THREAD_NAME();
        retrofit.SerializedObjectSupporter serializedObjectSupporter63 = restAdapter53.serializedObjectSupporter;
        builder4.serializedObjectSupporter = serializedObjectSupporter63;
        java.util.concurrent.Executor executor65 = null;
        builder4.callbackExecutor = executor65;
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder68 = builder4.setLog(log67);
        retrofit.Profiler profiler69 = builder68.profiler;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(converter8);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "POST" + "'", str14, "POST");
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertNotNull(server17);
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com" + "'", str28, "http://example.com");
        org.junit.Assert.assertNotNull(request32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(gsonConverter34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(provider37);
        org.junit.Assert.assertNotNull(request43);
        org.junit.Assert.assertNotNull(gsonConverter44);
        org.junit.Assert.assertNotNull(gsonConverter45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request55);
        org.junit.Assert.assertNotNull(gsonConverter56);
        org.junit.Assert.assertNotNull(request57);
        org.junit.Assert.assertNull(executor59);
        org.junit.Assert.assertNotNull(serializedObjectSupporter60);
        org.junit.Assert.assertNull(executor61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Retrofit-Idle" + "'", str62, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(serializedObjectSupporter63);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNull(profiler69);
    }

    @Test
    public void test202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test202");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request5 = serializedObjectSupporter4.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter4.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter8();
        retrofit.client.Request request8 = serializedObjectSupporter4.deserializeObjectRequest5();
        retrofit.Server server9 = serializedObjectSupporter4.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder15 = builder10.setConverter((retrofit.converter.Converter) gsonConverter14);
        builder10.ensureSaneDefaults();
        retrofit.client.Client.Provider provider17 = builder10.clientProvider;
        java.util.concurrent.Executor executor18 = null;
        java.util.concurrent.Executor executor19 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server21 = serializedObjectSupporter20.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor22 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request25 = serializedObjectSupporter24.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter24.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter24.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder28 = builder23.setConverter((retrofit.converter.Converter) gsonConverter27);
        retrofit.Profiler profiler29 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server31 = serializedObjectSupporter30.deserializeObjectServer1();
        retrofit.client.Request request32 = serializedObjectSupporter30.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler33 = serializedObjectSupporter30.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        log34.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server9, provider17, executor18, executor19, requestInterceptor22, (retrofit.converter.Converter) gsonConverter27, profiler29, errorHandler33, log34, logLevel37);
        retrofit.RestAdapter.Builder builder39 = builder2.setClient(provider17);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request42 = serializedObjectSupporter41.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter41.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter44 = serializedObjectSupporter41.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder45 = builder40.setConverter((retrofit.converter.Converter) gsonConverter44);
        java.util.concurrent.Executor executor46 = builder45.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server48 = serializedObjectSupporter47.deserializeObjectServer1();
        java.lang.String str49 = server48.getUrl();
        builder45.server = server48;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request53 = serializedObjectSupporter52.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter54 = serializedObjectSupporter52.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter55 = serializedObjectSupporter52.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder56 = builder51.setConverter((retrofit.converter.Converter) gsonConverter55);
        builder51.ensureSaneDefaults();
        retrofit.client.Client.Provider provider58 = builder51.clientProvider;
        java.util.concurrent.Executor executor59 = null;
        java.util.concurrent.Executor executor60 = null;
        retrofit.RequestInterceptor requestInterceptor61 = null;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter63 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request64 = serializedObjectSupporter63.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter65 = serializedObjectSupporter63.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter66 = serializedObjectSupporter63.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder67 = builder62.setConverter((retrofit.converter.Converter) gsonConverter66);
        retrofit.Profiler profiler68 = null;
        retrofit.ErrorHandler errorHandler69 = null;
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        log70.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter74 = new retrofit.RestAdapter(server48, provider58, executor59, executor60, requestInterceptor61, (retrofit.converter.Converter) gsonConverter66, profiler68, errorHandler69, log70, logLevel73);
        retrofit.RestAdapter.Builder builder75 = builder2.setClient(provider58);
        retrofit.SerializedObjectSupporter serializedObjectSupporter76 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request77 = serializedObjectSupporter76.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter78 = serializedObjectSupporter76.deserializeObjectConverter5();
        builder2.serializedObjectSupporter = serializedObjectSupporter76;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter80 = serializedObjectSupporter76.deserializeObjectLogLevel1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(provider17);
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNotNull(requestInterceptor22);
        org.junit.Assert.assertNotNull(request25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(server31);
        org.junit.Assert.assertNotNull(request32);
        org.junit.Assert.assertNotNull(errorHandler33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(request42);
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertNotNull(gsonConverter44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNull(executor46);
        org.junit.Assert.assertNotNull(server48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "http://example.com" + "'", str49, "http://example.com");
        org.junit.Assert.assertNotNull(request53);
        org.junit.Assert.assertNotNull(gsonConverter54);
        org.junit.Assert.assertNotNull(gsonConverter55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(provider58);
        org.junit.Assert.assertNotNull(request64);
        org.junit.Assert.assertNotNull(gsonConverter65);
        org.junit.Assert.assertNotNull(gsonConverter66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(request77);
        org.junit.Assert.assertNotNull(gsonConverter78);
    }

    @Test
    public void test203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test203");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request4 = serializedObjectSupporter3.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter5();
        builder0.converter = gsonConverter5;
        retrofit.client.Client.Provider provider7 = builder0.getclientProvider();
        retrofit.RestAdapter.LogLevel logLevel8 = builder0.logLevel;
        java.util.concurrent.Executor executor9 = builder0.httpExecutor;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor9);
    }

    @Test
    public void test204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test204");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RequestInterceptor requestInterceptor1 = builder0.requestInterceptor;
        java.util.concurrent.Executor executor2 = builder0.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel3 = builder0.logLevel;
        org.junit.Assert.assertNull(requestInterceptor1);
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test205");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request8 = serializedObjectSupporter7.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter7.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder11 = builder6.setConverter((retrofit.converter.Converter) gsonConverter10);
        builder6.ensureSaneDefaults();
        retrofit.client.Client.Provider provider13 = builder6.clientProvider;
        java.util.concurrent.Executor executor14 = null;
        java.util.concurrent.Executor executor15 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server17 = serializedObjectSupporter16.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor18 = serializedObjectSupporter16.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request21 = serializedObjectSupporter20.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter20.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder24 = builder19.setConverter((retrofit.converter.Converter) gsonConverter23);
        retrofit.Profiler profiler25 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server27 = serializedObjectSupporter26.deserializeObjectServer1();
        retrofit.client.Request request28 = serializedObjectSupporter26.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler29 = serializedObjectSupporter26.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server5, provider13, executor14, executor15, requestInterceptor18, (retrofit.converter.Converter) gsonConverter23, profiler25, errorHandler29, log30, logLevel33);
        java.lang.String str35 = server5.getName();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(provider13);
        org.junit.Assert.assertNotNull(server17);
        org.junit.Assert.assertNotNull(requestInterceptor18);
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertNotNull(request28);
        org.junit.Assert.assertNotNull(errorHandler29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "default" + "'", str35, "default");
    }

    @Test
    public void test206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test206");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest8();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter5 = serializedObjectSupporter0.deserializeObjectLogLevel1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
    }

    @Test
    public void test207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test207");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.client.Client.Provider provider35 = restAdapter34.clientProvider;
        java.util.concurrent.Executor executor36 = restAdapter34.getcallbackExecutor();
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request39 = serializedObjectSupporter38.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter40 = serializedObjectSupporter38.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter38.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder42 = builder37.setConverter((retrofit.converter.Converter) gsonConverter41);
        java.util.concurrent.Executor executor43 = builder42.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server45 = serializedObjectSupporter44.deserializeObjectServer1();
        java.lang.String str46 = server45.getUrl();
        builder42.server = server45;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request50 = serializedObjectSupporter49.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter51 = serializedObjectSupporter49.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter52 = serializedObjectSupporter49.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder53 = builder48.setConverter((retrofit.converter.Converter) gsonConverter52);
        builder48.ensureSaneDefaults();
        retrofit.client.Client.Provider provider55 = builder48.clientProvider;
        java.util.concurrent.Executor executor56 = null;
        java.util.concurrent.Executor executor57 = null;
        retrofit.RequestInterceptor requestInterceptor58 = null;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request61 = serializedObjectSupporter60.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter62 = serializedObjectSupporter60.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter63 = serializedObjectSupporter60.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder64 = builder59.setConverter((retrofit.converter.Converter) gsonConverter63);
        retrofit.Profiler profiler65 = null;
        retrofit.ErrorHandler errorHandler66 = null;
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        log67.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter71 = new retrofit.RestAdapter(server45, provider55, executor56, executor57, requestInterceptor58, (retrofit.converter.Converter) gsonConverter63, profiler65, errorHandler66, log67, logLevel70);
        retrofit.SerializedObjectSupporter serializedObjectSupporter72 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request73 = serializedObjectSupporter72.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter74 = serializedObjectSupporter72.deserializeObjectConverter4();
        retrofit.client.Request request75 = serializedObjectSupporter72.deserializeObjectRequest7();
        restAdapter71.serializedObjectSupporter = serializedObjectSupporter72;
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder79 = builder77.setServer("hi!");
        retrofit.SerializedObjectSupporter serializedObjectSupporter80 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request81 = serializedObjectSupporter80.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter82 = serializedObjectSupporter80.deserializeObjectConverter5();
        builder77.converter = gsonConverter82;
        retrofit.SerializedObjectSupporter serializedObjectSupporter84 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request85 = serializedObjectSupporter84.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter86 = serializedObjectSupporter84.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString87 = serializedObjectSupporter84.deserializeObjectTypedOutput2();
        java.lang.String str88 = serializedObjectSupporter84.deserializeObjectString1();
        builder77.serializedObjectSupporter = serializedObjectSupporter84;
        retrofit.Server server90 = serializedObjectSupporter84.deserializeObjectServer1();
        restAdapter71.serializedObjectSupporter = serializedObjectSupporter84;
        retrofit.SerializedObjectSupporter serializedObjectSupporter92 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server93 = serializedObjectSupporter92.deserializeObjectServer1();
        retrofit.client.Request request94 = serializedObjectSupporter92.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler95 = serializedObjectSupporter92.deserializeObjectErrorHandler1();
        retrofit.client.Request request96 = serializedObjectSupporter92.deserializeObjectRequest3();
        retrofit.client.Request request97 = restAdapter71.logAndReplaceRequest(request96);
        retrofit.client.Request request98 = restAdapter34.logAndReplaceRequest(request96);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(provider35);
        org.junit.Assert.assertNull(executor36);
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertNotNull(gsonConverter40);
        org.junit.Assert.assertNotNull(gsonConverter41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(executor43);
        org.junit.Assert.assertNotNull(server45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "http://example.com" + "'", str46, "http://example.com");
        org.junit.Assert.assertNotNull(request50);
        org.junit.Assert.assertNotNull(gsonConverter51);
        org.junit.Assert.assertNotNull(gsonConverter52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(provider55);
        org.junit.Assert.assertNotNull(request61);
        org.junit.Assert.assertNotNull(gsonConverter62);
        org.junit.Assert.assertNotNull(gsonConverter63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request73);
        org.junit.Assert.assertNotNull(gsonConverter74);
        org.junit.Assert.assertNotNull(request75);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(request81);
        org.junit.Assert.assertNotNull(gsonConverter82);
        org.junit.Assert.assertNotNull(request85);
        org.junit.Assert.assertNotNull(gsonConverter86);
        org.junit.Assert.assertNotNull(typedString87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "Retrofit-" + "'", str88, "Retrofit-");
        org.junit.Assert.assertNotNull(server90);
        org.junit.Assert.assertNotNull(server93);
        org.junit.Assert.assertNotNull(request94);
        org.junit.Assert.assertNotNull(errorHandler95);
        org.junit.Assert.assertNotNull(request96);
        org.junit.Assert.assertNotNull(request97);
        org.junit.Assert.assertNotNull(request98);
    }

    @Test
    public void test208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test208");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest7();
        java.lang.Class<?> wildcardClass3 = serializedObjectSupporter0.getClass();
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test209");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request5 = serializedObjectSupporter4.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter4.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder8 = builder3.setConverter((retrofit.converter.Converter) gsonConverter7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = builder8.serializedObjectSupporter;
        java.util.concurrent.Executor executor10 = builder8.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server12 = serializedObjectSupporter11.deserializeObjectServer1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler14 = serializedObjectSupporter11.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder15 = builder8.setErrorHandler(errorHandler14);
        builder2.errorHandler = errorHandler14;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        log17.log("hi!");
        builder2.log = log17;
        java.lang.Class<?> wildcardClass21 = builder2.getClass();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertNull(executor10);
        org.junit.Assert.assertNotNull(server12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(errorHandler14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test210");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request6 = serializedObjectSupporter5.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter5.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter5.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder9 = builder4.setConverter((retrofit.converter.Converter) gsonConverter8);
        java.util.concurrent.Executor executor10 = builder9.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server12 = serializedObjectSupporter11.deserializeObjectServer1();
        java.lang.String str13 = server12.getUrl();
        builder9.server = server12;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request17 = serializedObjectSupporter16.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter16.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter16.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder20 = builder15.setConverter((retrofit.converter.Converter) gsonConverter19);
        builder15.ensureSaneDefaults();
        retrofit.client.Client.Provider provider22 = builder15.clientProvider;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request28 = serializedObjectSupporter27.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter27.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter27.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder31 = builder26.setConverter((retrofit.converter.Converter) gsonConverter30);
        retrofit.Profiler profiler32 = null;
        retrofit.ErrorHandler errorHandler33 = null;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        log34.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server12, provider22, executor23, executor24, requestInterceptor25, (retrofit.converter.Converter) gsonConverter30, profiler32, errorHandler33, log34, logLevel37);
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request40 = serializedObjectSupporter39.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter39.deserializeObjectConverter4();
        retrofit.client.Request request42 = serializedObjectSupporter39.deserializeObjectRequest7();
        restAdapter38.serializedObjectSupporter = serializedObjectSupporter39;
        builder2.serializedObjectSupporter = serializedObjectSupporter39;
        retrofit.converter.Converter converter45 = builder2.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server47 = serializedObjectSupporter46.deserializeObjectServer1();
        retrofit.client.Request request48 = serializedObjectSupporter46.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler49 = serializedObjectSupporter46.deserializeObjectErrorHandler1();
        builder2.errorHandler = errorHandler49;
        java.util.concurrent.Executor executor51 = null;
        builder2.setcallbackExecutor(executor51);
        retrofit.ErrorHandler errorHandler53 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder54 = builder2.setErrorHandler(errorHandler53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(executor10);
        org.junit.Assert.assertNotNull(server12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "http://example.com" + "'", str13, "http://example.com");
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(provider22);
        org.junit.Assert.assertNotNull(request28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(gsonConverter41);
        org.junit.Assert.assertNotNull(request42);
        org.junit.Assert.assertNull(converter45);
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertNotNull(request48);
        org.junit.Assert.assertNotNull(errorHandler49);
    }

    @Test
    public void test211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test211");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        java.util.concurrent.Executor executor3 = null;
        builder2.sethttpExecutor(executor3);
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request6 = serializedObjectSupporter5.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter5.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter5.deserializeObjectConverter8();
        retrofit.client.Request request9 = serializedObjectSupporter5.deserializeObjectRequest5();
        retrofit.Server server10 = serializedObjectSupporter5.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server22 = serializedObjectSupporter21.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor23 = serializedObjectSupporter21.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request26 = serializedObjectSupporter25.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter25.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter25.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder29 = builder24.setConverter((retrofit.converter.Converter) gsonConverter28);
        retrofit.Profiler profiler30 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server32 = serializedObjectSupporter31.deserializeObjectServer1();
        retrofit.client.Request request33 = serializedObjectSupporter31.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler34 = serializedObjectSupporter31.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        log35.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter(server10, provider18, executor19, executor20, requestInterceptor23, (retrofit.converter.Converter) gsonConverter28, profiler30, errorHandler34, log35, logLevel38);
        retrofit.RestAdapter.Builder builder40 = builder2.setErrorHandler(errorHandler34);
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server42 = serializedObjectSupporter41.deserializeObjectServer1();
        retrofit.client.Request request43 = serializedObjectSupporter41.deserializeObjectRequest8();
        retrofit.Server server44 = serializedObjectSupporter41.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder45 = builder40.setServer(server44);
        retrofit.client.Client client46 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder47 = builder40.setClient(client46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertNotNull(request9);
        org.junit.Assert.assertNotNull(server10);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(server22);
        org.junit.Assert.assertNotNull(requestInterceptor23);
        org.junit.Assert.assertNotNull(request26);
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(server32);
        org.junit.Assert.assertNotNull(request33);
        org.junit.Assert.assertNotNull(errorHandler34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(server42);
        org.junit.Assert.assertNotNull(request43);
        org.junit.Assert.assertNotNull(server44);
        org.junit.Assert.assertNotNull(builder45);
    }

    @Test
    public void test212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test212");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        java.util.concurrent.Executor executor35 = restAdapter34.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request37 = serializedObjectSupporter36.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter4();
        retrofit.client.Request request39 = serializedObjectSupporter36.deserializeObjectRequest4();
        retrofit.client.Request request40 = restAdapter34.logAndReplaceRequest(request39);
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter34.new RestHandler();
        retrofit.converter.Converter converter42 = restAdapter34.converter;
        java.util.concurrent.Executor executor43 = restAdapter34.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel46 = restAdapter34.logLevel;
        retrofit.RequestInterceptor requestInterceptor47 = restAdapter34.getrequestInterceptor();
        java.lang.String str48 = restAdapter34.getIDLE_THREAD_NAME();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNotNull(request37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(converter42);
        org.junit.Assert.assertNull(executor43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(requestInterceptor47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Retrofit-Idle" + "'", str48, "Retrofit-Idle");
    }

    @Test
    public void test213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test213");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        retrofit.Server server42 = restAdapter34.server;
        retrofit.ErrorHandler errorHandler43 = restAdapter34.errorHandler;
        retrofit.RequestInterceptor requestInterceptor44 = restAdapter34.getrequestInterceptor();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertNotNull(server42);
        org.junit.Assert.assertNull(errorHandler43);
        org.junit.Assert.assertNull(requestInterceptor44);
    }

    @Test
    public void test214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test214");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = null;
        restAdapter34.setLogLevel(logLevel35);
        retrofit.RestAdapter.RestHandler restHandler37 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler38 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request41 = serializedObjectSupporter40.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter42 = serializedObjectSupporter40.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter40.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder44 = builder39.setConverter((retrofit.converter.Converter) gsonConverter43);
        java.util.concurrent.Executor executor45 = builder44.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server47 = serializedObjectSupporter46.deserializeObjectServer1();
        java.lang.String str48 = server47.getUrl();
        builder44.server = server47;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter51 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request52 = serializedObjectSupporter51.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter53 = serializedObjectSupporter51.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter54 = serializedObjectSupporter51.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder55 = builder50.setConverter((retrofit.converter.Converter) gsonConverter54);
        builder50.ensureSaneDefaults();
        retrofit.client.Client.Provider provider57 = builder50.clientProvider;
        java.util.concurrent.Executor executor58 = null;
        java.util.concurrent.Executor executor59 = null;
        retrofit.RequestInterceptor requestInterceptor60 = null;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter62 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request63 = serializedObjectSupporter62.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter64 = serializedObjectSupporter62.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter65 = serializedObjectSupporter62.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder66 = builder61.setConverter((retrofit.converter.Converter) gsonConverter65);
        retrofit.Profiler profiler67 = null;
        retrofit.ErrorHandler errorHandler68 = null;
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        log69.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter73 = new retrofit.RestAdapter(server47, provider57, executor58, executor59, requestInterceptor60, (retrofit.converter.Converter) gsonConverter65, profiler67, errorHandler68, log69, logLevel72);
        java.lang.String str74 = restAdapter73.getIDLE_THREAD_NAME();
        java.lang.String str75 = restAdapter73.getTHREAD_PREFIX();
        java.lang.reflect.Method method76 = null;
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter78 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request79 = serializedObjectSupporter78.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter80 = serializedObjectSupporter78.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter81 = serializedObjectSupporter78.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder82 = builder77.setConverter((retrofit.converter.Converter) gsonConverter81);
        retrofit.Server server84 = new retrofit.Server("http://example.com");
        builder77.server = server84;
        retrofit.SerializedObjectSupporter serializedObjectSupporter86 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request87 = serializedObjectSupporter86.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter88 = serializedObjectSupporter86.deserializeObjectConverter4();
        retrofit.client.Request request89 = serializedObjectSupporter86.deserializeObjectRequest4();
        retrofit.client.Request request90 = serializedObjectSupporter86.deserializeObjectRequest7();
        retrofit.SerializedObjectSupporter serializedObjectSupporter91 = new retrofit.SerializedObjectSupporter();
        retrofit.converter.GsonConverter gsonConverter92 = serializedObjectSupporter91.deserializeObjectConverter8();
        retrofit.converter.GsonConverter gsonConverter93 = serializedObjectSupporter91.deserializeObjectConverter8();
        retrofit.Server server94 = serializedObjectSupporter91.deserializeObjectServer1();
        java.lang.Object[] objArray95 = new java.lang.Object[] { server84, request90, server94 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj96 = restHandler38.invoke((java.lang.Object) restAdapter73, method76, objArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request41);
        org.junit.Assert.assertNotNull(gsonConverter42);
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNull(executor45);
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "http://example.com" + "'", str48, "http://example.com");
        org.junit.Assert.assertNotNull(request52);
        org.junit.Assert.assertNotNull(gsonConverter53);
        org.junit.Assert.assertNotNull(gsonConverter54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(provider57);
        org.junit.Assert.assertNotNull(request63);
        org.junit.Assert.assertNotNull(gsonConverter64);
        org.junit.Assert.assertNotNull(gsonConverter65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Retrofit-Idle" + "'", str74, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Retrofit-" + "'", str75, "Retrofit-");
        org.junit.Assert.assertNotNull(request79);
        org.junit.Assert.assertNotNull(gsonConverter80);
        org.junit.Assert.assertNotNull(gsonConverter81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(request87);
        org.junit.Assert.assertNotNull(gsonConverter88);
        org.junit.Assert.assertNotNull(request89);
        org.junit.Assert.assertNotNull(request90);
        org.junit.Assert.assertNotNull(gsonConverter92);
        org.junit.Assert.assertNotNull(gsonConverter93);
        org.junit.Assert.assertNotNull(server94);
        org.junit.Assert.assertNotNull(objArray95);
    }

    @Test
    public void test215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test215");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        java.util.concurrent.Executor executor42 = restAdapter34.getcallbackExecutor();
        java.lang.String str43 = restAdapter34.getIDLE_THREAD_NAME();
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = restAdapter34.serializedObjectSupporter;
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter34.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor46 = restAdapter34.requestInterceptor;
        java.lang.String str47 = restAdapter34.getTHREAD_PREFIX();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Retrofit-Idle" + "'", str43, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(serializedObjectSupporter44);
        org.junit.Assert.assertNull(requestInterceptor46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Retrofit-" + "'", str47, "Retrofit-");
    }

    @Test
    public void test216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test216");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        java.util.concurrent.Executor executor35 = restAdapter34.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request37 = serializedObjectSupporter36.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter4();
        retrofit.client.Request request39 = serializedObjectSupporter36.deserializeObjectRequest4();
        retrofit.client.Request request40 = restAdapter34.logAndReplaceRequest(request39);
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter34.new RestHandler();
        retrofit.converter.Converter converter42 = restAdapter34.converter;
        java.util.concurrent.Executor executor43 = restAdapter34.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel46 = restAdapter34.logLevel;
        java.util.concurrent.Executor executor47 = restAdapter34.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter34.logLevel;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNotNull(request37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(converter42);
        org.junit.Assert.assertNull(executor43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test217");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = null;
        restAdapter34.setLogLevel(logLevel35);
        retrofit.Server server37 = restAdapter34.server;
        retrofit.RestAdapter.RestHandler restHandler38 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler39 = restAdapter34.new RestHandler();
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.client.Response response42 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response44 = restAdapter34.logAndReplaceResponse("GET", response42, (long) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNull(executor40);
    }

    @Test
    public void test218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test218");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter1();
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
    }

    @Test
    public void test219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test219");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = null;
        restAdapter34.setLogLevel(logLevel35);
        java.util.concurrent.Executor executor37 = restAdapter34.gethttpExecutor();
        retrofit.converter.Converter converter38 = restAdapter34.converter;
        retrofit.ErrorHandler errorHandler39 = restAdapter34.errorHandler;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("hi!");
        retrofit.converter.Converter converter43 = builder42.converter;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request46 = serializedObjectSupporter45.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter47 = serializedObjectSupporter45.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter48 = serializedObjectSupporter45.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder49 = builder44.setConverter((retrofit.converter.Converter) gsonConverter48);
        java.util.concurrent.Executor executor50 = builder49.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter51 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server52 = serializedObjectSupporter51.deserializeObjectServer1();
        java.lang.String str53 = server52.getUrl();
        builder49.server = server52;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request57 = serializedObjectSupporter56.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter58 = serializedObjectSupporter56.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter59 = serializedObjectSupporter56.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder60 = builder55.setConverter((retrofit.converter.Converter) gsonConverter59);
        builder55.ensureSaneDefaults();
        retrofit.client.Client.Provider provider62 = builder55.clientProvider;
        java.util.concurrent.Executor executor63 = null;
        java.util.concurrent.Executor executor64 = null;
        retrofit.RequestInterceptor requestInterceptor65 = null;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter67 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request68 = serializedObjectSupporter67.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter69 = serializedObjectSupporter67.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter70 = serializedObjectSupporter67.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder71 = builder66.setConverter((retrofit.converter.Converter) gsonConverter70);
        retrofit.Profiler profiler72 = null;
        retrofit.ErrorHandler errorHandler73 = null;
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        log74.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter78 = new retrofit.RestAdapter(server52, provider62, executor63, executor64, requestInterceptor65, (retrofit.converter.Converter) gsonConverter70, profiler72, errorHandler73, log74, logLevel77);
        retrofit.SerializedObjectSupporter serializedObjectSupporter79 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request80 = serializedObjectSupporter79.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter81 = serializedObjectSupporter79.deserializeObjectConverter4();
        retrofit.client.Request request82 = serializedObjectSupporter79.deserializeObjectRequest7();
        restAdapter78.serializedObjectSupporter = serializedObjectSupporter79;
        builder42.serializedObjectSupporter = serializedObjectSupporter79;
        retrofit.client.Request request85 = serializedObjectSupporter79.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter79;
        retrofit.RestAdapter.LogLevel logLevel87 = restAdapter34.logLevel;
        retrofit.RestAdapter.RestHandler restHandler88 = restAdapter34.new RestHandler();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertNotNull(converter38);
        org.junit.Assert.assertNull(errorHandler39);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(converter43);
        org.junit.Assert.assertNotNull(request46);
        org.junit.Assert.assertNotNull(gsonConverter47);
        org.junit.Assert.assertNotNull(gsonConverter48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNull(executor50);
        org.junit.Assert.assertNotNull(server52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "http://example.com" + "'", str53, "http://example.com");
        org.junit.Assert.assertNotNull(request57);
        org.junit.Assert.assertNotNull(gsonConverter58);
        org.junit.Assert.assertNotNull(gsonConverter59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(provider62);
        org.junit.Assert.assertNotNull(request68);
        org.junit.Assert.assertNotNull(gsonConverter69);
        org.junit.Assert.assertNotNull(gsonConverter70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request80);
        org.junit.Assert.assertNotNull(gsonConverter81);
        org.junit.Assert.assertNotNull(request82);
        org.junit.Assert.assertNotNull(request85);
        org.junit.Assert.assertNull(logLevel87);
    }

    @Test
    public void test220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test220");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("default");
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.HEADERS;
        builder4.logLevel = logLevel5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request9 = serializedObjectSupporter8.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter8.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter8.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder12 = builder7.setConverter((retrofit.converter.Converter) gsonConverter11);
        java.util.concurrent.Executor executor13 = builder12.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server15 = serializedObjectSupporter14.deserializeObjectServer1();
        java.lang.String str16 = server15.getUrl();
        builder12.server = server15;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request20 = serializedObjectSupporter19.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter19.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter19.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder23 = builder18.setConverter((retrofit.converter.Converter) gsonConverter22);
        builder18.ensureSaneDefaults();
        retrofit.client.Client.Provider provider25 = builder18.clientProvider;
        java.util.concurrent.Executor executor26 = null;
        java.util.concurrent.Executor executor27 = null;
        retrofit.RequestInterceptor requestInterceptor28 = null;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request31 = serializedObjectSupporter30.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter32 = serializedObjectSupporter30.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter30.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder34 = builder29.setConverter((retrofit.converter.Converter) gsonConverter33);
        retrofit.Profiler profiler35 = null;
        retrofit.ErrorHandler errorHandler36 = null;
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        log37.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter(server15, provider25, executor26, executor27, requestInterceptor28, (retrofit.converter.Converter) gsonConverter33, profiler35, errorHandler36, log37, logLevel40);
        java.util.concurrent.Executor executor42 = restAdapter41.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request44 = serializedObjectSupporter43.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter45 = serializedObjectSupporter43.deserializeObjectConverter4();
        retrofit.client.Request request46 = serializedObjectSupporter43.deserializeObjectRequest4();
        retrofit.client.Request request47 = restAdapter41.logAndReplaceRequest(request46);
        retrofit.RestAdapter.RestHandler restHandler48 = restAdapter41.new RestHandler();
        retrofit.converter.Converter converter49 = restAdapter41.converter;
        java.util.concurrent.Executor executor50 = restAdapter41.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel51 = restAdapter41.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel52 = restAdapter41.logLevel;
        retrofit.RestAdapter.Builder builder53 = builder4.setLogLevel(logLevel52);
        java.util.concurrent.Executor executor54 = builder53.gethttpExecutor();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(request9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNotNull(server15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com" + "'", str16, "http://example.com");
        org.junit.Assert.assertNotNull(request20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(provider25);
        org.junit.Assert.assertNotNull(request31);
        org.junit.Assert.assertNotNull(gsonConverter32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertNotNull(request44);
        org.junit.Assert.assertNotNull(gsonConverter45);
        org.junit.Assert.assertNotNull(request46);
        org.junit.Assert.assertNotNull(request47);
        org.junit.Assert.assertNotNull(converter49);
        org.junit.Assert.assertNull(executor50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNull(executor54);
    }

    @Test
    public void test221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test221");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        java.util.concurrent.Executor executor35 = restAdapter34.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request37 = serializedObjectSupporter36.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter4();
        retrofit.client.Request request39 = serializedObjectSupporter36.deserializeObjectRequest4();
        retrofit.client.Request request40 = restAdapter34.logAndReplaceRequest(request39);
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter34.new RestHandler();
        retrofit.converter.Converter converter42 = restAdapter34.converter;
        java.util.concurrent.Executor executor43 = restAdapter34.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel46 = restAdapter34.logLevel;
        retrofit.Profiler profiler47 = restAdapter34.profiler;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNotNull(request37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(converter42);
        org.junit.Assert.assertNull(executor43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(profiler47);
    }

    @Test
    public void test222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test222");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        java.lang.String str42 = restAdapter34.getTHREAD_PREFIX();
        retrofit.RestAdapter.RestHandler restHandler43 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler44 = restAdapter34.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request46 = serializedObjectSupporter45.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter47 = serializedObjectSupporter45.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter48 = serializedObjectSupporter45.deserializeObjectConverter8();
        java.lang.reflect.Method method49 = null;
        java.lang.Object[] objArray50 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj51 = restHandler44.invoke((java.lang.Object) serializedObjectSupporter45, method49, objArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Retrofit-" + "'", str42, "Retrofit-");
        org.junit.Assert.assertNotNull(request46);
        org.junit.Assert.assertNotNull(gsonConverter47);
        org.junit.Assert.assertNotNull(gsonConverter48);
    }

    @Test
    public void test223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test223");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        java.lang.String str42 = serializedObjectSupporter41.deserializeObjectString2();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter41.deserializeObjectConverter3();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter44 = serializedObjectSupporter41.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Retrofit-Idle" + "'", str42, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(gsonConverter43);
    }

    @Test
    public void test224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test224");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.Server server3 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str4 = server3.name;
        java.lang.String str5 = server3.getapiUrl();
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "default" + "'", str4, "default");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com" + "'", str5, "http://example.com");
    }

    @Test
    public void test225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test225");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        java.util.concurrent.Executor executor35 = restAdapter34.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request37 = serializedObjectSupporter36.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter4();
        retrofit.client.Request request39 = serializedObjectSupporter36.deserializeObjectRequest4();
        retrofit.client.Request request40 = restAdapter34.logAndReplaceRequest(request39);
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter34.new RestHandler();
        retrofit.converter.Converter converter42 = restAdapter34.converter;
        java.util.concurrent.Executor executor43 = restAdapter34.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter34.new RestHandler();
        java.util.concurrent.Executor executor46 = restAdapter34.gethttpExecutor();
        retrofit.client.Client.Provider provider47 = restAdapter34.getclientProvider();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNotNull(request37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(converter42);
        org.junit.Assert.assertNull(executor43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor46);
        org.junit.Assert.assertNotNull(provider47);
    }

    @Test
    public void test226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test226");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = null;
        restAdapter34.setLogLevel(logLevel35);
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request40 = serializedObjectSupporter39.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter39.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter42 = serializedObjectSupporter39.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder43 = builder38.setConverter((retrofit.converter.Converter) gsonConverter42);
        java.util.concurrent.Executor executor44 = builder43.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server46 = serializedObjectSupporter45.deserializeObjectServer1();
        java.lang.String str47 = server46.getUrl();
        builder43.server = server46;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter50 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request51 = serializedObjectSupporter50.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter52 = serializedObjectSupporter50.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter53 = serializedObjectSupporter50.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder54 = builder49.setConverter((retrofit.converter.Converter) gsonConverter53);
        builder49.ensureSaneDefaults();
        retrofit.client.Client.Provider provider56 = builder49.clientProvider;
        java.util.concurrent.Executor executor57 = null;
        java.util.concurrent.Executor executor58 = null;
        retrofit.RequestInterceptor requestInterceptor59 = null;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter61 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request62 = serializedObjectSupporter61.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter63 = serializedObjectSupporter61.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter64 = serializedObjectSupporter61.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder65 = builder60.setConverter((retrofit.converter.Converter) gsonConverter64);
        retrofit.Profiler profiler66 = null;
        retrofit.ErrorHandler errorHandler67 = null;
        retrofit.RestAdapter.Log log68 = retrofit.RestAdapter.Log.NONE;
        log68.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter72 = new retrofit.RestAdapter(server46, provider56, executor57, executor58, requestInterceptor59, (retrofit.converter.Converter) gsonConverter64, profiler66, errorHandler67, log68, logLevel71);
        java.util.concurrent.Executor executor73 = restAdapter72.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter74 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request75 = serializedObjectSupporter74.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter76 = serializedObjectSupporter74.deserializeObjectConverter4();
        retrofit.client.Request request77 = serializedObjectSupporter74.deserializeObjectRequest4();
        retrofit.client.Request request78 = restAdapter72.logAndReplaceRequest(request77);
        retrofit.RestAdapter.RestHandler restHandler79 = restAdapter72.new RestHandler();
        retrofit.Server server80 = restAdapter72.getserver();
        retrofit.converter.Converter converter81 = restAdapter72.getconverter();
        retrofit.Server server82 = restAdapter72.server;
        retrofit.RestAdapter.LogLevel logLevel83 = restAdapter72.getLogLevel();
        restAdapter34.logLevel = logLevel83;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(logLevel37);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(gsonConverter41);
        org.junit.Assert.assertNotNull(gsonConverter42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(executor44);
        org.junit.Assert.assertNotNull(server46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "http://example.com" + "'", str47, "http://example.com");
        org.junit.Assert.assertNotNull(request51);
        org.junit.Assert.assertNotNull(gsonConverter52);
        org.junit.Assert.assertNotNull(gsonConverter53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(provider56);
        org.junit.Assert.assertNotNull(request62);
        org.junit.Assert.assertNotNull(gsonConverter63);
        org.junit.Assert.assertNotNull(gsonConverter64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor73);
        org.junit.Assert.assertNotNull(request75);
        org.junit.Assert.assertNotNull(gsonConverter76);
        org.junit.Assert.assertNotNull(request77);
        org.junit.Assert.assertNotNull(request78);
        org.junit.Assert.assertNotNull(server80);
        org.junit.Assert.assertNotNull(converter81);
        org.junit.Assert.assertNotNull(server82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test227");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        java.util.concurrent.Executor executor42 = restAdapter34.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor43 = restAdapter34.requestInterceptor;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertNull(requestInterceptor43);
    }

    @Test
    public void test228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test228");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.Profiler profiler3 = builder2.profiler;
        java.util.concurrent.Executor executor4 = null;
        builder2.sethttpExecutor(executor4);
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server7 = serializedObjectSupporter6.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder9 = builder2.setRequestInterceptor(requestInterceptor8);
        retrofit.RequestInterceptor requestInterceptor10 = builder9.requestInterceptor;
        java.util.concurrent.Executor executor11 = null;
        builder9.sethttpExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder15 = builder13.setServer("hi!");
        java.util.concurrent.Executor executor16 = null;
        builder15.sethttpExecutor(executor16);
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder20 = builder18.setServer("hi!");
        retrofit.converter.Converter converter21 = builder20.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request23 = serializedObjectSupporter22.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter24 = serializedObjectSupporter22.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter22.deserializeObjectConverter8();
        retrofit.client.Request request26 = serializedObjectSupporter22.deserializeObjectRequest5();
        retrofit.Server server27 = serializedObjectSupporter22.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request30 = serializedObjectSupporter29.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter32 = serializedObjectSupporter29.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder33 = builder28.setConverter((retrofit.converter.Converter) gsonConverter32);
        builder28.ensureSaneDefaults();
        retrofit.client.Client.Provider provider35 = builder28.clientProvider;
        java.util.concurrent.Executor executor36 = null;
        java.util.concurrent.Executor executor37 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server39 = serializedObjectSupporter38.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor40 = serializedObjectSupporter38.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request43 = serializedObjectSupporter42.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter44 = serializedObjectSupporter42.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter45 = serializedObjectSupporter42.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder46 = builder41.setConverter((retrofit.converter.Converter) gsonConverter45);
        retrofit.Profiler profiler47 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server49 = serializedObjectSupporter48.deserializeObjectServer1();
        retrofit.client.Request request50 = serializedObjectSupporter48.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler51 = serializedObjectSupporter48.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        log52.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter(server27, provider35, executor36, executor37, requestInterceptor40, (retrofit.converter.Converter) gsonConverter45, profiler47, errorHandler51, log52, logLevel55);
        retrofit.RestAdapter.Builder builder57 = builder20.setClient(provider35);
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter59 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request60 = serializedObjectSupporter59.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter59.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter62 = serializedObjectSupporter59.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder63 = builder58.setConverter((retrofit.converter.Converter) gsonConverter62);
        java.util.concurrent.Executor executor64 = builder63.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server66 = serializedObjectSupporter65.deserializeObjectServer1();
        java.lang.String str67 = server66.getUrl();
        builder63.server = server66;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter70 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request71 = serializedObjectSupporter70.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter72 = serializedObjectSupporter70.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter73 = serializedObjectSupporter70.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder74 = builder69.setConverter((retrofit.converter.Converter) gsonConverter73);
        builder69.ensureSaneDefaults();
        retrofit.client.Client.Provider provider76 = builder69.clientProvider;
        java.util.concurrent.Executor executor77 = null;
        java.util.concurrent.Executor executor78 = null;
        retrofit.RequestInterceptor requestInterceptor79 = null;
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter81 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request82 = serializedObjectSupporter81.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter83 = serializedObjectSupporter81.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter84 = serializedObjectSupporter81.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder85 = builder80.setConverter((retrofit.converter.Converter) gsonConverter84);
        retrofit.Profiler profiler86 = null;
        retrofit.ErrorHandler errorHandler87 = null;
        retrofit.RestAdapter.Log log88 = retrofit.RestAdapter.Log.NONE;
        log88.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel91 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter92 = new retrofit.RestAdapter(server66, provider76, executor77, executor78, requestInterceptor79, (retrofit.converter.Converter) gsonConverter84, profiler86, errorHandler87, log88, logLevel91);
        retrofit.RestAdapter.Builder builder93 = builder20.setClient(provider76);
        builder15.clientProvider = provider76;
        builder9.clientProvider = provider76;
        builder9.ensureSaneDefaults();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(profiler3);
        org.junit.Assert.assertNotNull(server7);
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNotNull(request23);
        org.junit.Assert.assertNotNull(gsonConverter24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(request26);
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertNotNull(request30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(gsonConverter32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(provider35);
        org.junit.Assert.assertNotNull(server39);
        org.junit.Assert.assertNotNull(requestInterceptor40);
        org.junit.Assert.assertNotNull(request43);
        org.junit.Assert.assertNotNull(gsonConverter44);
        org.junit.Assert.assertNotNull(gsonConverter45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(server49);
        org.junit.Assert.assertNotNull(request50);
        org.junit.Assert.assertNotNull(errorHandler51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(request60);
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertNotNull(gsonConverter62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNull(executor64);
        org.junit.Assert.assertNotNull(server66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "http://example.com" + "'", str67, "http://example.com");
        org.junit.Assert.assertNotNull(request71);
        org.junit.Assert.assertNotNull(gsonConverter72);
        org.junit.Assert.assertNotNull(gsonConverter73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(provider76);
        org.junit.Assert.assertNotNull(request82);
        org.junit.Assert.assertNotNull(gsonConverter83);
        org.junit.Assert.assertNotNull(gsonConverter84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(log88);
        org.junit.Assert.assertTrue("'" + logLevel91 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel91.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder93);
    }

    @Test
    public void test229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test229");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString3 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        retrofit.mime.TypedString typedString4 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(typedString3);
        org.junit.Assert.assertNotNull(typedString4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(requestInterceptor8);
    }

    @Test
    public void test230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test230");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.Server server9 = new retrofit.Server("hi!", "default");
        builder5.server = server9;
        java.util.concurrent.Executor executor11 = null;
        builder5.sethttpExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request15 = serializedObjectSupporter14.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter16 = serializedObjectSupporter14.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter14.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder18 = builder13.setConverter((retrofit.converter.Converter) gsonConverter17);
        java.util.concurrent.Executor executor19 = builder18.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server21 = serializedObjectSupporter20.deserializeObjectServer1();
        java.lang.String str22 = server21.getUrl();
        builder18.server = server21;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request26 = serializedObjectSupporter25.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter25.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter25.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder29 = builder24.setConverter((retrofit.converter.Converter) gsonConverter28);
        builder24.ensureSaneDefaults();
        retrofit.client.Client.Provider provider31 = builder24.clientProvider;
        java.util.concurrent.Executor executor32 = null;
        java.util.concurrent.Executor executor33 = null;
        retrofit.RequestInterceptor requestInterceptor34 = null;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request37 = serializedObjectSupporter36.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter36.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder40 = builder35.setConverter((retrofit.converter.Converter) gsonConverter39);
        retrofit.Profiler profiler41 = null;
        retrofit.ErrorHandler errorHandler42 = null;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        log43.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter(server21, provider31, executor32, executor33, requestInterceptor34, (retrofit.converter.Converter) gsonConverter39, profiler41, errorHandler42, log43, logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder5.setClient(provider31);
        java.util.concurrent.Executor executor49 = null;
        builder48.sethttpExecutor(executor49);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request53 = serializedObjectSupporter52.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter54 = serializedObjectSupporter52.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter55 = serializedObjectSupporter52.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder56 = builder51.setConverter((retrofit.converter.Converter) gsonConverter55);
        java.util.concurrent.Executor executor57 = builder56.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server59 = serializedObjectSupporter58.deserializeObjectServer1();
        java.lang.String str60 = server59.getUrl();
        builder56.server = server59;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter63 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request64 = serializedObjectSupporter63.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter65 = serializedObjectSupporter63.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter66 = serializedObjectSupporter63.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder67 = builder62.setConverter((retrofit.converter.Converter) gsonConverter66);
        builder62.ensureSaneDefaults();
        retrofit.client.Client.Provider provider69 = builder62.clientProvider;
        java.util.concurrent.Executor executor70 = null;
        java.util.concurrent.Executor executor71 = null;
        retrofit.RequestInterceptor requestInterceptor72 = null;
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter74 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request75 = serializedObjectSupporter74.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter76 = serializedObjectSupporter74.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter77 = serializedObjectSupporter74.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder78 = builder73.setConverter((retrofit.converter.Converter) gsonConverter77);
        retrofit.Profiler profiler79 = null;
        retrofit.ErrorHandler errorHandler80 = null;
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        log81.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel84 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter85 = new retrofit.RestAdapter(server59, provider69, executor70, executor71, requestInterceptor72, (retrofit.converter.Converter) gsonConverter77, profiler79, errorHandler80, log81, logLevel84);
        java.util.concurrent.Executor executor86 = restAdapter85.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter87 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request88 = serializedObjectSupporter87.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter89 = serializedObjectSupporter87.deserializeObjectConverter4();
        retrofit.client.Request request90 = serializedObjectSupporter87.deserializeObjectRequest4();
        retrofit.client.Request request91 = restAdapter85.logAndReplaceRequest(request90);
        retrofit.RestAdapter.RestHandler restHandler92 = restAdapter85.new RestHandler();
        retrofit.Server server93 = restAdapter85.getserver();
        retrofit.converter.Converter converter94 = restAdapter85.getconverter();
        retrofit.Server server95 = restAdapter85.server;
        retrofit.RestAdapter.LogLevel logLevel96 = restAdapter85.getLogLevel();
        retrofit.RestAdapter.Builder builder97 = builder48.setLogLevel(logLevel96);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(request15);
        org.junit.Assert.assertNotNull(gsonConverter16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(executor19);
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "http://example.com" + "'", str22, "http://example.com");
        org.junit.Assert.assertNotNull(request26);
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(provider31);
        org.junit.Assert.assertNotNull(request37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(request53);
        org.junit.Assert.assertNotNull(gsonConverter54);
        org.junit.Assert.assertNotNull(gsonConverter55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNull(executor57);
        org.junit.Assert.assertNotNull(server59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "http://example.com" + "'", str60, "http://example.com");
        org.junit.Assert.assertNotNull(request64);
        org.junit.Assert.assertNotNull(gsonConverter65);
        org.junit.Assert.assertNotNull(gsonConverter66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(provider69);
        org.junit.Assert.assertNotNull(request75);
        org.junit.Assert.assertNotNull(gsonConverter76);
        org.junit.Assert.assertNotNull(gsonConverter77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor86);
        org.junit.Assert.assertNotNull(request88);
        org.junit.Assert.assertNotNull(gsonConverter89);
        org.junit.Assert.assertNotNull(request90);
        org.junit.Assert.assertNotNull(request91);
        org.junit.Assert.assertNotNull(server93);
        org.junit.Assert.assertNotNull(converter94);
        org.junit.Assert.assertNotNull(server95);
        org.junit.Assert.assertTrue("'" + logLevel96 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel96.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder97);
    }

    @Test
    public void test231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test231");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        java.util.concurrent.Executor executor3 = null;
        builder2.sethttpExecutor(executor3);
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server6 = serializedObjectSupporter5.deserializeObjectServer1();
        retrofit.client.Request request7 = serializedObjectSupporter5.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler8 = serializedObjectSupporter5.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder9 = builder2.setErrorHandler(errorHandler8);
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request11 = serializedObjectSupporter10.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter10.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder13 = builder9.setConverter((retrofit.converter.Converter) gsonConverter12);
        java.util.concurrent.Executor executor14 = builder13.getcallbackExecutor();
        retrofit.client.Client client15 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder16 = builder13.setClient(client15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(server6);
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertNotNull(errorHandler8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNull(executor14);
    }

    @Test
    public void test232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test232");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor2 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.RequestInterceptor requestInterceptor3 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter4 = serializedObjectSupporter0.deserializeObjectLogLevel1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertNotNull(requestInterceptor2);
        org.junit.Assert.assertNotNull(requestInterceptor3);
    }

    @Test
    public void test233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test233");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = builder5.serializedObjectSupporter;
        retrofit.Profiler profiler7 = null;
        builder5.profiler = profiler7;
        builder5.ensureSaneDefaults();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
    }

    @Test
    public void test234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test234");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString5();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest3();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "POST" + "'", str2, "POST");
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertNotNull(request5);
    }

    @Test
    public void test235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test235");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder1 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder3 = builder1.setServer("hi!");
        retrofit.RestAdapter.Builder builder5 = builder3.setServer("hi!");
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request8 = serializedObjectSupporter7.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter7.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder11 = builder6.setConverter((retrofit.converter.Converter) gsonConverter10);
        java.util.concurrent.Executor executor12 = builder11.getcallbackExecutor();
        retrofit.Server server15 = new retrofit.Server("hi!", "default");
        builder11.server = server15;
        java.util.concurrent.Executor executor17 = null;
        builder11.sethttpExecutor(executor17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request21 = serializedObjectSupporter20.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter20.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder24 = builder19.setConverter((retrofit.converter.Converter) gsonConverter23);
        java.util.concurrent.Executor executor25 = builder24.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server27 = serializedObjectSupporter26.deserializeObjectServer1();
        java.lang.String str28 = server27.getUrl();
        builder24.server = server27;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request32 = serializedObjectSupporter31.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter34 = serializedObjectSupporter31.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder35 = builder30.setConverter((retrofit.converter.Converter) gsonConverter34);
        builder30.ensureSaneDefaults();
        retrofit.client.Client.Provider provider37 = builder30.clientProvider;
        java.util.concurrent.Executor executor38 = null;
        java.util.concurrent.Executor executor39 = null;
        retrofit.RequestInterceptor requestInterceptor40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request43 = serializedObjectSupporter42.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter44 = serializedObjectSupporter42.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter45 = serializedObjectSupporter42.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder46 = builder41.setConverter((retrofit.converter.Converter) gsonConverter45);
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        log49.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server27, provider37, executor38, executor39, requestInterceptor40, (retrofit.converter.Converter) gsonConverter45, profiler47, errorHandler48, log49, logLevel52);
        retrofit.RestAdapter.Builder builder54 = builder11.setClient(provider37);
        builder5.setclientProvider(provider37);
        retrofit.RestAdapter.Builder builder56 = builder0.setClient(provider37);
        retrofit.ErrorHandler errorHandler57 = builder56.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel58 = builder56.logLevel;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNull(executor12);
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com" + "'", str28, "http://example.com");
        org.junit.Assert.assertNotNull(request32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(gsonConverter34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(provider37);
        org.junit.Assert.assertNotNull(request43);
        org.junit.Assert.assertNotNull(gsonConverter44);
        org.junit.Assert.assertNotNull(gsonConverter45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNull(errorHandler57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test236");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString3 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.Server server6 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.mime.TypedString typedString7 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        retrofit.Server server8 = serializedObjectSupporter0.deserializeObjectServer1();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(typedString3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-" + "'", str4, "Retrofit-");
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(server6);
        org.junit.Assert.assertNotNull(typedString7);
        org.junit.Assert.assertNotNull(server8);
    }

    @Test
    public void test237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test237");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request5 = serializedObjectSupporter4.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter4.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter8();
        retrofit.client.Request request8 = serializedObjectSupporter4.deserializeObjectRequest5();
        retrofit.Server server9 = serializedObjectSupporter4.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder15 = builder10.setConverter((retrofit.converter.Converter) gsonConverter14);
        builder10.ensureSaneDefaults();
        retrofit.client.Client.Provider provider17 = builder10.clientProvider;
        java.util.concurrent.Executor executor18 = null;
        java.util.concurrent.Executor executor19 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server21 = serializedObjectSupporter20.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor22 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request25 = serializedObjectSupporter24.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter24.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter24.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder28 = builder23.setConverter((retrofit.converter.Converter) gsonConverter27);
        retrofit.Profiler profiler29 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server31 = serializedObjectSupporter30.deserializeObjectServer1();
        retrofit.client.Request request32 = serializedObjectSupporter30.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler33 = serializedObjectSupporter30.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        log34.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server9, provider17, executor18, executor19, requestInterceptor22, (retrofit.converter.Converter) gsonConverter27, profiler29, errorHandler33, log34, logLevel37);
        retrofit.RestAdapter.Builder builder39 = builder2.setClient(provider17);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request42 = serializedObjectSupporter41.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter41.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter44 = serializedObjectSupporter41.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder45 = builder40.setConverter((retrofit.converter.Converter) gsonConverter44);
        java.util.concurrent.Executor executor46 = builder45.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server48 = serializedObjectSupporter47.deserializeObjectServer1();
        java.lang.String str49 = server48.getUrl();
        builder45.server = server48;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request53 = serializedObjectSupporter52.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter54 = serializedObjectSupporter52.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter55 = serializedObjectSupporter52.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder56 = builder51.setConverter((retrofit.converter.Converter) gsonConverter55);
        builder51.ensureSaneDefaults();
        retrofit.client.Client.Provider provider58 = builder51.clientProvider;
        java.util.concurrent.Executor executor59 = null;
        java.util.concurrent.Executor executor60 = null;
        retrofit.RequestInterceptor requestInterceptor61 = null;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter63 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request64 = serializedObjectSupporter63.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter65 = serializedObjectSupporter63.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter66 = serializedObjectSupporter63.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder67 = builder62.setConverter((retrofit.converter.Converter) gsonConverter66);
        retrofit.Profiler profiler68 = null;
        retrofit.ErrorHandler errorHandler69 = null;
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        log70.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter74 = new retrofit.RestAdapter(server48, provider58, executor59, executor60, requestInterceptor61, (retrofit.converter.Converter) gsonConverter66, profiler68, errorHandler69, log70, logLevel73);
        retrofit.RestAdapter.Builder builder75 = builder2.setClient(provider58);
        retrofit.SerializedObjectSupporter serializedObjectSupporter76 = builder75.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter77 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler78 = serializedObjectSupporter77.deserializeObjectErrorHandler1();
        builder75.serializedObjectSupporter = serializedObjectSupporter77;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(provider17);
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNotNull(requestInterceptor22);
        org.junit.Assert.assertNotNull(request25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(server31);
        org.junit.Assert.assertNotNull(request32);
        org.junit.Assert.assertNotNull(errorHandler33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(request42);
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertNotNull(gsonConverter44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNull(executor46);
        org.junit.Assert.assertNotNull(server48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "http://example.com" + "'", str49, "http://example.com");
        org.junit.Assert.assertNotNull(request53);
        org.junit.Assert.assertNotNull(gsonConverter54);
        org.junit.Assert.assertNotNull(gsonConverter55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(provider58);
        org.junit.Assert.assertNotNull(request64);
        org.junit.Assert.assertNotNull(gsonConverter65);
        org.junit.Assert.assertNotNull(gsonConverter66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNull(serializedObjectSupporter76);
        org.junit.Assert.assertNotNull(errorHandler78);
    }

    @Test
    public void test238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test238");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.Server server3 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.Server server7 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str8 = server7.getUrl();
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(server7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com" + "'", str8, "http://example.com");
    }

    @Test
    public void test239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test239");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        builder0.logLevel = logLevel3;
        retrofit.ErrorHandler errorHandler5 = builder0.errorHandler;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(errorHandler5);
    }

    @Test
    public void test240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test240");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter7();
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
    }

    @Test
    public void test241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test241");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request5 = serializedObjectSupporter4.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter4.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter8();
        retrofit.client.Request request8 = serializedObjectSupporter4.deserializeObjectRequest5();
        retrofit.Server server9 = serializedObjectSupporter4.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder15 = builder10.setConverter((retrofit.converter.Converter) gsonConverter14);
        builder10.ensureSaneDefaults();
        retrofit.client.Client.Provider provider17 = builder10.clientProvider;
        java.util.concurrent.Executor executor18 = null;
        java.util.concurrent.Executor executor19 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server21 = serializedObjectSupporter20.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor22 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request25 = serializedObjectSupporter24.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter24.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter24.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder28 = builder23.setConverter((retrofit.converter.Converter) gsonConverter27);
        retrofit.Profiler profiler29 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server31 = serializedObjectSupporter30.deserializeObjectServer1();
        retrofit.client.Request request32 = serializedObjectSupporter30.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler33 = serializedObjectSupporter30.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        log34.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server9, provider17, executor18, executor19, requestInterceptor22, (retrofit.converter.Converter) gsonConverter27, profiler29, errorHandler33, log34, logLevel37);
        retrofit.RestAdapter.Builder builder39 = builder2.setClient(provider17);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request42 = serializedObjectSupporter41.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter41.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter44 = serializedObjectSupporter41.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder45 = builder40.setConverter((retrofit.converter.Converter) gsonConverter44);
        java.util.concurrent.Executor executor46 = builder45.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server48 = serializedObjectSupporter47.deserializeObjectServer1();
        java.lang.String str49 = server48.getUrl();
        builder45.server = server48;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request53 = serializedObjectSupporter52.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter54 = serializedObjectSupporter52.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter55 = serializedObjectSupporter52.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder56 = builder51.setConverter((retrofit.converter.Converter) gsonConverter55);
        builder51.ensureSaneDefaults();
        retrofit.client.Client.Provider provider58 = builder51.clientProvider;
        java.util.concurrent.Executor executor59 = null;
        java.util.concurrent.Executor executor60 = null;
        retrofit.RequestInterceptor requestInterceptor61 = null;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter63 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request64 = serializedObjectSupporter63.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter65 = serializedObjectSupporter63.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter66 = serializedObjectSupporter63.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder67 = builder62.setConverter((retrofit.converter.Converter) gsonConverter66);
        retrofit.Profiler profiler68 = null;
        retrofit.ErrorHandler errorHandler69 = null;
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        log70.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter74 = new retrofit.RestAdapter(server48, provider58, executor59, executor60, requestInterceptor61, (retrofit.converter.Converter) gsonConverter66, profiler68, errorHandler69, log70, logLevel73);
        retrofit.RestAdapter.Builder builder75 = builder2.setClient(provider58);
        retrofit.SerializedObjectSupporter serializedObjectSupporter76 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request77 = serializedObjectSupporter76.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter78 = serializedObjectSupporter76.deserializeObjectConverter5();
        builder2.serializedObjectSupporter = serializedObjectSupporter76;
        retrofit.client.Request request80 = serializedObjectSupporter76.deserializeObjectRequest4();
        retrofit.client.Request request81 = serializedObjectSupporter76.deserializeObjectRequest8();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter82 = serializedObjectSupporter76.deserializeObjectLogLevel1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(provider17);
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNotNull(requestInterceptor22);
        org.junit.Assert.assertNotNull(request25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(server31);
        org.junit.Assert.assertNotNull(request32);
        org.junit.Assert.assertNotNull(errorHandler33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(request42);
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertNotNull(gsonConverter44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNull(executor46);
        org.junit.Assert.assertNotNull(server48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "http://example.com" + "'", str49, "http://example.com");
        org.junit.Assert.assertNotNull(request53);
        org.junit.Assert.assertNotNull(gsonConverter54);
        org.junit.Assert.assertNotNull(gsonConverter55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(provider58);
        org.junit.Assert.assertNotNull(request64);
        org.junit.Assert.assertNotNull(gsonConverter65);
        org.junit.Assert.assertNotNull(gsonConverter66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(request77);
        org.junit.Assert.assertNotNull(gsonConverter78);
        org.junit.Assert.assertNotNull(request80);
        org.junit.Assert.assertNotNull(request81);
    }

    @Test
    public void test242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test242");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request4 = serializedObjectSupporter3.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter5();
        builder0.converter = gsonConverter5;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request8 = serializedObjectSupporter7.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter7.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString10 = serializedObjectSupporter7.deserializeObjectTypedOutput2();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString1();
        builder0.serializedObjectSupporter = serializedObjectSupporter7;
        java.util.concurrent.Executor executor13 = builder0.httpExecutor;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder16 = builder14.setServer("hi!");
        retrofit.RestAdapter.Builder builder18 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request21 = serializedObjectSupporter20.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter20.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder24 = builder19.setConverter((retrofit.converter.Converter) gsonConverter23);
        java.util.concurrent.Executor executor25 = builder24.getcallbackExecutor();
        retrofit.Server server28 = new retrofit.Server("hi!", "default");
        builder24.server = server28;
        java.util.concurrent.Executor executor30 = null;
        builder24.sethttpExecutor(executor30);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request34 = serializedObjectSupporter33.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter35 = serializedObjectSupporter33.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter33.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder37 = builder32.setConverter((retrofit.converter.Converter) gsonConverter36);
        java.util.concurrent.Executor executor38 = builder37.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server40 = serializedObjectSupporter39.deserializeObjectServer1();
        java.lang.String str41 = server40.getUrl();
        builder37.server = server40;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request45 = serializedObjectSupporter44.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter44.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter47 = serializedObjectSupporter44.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder48 = builder43.setConverter((retrofit.converter.Converter) gsonConverter47);
        builder43.ensureSaneDefaults();
        retrofit.client.Client.Provider provider50 = builder43.clientProvider;
        java.util.concurrent.Executor executor51 = null;
        java.util.concurrent.Executor executor52 = null;
        retrofit.RequestInterceptor requestInterceptor53 = null;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request56 = serializedObjectSupporter55.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter57 = serializedObjectSupporter55.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter58 = serializedObjectSupporter55.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder59 = builder54.setConverter((retrofit.converter.Converter) gsonConverter58);
        retrofit.Profiler profiler60 = null;
        retrofit.ErrorHandler errorHandler61 = null;
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        log62.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter(server40, provider50, executor51, executor52, requestInterceptor53, (retrofit.converter.Converter) gsonConverter58, profiler60, errorHandler61, log62, logLevel65);
        retrofit.RestAdapter.Builder builder67 = builder24.setClient(provider50);
        builder18.setclientProvider(provider50);
        retrofit.client.Client.Provider provider69 = builder18.getclientProvider();
        retrofit.RestAdapter.Builder builder70 = builder0.setClient(provider69);
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder72 = builder70.setLogLevel(logLevel71);
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder75 = builder73.setServer("hi!");
        retrofit.RestAdapter.Log log76 = retrofit.RestAdapter.Log.NONE;
        log76.log("hi!");
        builder73.log = log76;
        builder72.log = log76;
        retrofit.converter.Converter converter81 = null;
        builder72.converter = converter81;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(typedString10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-" + "'", str11, "Retrofit-");
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNotNull(request34);
        org.junit.Assert.assertNotNull(gsonConverter35);
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(executor38);
        org.junit.Assert.assertNotNull(server40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "http://example.com" + "'", str41, "http://example.com");
        org.junit.Assert.assertNotNull(request45);
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNotNull(gsonConverter47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(provider50);
        org.junit.Assert.assertNotNull(request56);
        org.junit.Assert.assertNotNull(gsonConverter57);
        org.junit.Assert.assertNotNull(gsonConverter58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(provider69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(log76);
    }

    @Test
    public void test243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test243");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("hi!");
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request44 = serializedObjectSupporter43.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter45 = serializedObjectSupporter43.deserializeObjectConverter5();
        builder40.converter = gsonConverter45;
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request48 = serializedObjectSupporter47.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter49 = serializedObjectSupporter47.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString50 = serializedObjectSupporter47.deserializeObjectTypedOutput2();
        java.lang.String str51 = serializedObjectSupporter47.deserializeObjectString1();
        builder40.serializedObjectSupporter = serializedObjectSupporter47;
        retrofit.Server server53 = serializedObjectSupporter47.deserializeObjectServer1();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter47;
        retrofit.converter.GsonConverter gsonConverter55 = serializedObjectSupporter47.deserializeObjectConverter8();
        retrofit.client.Request request56 = serializedObjectSupporter47.deserializeObjectRequest8();
        java.lang.String str57 = serializedObjectSupporter47.deserializeObjectString4();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(request44);
        org.junit.Assert.assertNotNull(gsonConverter45);
        org.junit.Assert.assertNotNull(request48);
        org.junit.Assert.assertNotNull(gsonConverter49);
        org.junit.Assert.assertNotNull(typedString50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Retrofit-" + "'", str51, "Retrofit-");
        org.junit.Assert.assertNotNull(server53);
        org.junit.Assert.assertNotNull(gsonConverter55);
        org.junit.Assert.assertNotNull(request56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "http://example.com/" + "'", str57, "http://example.com/");
    }

    @Test
    public void test244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test244");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request4 = serializedObjectSupporter3.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter5();
        builder0.converter = gsonConverter5;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request8 = serializedObjectSupporter7.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter7.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString10 = serializedObjectSupporter7.deserializeObjectTypedOutput2();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString1();
        builder0.serializedObjectSupporter = serializedObjectSupporter7;
        java.util.concurrent.Executor executor13 = builder0.httpExecutor;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder16 = builder14.setServer("hi!");
        retrofit.RestAdapter.Builder builder18 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request21 = serializedObjectSupporter20.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter20.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder24 = builder19.setConverter((retrofit.converter.Converter) gsonConverter23);
        java.util.concurrent.Executor executor25 = builder24.getcallbackExecutor();
        retrofit.Server server28 = new retrofit.Server("hi!", "default");
        builder24.server = server28;
        java.util.concurrent.Executor executor30 = null;
        builder24.sethttpExecutor(executor30);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request34 = serializedObjectSupporter33.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter35 = serializedObjectSupporter33.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter33.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder37 = builder32.setConverter((retrofit.converter.Converter) gsonConverter36);
        java.util.concurrent.Executor executor38 = builder37.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server40 = serializedObjectSupporter39.deserializeObjectServer1();
        java.lang.String str41 = server40.getUrl();
        builder37.server = server40;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request45 = serializedObjectSupporter44.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter44.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter47 = serializedObjectSupporter44.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder48 = builder43.setConverter((retrofit.converter.Converter) gsonConverter47);
        builder43.ensureSaneDefaults();
        retrofit.client.Client.Provider provider50 = builder43.clientProvider;
        java.util.concurrent.Executor executor51 = null;
        java.util.concurrent.Executor executor52 = null;
        retrofit.RequestInterceptor requestInterceptor53 = null;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request56 = serializedObjectSupporter55.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter57 = serializedObjectSupporter55.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter58 = serializedObjectSupporter55.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder59 = builder54.setConverter((retrofit.converter.Converter) gsonConverter58);
        retrofit.Profiler profiler60 = null;
        retrofit.ErrorHandler errorHandler61 = null;
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        log62.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter(server40, provider50, executor51, executor52, requestInterceptor53, (retrofit.converter.Converter) gsonConverter58, profiler60, errorHandler61, log62, logLevel65);
        retrofit.RestAdapter.Builder builder67 = builder24.setClient(provider50);
        builder18.setclientProvider(provider50);
        retrofit.client.Client.Provider provider69 = builder18.getclientProvider();
        retrofit.RestAdapter.Builder builder70 = builder0.setClient(provider69);
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder72 = builder70.setLogLevel(logLevel71);
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder75 = builder73.setServer("hi!");
        retrofit.RestAdapter.Log log76 = retrofit.RestAdapter.Log.NONE;
        log76.log("hi!");
        builder73.log = log76;
        builder72.log = log76;
        log76.log("default");
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(typedString10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-" + "'", str11, "Retrofit-");
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNotNull(request34);
        org.junit.Assert.assertNotNull(gsonConverter35);
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(executor38);
        org.junit.Assert.assertNotNull(server40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "http://example.com" + "'", str41, "http://example.com");
        org.junit.Assert.assertNotNull(request45);
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNotNull(gsonConverter47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(provider50);
        org.junit.Assert.assertNotNull(request56);
        org.junit.Assert.assertNotNull(gsonConverter57);
        org.junit.Assert.assertNotNull(gsonConverter58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(provider69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(log76);
    }

    @Test
    public void test245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test245");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = builder5.serializedObjectSupporter;
        java.util.concurrent.Executor executor7 = builder5.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server9 = serializedObjectSupporter8.deserializeObjectServer1();
        retrofit.client.Request request10 = serializedObjectSupporter8.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler11 = serializedObjectSupporter8.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder12 = builder5.setErrorHandler(errorHandler11);
        java.util.concurrent.Executor executor13 = builder5.getcallbackExecutor();
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request16 = serializedObjectSupporter15.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter15.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder19 = builder14.setConverter((retrofit.converter.Converter) gsonConverter18);
        java.util.concurrent.Executor executor20 = builder19.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server22 = serializedObjectSupporter21.deserializeObjectServer1();
        java.lang.String str23 = server22.getUrl();
        builder19.server = server22;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request27 = serializedObjectSupporter26.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter26.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder30 = builder25.setConverter((retrofit.converter.Converter) gsonConverter29);
        builder25.ensureSaneDefaults();
        retrofit.client.Client.Provider provider32 = builder25.clientProvider;
        java.util.concurrent.Executor executor33 = null;
        java.util.concurrent.Executor executor34 = null;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request38 = serializedObjectSupporter37.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter37.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter40 = serializedObjectSupporter37.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder41 = builder36.setConverter((retrofit.converter.Converter) gsonConverter40);
        retrofit.Profiler profiler42 = null;
        retrofit.ErrorHandler errorHandler43 = null;
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        log44.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server22, provider32, executor33, executor34, requestInterceptor35, (retrofit.converter.Converter) gsonConverter40, profiler42, errorHandler43, log44, logLevel47);
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request50 = serializedObjectSupporter49.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter51 = serializedObjectSupporter49.deserializeObjectConverter4();
        retrofit.client.Request request52 = serializedObjectSupporter49.deserializeObjectRequest7();
        restAdapter48.serializedObjectSupporter = serializedObjectSupporter49;
        java.util.concurrent.Executor executor54 = restAdapter48.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = restAdapter48.serializedObjectSupporter;
        java.lang.String str56 = serializedObjectSupporter55.deserializeObjectString2();
        retrofit.converter.GsonConverter gsonConverter57 = serializedObjectSupporter55.deserializeObjectConverter3();
        retrofit.RequestInterceptor requestInterceptor58 = serializedObjectSupporter55.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder59 = builder5.setRequestInterceptor(requestInterceptor58);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertNotNull(errorHandler11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNull(executor20);
        org.junit.Assert.assertNotNull(server22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "http://example.com" + "'", str23, "http://example.com");
        org.junit.Assert.assertNotNull(request27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(provider32);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertNotNull(gsonConverter40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request50);
        org.junit.Assert.assertNotNull(gsonConverter51);
        org.junit.Assert.assertNotNull(request52);
        org.junit.Assert.assertNull(executor54);
        org.junit.Assert.assertNotNull(serializedObjectSupporter55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Retrofit-Idle" + "'", str56, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(gsonConverter57);
        org.junit.Assert.assertNotNull(requestInterceptor58);
        org.junit.Assert.assertNotNull(builder59);
    }

    @Test
    public void test246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test246");
        retrofit.Server server2 = new retrofit.Server("GET", "POST");
    }

    @Test
    public void test247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test247");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("hi!");
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request44 = serializedObjectSupporter43.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter45 = serializedObjectSupporter43.deserializeObjectConverter5();
        builder40.converter = gsonConverter45;
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request48 = serializedObjectSupporter47.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter49 = serializedObjectSupporter47.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString50 = serializedObjectSupporter47.deserializeObjectTypedOutput2();
        java.lang.String str51 = serializedObjectSupporter47.deserializeObjectString1();
        builder40.serializedObjectSupporter = serializedObjectSupporter47;
        retrofit.Server server53 = serializedObjectSupporter47.deserializeObjectServer1();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter47;
        retrofit.converter.GsonConverter gsonConverter55 = serializedObjectSupporter47.deserializeObjectConverter8();
        java.lang.String str56 = serializedObjectSupporter47.deserializeObjectString4();
        retrofit.client.Request request57 = serializedObjectSupporter47.deserializeObjectRequest7();
        java.util.List<retrofit.client.Header> headerList58 = request57.headers;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(request44);
        org.junit.Assert.assertNotNull(gsonConverter45);
        org.junit.Assert.assertNotNull(request48);
        org.junit.Assert.assertNotNull(gsonConverter49);
        org.junit.Assert.assertNotNull(typedString50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Retrofit-" + "'", str51, "Retrofit-");
        org.junit.Assert.assertNotNull(server53);
        org.junit.Assert.assertNotNull(gsonConverter55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "http://example.com/" + "'", str56, "http://example.com/");
        org.junit.Assert.assertNotNull(request57);
        org.junit.Assert.assertNotNull(headerList58);
    }

    @Test
    public void test248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test248");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request4 = serializedObjectSupporter3.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter5();
        builder0.converter = gsonConverter5;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request8 = serializedObjectSupporter7.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter7.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString10 = serializedObjectSupporter7.deserializeObjectTypedOutput2();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString1();
        builder0.serializedObjectSupporter = serializedObjectSupporter7;
        java.lang.String str13 = serializedObjectSupporter7.deserializeObjectString2();
        retrofit.client.Request request14 = serializedObjectSupporter7.deserializeObjectRequest4();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(typedString10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-" + "'", str11, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(request14);
    }

    @Test
    public void test249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test249");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter1();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter3 = serializedObjectSupporter0.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertNotNull(gsonConverter2);
    }

    @Test
    public void test250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test250");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        java.util.concurrent.Executor executor42 = restAdapter34.getcallbackExecutor();
        retrofit.RestAdapter.RestHandler restHandler43 = restAdapter34.new RestHandler();
        retrofit.converter.Converter converter44 = restAdapter34.getconverter();
        retrofit.client.Client.Provider provider45 = restAdapter34.clientProvider;
        retrofit.client.Header[] headerArray52 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList53 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList53, headerArray52);
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request56 = serializedObjectSupporter55.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter57 = serializedObjectSupporter55.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString58 = serializedObjectSupporter55.deserializeObjectTypedOutput2();
        retrofit.client.Request request59 = new retrofit.client.Request("http://example.com/", "Retrofit-", (java.util.List<retrofit.client.Header>) headerList53, (retrofit.mime.TypedOutput) typedString58);
        retrofit.client.Header[] headerArray62 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList63 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList63, headerArray62);
        retrofit.client.Header[] headerArray67 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList68 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList68, headerArray67);
        retrofit.SerializedObjectSupporter serializedObjectSupporter70 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request71 = serializedObjectSupporter70.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter72 = serializedObjectSupporter70.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString73 = serializedObjectSupporter70.deserializeObjectTypedOutput2();
        retrofit.client.Request request74 = new retrofit.client.Request("http://example.com/", "Retrofit-", (java.util.List<retrofit.client.Header>) headerList68, (retrofit.mime.TypedOutput) typedString73);
        retrofit.client.Request request75 = new retrofit.client.Request("Retrofit-", "default", (java.util.List<retrofit.client.Header>) headerList63, (retrofit.mime.TypedOutput) typedString73);
        retrofit.mime.TypedOutput typedOutput76 = request75.body;
        retrofit.client.Request request77 = new retrofit.client.Request("http://example.com", "http://example.com/", (java.util.List<retrofit.client.Header>) headerList53, typedOutput76);
        retrofit.SerializedObjectSupporter serializedObjectSupporter78 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request79 = serializedObjectSupporter78.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter80 = serializedObjectSupporter78.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString81 = serializedObjectSupporter78.deserializeObjectTypedOutput2();
        java.lang.String str82 = serializedObjectSupporter78.deserializeObjectString1();
        retrofit.converter.GsonConverter gsonConverter83 = serializedObjectSupporter78.deserializeObjectConverter5();
        retrofit.Server server84 = serializedObjectSupporter78.deserializeObjectServer1();
        retrofit.mime.TypedString typedString85 = serializedObjectSupporter78.deserializeObjectTypedOutput2();
        retrofit.client.Request request86 = new retrofit.client.Request("http://example.com", "Retrofit-", (java.util.List<retrofit.client.Header>) headerList53, (retrofit.mime.TypedOutput) typedString85);
        retrofit.client.Request request87 = restAdapter34.logAndReplaceRequest(request86);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertNotNull(converter44);
        org.junit.Assert.assertNotNull(provider45);
        org.junit.Assert.assertNotNull(headerArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(request56);
        org.junit.Assert.assertNotNull(gsonConverter57);
        org.junit.Assert.assertNotNull(typedString58);
        org.junit.Assert.assertNotNull(headerArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(headerArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(request71);
        org.junit.Assert.assertNotNull(gsonConverter72);
        org.junit.Assert.assertNotNull(typedString73);
        org.junit.Assert.assertNotNull(typedOutput76);
        org.junit.Assert.assertNotNull(request79);
        org.junit.Assert.assertNotNull(gsonConverter80);
        org.junit.Assert.assertNotNull(typedString81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Retrofit-" + "'", str82, "Retrofit-");
        org.junit.Assert.assertNotNull(gsonConverter83);
        org.junit.Assert.assertNotNull(server84);
        org.junit.Assert.assertNotNull(typedString85);
        org.junit.Assert.assertNotNull(request87);
    }

    @Test
    public void test251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test251");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.Server server3 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.Server server6 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request7 = serializedObjectSupporter0.deserializeObjectRequest6();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter8 = serializedObjectSupporter0.deserializeObjectLogLevel2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(server6);
        org.junit.Assert.assertNotNull(request7);
    }

    @Test
    public void test252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test252");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request4 = serializedObjectSupporter3.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter5();
        builder0.converter = gsonConverter5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request9 = serializedObjectSupporter8.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter8.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter8.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder12 = builder7.setConverter((retrofit.converter.Converter) gsonConverter11);
        java.util.concurrent.Executor executor13 = builder12.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server15 = serializedObjectSupporter14.deserializeObjectServer1();
        java.lang.String str16 = server15.getUrl();
        builder12.server = server15;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request20 = serializedObjectSupporter19.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter19.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter19.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder23 = builder18.setConverter((retrofit.converter.Converter) gsonConverter22);
        builder18.ensureSaneDefaults();
        retrofit.client.Client.Provider provider25 = builder18.clientProvider;
        java.util.concurrent.Executor executor26 = null;
        java.util.concurrent.Executor executor27 = null;
        retrofit.RequestInterceptor requestInterceptor28 = null;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request31 = serializedObjectSupporter30.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter32 = serializedObjectSupporter30.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter30.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder34 = builder29.setConverter((retrofit.converter.Converter) gsonConverter33);
        retrofit.Profiler profiler35 = null;
        retrofit.ErrorHandler errorHandler36 = null;
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        log37.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter(server15, provider25, executor26, executor27, requestInterceptor28, (retrofit.converter.Converter) gsonConverter33, profiler35, errorHandler36, log37, logLevel40);
        java.util.concurrent.Executor executor42 = restAdapter41.getcallbackExecutor();
        retrofit.RestAdapter.Log log43 = restAdapter41.log;
        builder0.log = log43;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(request9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNotNull(server15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com" + "'", str16, "http://example.com");
        org.junit.Assert.assertNotNull(request20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(provider25);
        org.junit.Assert.assertNotNull(request31);
        org.junit.Assert.assertNotNull(gsonConverter32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertNotNull(log43);
    }

    @Test
    public void test253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test253");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.Server server3 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str4 = server3.name;
        java.lang.String str5 = server3.getDEFAULT_NAME();
        java.lang.String str6 = server3.getDEFAULT_NAME();
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "default" + "'", str4, "default");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "default" + "'", str5, "default");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "default" + "'", str6, "default");
    }

    @Test
    public void test254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test254");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        java.util.concurrent.Executor executor3 = null;
        builder2.sethttpExecutor(executor3);
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server6 = serializedObjectSupporter5.deserializeObjectServer1();
        retrofit.client.Request request7 = serializedObjectSupporter5.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler8 = serializedObjectSupporter5.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder9 = builder2.setErrorHandler(errorHandler8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("hi!");
        retrofit.RestAdapter.Builder builder14 = builder10.setServer("default");
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.HEADERS;
        builder14.logLevel = logLevel15;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request19 = serializedObjectSupporter18.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter18.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter18.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder22 = builder17.setConverter((retrofit.converter.Converter) gsonConverter21);
        java.util.concurrent.Executor executor23 = builder22.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server25 = serializedObjectSupporter24.deserializeObjectServer1();
        java.lang.String str26 = server25.getUrl();
        builder22.server = server25;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request30 = serializedObjectSupporter29.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter32 = serializedObjectSupporter29.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder33 = builder28.setConverter((retrofit.converter.Converter) gsonConverter32);
        builder28.ensureSaneDefaults();
        retrofit.client.Client.Provider provider35 = builder28.clientProvider;
        java.util.concurrent.Executor executor36 = null;
        java.util.concurrent.Executor executor37 = null;
        retrofit.RequestInterceptor requestInterceptor38 = null;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request41 = serializedObjectSupporter40.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter42 = serializedObjectSupporter40.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter40.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder44 = builder39.setConverter((retrofit.converter.Converter) gsonConverter43);
        retrofit.Profiler profiler45 = null;
        retrofit.ErrorHandler errorHandler46 = null;
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        log47.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter(server25, provider35, executor36, executor37, requestInterceptor38, (retrofit.converter.Converter) gsonConverter43, profiler45, errorHandler46, log47, logLevel50);
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request53 = serializedObjectSupporter52.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter54 = serializedObjectSupporter52.deserializeObjectConverter4();
        retrofit.client.Request request55 = serializedObjectSupporter52.deserializeObjectRequest7();
        restAdapter51.serializedObjectSupporter = serializedObjectSupporter52;
        java.util.concurrent.Executor executor57 = restAdapter51.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = restAdapter51.serializedObjectSupporter;
        retrofit.converter.GsonConverter gsonConverter59 = serializedObjectSupporter58.deserializeObjectConverter2();
        retrofit.RestAdapter.Builder builder60 = builder14.setConverter((retrofit.converter.Converter) gsonConverter59);
        retrofit.RestAdapter.LogLevel logLevel61 = builder60.logLevel;
        retrofit.RestAdapter.Log log62 = builder60.log;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder65 = builder63.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.BASIC;
        builder63.logLevel = logLevel66;
        retrofit.client.Client.Provider provider68 = builder63.clientProvider;
        java.util.concurrent.Executor executor69 = null;
        builder63.setcallbackExecutor(executor69);
        retrofit.SerializedObjectSupporter serializedObjectSupporter71 = new retrofit.SerializedObjectSupporter();
        retrofit.converter.GsonConverter gsonConverter72 = serializedObjectSupporter71.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder73 = builder63.setConverter((retrofit.converter.Converter) gsonConverter72);
        retrofit.Profiler profiler74 = builder73.profiler;
        retrofit.RequestInterceptor requestInterceptor75 = builder73.requestInterceptor;
        retrofit.Profiler profiler76 = null;
        builder73.profiler = profiler76;
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter79 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request80 = serializedObjectSupporter79.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter81 = serializedObjectSupporter79.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter82 = serializedObjectSupporter79.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder83 = builder78.setConverter((retrofit.converter.Converter) gsonConverter82);
        retrofit.SerializedObjectSupporter serializedObjectSupporter84 = builder83.serializedObjectSupporter;
        java.util.concurrent.Executor executor85 = builder83.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter86 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server87 = serializedObjectSupporter86.deserializeObjectServer1();
        retrofit.client.Request request88 = serializedObjectSupporter86.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler89 = serializedObjectSupporter86.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder90 = builder83.setErrorHandler(errorHandler89);
        builder90.ensureSaneDefaults();
        java.util.concurrent.Executor executor92 = builder90.getcallbackExecutor();
        builder73.setcallbackExecutor(executor92);
        builder60.setcallbackExecutor(executor92);
        builder9.setcallbackExecutor(executor92);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(server6);
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertNotNull(errorHandler8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(request19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNull(executor23);
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "http://example.com" + "'", str26, "http://example.com");
        org.junit.Assert.assertNotNull(request30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(gsonConverter32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(provider35);
        org.junit.Assert.assertNotNull(request41);
        org.junit.Assert.assertNotNull(gsonConverter42);
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request53);
        org.junit.Assert.assertNotNull(gsonConverter54);
        org.junit.Assert.assertNotNull(request55);
        org.junit.Assert.assertNull(executor57);
        org.junit.Assert.assertNotNull(serializedObjectSupporter58);
        org.junit.Assert.assertNotNull(gsonConverter59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(log62);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(provider68);
        org.junit.Assert.assertNotNull(gsonConverter72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNull(profiler74);
        org.junit.Assert.assertNull(requestInterceptor75);
        org.junit.Assert.assertNotNull(request80);
        org.junit.Assert.assertNotNull(gsonConverter81);
        org.junit.Assert.assertNotNull(gsonConverter82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNull(serializedObjectSupporter84);
        org.junit.Assert.assertNull(executor85);
        org.junit.Assert.assertNotNull(server87);
        org.junit.Assert.assertNotNull(request88);
        org.junit.Assert.assertNotNull(errorHandler89);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(executor92);
    }

    @Test
    public void test255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test255");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter4();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertNotNull(gsonConverter6);
    }

    @Test
    public void test256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test256");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.client.Client.Provider provider35 = restAdapter34.clientProvider;
        java.lang.String str36 = restAdapter34.getTHREAD_PREFIX();
        retrofit.ErrorHandler errorHandler37 = restAdapter34.geterrorHandler();
        retrofit.RestAdapter.RestHandler restHandler38 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder41 = builder39.setServer("hi!");
        java.util.concurrent.Executor executor42 = null;
        builder41.sethttpExecutor(executor42);
        retrofit.Server server44 = builder41.server;
        retrofit.RestAdapter.LogLevel logLevel45 = builder41.logLevel;
        restAdapter34.logLevel = logLevel45;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(provider35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Retrofit-" + "'", str36, "Retrofit-");
        org.junit.Assert.assertNull(errorHandler37);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(server44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test257");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.client.Client.Provider provider35 = restAdapter34.clientProvider;
        java.util.concurrent.Executor executor36 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request38 = serializedObjectSupporter37.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter37.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter40 = serializedObjectSupporter37.deserializeObjectConverter8();
        retrofit.client.Request request41 = serializedObjectSupporter37.deserializeObjectRequest5();
        retrofit.Server server42 = serializedObjectSupporter37.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request45 = serializedObjectSupporter44.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter44.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter47 = serializedObjectSupporter44.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder48 = builder43.setConverter((retrofit.converter.Converter) gsonConverter47);
        builder43.ensureSaneDefaults();
        retrofit.client.Client.Provider provider50 = builder43.clientProvider;
        java.util.concurrent.Executor executor51 = null;
        java.util.concurrent.Executor executor52 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter53 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server54 = serializedObjectSupporter53.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor55 = serializedObjectSupporter53.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter57 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request58 = serializedObjectSupporter57.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter59 = serializedObjectSupporter57.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter60 = serializedObjectSupporter57.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder61 = builder56.setConverter((retrofit.converter.Converter) gsonConverter60);
        retrofit.Profiler profiler62 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter63 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server64 = serializedObjectSupporter63.deserializeObjectServer1();
        retrofit.client.Request request65 = serializedObjectSupporter63.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler66 = serializedObjectSupporter63.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        log67.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter71 = new retrofit.RestAdapter(server42, provider50, executor51, executor52, requestInterceptor55, (retrofit.converter.Converter) gsonConverter60, profiler62, errorHandler66, log67, logLevel70);
        boolean boolean72 = logLevel70.log();
        restAdapter34.logLevel = logLevel70;
        java.util.concurrent.Executor executor74 = restAdapter34.callbackExecutor;
        java.lang.Throwable throwable75 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter34.logException(throwable75, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(provider35);
        org.junit.Assert.assertNull(executor36);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertNotNull(gsonConverter40);
        org.junit.Assert.assertNotNull(request41);
        org.junit.Assert.assertNotNull(server42);
        org.junit.Assert.assertNotNull(request45);
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNotNull(gsonConverter47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(provider50);
        org.junit.Assert.assertNotNull(server54);
        org.junit.Assert.assertNotNull(requestInterceptor55);
        org.junit.Assert.assertNotNull(request58);
        org.junit.Assert.assertNotNull(gsonConverter59);
        org.junit.Assert.assertNotNull(gsonConverter60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(server64);
        org.junit.Assert.assertNotNull(request65);
        org.junit.Assert.assertNotNull(errorHandler66);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(executor74);
    }

    @Test
    public void test258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test258");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.client.Client.Provider provider7 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request10 = serializedObjectSupporter9.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder13 = builder8.setConverter((retrofit.converter.Converter) gsonConverter12);
        java.util.concurrent.Executor executor14 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server16 = serializedObjectSupporter15.deserializeObjectServer1();
        java.lang.String str17 = server16.getUrl();
        builder13.server = server16;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request21 = serializedObjectSupporter20.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter20.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder24 = builder19.setConverter((retrofit.converter.Converter) gsonConverter23);
        builder19.ensureSaneDefaults();
        retrofit.client.Client.Provider provider26 = builder19.clientProvider;
        java.util.concurrent.Executor executor27 = null;
        java.util.concurrent.Executor executor28 = null;
        retrofit.RequestInterceptor requestInterceptor29 = null;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request32 = serializedObjectSupporter31.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter34 = serializedObjectSupporter31.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder35 = builder30.setConverter((retrofit.converter.Converter) gsonConverter34);
        retrofit.Profiler profiler36 = null;
        retrofit.ErrorHandler errorHandler37 = null;
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        log38.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter(server16, provider26, executor27, executor28, requestInterceptor29, (retrofit.converter.Converter) gsonConverter34, profiler36, errorHandler37, log38, logLevel41);
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request44 = serializedObjectSupporter43.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter45 = serializedObjectSupporter43.deserializeObjectConverter4();
        retrofit.client.Request request46 = serializedObjectSupporter43.deserializeObjectRequest7();
        restAdapter42.serializedObjectSupporter = serializedObjectSupporter43;
        java.util.concurrent.Executor executor48 = restAdapter42.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = restAdapter42.serializedObjectSupporter;
        java.lang.String str50 = serializedObjectSupporter49.deserializeObjectString2();
        retrofit.converter.GsonConverter gsonConverter51 = serializedObjectSupporter49.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter52 = serializedObjectSupporter49.deserializeObjectConverter3();
        builder0.converter = gsonConverter52;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(provider7);
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNull(executor14);
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "http://example.com" + "'", str17, "http://example.com");
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(provider26);
        org.junit.Assert.assertNotNull(request32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(gsonConverter34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request44);
        org.junit.Assert.assertNotNull(gsonConverter45);
        org.junit.Assert.assertNotNull(request46);
        org.junit.Assert.assertNull(executor48);
        org.junit.Assert.assertNotNull(serializedObjectSupporter49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Retrofit-Idle" + "'", str50, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(gsonConverter51);
        org.junit.Assert.assertNotNull(gsonConverter52);
    }

    @Test
    public void test259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test259");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler3 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest8();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString4();
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(errorHandler3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
    }

    @Test
    public void test260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test260");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = builder5.serializedObjectSupporter;
        java.util.concurrent.Executor executor7 = builder5.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server9 = serializedObjectSupporter8.deserializeObjectServer1();
        retrofit.client.Request request10 = serializedObjectSupporter8.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler11 = serializedObjectSupporter8.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder12 = builder5.setErrorHandler(errorHandler11);
        retrofit.RestAdapter.LogLevel logLevel13 = builder12.logLevel;
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request15 = serializedObjectSupporter14.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter16 = serializedObjectSupporter14.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString17 = serializedObjectSupporter14.deserializeObjectTypedOutput2();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter14.deserializeObjectConverter8();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter14.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder20 = builder12.setConverter((retrofit.converter.Converter) gsonConverter19);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertNotNull(errorHandler11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(request15);
        org.junit.Assert.assertNotNull(gsonConverter16);
        org.junit.Assert.assertNotNull(typedString17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test261");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        java.util.concurrent.Executor executor42 = restAdapter34.getcallbackExecutor();
        java.lang.String str43 = restAdapter34.getIDLE_THREAD_NAME();
        retrofit.RestAdapter.RestHandler restHandler44 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request47 = serializedObjectSupporter46.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter48 = serializedObjectSupporter46.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter49 = serializedObjectSupporter46.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder50 = builder45.setConverter((retrofit.converter.Converter) gsonConverter49);
        java.util.concurrent.Executor executor51 = builder50.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server53 = serializedObjectSupporter52.deserializeObjectServer1();
        java.lang.String str54 = server53.getUrl();
        builder50.server = server53;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter57 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request58 = serializedObjectSupporter57.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter59 = serializedObjectSupporter57.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter60 = serializedObjectSupporter57.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder61 = builder56.setConverter((retrofit.converter.Converter) gsonConverter60);
        builder56.ensureSaneDefaults();
        retrofit.client.Client.Provider provider63 = builder56.clientProvider;
        java.util.concurrent.Executor executor64 = null;
        java.util.concurrent.Executor executor65 = null;
        retrofit.RequestInterceptor requestInterceptor66 = null;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter68 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request69 = serializedObjectSupporter68.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter70 = serializedObjectSupporter68.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter71 = serializedObjectSupporter68.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder72 = builder67.setConverter((retrofit.converter.Converter) gsonConverter71);
        retrofit.Profiler profiler73 = null;
        retrofit.ErrorHandler errorHandler74 = null;
        retrofit.RestAdapter.Log log75 = retrofit.RestAdapter.Log.NONE;
        log75.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter79 = new retrofit.RestAdapter(server53, provider63, executor64, executor65, requestInterceptor66, (retrofit.converter.Converter) gsonConverter71, profiler73, errorHandler74, log75, logLevel78);
        retrofit.SerializedObjectSupporter serializedObjectSupporter80 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request81 = serializedObjectSupporter80.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter82 = serializedObjectSupporter80.deserializeObjectConverter4();
        retrofit.client.Request request83 = serializedObjectSupporter80.deserializeObjectRequest7();
        restAdapter79.serializedObjectSupporter = serializedObjectSupporter80;
        java.util.concurrent.Executor executor85 = restAdapter79.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter86 = restAdapter79.serializedObjectSupporter;
        java.util.concurrent.Executor executor87 = restAdapter79.getcallbackExecutor();
        java.lang.reflect.Method method88 = null;
        java.lang.Object[] objArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj90 = restHandler44.invoke((java.lang.Object) executor87, method88, objArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Retrofit-Idle" + "'", str43, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(request47);
        org.junit.Assert.assertNotNull(gsonConverter48);
        org.junit.Assert.assertNotNull(gsonConverter49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(executor51);
        org.junit.Assert.assertNotNull(server53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "http://example.com" + "'", str54, "http://example.com");
        org.junit.Assert.assertNotNull(request58);
        org.junit.Assert.assertNotNull(gsonConverter59);
        org.junit.Assert.assertNotNull(gsonConverter60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(provider63);
        org.junit.Assert.assertNotNull(request69);
        org.junit.Assert.assertNotNull(gsonConverter70);
        org.junit.Assert.assertNotNull(gsonConverter71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log75);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request81);
        org.junit.Assert.assertNotNull(gsonConverter82);
        org.junit.Assert.assertNotNull(request83);
        org.junit.Assert.assertNull(executor85);
        org.junit.Assert.assertNotNull(serializedObjectSupporter86);
        org.junit.Assert.assertNull(executor87);
    }

    @Test
    public void test262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test262");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        java.lang.String str42 = serializedObjectSupporter41.deserializeObjectString2();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter41.deserializeObjectConverter3();
        retrofit.RequestInterceptor requestInterceptor44 = serializedObjectSupporter41.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter45 = serializedObjectSupporter41.deserializeObjectConverter7();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Retrofit-Idle" + "'", str42, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertNotNull(requestInterceptor44);
        org.junit.Assert.assertNotNull(gsonConverter45);
    }

    @Test
    public void test263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test263");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.client.Client.Provider provider4 = null;
        builder2.clientProvider = provider4;
        retrofit.ErrorHandler errorHandler6 = builder2.errorHandler;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(errorHandler6);
    }

    @Test
    public void test264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test264");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        java.lang.String str42 = serializedObjectSupporter41.deserializeObjectString2();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter41.deserializeObjectConverter3();
        retrofit.RequestInterceptor requestInterceptor44 = serializedObjectSupporter41.deserializeObjectRequestInterceptor1();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter45 = serializedObjectSupporter41.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Retrofit-Idle" + "'", str42, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertNotNull(requestInterceptor44);
    }

    @Test
    public void test265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test265");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request6 = serializedObjectSupporter5.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter5.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString8 = serializedObjectSupporter5.deserializeObjectTypedOutput2();
        retrofit.client.Request request9 = new retrofit.client.Request("http://example.com/", "Retrofit-", (java.util.List<retrofit.client.Header>) headerList3, (retrofit.mime.TypedOutput) typedString8);
        java.util.List<retrofit.client.Header> headerList10 = request9.headers;
        retrofit.mime.TypedOutput typedOutput11 = request9.getBody();
        java.util.List<retrofit.client.Header> headerList12 = request9.headers;
        java.lang.String str13 = request9.getUrl();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(typedString8);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(typedOutput11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-" + "'", str13, "Retrofit-");
    }

    @Test
    public void test266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test266");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = null;
        restAdapter34.setLogLevel(logLevel35);
        java.util.concurrent.Executor executor37 = restAdapter34.gethttpExecutor();
        retrofit.converter.Converter converter38 = restAdapter34.converter;
        retrofit.RestAdapter.RestHandler restHandler39 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request42 = serializedObjectSupporter41.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter41.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter44 = serializedObjectSupporter41.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder45 = builder40.setConverter((retrofit.converter.Converter) gsonConverter44);
        java.util.concurrent.Executor executor46 = builder45.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server48 = serializedObjectSupporter47.deserializeObjectServer1();
        java.lang.String str49 = server48.getUrl();
        builder45.server = server48;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request53 = serializedObjectSupporter52.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter54 = serializedObjectSupporter52.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter55 = serializedObjectSupporter52.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder56 = builder51.setConverter((retrofit.converter.Converter) gsonConverter55);
        builder51.ensureSaneDefaults();
        retrofit.client.Client.Provider provider58 = builder51.clientProvider;
        java.util.concurrent.Executor executor59 = null;
        java.util.concurrent.Executor executor60 = null;
        retrofit.RequestInterceptor requestInterceptor61 = null;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter63 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request64 = serializedObjectSupporter63.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter65 = serializedObjectSupporter63.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter66 = serializedObjectSupporter63.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder67 = builder62.setConverter((retrofit.converter.Converter) gsonConverter66);
        retrofit.Profiler profiler68 = null;
        retrofit.ErrorHandler errorHandler69 = null;
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        log70.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter74 = new retrofit.RestAdapter(server48, provider58, executor59, executor60, requestInterceptor61, (retrofit.converter.Converter) gsonConverter66, profiler68, errorHandler69, log70, logLevel73);
        retrofit.RestAdapter.RestHandler restHandler75 = restAdapter74.new RestHandler();
        retrofit.Profiler profiler76 = restAdapter74.getprofiler();
        java.util.concurrent.Executor executor77 = restAdapter74.getcallbackExecutor();
        java.lang.reflect.Method method78 = null;
        java.lang.Object[] objArray79 = new java.lang.Object[] {};
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj80 = restHandler39.invoke((java.lang.Object) restAdapter74, method78, objArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertNotNull(converter38);
        org.junit.Assert.assertNotNull(request42);
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertNotNull(gsonConverter44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNull(executor46);
        org.junit.Assert.assertNotNull(server48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "http://example.com" + "'", str49, "http://example.com");
        org.junit.Assert.assertNotNull(request53);
        org.junit.Assert.assertNotNull(gsonConverter54);
        org.junit.Assert.assertNotNull(gsonConverter55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(provider58);
        org.junit.Assert.assertNotNull(request64);
        org.junit.Assert.assertNotNull(gsonConverter65);
        org.junit.Assert.assertNotNull(gsonConverter66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(profiler76);
        org.junit.Assert.assertNull(executor77);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[]");
    }

    @Test
    public void test267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test267");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.mime.TypedOutput typedOutput4 = request3.getBody();
        java.lang.String str5 = request3.url;
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNull(typedOutput4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
    }

    @Test
    public void test268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test268");
        retrofit.Server server1 = new retrofit.Server("http://example.com/");
        java.lang.String str2 = server1.name;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "default" + "'", str2, "default");
    }

    @Test
    public void test269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test269");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.Server server3 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str4 = server3.name;
        java.lang.String str5 = server3.getDEFAULT_NAME();
        java.lang.String str6 = server3.getUrl();
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "default" + "'", str4, "default");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "default" + "'", str5, "default");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com" + "'", str6, "http://example.com");
    }

    @Test
    public void test270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test270");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.Server server3 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.Server server6 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request7 = serializedObjectSupporter0.deserializeObjectRequest2();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections collections8 = serializedObjectSupporter0.deserializeObjectList1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Collections$UnmodifiableRandomAccessList cannot be cast to java.util.Collections");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(server6);
        org.junit.Assert.assertNotNull(request7);
    }

    @Test
    public void test271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test271");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.Profiler profiler3 = builder2.profiler;
        java.util.concurrent.Executor executor4 = null;
        builder2.sethttpExecutor(executor4);
        java.util.concurrent.Executor executor6 = null;
        builder2.setcallbackExecutor(executor6);
        retrofit.converter.Converter converter8 = builder2.converter;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(profiler3);
        org.junit.Assert.assertNull(converter8);
    }

    @Test
    public void test272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test272");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        java.lang.String str35 = restAdapter34.getIDLE_THREAD_NAME();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server37 = serializedObjectSupporter36.deserializeObjectServer1();
        retrofit.client.Request request38 = serializedObjectSupporter36.deserializeObjectRequest1();
        retrofit.mime.TypedOutput typedOutput39 = request38.body;
        retrofit.client.Request request40 = restAdapter34.logAndReplaceRequest(request38);
        retrofit.RequestInterceptor requestInterceptor41 = restAdapter34.requestInterceptor;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request44 = serializedObjectSupporter43.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter45 = serializedObjectSupporter43.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter43.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder47 = builder42.setConverter((retrofit.converter.Converter) gsonConverter46);
        java.util.concurrent.Executor executor48 = builder47.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server50 = serializedObjectSupporter49.deserializeObjectServer1();
        java.lang.String str51 = server50.getUrl();
        builder47.server = server50;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter54 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request55 = serializedObjectSupporter54.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter56 = serializedObjectSupporter54.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter57 = serializedObjectSupporter54.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder58 = builder53.setConverter((retrofit.converter.Converter) gsonConverter57);
        builder53.ensureSaneDefaults();
        retrofit.client.Client.Provider provider60 = builder53.clientProvider;
        java.util.concurrent.Executor executor61 = null;
        java.util.concurrent.Executor executor62 = null;
        retrofit.RequestInterceptor requestInterceptor63 = null;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request66 = serializedObjectSupporter65.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter67 = serializedObjectSupporter65.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter68 = serializedObjectSupporter65.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder69 = builder64.setConverter((retrofit.converter.Converter) gsonConverter68);
        retrofit.Profiler profiler70 = null;
        retrofit.ErrorHandler errorHandler71 = null;
        retrofit.RestAdapter.Log log72 = retrofit.RestAdapter.Log.NONE;
        log72.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter76 = new retrofit.RestAdapter(server50, provider60, executor61, executor62, requestInterceptor63, (retrofit.converter.Converter) gsonConverter68, profiler70, errorHandler71, log72, logLevel75);
        retrofit.SerializedObjectSupporter serializedObjectSupporter77 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request78 = serializedObjectSupporter77.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter79 = serializedObjectSupporter77.deserializeObjectConverter4();
        retrofit.client.Request request80 = serializedObjectSupporter77.deserializeObjectRequest7();
        restAdapter76.serializedObjectSupporter = serializedObjectSupporter77;
        java.util.concurrent.Executor executor82 = restAdapter76.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter83 = restAdapter76.serializedObjectSupporter;
        java.util.concurrent.Executor executor84 = restAdapter76.getcallbackExecutor();
        java.lang.String str85 = restAdapter76.getIDLE_THREAD_NAME();
        retrofit.SerializedObjectSupporter serializedObjectSupporter86 = restAdapter76.serializedObjectSupporter;
        retrofit.converter.GsonConverter gsonConverter87 = serializedObjectSupporter86.deserializeObjectConverter1();
        retrofit.client.Request request88 = serializedObjectSupporter86.deserializeObjectRequest5();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter86;
        retrofit.Server server90 = restAdapter34.getserver();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Retrofit-Idle" + "'", str35, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNull(requestInterceptor41);
        org.junit.Assert.assertNotNull(request44);
        org.junit.Assert.assertNotNull(gsonConverter45);
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(executor48);
        org.junit.Assert.assertNotNull(server50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "http://example.com" + "'", str51, "http://example.com");
        org.junit.Assert.assertNotNull(request55);
        org.junit.Assert.assertNotNull(gsonConverter56);
        org.junit.Assert.assertNotNull(gsonConverter57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(provider60);
        org.junit.Assert.assertNotNull(request66);
        org.junit.Assert.assertNotNull(gsonConverter67);
        org.junit.Assert.assertNotNull(gsonConverter68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request78);
        org.junit.Assert.assertNotNull(gsonConverter79);
        org.junit.Assert.assertNotNull(request80);
        org.junit.Assert.assertNull(executor82);
        org.junit.Assert.assertNotNull(serializedObjectSupporter83);
        org.junit.Assert.assertNull(executor84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Retrofit-Idle" + "'", str85, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(serializedObjectSupporter86);
        org.junit.Assert.assertNotNull(gsonConverter87);
        org.junit.Assert.assertNotNull(request88);
        org.junit.Assert.assertNotNull(server90);
    }

    @Test
    public void test273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test273");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        java.lang.String str42 = restAdapter34.getTHREAD_PREFIX();
        retrofit.RestAdapter.RestHandler restHandler43 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler44 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.Log log45 = restAdapter34.log;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Retrofit-" + "'", str42, "Retrofit-");
        org.junit.Assert.assertNotNull(log45);
    }

    @Test
    public void test274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test274");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = null;
        restAdapter34.setLogLevel(logLevel35);
        retrofit.RestAdapter.RestHandler restHandler37 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request40 = serializedObjectSupporter39.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter39.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter42 = serializedObjectSupporter39.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder43 = builder38.setConverter((retrofit.converter.Converter) gsonConverter42);
        java.util.concurrent.Executor executor44 = builder43.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server46 = serializedObjectSupporter45.deserializeObjectServer1();
        java.lang.String str47 = server46.getUrl();
        builder43.server = server46;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter50 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request51 = serializedObjectSupporter50.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter52 = serializedObjectSupporter50.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter53 = serializedObjectSupporter50.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder54 = builder49.setConverter((retrofit.converter.Converter) gsonConverter53);
        builder49.ensureSaneDefaults();
        retrofit.client.Client.Provider provider56 = builder49.clientProvider;
        java.util.concurrent.Executor executor57 = null;
        java.util.concurrent.Executor executor58 = null;
        retrofit.RequestInterceptor requestInterceptor59 = null;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter61 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request62 = serializedObjectSupporter61.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter63 = serializedObjectSupporter61.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter64 = serializedObjectSupporter61.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder65 = builder60.setConverter((retrofit.converter.Converter) gsonConverter64);
        retrofit.Profiler profiler66 = null;
        retrofit.ErrorHandler errorHandler67 = null;
        retrofit.RestAdapter.Log log68 = retrofit.RestAdapter.Log.NONE;
        log68.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter72 = new retrofit.RestAdapter(server46, provider56, executor57, executor58, requestInterceptor59, (retrofit.converter.Converter) gsonConverter64, profiler66, errorHandler67, log68, logLevel71);
        retrofit.SerializedObjectSupporter serializedObjectSupporter73 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request74 = serializedObjectSupporter73.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter75 = serializedObjectSupporter73.deserializeObjectConverter4();
        retrofit.client.Request request76 = serializedObjectSupporter73.deserializeObjectRequest7();
        restAdapter72.serializedObjectSupporter = serializedObjectSupporter73;
        java.util.concurrent.Executor executor78 = restAdapter72.gethttpExecutor();
        java.util.concurrent.Executor executor79 = restAdapter72.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel80 = restAdapter72.getLogLevel();
        boolean boolean81 = logLevel80.log();
        // The following exception was thrown during execution in test generation
        try {
            restAdapter34.setLogLevel(logLevel80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Log level may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(gsonConverter41);
        org.junit.Assert.assertNotNull(gsonConverter42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(executor44);
        org.junit.Assert.assertNotNull(server46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "http://example.com" + "'", str47, "http://example.com");
        org.junit.Assert.assertNotNull(request51);
        org.junit.Assert.assertNotNull(gsonConverter52);
        org.junit.Assert.assertNotNull(gsonConverter53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(provider56);
        org.junit.Assert.assertNotNull(request62);
        org.junit.Assert.assertNotNull(gsonConverter63);
        org.junit.Assert.assertNotNull(gsonConverter64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request74);
        org.junit.Assert.assertNotNull(gsonConverter75);
        org.junit.Assert.assertNotNull(request76);
        org.junit.Assert.assertNull(executor78);
        org.junit.Assert.assertNull(executor79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test275");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.client.Client.Provider provider35 = restAdapter34.clientProvider;
        java.lang.String str36 = restAdapter34.getTHREAD_PREFIX();
        retrofit.ErrorHandler errorHandler37 = restAdapter34.geterrorHandler();
        retrofit.RestAdapter.RestHandler restHandler38 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler39 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.Log log40 = restAdapter34.log;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(provider35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Retrofit-" + "'", str36, "Retrofit-");
        org.junit.Assert.assertNull(errorHandler37);
        org.junit.Assert.assertNotNull(log40);
    }

    @Test
    public void test276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test276");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        java.util.concurrent.Executor executor3 = null;
        builder2.sethttpExecutor(executor3);
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server6 = serializedObjectSupporter5.deserializeObjectServer1();
        retrofit.client.Request request7 = serializedObjectSupporter5.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler8 = serializedObjectSupporter5.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder9 = builder2.setErrorHandler(errorHandler8);
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request11 = serializedObjectSupporter10.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter10.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder13 = builder9.setConverter((retrofit.converter.Converter) gsonConverter12);
        java.util.concurrent.Executor executor14 = builder13.getcallbackExecutor();
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request17 = serializedObjectSupporter16.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter16.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter16.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder20 = builder15.setConverter((retrofit.converter.Converter) gsonConverter19);
        java.util.concurrent.Executor executor21 = builder20.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server23 = serializedObjectSupporter22.deserializeObjectServer1();
        java.lang.String str24 = server23.getUrl();
        builder20.server = server23;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request28 = serializedObjectSupporter27.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter27.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter27.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder31 = builder26.setConverter((retrofit.converter.Converter) gsonConverter30);
        builder26.ensureSaneDefaults();
        retrofit.client.Client.Provider provider33 = builder26.clientProvider;
        java.util.concurrent.Executor executor34 = null;
        java.util.concurrent.Executor executor35 = null;
        retrofit.RequestInterceptor requestInterceptor36 = null;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request39 = serializedObjectSupporter38.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter40 = serializedObjectSupporter38.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter38.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder42 = builder37.setConverter((retrofit.converter.Converter) gsonConverter41);
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        log45.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server23, provider33, executor34, executor35, requestInterceptor36, (retrofit.converter.Converter) gsonConverter41, profiler43, errorHandler44, log45, logLevel48);
        java.util.concurrent.Executor executor50 = restAdapter49.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter51 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request52 = serializedObjectSupporter51.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter53 = serializedObjectSupporter51.deserializeObjectConverter4();
        retrofit.client.Request request54 = serializedObjectSupporter51.deserializeObjectRequest4();
        retrofit.client.Request request55 = restAdapter49.logAndReplaceRequest(request54);
        retrofit.RestAdapter.RestHandler restHandler56 = restAdapter49.new RestHandler();
        retrofit.converter.Converter converter57 = restAdapter49.converter;
        java.util.concurrent.Executor executor58 = restAdapter49.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel59 = restAdapter49.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel60 = restAdapter49.logLevel;
        retrofit.RestAdapter.Log log61 = restAdapter49.log;
        retrofit.RestAdapter.Builder builder62 = builder13.setLog(log61);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(server6);
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertNotNull(errorHandler8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNull(executor14);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNull(executor21);
        org.junit.Assert.assertNotNull(server23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com" + "'", str24, "http://example.com");
        org.junit.Assert.assertNotNull(request28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(provider33);
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertNotNull(gsonConverter40);
        org.junit.Assert.assertNotNull(gsonConverter41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor50);
        org.junit.Assert.assertNotNull(request52);
        org.junit.Assert.assertNotNull(gsonConverter53);
        org.junit.Assert.assertNotNull(request54);
        org.junit.Assert.assertNotNull(request55);
        org.junit.Assert.assertNotNull(converter57);
        org.junit.Assert.assertNull(executor58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
    }

    @Test
    public void test277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test277");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        java.lang.String str35 = restAdapter34.getIDLE_THREAD_NAME();
        java.lang.String str36 = restAdapter34.getTHREAD_PREFIX();
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request39 = serializedObjectSupporter38.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter40 = serializedObjectSupporter38.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter38.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder42 = builder37.setConverter((retrofit.converter.Converter) gsonConverter41);
        java.util.concurrent.Executor executor43 = builder42.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server45 = serializedObjectSupporter44.deserializeObjectServer1();
        java.lang.String str46 = server45.getUrl();
        builder42.server = server45;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request50 = serializedObjectSupporter49.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter51 = serializedObjectSupporter49.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter52 = serializedObjectSupporter49.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder53 = builder48.setConverter((retrofit.converter.Converter) gsonConverter52);
        builder48.ensureSaneDefaults();
        retrofit.client.Client.Provider provider55 = builder48.clientProvider;
        java.util.concurrent.Executor executor56 = null;
        java.util.concurrent.Executor executor57 = null;
        retrofit.RequestInterceptor requestInterceptor58 = null;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request61 = serializedObjectSupporter60.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter62 = serializedObjectSupporter60.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter63 = serializedObjectSupporter60.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder64 = builder59.setConverter((retrofit.converter.Converter) gsonConverter63);
        retrofit.Profiler profiler65 = null;
        retrofit.ErrorHandler errorHandler66 = null;
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        log67.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter71 = new retrofit.RestAdapter(server45, provider55, executor56, executor57, requestInterceptor58, (retrofit.converter.Converter) gsonConverter63, profiler65, errorHandler66, log67, logLevel70);
        retrofit.SerializedObjectSupporter serializedObjectSupporter72 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request73 = serializedObjectSupporter72.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter74 = serializedObjectSupporter72.deserializeObjectConverter4();
        retrofit.client.Request request75 = serializedObjectSupporter72.deserializeObjectRequest7();
        restAdapter71.serializedObjectSupporter = serializedObjectSupporter72;
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder79 = builder77.setServer("hi!");
        retrofit.SerializedObjectSupporter serializedObjectSupporter80 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request81 = serializedObjectSupporter80.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter82 = serializedObjectSupporter80.deserializeObjectConverter5();
        builder77.converter = gsonConverter82;
        retrofit.SerializedObjectSupporter serializedObjectSupporter84 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request85 = serializedObjectSupporter84.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter86 = serializedObjectSupporter84.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString87 = serializedObjectSupporter84.deserializeObjectTypedOutput2();
        java.lang.String str88 = serializedObjectSupporter84.deserializeObjectString1();
        builder77.serializedObjectSupporter = serializedObjectSupporter84;
        retrofit.Server server90 = serializedObjectSupporter84.deserializeObjectServer1();
        restAdapter71.serializedObjectSupporter = serializedObjectSupporter84;
        retrofit.SerializedObjectSupporter serializedObjectSupporter92 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server93 = serializedObjectSupporter92.deserializeObjectServer1();
        retrofit.client.Request request94 = serializedObjectSupporter92.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler95 = serializedObjectSupporter92.deserializeObjectErrorHandler1();
        retrofit.client.Request request96 = serializedObjectSupporter92.deserializeObjectRequest3();
        retrofit.client.Request request97 = restAdapter71.logAndReplaceRequest(request96);
        retrofit.client.Request request98 = restAdapter34.logAndReplaceRequest(request96);
        retrofit.RestAdapter.RestHandler restHandler99 = restAdapter34.new RestHandler();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Retrofit-Idle" + "'", str35, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Retrofit-" + "'", str36, "Retrofit-");
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertNotNull(gsonConverter40);
        org.junit.Assert.assertNotNull(gsonConverter41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(executor43);
        org.junit.Assert.assertNotNull(server45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "http://example.com" + "'", str46, "http://example.com");
        org.junit.Assert.assertNotNull(request50);
        org.junit.Assert.assertNotNull(gsonConverter51);
        org.junit.Assert.assertNotNull(gsonConverter52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(provider55);
        org.junit.Assert.assertNotNull(request61);
        org.junit.Assert.assertNotNull(gsonConverter62);
        org.junit.Assert.assertNotNull(gsonConverter63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request73);
        org.junit.Assert.assertNotNull(gsonConverter74);
        org.junit.Assert.assertNotNull(request75);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(request81);
        org.junit.Assert.assertNotNull(gsonConverter82);
        org.junit.Assert.assertNotNull(request85);
        org.junit.Assert.assertNotNull(gsonConverter86);
        org.junit.Assert.assertNotNull(typedString87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "Retrofit-" + "'", str88, "Retrofit-");
        org.junit.Assert.assertNotNull(server90);
        org.junit.Assert.assertNotNull(server93);
        org.junit.Assert.assertNotNull(request94);
        org.junit.Assert.assertNotNull(errorHandler95);
        org.junit.Assert.assertNotNull(request96);
        org.junit.Assert.assertNotNull(request97);
        org.junit.Assert.assertNotNull(request98);
    }

    @Test
    public void test278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test278");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString3 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.client.Request request7 = serializedObjectSupporter0.deserializeObjectRequest5();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(typedString3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-" + "'", str4, "Retrofit-");
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(request7);
    }

    @Test
    public void test279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test279");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request6 = serializedObjectSupporter5.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter5.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter5.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder9 = builder4.setConverter((retrofit.converter.Converter) gsonConverter8);
        java.util.concurrent.Executor executor10 = builder9.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server12 = serializedObjectSupporter11.deserializeObjectServer1();
        java.lang.String str13 = server12.getUrl();
        builder9.server = server12;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request17 = serializedObjectSupporter16.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter16.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter16.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder20 = builder15.setConverter((retrofit.converter.Converter) gsonConverter19);
        builder15.ensureSaneDefaults();
        retrofit.client.Client.Provider provider22 = builder15.clientProvider;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request28 = serializedObjectSupporter27.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter27.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter27.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder31 = builder26.setConverter((retrofit.converter.Converter) gsonConverter30);
        retrofit.Profiler profiler32 = null;
        retrofit.ErrorHandler errorHandler33 = null;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        log34.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server12, provider22, executor23, executor24, requestInterceptor25, (retrofit.converter.Converter) gsonConverter30, profiler32, errorHandler33, log34, logLevel37);
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request40 = serializedObjectSupporter39.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter39.deserializeObjectConverter4();
        retrofit.client.Request request42 = serializedObjectSupporter39.deserializeObjectRequest7();
        restAdapter38.serializedObjectSupporter = serializedObjectSupporter39;
        builder2.serializedObjectSupporter = serializedObjectSupporter39;
        java.lang.String str45 = serializedObjectSupporter39.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter39.deserializeObjectConverter5();
        retrofit.RequestInterceptor requestInterceptor47 = serializedObjectSupporter39.deserializeObjectRequestInterceptor1();
        retrofit.client.Request request48 = serializedObjectSupporter39.deserializeObjectRequest8();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(executor10);
        org.junit.Assert.assertNotNull(server12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "http://example.com" + "'", str13, "http://example.com");
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(provider22);
        org.junit.Assert.assertNotNull(request28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(gsonConverter41);
        org.junit.Assert.assertNotNull(request42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "http://example.com/" + "'", str45, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNotNull(requestInterceptor47);
        org.junit.Assert.assertNotNull(request48);
    }

    @Test
    public void test280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test280");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.Profiler profiler3 = builder2.profiler;
        java.util.concurrent.Executor executor4 = null;
        builder2.sethttpExecutor(executor4);
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server7 = serializedObjectSupporter6.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder9 = builder2.setRequestInterceptor(requestInterceptor8);
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = new retrofit.SerializedObjectSupporter();
        builder2.serializedObjectSupporter = serializedObjectSupporter10;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter12 = serializedObjectSupporter10.deserializeObjectLogLevel1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(profiler3);
        org.junit.Assert.assertNotNull(server7);
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertNotNull(builder9);
    }

    @Test
    public void test281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test281");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        java.util.concurrent.Executor executor42 = restAdapter34.getcallbackExecutor();
        java.lang.String str43 = restAdapter34.getIDLE_THREAD_NAME();
        retrofit.RestAdapter.RestHandler restHandler44 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request47 = serializedObjectSupporter46.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter48 = serializedObjectSupporter46.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter49 = serializedObjectSupporter46.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder50 = builder45.setConverter((retrofit.converter.Converter) gsonConverter49);
        java.util.concurrent.Executor executor51 = builder50.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server53 = serializedObjectSupporter52.deserializeObjectServer1();
        java.lang.String str54 = server53.getUrl();
        builder50.server = server53;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter57 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request58 = serializedObjectSupporter57.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter59 = serializedObjectSupporter57.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter60 = serializedObjectSupporter57.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder61 = builder56.setConverter((retrofit.converter.Converter) gsonConverter60);
        builder56.ensureSaneDefaults();
        retrofit.client.Client.Provider provider63 = builder56.clientProvider;
        java.util.concurrent.Executor executor64 = null;
        java.util.concurrent.Executor executor65 = null;
        retrofit.RequestInterceptor requestInterceptor66 = null;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter68 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request69 = serializedObjectSupporter68.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter70 = serializedObjectSupporter68.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter71 = serializedObjectSupporter68.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder72 = builder67.setConverter((retrofit.converter.Converter) gsonConverter71);
        retrofit.Profiler profiler73 = null;
        retrofit.ErrorHandler errorHandler74 = null;
        retrofit.RestAdapter.Log log75 = retrofit.RestAdapter.Log.NONE;
        log75.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter79 = new retrofit.RestAdapter(server53, provider63, executor64, executor65, requestInterceptor66, (retrofit.converter.Converter) gsonConverter71, profiler73, errorHandler74, log75, logLevel78);
        retrofit.SerializedObjectSupporter serializedObjectSupporter80 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request81 = serializedObjectSupporter80.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter82 = serializedObjectSupporter80.deserializeObjectConverter4();
        retrofit.client.Request request83 = serializedObjectSupporter80.deserializeObjectRequest7();
        restAdapter79.serializedObjectSupporter = serializedObjectSupporter80;
        java.util.concurrent.Executor executor85 = restAdapter79.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter86 = restAdapter79.serializedObjectSupporter;
        java.util.concurrent.Executor executor87 = restAdapter79.getcallbackExecutor();
        java.lang.String str88 = restAdapter79.getIDLE_THREAD_NAME();
        retrofit.SerializedObjectSupporter serializedObjectSupporter89 = restAdapter79.serializedObjectSupporter;
        retrofit.converter.GsonConverter gsonConverter90 = serializedObjectSupporter89.deserializeObjectConverter1();
        retrofit.client.Request request91 = serializedObjectSupporter89.deserializeObjectRequest5();
        retrofit.client.Request request92 = restAdapter34.logAndReplaceRequest(request91);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Retrofit-Idle" + "'", str43, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(request47);
        org.junit.Assert.assertNotNull(gsonConverter48);
        org.junit.Assert.assertNotNull(gsonConverter49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(executor51);
        org.junit.Assert.assertNotNull(server53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "http://example.com" + "'", str54, "http://example.com");
        org.junit.Assert.assertNotNull(request58);
        org.junit.Assert.assertNotNull(gsonConverter59);
        org.junit.Assert.assertNotNull(gsonConverter60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(provider63);
        org.junit.Assert.assertNotNull(request69);
        org.junit.Assert.assertNotNull(gsonConverter70);
        org.junit.Assert.assertNotNull(gsonConverter71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log75);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request81);
        org.junit.Assert.assertNotNull(gsonConverter82);
        org.junit.Assert.assertNotNull(request83);
        org.junit.Assert.assertNull(executor85);
        org.junit.Assert.assertNotNull(serializedObjectSupporter86);
        org.junit.Assert.assertNull(executor87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "Retrofit-Idle" + "'", str88, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(serializedObjectSupporter89);
        org.junit.Assert.assertNotNull(gsonConverter90);
        org.junit.Assert.assertNotNull(request91);
        org.junit.Assert.assertNotNull(request92);
    }

    @Test
    public void test282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test282");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = null;
        restAdapter34.setLogLevel(logLevel35);
        java.util.concurrent.Executor executor37 = restAdapter34.gethttpExecutor();
        retrofit.converter.Converter converter38 = restAdapter34.converter;
        retrofit.RestAdapter.RestHandler restHandler39 = restAdapter34.new RestHandler();
        retrofit.Profiler profiler40 = restAdapter34.getprofiler();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertNotNull(converter38);
        org.junit.Assert.assertNull(profiler40);
    }

    @Test
    public void test283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test283");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString3 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        retrofit.mime.TypedString typedString4 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.client.Request request7 = serializedObjectSupporter0.deserializeObjectRequest8();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter8 = serializedObjectSupporter0.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(typedString3);
        org.junit.Assert.assertNotNull(typedString4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(request7);
    }

    @Test
    public void test284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test284");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        java.util.concurrent.Executor executor41 = restAdapter34.httpExecutor;
        java.lang.String str42 = restAdapter34.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor43 = restAdapter34.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor44 = restAdapter34.getrequestInterceptor();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNull(executor41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Retrofit-Idle" + "'", str42, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor43);
        org.junit.Assert.assertNull(requestInterceptor44);
    }

    @Test
    public void test285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test285");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request7 = serializedObjectSupporter6.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter6.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter6.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder10 = builder5.setConverter((retrofit.converter.Converter) gsonConverter9);
        java.util.concurrent.Executor executor11 = builder10.getcallbackExecutor();
        retrofit.Server server14 = new retrofit.Server("hi!", "default");
        builder10.server = server14;
        java.util.concurrent.Executor executor16 = null;
        builder10.sethttpExecutor(executor16);
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request20 = serializedObjectSupporter19.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter19.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter19.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder23 = builder18.setConverter((retrofit.converter.Converter) gsonConverter22);
        java.util.concurrent.Executor executor24 = builder23.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server26 = serializedObjectSupporter25.deserializeObjectServer1();
        java.lang.String str27 = server26.getUrl();
        builder23.server = server26;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request31 = serializedObjectSupporter30.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter32 = serializedObjectSupporter30.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter30.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder34 = builder29.setConverter((retrofit.converter.Converter) gsonConverter33);
        builder29.ensureSaneDefaults();
        retrofit.client.Client.Provider provider36 = builder29.clientProvider;
        java.util.concurrent.Executor executor37 = null;
        java.util.concurrent.Executor executor38 = null;
        retrofit.RequestInterceptor requestInterceptor39 = null;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request42 = serializedObjectSupporter41.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter41.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter44 = serializedObjectSupporter41.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder45 = builder40.setConverter((retrofit.converter.Converter) gsonConverter44);
        retrofit.Profiler profiler46 = null;
        retrofit.ErrorHandler errorHandler47 = null;
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        log48.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter(server26, provider36, executor37, executor38, requestInterceptor39, (retrofit.converter.Converter) gsonConverter44, profiler46, errorHandler47, log48, logLevel51);
        retrofit.RestAdapter.Builder builder53 = builder10.setClient(provider36);
        builder4.setclientProvider(provider36);
        java.util.concurrent.Executor executor55 = null;
        builder4.callbackExecutor = executor55;
        retrofit.SerializedObjectSupporter serializedObjectSupporter57 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request58 = serializedObjectSupporter57.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter59 = serializedObjectSupporter57.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString60 = serializedObjectSupporter57.deserializeObjectTypedOutput2();
        java.lang.String str61 = serializedObjectSupporter57.deserializeObjectString1();
        retrofit.client.Request request62 = serializedObjectSupporter57.deserializeObjectRequest4();
        retrofit.ErrorHandler errorHandler63 = serializedObjectSupporter57.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder64 = builder4.setErrorHandler(errorHandler63);
        retrofit.RestAdapter.LogLevel logLevel65 = builder64.logLevel;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNotNull(request20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(server26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "http://example.com" + "'", str27, "http://example.com");
        org.junit.Assert.assertNotNull(request31);
        org.junit.Assert.assertNotNull(gsonConverter32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(provider36);
        org.junit.Assert.assertNotNull(request42);
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertNotNull(gsonConverter44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(request58);
        org.junit.Assert.assertNotNull(gsonConverter59);
        org.junit.Assert.assertNotNull(typedString60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Retrofit-" + "'", str61, "Retrofit-");
        org.junit.Assert.assertNotNull(request62);
        org.junit.Assert.assertNotNull(errorHandler63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test286");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder0.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor7 = builder0.requestInterceptor;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNull(requestInterceptor7);
    }

    @Test
    public void test287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test287");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString3 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        retrofit.mime.TypedString typedString4 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString7 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(typedString3);
        org.junit.Assert.assertNotNull(typedString4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(typedString7);
    }

    @Test
    public void test288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test288");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        java.lang.String str35 = restAdapter34.getIDLE_THREAD_NAME();
        java.lang.String str36 = restAdapter34.getTHREAD_PREFIX();
        retrofit.RestAdapter.RestHandler restHandler37 = restAdapter34.new RestHandler();
        retrofit.converter.Converter converter38 = restAdapter34.converter;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Retrofit-Idle" + "'", str35, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Retrofit-" + "'", str36, "Retrofit-");
        org.junit.Assert.assertNotNull(converter38);
    }

    @Test
    public void test289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test289");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server41 = serializedObjectSupporter40.deserializeObjectServer1();
        retrofit.client.Request request42 = serializedObjectSupporter40.deserializeObjectRequest8();
        retrofit.client.Request request43 = restAdapter34.logAndReplaceRequest(request42);
        java.util.concurrent.Executor executor44 = restAdapter34.httpExecutor;
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter34.new RestHandler();
        retrofit.ErrorHandler errorHandler46 = restAdapter34.geterrorHandler();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNotNull(server41);
        org.junit.Assert.assertNotNull(request42);
        org.junit.Assert.assertNotNull(request43);
        org.junit.Assert.assertNull(executor44);
        org.junit.Assert.assertNull(errorHandler46);
    }

    @Test
    public void test290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test290");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest4();
        java.util.List<retrofit.client.Header> headerList4 = request3.headers;
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Retrofit-" + "'", str2, "Retrofit-");
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(headerList4);
    }

    @Test
    public void test291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test291");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        java.lang.String str35 = restAdapter34.getIDLE_THREAD_NAME();
        java.lang.String str36 = restAdapter34.getTHREAD_PREFIX();
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request39 = serializedObjectSupporter38.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter40 = serializedObjectSupporter38.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter38.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder42 = builder37.setConverter((retrofit.converter.Converter) gsonConverter41);
        java.util.concurrent.Executor executor43 = builder42.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server45 = serializedObjectSupporter44.deserializeObjectServer1();
        java.lang.String str46 = server45.getUrl();
        builder42.server = server45;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request50 = serializedObjectSupporter49.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter51 = serializedObjectSupporter49.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter52 = serializedObjectSupporter49.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder53 = builder48.setConverter((retrofit.converter.Converter) gsonConverter52);
        builder48.ensureSaneDefaults();
        retrofit.client.Client.Provider provider55 = builder48.clientProvider;
        java.util.concurrent.Executor executor56 = null;
        java.util.concurrent.Executor executor57 = null;
        retrofit.RequestInterceptor requestInterceptor58 = null;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request61 = serializedObjectSupporter60.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter62 = serializedObjectSupporter60.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter63 = serializedObjectSupporter60.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder64 = builder59.setConverter((retrofit.converter.Converter) gsonConverter63);
        retrofit.Profiler profiler65 = null;
        retrofit.ErrorHandler errorHandler66 = null;
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        log67.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter71 = new retrofit.RestAdapter(server45, provider55, executor56, executor57, requestInterceptor58, (retrofit.converter.Converter) gsonConverter63, profiler65, errorHandler66, log67, logLevel70);
        retrofit.SerializedObjectSupporter serializedObjectSupporter72 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request73 = serializedObjectSupporter72.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter74 = serializedObjectSupporter72.deserializeObjectConverter4();
        retrofit.client.Request request75 = serializedObjectSupporter72.deserializeObjectRequest7();
        restAdapter71.serializedObjectSupporter = serializedObjectSupporter72;
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder79 = builder77.setServer("hi!");
        retrofit.SerializedObjectSupporter serializedObjectSupporter80 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request81 = serializedObjectSupporter80.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter82 = serializedObjectSupporter80.deserializeObjectConverter5();
        builder77.converter = gsonConverter82;
        retrofit.SerializedObjectSupporter serializedObjectSupporter84 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request85 = serializedObjectSupporter84.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter86 = serializedObjectSupporter84.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString87 = serializedObjectSupporter84.deserializeObjectTypedOutput2();
        java.lang.String str88 = serializedObjectSupporter84.deserializeObjectString1();
        builder77.serializedObjectSupporter = serializedObjectSupporter84;
        retrofit.Server server90 = serializedObjectSupporter84.deserializeObjectServer1();
        restAdapter71.serializedObjectSupporter = serializedObjectSupporter84;
        retrofit.SerializedObjectSupporter serializedObjectSupporter92 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server93 = serializedObjectSupporter92.deserializeObjectServer1();
        retrofit.client.Request request94 = serializedObjectSupporter92.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler95 = serializedObjectSupporter92.deserializeObjectErrorHandler1();
        retrofit.client.Request request96 = serializedObjectSupporter92.deserializeObjectRequest3();
        retrofit.client.Request request97 = restAdapter71.logAndReplaceRequest(request96);
        retrofit.client.Request request98 = restAdapter34.logAndReplaceRequest(request96);
        java.lang.String str99 = restAdapter34.getTHREAD_PREFIX();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Retrofit-Idle" + "'", str35, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Retrofit-" + "'", str36, "Retrofit-");
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertNotNull(gsonConverter40);
        org.junit.Assert.assertNotNull(gsonConverter41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(executor43);
        org.junit.Assert.assertNotNull(server45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "http://example.com" + "'", str46, "http://example.com");
        org.junit.Assert.assertNotNull(request50);
        org.junit.Assert.assertNotNull(gsonConverter51);
        org.junit.Assert.assertNotNull(gsonConverter52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(provider55);
        org.junit.Assert.assertNotNull(request61);
        org.junit.Assert.assertNotNull(gsonConverter62);
        org.junit.Assert.assertNotNull(gsonConverter63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request73);
        org.junit.Assert.assertNotNull(gsonConverter74);
        org.junit.Assert.assertNotNull(request75);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(request81);
        org.junit.Assert.assertNotNull(gsonConverter82);
        org.junit.Assert.assertNotNull(request85);
        org.junit.Assert.assertNotNull(gsonConverter86);
        org.junit.Assert.assertNotNull(typedString87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "Retrofit-" + "'", str88, "Retrofit-");
        org.junit.Assert.assertNotNull(server90);
        org.junit.Assert.assertNotNull(server93);
        org.junit.Assert.assertNotNull(request94);
        org.junit.Assert.assertNotNull(errorHandler95);
        org.junit.Assert.assertNotNull(request96);
        org.junit.Assert.assertNotNull(request97);
        org.junit.Assert.assertNotNull(request98);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "Retrofit-" + "'", str99, "Retrofit-");
    }

    @Test
    public void test292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test292");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest8();
        java.lang.String str5 = request4.getUrl();
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
    }

    @Test
    public void test293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test293");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        java.util.concurrent.Executor executor3 = null;
        builder2.sethttpExecutor(executor3);
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server6 = serializedObjectSupporter5.deserializeObjectServer1();
        retrofit.client.Request request7 = serializedObjectSupporter5.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler8 = serializedObjectSupporter5.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder9 = builder2.setErrorHandler(errorHandler8);
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request11 = serializedObjectSupporter10.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter10.deserializeObjectConverter4();
        retrofit.client.Request request13 = serializedObjectSupporter10.deserializeObjectRequest4();
        retrofit.client.Request request14 = serializedObjectSupporter10.deserializeObjectRequest7();
        retrofit.Server server15 = serializedObjectSupporter10.deserializeObjectServer1();
        builder9.server = server15;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(server6);
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertNotNull(errorHandler8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(request14);
        org.junit.Assert.assertNotNull(server15);
    }

    @Test
    public void test294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test294");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request4 = serializedObjectSupporter3.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter5();
        builder0.converter = gsonConverter5;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request8 = serializedObjectSupporter7.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter7.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString10 = serializedObjectSupporter7.deserializeObjectTypedOutput2();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString1();
        builder0.serializedObjectSupporter = serializedObjectSupporter7;
        retrofit.client.Request request13 = serializedObjectSupporter7.deserializeObjectRequest5();
        java.lang.String str14 = request13.getMethod();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(typedString10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-" + "'", str11, "Retrofit-");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "GET" + "'", str14, "GET");
    }

    @Test
    public void test295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test295");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter4();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter5 = serializedObjectSupporter0.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
    }

    @Test
    public void test296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test296");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        retrofit.converter.GsonConverter gsonConverter42 = serializedObjectSupporter41.deserializeObjectConverter2();
        retrofit.client.Request request43 = serializedObjectSupporter41.deserializeObjectRequest1();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertNotNull(gsonConverter42);
        org.junit.Assert.assertNotNull(request43);
    }

    @Test
    public void test297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test297");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.Profiler profiler3 = builder2.profiler;
        java.util.concurrent.Executor executor4 = null;
        builder2.sethttpExecutor(executor4);
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server7 = serializedObjectSupporter6.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder9 = builder2.setRequestInterceptor(requestInterceptor8);
        retrofit.RequestInterceptor requestInterceptor10 = builder9.requestInterceptor;
        java.util.concurrent.Executor executor11 = builder9.gethttpExecutor();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(profiler3);
        org.junit.Assert.assertNotNull(server7);
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNull(executor11);
    }

    @Test
    public void test298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test298");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        java.util.concurrent.Executor executor42 = restAdapter34.getcallbackExecutor();
        java.lang.String str43 = restAdapter34.getIDLE_THREAD_NAME();
        retrofit.RestAdapter.RestHandler restHandler44 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter34.new RestHandler();
        retrofit.Server server46 = restAdapter34.getserver();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Retrofit-Idle" + "'", str43, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(server46);
    }

    @Test
    public void test299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test299");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = builder5.serializedObjectSupporter;
        java.util.concurrent.Executor executor7 = builder5.httpExecutor;
        retrofit.RestAdapter.Log log8 = builder5.log;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request11 = serializedObjectSupporter10.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter10.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter10.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder14 = builder9.setConverter((retrofit.converter.Converter) gsonConverter13);
        java.util.concurrent.Executor executor15 = builder14.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server17 = serializedObjectSupporter16.deserializeObjectServer1();
        java.lang.String str18 = server17.getUrl();
        builder14.server = server17;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request22 = serializedObjectSupporter21.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter21.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter24 = serializedObjectSupporter21.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder25 = builder20.setConverter((retrofit.converter.Converter) gsonConverter24);
        builder20.ensureSaneDefaults();
        retrofit.client.Client.Provider provider27 = builder20.clientProvider;
        java.util.concurrent.Executor executor28 = null;
        java.util.concurrent.Executor executor29 = null;
        retrofit.RequestInterceptor requestInterceptor30 = null;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request33 = serializedObjectSupporter32.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter34 = serializedObjectSupporter32.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter35 = serializedObjectSupporter32.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder36 = builder31.setConverter((retrofit.converter.Converter) gsonConverter35);
        retrofit.Profiler profiler37 = null;
        retrofit.ErrorHandler errorHandler38 = null;
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        log39.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter(server17, provider27, executor28, executor29, requestInterceptor30, (retrofit.converter.Converter) gsonConverter35, profiler37, errorHandler38, log39, logLevel42);
        java.util.concurrent.Executor executor44 = restAdapter43.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request46 = serializedObjectSupporter45.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter47 = serializedObjectSupporter45.deserializeObjectConverter4();
        retrofit.client.Request request48 = serializedObjectSupporter45.deserializeObjectRequest4();
        retrofit.client.Request request49 = restAdapter43.logAndReplaceRequest(request48);
        retrofit.RestAdapter.RestHandler restHandler50 = restAdapter43.new RestHandler();
        retrofit.converter.Converter converter51 = restAdapter43.converter;
        java.util.concurrent.Executor executor52 = restAdapter43.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter43.getLogLevel();
        retrofit.RestAdapter.Builder builder54 = builder5.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder57 = builder55.setServer("hi!");
        java.util.concurrent.Executor executor58 = null;
        builder57.sethttpExecutor(executor58);
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server61 = serializedObjectSupporter60.deserializeObjectServer1();
        retrofit.client.Request request62 = serializedObjectSupporter60.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler63 = serializedObjectSupporter60.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder64 = builder57.setErrorHandler(errorHandler63);
        retrofit.RestAdapter.Builder builder65 = builder5.setErrorHandler(errorHandler63);
        java.util.concurrent.Executor executor66 = builder5.httpExecutor;
        retrofit.client.Client.Provider provider67 = builder5.clientProvider;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(log8);
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNotNull(server17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com" + "'", str18, "http://example.com");
        org.junit.Assert.assertNotNull(request22);
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertNotNull(gsonConverter24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(provider27);
        org.junit.Assert.assertNotNull(request33);
        org.junit.Assert.assertNotNull(gsonConverter34);
        org.junit.Assert.assertNotNull(gsonConverter35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor44);
        org.junit.Assert.assertNotNull(request46);
        org.junit.Assert.assertNotNull(gsonConverter47);
        org.junit.Assert.assertNotNull(request48);
        org.junit.Assert.assertNotNull(request49);
        org.junit.Assert.assertNotNull(converter51);
        org.junit.Assert.assertNull(executor52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(server61);
        org.junit.Assert.assertNotNull(request62);
        org.junit.Assert.assertNotNull(errorHandler63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNull(executor66);
        org.junit.Assert.assertNull(provider67);
    }

    @Test
    public void test300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test300");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = builder5.serializedObjectSupporter;
        java.util.concurrent.Executor executor7 = builder5.httpExecutor;
        retrofit.RestAdapter.Log log8 = builder5.log;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request11 = serializedObjectSupporter10.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter10.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter10.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder14 = builder9.setConverter((retrofit.converter.Converter) gsonConverter13);
        java.util.concurrent.Executor executor15 = builder14.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server17 = serializedObjectSupporter16.deserializeObjectServer1();
        java.lang.String str18 = server17.getUrl();
        builder14.server = server17;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request22 = serializedObjectSupporter21.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter21.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter24 = serializedObjectSupporter21.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder25 = builder20.setConverter((retrofit.converter.Converter) gsonConverter24);
        builder20.ensureSaneDefaults();
        retrofit.client.Client.Provider provider27 = builder20.clientProvider;
        java.util.concurrent.Executor executor28 = null;
        java.util.concurrent.Executor executor29 = null;
        retrofit.RequestInterceptor requestInterceptor30 = null;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request33 = serializedObjectSupporter32.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter34 = serializedObjectSupporter32.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter35 = serializedObjectSupporter32.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder36 = builder31.setConverter((retrofit.converter.Converter) gsonConverter35);
        retrofit.Profiler profiler37 = null;
        retrofit.ErrorHandler errorHandler38 = null;
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        log39.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter(server17, provider27, executor28, executor29, requestInterceptor30, (retrofit.converter.Converter) gsonConverter35, profiler37, errorHandler38, log39, logLevel42);
        java.util.concurrent.Executor executor44 = restAdapter43.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request46 = serializedObjectSupporter45.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter47 = serializedObjectSupporter45.deserializeObjectConverter4();
        retrofit.client.Request request48 = serializedObjectSupporter45.deserializeObjectRequest4();
        retrofit.client.Request request49 = restAdapter43.logAndReplaceRequest(request48);
        retrofit.RestAdapter.RestHandler restHandler50 = restAdapter43.new RestHandler();
        retrofit.converter.Converter converter51 = restAdapter43.converter;
        java.util.concurrent.Executor executor52 = restAdapter43.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter43.getLogLevel();
        retrofit.RestAdapter.Builder builder54 = builder5.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder57 = builder55.setServer("hi!");
        java.util.concurrent.Executor executor58 = null;
        builder57.sethttpExecutor(executor58);
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server61 = serializedObjectSupporter60.deserializeObjectServer1();
        retrofit.client.Request request62 = serializedObjectSupporter60.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler63 = serializedObjectSupporter60.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder64 = builder57.setErrorHandler(errorHandler63);
        retrofit.RestAdapter.Builder builder65 = builder5.setErrorHandler(errorHandler63);
        java.util.concurrent.Executor executor66 = builder5.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter67 = builder5.serializedObjectSupporter;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(log8);
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNotNull(server17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com" + "'", str18, "http://example.com");
        org.junit.Assert.assertNotNull(request22);
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertNotNull(gsonConverter24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(provider27);
        org.junit.Assert.assertNotNull(request33);
        org.junit.Assert.assertNotNull(gsonConverter34);
        org.junit.Assert.assertNotNull(gsonConverter35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor44);
        org.junit.Assert.assertNotNull(request46);
        org.junit.Assert.assertNotNull(gsonConverter47);
        org.junit.Assert.assertNotNull(request48);
        org.junit.Assert.assertNotNull(request49);
        org.junit.Assert.assertNotNull(converter51);
        org.junit.Assert.assertNull(executor52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(server61);
        org.junit.Assert.assertNotNull(request62);
        org.junit.Assert.assertNotNull(errorHandler63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNull(executor66);
        org.junit.Assert.assertNull(serializedObjectSupporter67);
    }

    @Test
    public void test301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test301");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        java.lang.String str11 = server8.name;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "default" + "'", str11, "default");
    }

    @Test
    public void test302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test302");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        java.util.concurrent.Executor executor35 = restAdapter34.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request37 = serializedObjectSupporter36.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter4();
        retrofit.client.Request request39 = serializedObjectSupporter36.deserializeObjectRequest4();
        retrofit.client.Request request40 = restAdapter34.logAndReplaceRequest(request39);
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter34.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor42 = restAdapter34.getrequestInterceptor();
        java.util.concurrent.Executor executor43 = restAdapter34.getcallbackExecutor();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNotNull(request37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNull(requestInterceptor42);
        org.junit.Assert.assertNull(executor43);
    }

    @Test
    public void test303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test303");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter1();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest4();
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(request4);
    }

    @Test
    public void test304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test304");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = null;
        restAdapter34.setLogLevel(logLevel35);
        retrofit.Server server37 = restAdapter34.server;
        java.util.concurrent.Executor executor38 = restAdapter34.gethttpExecutor();
        retrofit.client.Client.Provider provider39 = restAdapter34.getclientProvider();
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("hi!");
        java.util.concurrent.Executor executor43 = null;
        builder42.sethttpExecutor(executor43);
        retrofit.Server server45 = builder42.server;
        retrofit.RestAdapter.LogLevel logLevel46 = builder42.logLevel;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter34.setLogLevel(logLevel46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Log level may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNull(executor38);
        org.junit.Assert.assertNotNull(provider39);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(server45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test305");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        java.util.concurrent.Executor executor35 = restAdapter34.getcallbackExecutor();
        retrofit.RestAdapter.RestHandler restHandler36 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler37 = restAdapter34.new RestHandler();
        java.util.concurrent.Executor executor38 = restAdapter34.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request40 = serializedObjectSupporter39.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter39.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter42 = serializedObjectSupporter39.deserializeObjectConverter8();
        retrofit.client.Request request43 = serializedObjectSupporter39.deserializeObjectRequest5();
        retrofit.Server server44 = serializedObjectSupporter39.deserializeObjectServer1();
        retrofit.client.Request request45 = serializedObjectSupporter39.deserializeObjectRequest4();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter39;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request49 = serializedObjectSupporter48.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter50 = serializedObjectSupporter48.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter51 = serializedObjectSupporter48.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder52 = builder47.setConverter((retrofit.converter.Converter) gsonConverter51);
        java.util.concurrent.Executor executor53 = builder52.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter54 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server55 = serializedObjectSupporter54.deserializeObjectServer1();
        java.lang.String str56 = server55.getUrl();
        builder52.server = server55;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter59 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request60 = serializedObjectSupporter59.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter59.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter62 = serializedObjectSupporter59.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder63 = builder58.setConverter((retrofit.converter.Converter) gsonConverter62);
        builder58.ensureSaneDefaults();
        retrofit.client.Client.Provider provider65 = builder58.clientProvider;
        java.util.concurrent.Executor executor66 = null;
        java.util.concurrent.Executor executor67 = null;
        retrofit.RequestInterceptor requestInterceptor68 = null;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter70 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request71 = serializedObjectSupporter70.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter72 = serializedObjectSupporter70.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter73 = serializedObjectSupporter70.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder74 = builder69.setConverter((retrofit.converter.Converter) gsonConverter73);
        retrofit.Profiler profiler75 = null;
        retrofit.ErrorHandler errorHandler76 = null;
        retrofit.RestAdapter.Log log77 = retrofit.RestAdapter.Log.NONE;
        log77.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter81 = new retrofit.RestAdapter(server55, provider65, executor66, executor67, requestInterceptor68, (retrofit.converter.Converter) gsonConverter73, profiler75, errorHandler76, log77, logLevel80);
        retrofit.SerializedObjectSupporter serializedObjectSupporter82 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request83 = serializedObjectSupporter82.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter84 = serializedObjectSupporter82.deserializeObjectConverter4();
        retrofit.client.Request request85 = serializedObjectSupporter82.deserializeObjectRequest7();
        restAdapter81.serializedObjectSupporter = serializedObjectSupporter82;
        retrofit.SerializedObjectSupporter serializedObjectSupporter87 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server88 = serializedObjectSupporter87.deserializeObjectServer1();
        retrofit.client.Request request89 = serializedObjectSupporter87.deserializeObjectRequest8();
        retrofit.client.Request request90 = restAdapter81.logAndReplaceRequest(request89);
        java.util.concurrent.Executor executor91 = restAdapter81.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel92 = restAdapter81.logLevel;
        restAdapter34.logLevel = logLevel92;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNull(executor38);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(gsonConverter41);
        org.junit.Assert.assertNotNull(gsonConverter42);
        org.junit.Assert.assertNotNull(request43);
        org.junit.Assert.assertNotNull(server44);
        org.junit.Assert.assertNotNull(request45);
        org.junit.Assert.assertNotNull(request49);
        org.junit.Assert.assertNotNull(gsonConverter50);
        org.junit.Assert.assertNotNull(gsonConverter51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNull(executor53);
        org.junit.Assert.assertNotNull(server55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "http://example.com" + "'", str56, "http://example.com");
        org.junit.Assert.assertNotNull(request60);
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertNotNull(gsonConverter62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(provider65);
        org.junit.Assert.assertNotNull(request71);
        org.junit.Assert.assertNotNull(gsonConverter72);
        org.junit.Assert.assertNotNull(gsonConverter73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(log77);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request83);
        org.junit.Assert.assertNotNull(gsonConverter84);
        org.junit.Assert.assertNotNull(request85);
        org.junit.Assert.assertNotNull(server88);
        org.junit.Assert.assertNotNull(request89);
        org.junit.Assert.assertNotNull(request90);
        org.junit.Assert.assertNull(executor91);
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test306");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request4 = serializedObjectSupporter3.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter3.deserializeObjectConverter8();
        retrofit.client.Request request7 = serializedObjectSupporter3.deserializeObjectRequest5();
        retrofit.Server server8 = serializedObjectSupporter3.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request11 = serializedObjectSupporter10.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter10.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter10.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder14 = builder9.setConverter((retrofit.converter.Converter) gsonConverter13);
        builder9.ensureSaneDefaults();
        retrofit.client.Client.Provider provider16 = builder9.clientProvider;
        java.util.concurrent.Executor executor17 = null;
        java.util.concurrent.Executor executor18 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server20 = serializedObjectSupporter19.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter19.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server30 = serializedObjectSupporter29.deserializeObjectServer1();
        retrofit.client.Request request31 = serializedObjectSupporter29.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler32 = serializedObjectSupporter29.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        log33.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server8, provider16, executor17, executor18, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler32, log33, logLevel36);
        builder2.setclientProvider(provider16);
        retrofit.RestAdapter.Log log39 = builder2.log;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(provider16);
        org.junit.Assert.assertNotNull(server20);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(server30);
        org.junit.Assert.assertNotNull(request31);
        org.junit.Assert.assertNotNull(errorHandler32);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(log39);
    }

    @Test
    public void test307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test307");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter8();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter4 = serializedObjectSupporter0.deserializeObjectLogLevel1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "POST" + "'", str2, "POST");
        org.junit.Assert.assertNotNull(gsonConverter3);
    }

    @Test
    public void test308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test308");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request6 = serializedObjectSupporter5.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter5.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter5.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder9 = builder4.setConverter((retrofit.converter.Converter) gsonConverter8);
        java.util.concurrent.Executor executor10 = builder9.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server12 = serializedObjectSupporter11.deserializeObjectServer1();
        java.lang.String str13 = server12.getUrl();
        builder9.server = server12;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request17 = serializedObjectSupporter16.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter16.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter16.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder20 = builder15.setConverter((retrofit.converter.Converter) gsonConverter19);
        builder15.ensureSaneDefaults();
        retrofit.client.Client.Provider provider22 = builder15.clientProvider;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request28 = serializedObjectSupporter27.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter27.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter27.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder31 = builder26.setConverter((retrofit.converter.Converter) gsonConverter30);
        retrofit.Profiler profiler32 = null;
        retrofit.ErrorHandler errorHandler33 = null;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        log34.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server12, provider22, executor23, executor24, requestInterceptor25, (retrofit.converter.Converter) gsonConverter30, profiler32, errorHandler33, log34, logLevel37);
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request40 = serializedObjectSupporter39.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter39.deserializeObjectConverter4();
        retrofit.client.Request request42 = serializedObjectSupporter39.deserializeObjectRequest7();
        restAdapter38.serializedObjectSupporter = serializedObjectSupporter39;
        builder2.serializedObjectSupporter = serializedObjectSupporter39;
        retrofit.converter.Converter converter45 = builder2.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server47 = serializedObjectSupporter46.deserializeObjectServer1();
        retrofit.client.Request request48 = serializedObjectSupporter46.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler49 = serializedObjectSupporter46.deserializeObjectErrorHandler1();
        builder2.errorHandler = errorHandler49;
        retrofit.RestAdapter restAdapter51 = builder2.build();
        retrofit.RestAdapter.LogLevel logLevel52 = restAdapter51.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler53 = restAdapter51.new RestHandler();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(executor10);
        org.junit.Assert.assertNotNull(server12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "http://example.com" + "'", str13, "http://example.com");
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(provider22);
        org.junit.Assert.assertNotNull(request28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(gsonConverter41);
        org.junit.Assert.assertNotNull(request42);
        org.junit.Assert.assertNull(converter45);
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertNotNull(request48);
        org.junit.Assert.assertNotNull(errorHandler49);
        org.junit.Assert.assertNotNull(restAdapter51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test309");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("hi!");
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request44 = serializedObjectSupporter43.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter45 = serializedObjectSupporter43.deserializeObjectConverter5();
        builder40.converter = gsonConverter45;
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request48 = serializedObjectSupporter47.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter49 = serializedObjectSupporter47.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString50 = serializedObjectSupporter47.deserializeObjectTypedOutput2();
        java.lang.String str51 = serializedObjectSupporter47.deserializeObjectString1();
        builder40.serializedObjectSupporter = serializedObjectSupporter47;
        retrofit.Server server53 = serializedObjectSupporter47.deserializeObjectServer1();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter47;
        retrofit.converter.GsonConverter gsonConverter55 = serializedObjectSupporter47.deserializeObjectConverter8();
        java.lang.String str56 = serializedObjectSupporter47.deserializeObjectString4();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter57 = serializedObjectSupporter47.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(request44);
        org.junit.Assert.assertNotNull(gsonConverter45);
        org.junit.Assert.assertNotNull(request48);
        org.junit.Assert.assertNotNull(gsonConverter49);
        org.junit.Assert.assertNotNull(typedString50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Retrofit-" + "'", str51, "Retrofit-");
        org.junit.Assert.assertNotNull(server53);
        org.junit.Assert.assertNotNull(gsonConverter55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "http://example.com/" + "'", str56, "http://example.com/");
    }

    @Test
    public void test310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test310");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.Profiler profiler3 = builder2.profiler;
        java.util.concurrent.Executor executor4 = null;
        builder2.sethttpExecutor(executor4);
        retrofit.Server server6 = builder2.server;
        java.util.concurrent.Executor executor7 = builder2.getcallbackExecutor();
        retrofit.ErrorHandler errorHandler8 = builder2.errorHandler;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(profiler3);
        org.junit.Assert.assertNotNull(server6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(errorHandler8);
    }

    @Test
    public void test311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test311");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        java.lang.String str35 = restAdapter34.getIDLE_THREAD_NAME();
        java.lang.String str36 = restAdapter34.getTHREAD_PREFIX();
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request39 = serializedObjectSupporter38.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter40 = serializedObjectSupporter38.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter38.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder42 = builder37.setConverter((retrofit.converter.Converter) gsonConverter41);
        java.util.concurrent.Executor executor43 = builder42.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server45 = serializedObjectSupporter44.deserializeObjectServer1();
        java.lang.String str46 = server45.getUrl();
        builder42.server = server45;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request50 = serializedObjectSupporter49.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter51 = serializedObjectSupporter49.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter52 = serializedObjectSupporter49.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder53 = builder48.setConverter((retrofit.converter.Converter) gsonConverter52);
        builder48.ensureSaneDefaults();
        retrofit.client.Client.Provider provider55 = builder48.clientProvider;
        java.util.concurrent.Executor executor56 = null;
        java.util.concurrent.Executor executor57 = null;
        retrofit.RequestInterceptor requestInterceptor58 = null;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request61 = serializedObjectSupporter60.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter62 = serializedObjectSupporter60.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter63 = serializedObjectSupporter60.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder64 = builder59.setConverter((retrofit.converter.Converter) gsonConverter63);
        retrofit.Profiler profiler65 = null;
        retrofit.ErrorHandler errorHandler66 = null;
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        log67.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter71 = new retrofit.RestAdapter(server45, provider55, executor56, executor57, requestInterceptor58, (retrofit.converter.Converter) gsonConverter63, profiler65, errorHandler66, log67, logLevel70);
        retrofit.SerializedObjectSupporter serializedObjectSupporter72 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request73 = serializedObjectSupporter72.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter74 = serializedObjectSupporter72.deserializeObjectConverter4();
        retrofit.client.Request request75 = serializedObjectSupporter72.deserializeObjectRequest7();
        restAdapter71.serializedObjectSupporter = serializedObjectSupporter72;
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder79 = builder77.setServer("hi!");
        retrofit.SerializedObjectSupporter serializedObjectSupporter80 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request81 = serializedObjectSupporter80.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter82 = serializedObjectSupporter80.deserializeObjectConverter5();
        builder77.converter = gsonConverter82;
        retrofit.SerializedObjectSupporter serializedObjectSupporter84 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request85 = serializedObjectSupporter84.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter86 = serializedObjectSupporter84.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString87 = serializedObjectSupporter84.deserializeObjectTypedOutput2();
        java.lang.String str88 = serializedObjectSupporter84.deserializeObjectString1();
        builder77.serializedObjectSupporter = serializedObjectSupporter84;
        retrofit.Server server90 = serializedObjectSupporter84.deserializeObjectServer1();
        restAdapter71.serializedObjectSupporter = serializedObjectSupporter84;
        retrofit.SerializedObjectSupporter serializedObjectSupporter92 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server93 = serializedObjectSupporter92.deserializeObjectServer1();
        retrofit.client.Request request94 = serializedObjectSupporter92.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler95 = serializedObjectSupporter92.deserializeObjectErrorHandler1();
        retrofit.client.Request request96 = serializedObjectSupporter92.deserializeObjectRequest3();
        retrofit.client.Request request97 = restAdapter71.logAndReplaceRequest(request96);
        retrofit.client.Request request98 = restAdapter34.logAndReplaceRequest(request96);
        java.util.concurrent.Executor executor99 = restAdapter34.callbackExecutor;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Retrofit-Idle" + "'", str35, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Retrofit-" + "'", str36, "Retrofit-");
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertNotNull(gsonConverter40);
        org.junit.Assert.assertNotNull(gsonConverter41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(executor43);
        org.junit.Assert.assertNotNull(server45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "http://example.com" + "'", str46, "http://example.com");
        org.junit.Assert.assertNotNull(request50);
        org.junit.Assert.assertNotNull(gsonConverter51);
        org.junit.Assert.assertNotNull(gsonConverter52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(provider55);
        org.junit.Assert.assertNotNull(request61);
        org.junit.Assert.assertNotNull(gsonConverter62);
        org.junit.Assert.assertNotNull(gsonConverter63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request73);
        org.junit.Assert.assertNotNull(gsonConverter74);
        org.junit.Assert.assertNotNull(request75);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(request81);
        org.junit.Assert.assertNotNull(gsonConverter82);
        org.junit.Assert.assertNotNull(request85);
        org.junit.Assert.assertNotNull(gsonConverter86);
        org.junit.Assert.assertNotNull(typedString87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "Retrofit-" + "'", str88, "Retrofit-");
        org.junit.Assert.assertNotNull(server90);
        org.junit.Assert.assertNotNull(server93);
        org.junit.Assert.assertNotNull(request94);
        org.junit.Assert.assertNotNull(errorHandler95);
        org.junit.Assert.assertNotNull(request96);
        org.junit.Assert.assertNotNull(request97);
        org.junit.Assert.assertNotNull(request98);
        org.junit.Assert.assertNull(executor99);
    }

    @Test
    public void test312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test312");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        java.util.concurrent.Executor executor35 = restAdapter34.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request37 = serializedObjectSupporter36.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter4();
        retrofit.client.Request request39 = serializedObjectSupporter36.deserializeObjectRequest4();
        retrofit.client.Request request40 = restAdapter34.logAndReplaceRequest(request39);
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter34.new RestHandler();
        retrofit.converter.Converter converter42 = restAdapter34.converter;
        java.util.concurrent.Executor executor43 = restAdapter34.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter34.new RestHandler();
        java.util.concurrent.Executor executor46 = restAdapter34.gethttpExecutor();
        java.lang.String str47 = restAdapter34.getTHREAD_PREFIX();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNotNull(request37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(converter42);
        org.junit.Assert.assertNull(executor43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Retrofit-" + "'", str47, "Retrofit-");
    }

    @Test
    public void test313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test313");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        java.util.concurrent.Executor executor42 = restAdapter34.getcallbackExecutor();
        java.lang.String str43 = restAdapter34.getIDLE_THREAD_NAME();
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = restAdapter34.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = restAdapter34.serializedObjectSupporter;
        java.lang.String str46 = serializedObjectSupporter45.deserializeObjectString1();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Retrofit-Idle" + "'", str43, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(serializedObjectSupporter44);
        org.junit.Assert.assertNotNull(serializedObjectSupporter45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Retrofit-" + "'", str46, "Retrofit-");
    }

    @Test
    public void test314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test314");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.Profiler profiler7 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder8 = builder0.setProfiler(profiler7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
    }

    @Test
    public void test315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test315");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.Profiler profiler3 = builder2.profiler;
        java.util.concurrent.Executor executor4 = null;
        builder2.sethttpExecutor(executor4);
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server7 = serializedObjectSupporter6.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder9 = builder2.setRequestInterceptor(requestInterceptor8);
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request11 = serializedObjectSupporter10.deserializeObjectRequest5();
        java.lang.String str12 = serializedObjectSupporter10.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter10.deserializeObjectConverter8();
        retrofit.client.Request request14 = serializedObjectSupporter10.deserializeObjectRequest7();
        retrofit.Server server15 = serializedObjectSupporter10.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder16 = builder2.setServer(server15);
        retrofit.ErrorHandler errorHandler17 = builder2.errorHandler;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(profiler3);
        org.junit.Assert.assertNotNull(server7);
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "POST" + "'", str12, "POST");
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertNotNull(request14);
        org.junit.Assert.assertNotNull(server15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNull(errorHandler17);
    }

    @Test
    public void test316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test316");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        retrofit.Server server42 = restAdapter34.server;
        retrofit.RestAdapter.LogLevel logLevel43 = restAdapter34.logLevel;
        retrofit.converter.Converter converter44 = restAdapter34.getconverter();
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter34.new RestHandler();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertNotNull(server42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(converter44);
    }

    @Test
    public void test317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test317");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("default");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder7 = builder5.setServer("hi!");
        retrofit.converter.Converter converter8 = builder7.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = builder7.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel10 = builder7.logLevel;
        builder4.logLevel = logLevel10;
        java.util.concurrent.Executor executor12 = builder4.httpExecutor;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(converter8);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor12);
    }

    @Test
    public void test318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test318");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString3 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter8();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.client.Request request7 = serializedObjectSupporter0.deserializeObjectRequest6();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter8 = serializedObjectSupporter0.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(typedString3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Retrofit-" + "'", str5, "Retrofit-");
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(request7);
    }

    @Test
    public void test319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test319");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request4 = serializedObjectSupporter3.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter5();
        builder0.converter = gsonConverter5;
        java.util.concurrent.Executor executor7 = null;
        builder0.setcallbackExecutor(executor7);
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder11 = builder9.setServer("hi!");
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("hi!");
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request16 = serializedObjectSupporter15.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter15.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder19 = builder14.setConverter((retrofit.converter.Converter) gsonConverter18);
        java.util.concurrent.Executor executor20 = builder19.getcallbackExecutor();
        retrofit.Server server23 = new retrofit.Server("hi!", "default");
        builder19.server = server23;
        java.util.concurrent.Executor executor25 = null;
        builder19.sethttpExecutor(executor25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request29 = serializedObjectSupporter28.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter28.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter28.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder32 = builder27.setConverter((retrofit.converter.Converter) gsonConverter31);
        java.util.concurrent.Executor executor33 = builder32.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server35 = serializedObjectSupporter34.deserializeObjectServer1();
        java.lang.String str36 = server35.getUrl();
        builder32.server = server35;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request40 = serializedObjectSupporter39.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter39.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter42 = serializedObjectSupporter39.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder43 = builder38.setConverter((retrofit.converter.Converter) gsonConverter42);
        builder38.ensureSaneDefaults();
        retrofit.client.Client.Provider provider45 = builder38.clientProvider;
        java.util.concurrent.Executor executor46 = null;
        java.util.concurrent.Executor executor47 = null;
        retrofit.RequestInterceptor requestInterceptor48 = null;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter50 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request51 = serializedObjectSupporter50.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter52 = serializedObjectSupporter50.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter53 = serializedObjectSupporter50.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder54 = builder49.setConverter((retrofit.converter.Converter) gsonConverter53);
        retrofit.Profiler profiler55 = null;
        retrofit.ErrorHandler errorHandler56 = null;
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        log57.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter(server35, provider45, executor46, executor47, requestInterceptor48, (retrofit.converter.Converter) gsonConverter53, profiler55, errorHandler56, log57, logLevel60);
        retrofit.RestAdapter.Builder builder62 = builder19.setClient(provider45);
        builder13.setclientProvider(provider45);
        retrofit.client.Client.Provider provider64 = builder13.getclientProvider();
        retrofit.RestAdapter.Builder builder65 = builder0.setClient(provider64);
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter67 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request68 = serializedObjectSupporter67.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter69 = serializedObjectSupporter67.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter70 = serializedObjectSupporter67.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder71 = builder66.setConverter((retrofit.converter.Converter) gsonConverter70);
        retrofit.SerializedObjectSupporter serializedObjectSupporter72 = builder71.serializedObjectSupporter;
        java.util.concurrent.Executor executor73 = builder71.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter74 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server75 = serializedObjectSupporter74.deserializeObjectServer1();
        retrofit.client.Request request76 = serializedObjectSupporter74.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler77 = serializedObjectSupporter74.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder78 = builder71.setErrorHandler(errorHandler77);
        builder78.ensureSaneDefaults();
        java.util.concurrent.Executor executor80 = builder78.getcallbackExecutor();
        builder65.sethttpExecutor(executor80);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNull(executor20);
        org.junit.Assert.assertNotNull(request29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNull(executor33);
        org.junit.Assert.assertNotNull(server35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "http://example.com" + "'", str36, "http://example.com");
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(gsonConverter41);
        org.junit.Assert.assertNotNull(gsonConverter42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(provider45);
        org.junit.Assert.assertNotNull(request51);
        org.junit.Assert.assertNotNull(gsonConverter52);
        org.junit.Assert.assertNotNull(gsonConverter53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(provider64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(request68);
        org.junit.Assert.assertNotNull(gsonConverter69);
        org.junit.Assert.assertNotNull(gsonConverter70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNull(serializedObjectSupporter72);
        org.junit.Assert.assertNull(executor73);
        org.junit.Assert.assertNotNull(server75);
        org.junit.Assert.assertNotNull(request76);
        org.junit.Assert.assertNotNull(errorHandler77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(executor80);
    }

    @Test
    public void test320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test320");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString3 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter1();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(typedString3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-" + "'", str4, "Retrofit-");
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(gsonConverter6);
    }

    @Test
    public void test321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test321");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request11 = serializedObjectSupporter10.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter10.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString13 = serializedObjectSupporter10.deserializeObjectTypedOutput2();
        retrofit.client.Request request14 = new retrofit.client.Request("http://example.com/", "Retrofit-", (java.util.List<retrofit.client.Header>) headerList8, (retrofit.mime.TypedOutput) typedString13);
        retrofit.client.Request request15 = new retrofit.client.Request("Retrofit-", "default", (java.util.List<retrofit.client.Header>) headerList3, (retrofit.mime.TypedOutput) typedString13);
        retrofit.mime.TypedOutput typedOutput16 = request15.body;
        java.lang.Class<?> wildcardClass17 = request15.getClass();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNotNull(typedString13);
        org.junit.Assert.assertNotNull(typedOutput16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test322");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = builder5.serializedObjectSupporter;
        java.util.concurrent.Executor executor7 = builder5.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server9 = serializedObjectSupporter8.deserializeObjectServer1();
        retrofit.client.Request request10 = serializedObjectSupporter8.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler11 = serializedObjectSupporter8.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder12 = builder5.setErrorHandler(errorHandler11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder15 = builder13.setServer("hi!");
        retrofit.RestAdapter.Builder builder17 = builder15.setServer("hi!");
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request20 = serializedObjectSupporter19.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter19.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter19.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder23 = builder18.setConverter((retrofit.converter.Converter) gsonConverter22);
        java.util.concurrent.Executor executor24 = builder23.getcallbackExecutor();
        retrofit.Server server27 = new retrofit.Server("hi!", "default");
        builder23.server = server27;
        java.util.concurrent.Executor executor29 = null;
        builder23.sethttpExecutor(executor29);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request33 = serializedObjectSupporter32.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter34 = serializedObjectSupporter32.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter35 = serializedObjectSupporter32.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder36 = builder31.setConverter((retrofit.converter.Converter) gsonConverter35);
        java.util.concurrent.Executor executor37 = builder36.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server39 = serializedObjectSupporter38.deserializeObjectServer1();
        java.lang.String str40 = server39.getUrl();
        builder36.server = server39;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request44 = serializedObjectSupporter43.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter45 = serializedObjectSupporter43.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter43.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder47 = builder42.setConverter((retrofit.converter.Converter) gsonConverter46);
        builder42.ensureSaneDefaults();
        retrofit.client.Client.Provider provider49 = builder42.clientProvider;
        java.util.concurrent.Executor executor50 = null;
        java.util.concurrent.Executor executor51 = null;
        retrofit.RequestInterceptor requestInterceptor52 = null;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter54 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request55 = serializedObjectSupporter54.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter56 = serializedObjectSupporter54.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter57 = serializedObjectSupporter54.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder58 = builder53.setConverter((retrofit.converter.Converter) gsonConverter57);
        retrofit.Profiler profiler59 = null;
        retrofit.ErrorHandler errorHandler60 = null;
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        log61.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter(server39, provider49, executor50, executor51, requestInterceptor52, (retrofit.converter.Converter) gsonConverter57, profiler59, errorHandler60, log61, logLevel64);
        retrofit.RestAdapter.Builder builder66 = builder23.setClient(provider49);
        builder17.setclientProvider(provider49);
        retrofit.client.Client.Provider provider68 = builder17.getclientProvider();
        builder12.setclientProvider(provider68);
        retrofit.client.Client.Provider provider70 = builder12.getclientProvider();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertNotNull(errorHandler11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(request20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(request33);
        org.junit.Assert.assertNotNull(gsonConverter34);
        org.junit.Assert.assertNotNull(gsonConverter35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertNotNull(server39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "http://example.com" + "'", str40, "http://example.com");
        org.junit.Assert.assertNotNull(request44);
        org.junit.Assert.assertNotNull(gsonConverter45);
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(provider49);
        org.junit.Assert.assertNotNull(request55);
        org.junit.Assert.assertNotNull(gsonConverter56);
        org.junit.Assert.assertNotNull(gsonConverter57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(provider68);
        org.junit.Assert.assertNotNull(provider70);
    }

    @Test
    public void test323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test323");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        java.util.concurrent.Executor executor42 = restAdapter34.getcallbackExecutor();
        retrofit.RestAdapter.RestHandler restHandler43 = restAdapter34.new RestHandler();
        retrofit.converter.Converter converter44 = restAdapter34.getconverter();
        retrofit.client.Client.Provider provider45 = restAdapter34.clientProvider;
        retrofit.RestAdapter.Log log46 = restAdapter34.log;
        retrofit.Server server47 = restAdapter34.getserver();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertNotNull(converter44);
        org.junit.Assert.assertNotNull(provider45);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(server47);
    }

    @Test
    public void test324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test324");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        builder0.logLevel = logLevel3;
        boolean boolean5 = logLevel3.log();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test325");
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString14 = serializedObjectSupporter11.deserializeObjectTypedOutput2();
        retrofit.client.Request request15 = new retrofit.client.Request("http://example.com/", "Retrofit-", (java.util.List<retrofit.client.Header>) headerList9, (retrofit.mime.TypedOutput) typedString14);
        retrofit.client.Header[] headerArray18 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList19 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList19, headerArray18);
        retrofit.client.Header[] headerArray23 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList24 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList24, headerArray23);
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request27 = serializedObjectSupporter26.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter26.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString29 = serializedObjectSupporter26.deserializeObjectTypedOutput2();
        retrofit.client.Request request30 = new retrofit.client.Request("http://example.com/", "Retrofit-", (java.util.List<retrofit.client.Header>) headerList24, (retrofit.mime.TypedOutput) typedString29);
        retrofit.client.Request request31 = new retrofit.client.Request("Retrofit-", "default", (java.util.List<retrofit.client.Header>) headerList19, (retrofit.mime.TypedOutput) typedString29);
        retrofit.mime.TypedOutput typedOutput32 = request31.body;
        retrofit.client.Request request33 = new retrofit.client.Request("http://example.com", "http://example.com/", (java.util.List<retrofit.client.Header>) headerList9, typedOutput32);
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request35 = serializedObjectSupporter34.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter34.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString37 = serializedObjectSupporter34.deserializeObjectTypedOutput2();
        java.lang.String str38 = serializedObjectSupporter34.deserializeObjectString1();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter34.deserializeObjectConverter5();
        retrofit.Server server40 = serializedObjectSupporter34.deserializeObjectServer1();
        retrofit.mime.TypedString typedString41 = serializedObjectSupporter34.deserializeObjectTypedOutput2();
        retrofit.client.Request request42 = new retrofit.client.Request("http://example.com", "Retrofit-", (java.util.List<retrofit.client.Header>) headerList9, (retrofit.mime.TypedOutput) typedString41);
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server44 = serializedObjectSupporter43.deserializeObjectServer1();
        retrofit.client.Request request45 = serializedObjectSupporter43.deserializeObjectRequest1();
        retrofit.mime.TypedString typedString46 = serializedObjectSupporter43.deserializeObjectTypedOutput2();
        retrofit.client.Request request47 = new retrofit.client.Request("http://example.com/", "http://example.com/", (java.util.List<retrofit.client.Header>) headerList9, (retrofit.mime.TypedOutput) typedString46);
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertNotNull(typedString14);
        org.junit.Assert.assertNotNull(headerArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(headerArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(request27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(typedString29);
        org.junit.Assert.assertNotNull(typedOutput32);
        org.junit.Assert.assertNotNull(request35);
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertNotNull(typedString37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Retrofit-" + "'", str38, "Retrofit-");
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertNotNull(server40);
        org.junit.Assert.assertNotNull(typedString41);
        org.junit.Assert.assertNotNull(server44);
        org.junit.Assert.assertNotNull(request45);
        org.junit.Assert.assertNotNull(typedString46);
    }

    @Test
    public void test326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test326");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "");
        java.lang.String str3 = server2.name;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
    }

    @Test
    public void test327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test327");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.mime.TypedString typedString4 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "POST" + "'", str2, "POST");
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(typedString4);
    }

    @Test
    public void test328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test328");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        java.util.concurrent.Executor executor3 = null;
        builder2.sethttpExecutor(executor3);
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server6 = serializedObjectSupporter5.deserializeObjectServer1();
        retrofit.client.Request request7 = serializedObjectSupporter5.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler8 = serializedObjectSupporter5.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder9 = builder2.setErrorHandler(errorHandler8);
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request11 = serializedObjectSupporter10.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter10.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder13 = builder9.setConverter((retrofit.converter.Converter) gsonConverter12);
        java.util.concurrent.Executor executor14 = builder13.getcallbackExecutor();
        retrofit.RestAdapter.Builder builder16 = builder13.setServer("Retrofit-");
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(server6);
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertNotNull(errorHandler8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNull(executor14);
        org.junit.Assert.assertNotNull(builder16);
    }

    @Test
    public void test329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test329");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        java.util.concurrent.Executor executor41 = restAdapter34.httpExecutor;
        retrofit.RestAdapter.RestHandler restHandler42 = restAdapter34.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor43 = restAdapter34.getrequestInterceptor();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNull(executor41);
        org.junit.Assert.assertNull(requestInterceptor43);
    }

    @Test
    public void test330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test330");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.Profiler profiler3 = builder2.profiler;
        java.util.concurrent.Executor executor4 = null;
        builder2.sethttpExecutor(executor4);
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server7 = serializedObjectSupporter6.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder9 = builder2.setRequestInterceptor(requestInterceptor8);
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request11 = serializedObjectSupporter10.deserializeObjectRequest5();
        java.lang.String str12 = serializedObjectSupporter10.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter10.deserializeObjectConverter8();
        retrofit.client.Request request14 = serializedObjectSupporter10.deserializeObjectRequest7();
        retrofit.Server server15 = serializedObjectSupporter10.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder16 = builder2.setServer(server15);
        retrofit.RestAdapter.Log log17 = builder2.log;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(profiler3);
        org.junit.Assert.assertNotNull(server7);
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "POST" + "'", str12, "POST");
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertNotNull(request14);
        org.junit.Assert.assertNotNull(server15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNull(log17);
    }

    @Test
    public void test331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test331");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        java.util.concurrent.Executor executor42 = restAdapter34.getcallbackExecutor();
        java.lang.String str43 = restAdapter34.getIDLE_THREAD_NAME();
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = restAdapter34.serializedObjectSupporter;
        retrofit.converter.GsonConverter gsonConverter45 = serializedObjectSupporter44.deserializeObjectConverter1();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter46 = serializedObjectSupporter44.deserializeObjectLogLevel2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Retrofit-Idle" + "'", str43, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(serializedObjectSupporter44);
        org.junit.Assert.assertNotNull(gsonConverter45);
    }

    @Test
    public void test332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test332");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("default");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder7 = builder5.setServer("hi!");
        retrofit.converter.Converter converter8 = builder7.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = builder7.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel10 = builder7.logLevel;
        builder4.logLevel = logLevel10;
        retrofit.RestAdapter.LogLevel logLevel12 = builder4.logLevel;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(converter8);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test333");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString3 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request7 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.mime.TypedOutput typedOutput8 = request7.body;
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(typedString3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-" + "'", str4, "Retrofit-");
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertNull(typedOutput8);
    }

    @Test
    public void test334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test334");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request6 = serializedObjectSupporter5.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter5.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter5.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder9 = builder4.setConverter((retrofit.converter.Converter) gsonConverter8);
        java.util.concurrent.Executor executor10 = builder9.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server12 = serializedObjectSupporter11.deserializeObjectServer1();
        java.lang.String str13 = server12.getUrl();
        builder9.server = server12;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request17 = serializedObjectSupporter16.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter16.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter16.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder20 = builder15.setConverter((retrofit.converter.Converter) gsonConverter19);
        builder15.ensureSaneDefaults();
        retrofit.client.Client.Provider provider22 = builder15.clientProvider;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request28 = serializedObjectSupporter27.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter27.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter27.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder31 = builder26.setConverter((retrofit.converter.Converter) gsonConverter30);
        retrofit.Profiler profiler32 = null;
        retrofit.ErrorHandler errorHandler33 = null;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        log34.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server12, provider22, executor23, executor24, requestInterceptor25, (retrofit.converter.Converter) gsonConverter30, profiler32, errorHandler33, log34, logLevel37);
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request40 = serializedObjectSupporter39.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter39.deserializeObjectConverter4();
        retrofit.client.Request request42 = serializedObjectSupporter39.deserializeObjectRequest7();
        restAdapter38.serializedObjectSupporter = serializedObjectSupporter39;
        builder2.serializedObjectSupporter = serializedObjectSupporter39;
        retrofit.converter.Converter converter45 = builder2.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server47 = serializedObjectSupporter46.deserializeObjectServer1();
        retrofit.client.Request request48 = serializedObjectSupporter46.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler49 = serializedObjectSupporter46.deserializeObjectErrorHandler1();
        builder2.errorHandler = errorHandler49;
        retrofit.SerializedObjectSupporter serializedObjectSupporter51 = builder2.serializedObjectSupporter;
        java.util.concurrent.Executor executor52 = builder2.getcallbackExecutor();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(executor10);
        org.junit.Assert.assertNotNull(server12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "http://example.com" + "'", str13, "http://example.com");
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(provider22);
        org.junit.Assert.assertNotNull(request28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(gsonConverter41);
        org.junit.Assert.assertNotNull(request42);
        org.junit.Assert.assertNull(converter45);
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertNotNull(request48);
        org.junit.Assert.assertNotNull(errorHandler49);
        org.junit.Assert.assertNotNull(serializedObjectSupporter51);
        org.junit.Assert.assertNull(executor52);
    }

    @Test
    public void test335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test335");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        retrofit.client.Client.Provider provider42 = restAdapter34.clientProvider;
        retrofit.Server server43 = restAdapter34.server;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertNotNull(provider42);
        org.junit.Assert.assertNotNull(server43);
    }

    @Test
    public void test336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test336");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("default");
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.HEADERS;
        builder4.logLevel = logLevel5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request9 = serializedObjectSupporter8.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter8.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter8.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder12 = builder7.setConverter((retrofit.converter.Converter) gsonConverter11);
        java.util.concurrent.Executor executor13 = builder12.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server15 = serializedObjectSupporter14.deserializeObjectServer1();
        java.lang.String str16 = server15.getUrl();
        builder12.server = server15;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request20 = serializedObjectSupporter19.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter19.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter19.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder23 = builder18.setConverter((retrofit.converter.Converter) gsonConverter22);
        builder18.ensureSaneDefaults();
        retrofit.client.Client.Provider provider25 = builder18.clientProvider;
        java.util.concurrent.Executor executor26 = null;
        java.util.concurrent.Executor executor27 = null;
        retrofit.RequestInterceptor requestInterceptor28 = null;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request31 = serializedObjectSupporter30.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter32 = serializedObjectSupporter30.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter30.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder34 = builder29.setConverter((retrofit.converter.Converter) gsonConverter33);
        retrofit.Profiler profiler35 = null;
        retrofit.ErrorHandler errorHandler36 = null;
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        log37.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter(server15, provider25, executor26, executor27, requestInterceptor28, (retrofit.converter.Converter) gsonConverter33, profiler35, errorHandler36, log37, logLevel40);
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request43 = serializedObjectSupporter42.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter44 = serializedObjectSupporter42.deserializeObjectConverter4();
        retrofit.client.Request request45 = serializedObjectSupporter42.deserializeObjectRequest7();
        restAdapter41.serializedObjectSupporter = serializedObjectSupporter42;
        java.util.concurrent.Executor executor47 = restAdapter41.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = restAdapter41.serializedObjectSupporter;
        retrofit.converter.GsonConverter gsonConverter49 = serializedObjectSupporter48.deserializeObjectConverter2();
        retrofit.RestAdapter.Builder builder50 = builder4.setConverter((retrofit.converter.Converter) gsonConverter49);
        retrofit.RestAdapter.LogLevel logLevel51 = builder50.logLevel;
        java.util.concurrent.Executor executor52 = builder50.gethttpExecutor();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(request9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNotNull(server15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com" + "'", str16, "http://example.com");
        org.junit.Assert.assertNotNull(request20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(provider25);
        org.junit.Assert.assertNotNull(request31);
        org.junit.Assert.assertNotNull(gsonConverter32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request43);
        org.junit.Assert.assertNotNull(gsonConverter44);
        org.junit.Assert.assertNotNull(request45);
        org.junit.Assert.assertNull(executor47);
        org.junit.Assert.assertNotNull(serializedObjectSupporter48);
        org.junit.Assert.assertNotNull(gsonConverter49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor52);
    }

    @Test
    public void test337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test337");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request4 = serializedObjectSupporter3.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter5();
        builder0.converter = gsonConverter5;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request8 = serializedObjectSupporter7.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter7.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString10 = serializedObjectSupporter7.deserializeObjectTypedOutput2();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString1();
        builder0.serializedObjectSupporter = serializedObjectSupporter7;
        java.util.concurrent.Executor executor13 = builder0.httpExecutor;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder16 = builder14.setServer("hi!");
        retrofit.RestAdapter.Builder builder18 = builder16.setServer("hi!");
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request21 = serializedObjectSupporter20.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter20.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder24 = builder19.setConverter((retrofit.converter.Converter) gsonConverter23);
        java.util.concurrent.Executor executor25 = builder24.getcallbackExecutor();
        retrofit.Server server28 = new retrofit.Server("hi!", "default");
        builder24.server = server28;
        java.util.concurrent.Executor executor30 = null;
        builder24.sethttpExecutor(executor30);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request34 = serializedObjectSupporter33.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter35 = serializedObjectSupporter33.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter33.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder37 = builder32.setConverter((retrofit.converter.Converter) gsonConverter36);
        java.util.concurrent.Executor executor38 = builder37.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server40 = serializedObjectSupporter39.deserializeObjectServer1();
        java.lang.String str41 = server40.getUrl();
        builder37.server = server40;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request45 = serializedObjectSupporter44.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter44.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter47 = serializedObjectSupporter44.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder48 = builder43.setConverter((retrofit.converter.Converter) gsonConverter47);
        builder43.ensureSaneDefaults();
        retrofit.client.Client.Provider provider50 = builder43.clientProvider;
        java.util.concurrent.Executor executor51 = null;
        java.util.concurrent.Executor executor52 = null;
        retrofit.RequestInterceptor requestInterceptor53 = null;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request56 = serializedObjectSupporter55.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter57 = serializedObjectSupporter55.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter58 = serializedObjectSupporter55.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder59 = builder54.setConverter((retrofit.converter.Converter) gsonConverter58);
        retrofit.Profiler profiler60 = null;
        retrofit.ErrorHandler errorHandler61 = null;
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        log62.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter(server40, provider50, executor51, executor52, requestInterceptor53, (retrofit.converter.Converter) gsonConverter58, profiler60, errorHandler61, log62, logLevel65);
        retrofit.RestAdapter.Builder builder67 = builder24.setClient(provider50);
        builder18.setclientProvider(provider50);
        retrofit.client.Client.Provider provider69 = builder18.getclientProvider();
        retrofit.RestAdapter.Builder builder70 = builder0.setClient(provider69);
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder72 = builder70.setLogLevel(logLevel71);
        builder72.ensureSaneDefaults();
        retrofit.client.Client.Provider provider74 = builder72.clientProvider;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(typedString10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-" + "'", str11, "Retrofit-");
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNotNull(request34);
        org.junit.Assert.assertNotNull(gsonConverter35);
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(executor38);
        org.junit.Assert.assertNotNull(server40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "http://example.com" + "'", str41, "http://example.com");
        org.junit.Assert.assertNotNull(request45);
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNotNull(gsonConverter47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(provider50);
        org.junit.Assert.assertNotNull(request56);
        org.junit.Assert.assertNotNull(gsonConverter57);
        org.junit.Assert.assertNotNull(gsonConverter58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(provider69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(provider74);
    }

    @Test
    public void test338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test338");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.ErrorHandler errorHandler2 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest4();
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertNotNull(errorHandler2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(request4);
    }

    @Test
    public void test339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test339");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter8();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString3();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "POST" + "'", str2, "POST");
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "GET" + "'", str4, "GET");
    }

    @Test
    public void test340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test340");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        java.lang.String str42 = restAdapter34.getTHREAD_PREFIX();
        retrofit.RestAdapter.RestHandler restHandler43 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler44 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder47 = builder45.setServer("hi!");
        retrofit.converter.Converter converter48 = builder47.converter;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter50 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request51 = serializedObjectSupporter50.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter52 = serializedObjectSupporter50.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter53 = serializedObjectSupporter50.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder54 = builder49.setConverter((retrofit.converter.Converter) gsonConverter53);
        java.util.concurrent.Executor executor55 = builder54.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server57 = serializedObjectSupporter56.deserializeObjectServer1();
        java.lang.String str58 = server57.getUrl();
        builder54.server = server57;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter61 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request62 = serializedObjectSupporter61.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter63 = serializedObjectSupporter61.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter64 = serializedObjectSupporter61.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder65 = builder60.setConverter((retrofit.converter.Converter) gsonConverter64);
        builder60.ensureSaneDefaults();
        retrofit.client.Client.Provider provider67 = builder60.clientProvider;
        java.util.concurrent.Executor executor68 = null;
        java.util.concurrent.Executor executor69 = null;
        retrofit.RequestInterceptor requestInterceptor70 = null;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter72 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request73 = serializedObjectSupporter72.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter74 = serializedObjectSupporter72.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter75 = serializedObjectSupporter72.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder76 = builder71.setConverter((retrofit.converter.Converter) gsonConverter75);
        retrofit.Profiler profiler77 = null;
        retrofit.ErrorHandler errorHandler78 = null;
        retrofit.RestAdapter.Log log79 = retrofit.RestAdapter.Log.NONE;
        log79.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel82 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter83 = new retrofit.RestAdapter(server57, provider67, executor68, executor69, requestInterceptor70, (retrofit.converter.Converter) gsonConverter75, profiler77, errorHandler78, log79, logLevel82);
        retrofit.SerializedObjectSupporter serializedObjectSupporter84 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request85 = serializedObjectSupporter84.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter86 = serializedObjectSupporter84.deserializeObjectConverter4();
        retrofit.client.Request request87 = serializedObjectSupporter84.deserializeObjectRequest7();
        restAdapter83.serializedObjectSupporter = serializedObjectSupporter84;
        builder47.serializedObjectSupporter = serializedObjectSupporter84;
        retrofit.client.Request request90 = serializedObjectSupporter84.deserializeObjectRequest7();
        retrofit.client.Request request91 = serializedObjectSupporter84.deserializeObjectRequest1();
        restHandler44.serializedObjectSupporter = serializedObjectSupporter84;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Retrofit-" + "'", str42, "Retrofit-");
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(converter48);
        org.junit.Assert.assertNotNull(request51);
        org.junit.Assert.assertNotNull(gsonConverter52);
        org.junit.Assert.assertNotNull(gsonConverter53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(executor55);
        org.junit.Assert.assertNotNull(server57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "http://example.com" + "'", str58, "http://example.com");
        org.junit.Assert.assertNotNull(request62);
        org.junit.Assert.assertNotNull(gsonConverter63);
        org.junit.Assert.assertNotNull(gsonConverter64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(provider67);
        org.junit.Assert.assertNotNull(request73);
        org.junit.Assert.assertNotNull(gsonConverter74);
        org.junit.Assert.assertNotNull(gsonConverter75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request85);
        org.junit.Assert.assertNotNull(gsonConverter86);
        org.junit.Assert.assertNotNull(request87);
        org.junit.Assert.assertNotNull(request90);
        org.junit.Assert.assertNotNull(request91);
    }

    @Test
    public void test341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test341");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request6 = serializedObjectSupporter5.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter5.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter5.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder9 = builder4.setConverter((retrofit.converter.Converter) gsonConverter8);
        java.util.concurrent.Executor executor10 = builder9.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server12 = serializedObjectSupporter11.deserializeObjectServer1();
        java.lang.String str13 = server12.getUrl();
        builder9.server = server12;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request17 = serializedObjectSupporter16.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter16.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter16.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder20 = builder15.setConverter((retrofit.converter.Converter) gsonConverter19);
        builder15.ensureSaneDefaults();
        retrofit.client.Client.Provider provider22 = builder15.clientProvider;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request28 = serializedObjectSupporter27.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter27.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter27.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder31 = builder26.setConverter((retrofit.converter.Converter) gsonConverter30);
        retrofit.Profiler profiler32 = null;
        retrofit.ErrorHandler errorHandler33 = null;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        log34.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server12, provider22, executor23, executor24, requestInterceptor25, (retrofit.converter.Converter) gsonConverter30, profiler32, errorHandler33, log34, logLevel37);
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request40 = serializedObjectSupporter39.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter39.deserializeObjectConverter4();
        retrofit.client.Request request42 = serializedObjectSupporter39.deserializeObjectRequest7();
        restAdapter38.serializedObjectSupporter = serializedObjectSupporter39;
        builder2.serializedObjectSupporter = serializedObjectSupporter39;
        retrofit.client.Request request45 = serializedObjectSupporter39.deserializeObjectRequest2();
        retrofit.client.Request request46 = serializedObjectSupporter39.deserializeObjectRequest4();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(executor10);
        org.junit.Assert.assertNotNull(server12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "http://example.com" + "'", str13, "http://example.com");
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(provider22);
        org.junit.Assert.assertNotNull(request28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(gsonConverter41);
        org.junit.Assert.assertNotNull(request42);
        org.junit.Assert.assertNotNull(request45);
        org.junit.Assert.assertNotNull(request46);
    }

    @Test
    public void test342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test342");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        retrofit.client.Request request42 = serializedObjectSupporter41.deserializeObjectRequest5();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertNotNull(request42);
    }

    @Test
    public void test343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test343");
        retrofit.Server server2 = new retrofit.Server("hi!", "http://example.com");
    }

    @Test
    public void test344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test344");
        retrofit.Server server2 = new retrofit.Server("", "http://example.com/");
        java.lang.String str3 = server2.getName();
        java.lang.String str4 = server2.getapiUrl();
        java.lang.String str5 = server2.getUrl();
        java.lang.String str6 = server2.getUrl();
        java.lang.String str7 = server2.getDEFAULT_NAME();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "default" + "'", str7, "default");
    }

    @Test
    public void test345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test345");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        java.util.concurrent.Executor executor35 = restAdapter34.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request37 = serializedObjectSupporter36.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter4();
        retrofit.client.Request request39 = serializedObjectSupporter36.deserializeObjectRequest4();
        retrofit.client.Request request40 = restAdapter34.logAndReplaceRequest(request39);
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter34.new RestHandler();
        retrofit.converter.Converter converter42 = restAdapter34.converter;
        java.util.concurrent.Executor executor43 = restAdapter34.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter34.getLogLevel();
        retrofit.converter.Converter converter45 = restAdapter34.getconverter();
        retrofit.RequestInterceptor requestInterceptor46 = restAdapter34.requestInterceptor;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNotNull(request37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(converter42);
        org.junit.Assert.assertNull(executor43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(converter45);
        org.junit.Assert.assertNull(requestInterceptor46);
    }

    @Test
    public void test346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test346");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString3 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.Server server6 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str7 = server6.name;
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(typedString3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-" + "'", str4, "Retrofit-");
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(server6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "default" + "'", str7, "default");
    }

    @Test
    public void test347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test347");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = builder5.serializedObjectSupporter;
        java.util.concurrent.Executor executor7 = builder5.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server9 = serializedObjectSupporter8.deserializeObjectServer1();
        retrofit.client.Request request10 = serializedObjectSupporter8.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler11 = serializedObjectSupporter8.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder12 = builder5.setErrorHandler(errorHandler11);
        retrofit.RestAdapter.LogLevel logLevel13 = builder12.logLevel;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder16 = builder14.setServer("hi!");
        java.util.concurrent.Executor executor17 = null;
        builder16.sethttpExecutor(executor17);
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server20 = serializedObjectSupporter19.deserializeObjectServer1();
        retrofit.client.Request request21 = serializedObjectSupporter19.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler22 = serializedObjectSupporter19.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder23 = builder16.setErrorHandler(errorHandler22);
        retrofit.RestAdapter.Builder builder24 = builder12.setErrorHandler(errorHandler22);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertNotNull(errorHandler11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(server20);
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(errorHandler22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder24);
    }

    @Test
    public void test348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test348");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = builder5.serializedObjectSupporter;
        java.util.concurrent.Executor executor7 = builder5.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server9 = serializedObjectSupporter8.deserializeObjectServer1();
        retrofit.client.Request request10 = serializedObjectSupporter8.deserializeObjectRequest8();
        retrofit.Server server11 = serializedObjectSupporter8.deserializeObjectServer1();
        builder5.server = server11;
        java.util.concurrent.Executor executor13 = null;
        builder5.httpExecutor = executor13;
        retrofit.RestAdapter.Log log15 = builder5.log;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNull(log15);
    }

    @Test
    public void test349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test349");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request6 = serializedObjectSupporter5.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter5.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter5.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder9 = builder4.setConverter((retrofit.converter.Converter) gsonConverter8);
        java.util.concurrent.Executor executor10 = builder9.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server12 = serializedObjectSupporter11.deserializeObjectServer1();
        java.lang.String str13 = server12.getUrl();
        builder9.server = server12;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request17 = serializedObjectSupporter16.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter16.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter16.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder20 = builder15.setConverter((retrofit.converter.Converter) gsonConverter19);
        builder15.ensureSaneDefaults();
        retrofit.client.Client.Provider provider22 = builder15.clientProvider;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request28 = serializedObjectSupporter27.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter27.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter27.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder31 = builder26.setConverter((retrofit.converter.Converter) gsonConverter30);
        retrofit.Profiler profiler32 = null;
        retrofit.ErrorHandler errorHandler33 = null;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        log34.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server12, provider22, executor23, executor24, requestInterceptor25, (retrofit.converter.Converter) gsonConverter30, profiler32, errorHandler33, log34, logLevel37);
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request40 = serializedObjectSupporter39.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter39.deserializeObjectConverter4();
        retrofit.client.Request request42 = serializedObjectSupporter39.deserializeObjectRequest7();
        restAdapter38.serializedObjectSupporter = serializedObjectSupporter39;
        builder2.serializedObjectSupporter = serializedObjectSupporter39;
        java.lang.String str45 = serializedObjectSupporter39.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter39.deserializeObjectConverter5();
        retrofit.RequestInterceptor requestInterceptor47 = serializedObjectSupporter39.deserializeObjectRequestInterceptor1();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter48 = serializedObjectSupporter39.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(executor10);
        org.junit.Assert.assertNotNull(server12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "http://example.com" + "'", str13, "http://example.com");
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(provider22);
        org.junit.Assert.assertNotNull(request28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(gsonConverter41);
        org.junit.Assert.assertNotNull(request42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "http://example.com/" + "'", str45, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNotNull(requestInterceptor47);
    }

    @Test
    public void test350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test350");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = null;
        restAdapter34.setLogLevel(logLevel35);
        java.util.concurrent.Executor executor37 = restAdapter34.gethttpExecutor();
        retrofit.converter.Converter converter38 = restAdapter34.converter;
        retrofit.ErrorHandler errorHandler39 = restAdapter34.errorHandler;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("hi!");
        retrofit.converter.Converter converter43 = builder42.converter;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request46 = serializedObjectSupporter45.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter47 = serializedObjectSupporter45.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter48 = serializedObjectSupporter45.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder49 = builder44.setConverter((retrofit.converter.Converter) gsonConverter48);
        java.util.concurrent.Executor executor50 = builder49.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter51 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server52 = serializedObjectSupporter51.deserializeObjectServer1();
        java.lang.String str53 = server52.getUrl();
        builder49.server = server52;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request57 = serializedObjectSupporter56.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter58 = serializedObjectSupporter56.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter59 = serializedObjectSupporter56.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder60 = builder55.setConverter((retrofit.converter.Converter) gsonConverter59);
        builder55.ensureSaneDefaults();
        retrofit.client.Client.Provider provider62 = builder55.clientProvider;
        java.util.concurrent.Executor executor63 = null;
        java.util.concurrent.Executor executor64 = null;
        retrofit.RequestInterceptor requestInterceptor65 = null;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter67 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request68 = serializedObjectSupporter67.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter69 = serializedObjectSupporter67.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter70 = serializedObjectSupporter67.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder71 = builder66.setConverter((retrofit.converter.Converter) gsonConverter70);
        retrofit.Profiler profiler72 = null;
        retrofit.ErrorHandler errorHandler73 = null;
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        log74.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter78 = new retrofit.RestAdapter(server52, provider62, executor63, executor64, requestInterceptor65, (retrofit.converter.Converter) gsonConverter70, profiler72, errorHandler73, log74, logLevel77);
        retrofit.SerializedObjectSupporter serializedObjectSupporter79 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request80 = serializedObjectSupporter79.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter81 = serializedObjectSupporter79.deserializeObjectConverter4();
        retrofit.client.Request request82 = serializedObjectSupporter79.deserializeObjectRequest7();
        restAdapter78.serializedObjectSupporter = serializedObjectSupporter79;
        builder42.serializedObjectSupporter = serializedObjectSupporter79;
        retrofit.client.Request request85 = serializedObjectSupporter79.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter79;
        retrofit.RestAdapter.LogLevel logLevel87 = restAdapter34.logLevel;
        retrofit.Server server88 = restAdapter34.server;
        java.util.concurrent.Executor executor89 = restAdapter34.callbackExecutor;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertNotNull(converter38);
        org.junit.Assert.assertNull(errorHandler39);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(converter43);
        org.junit.Assert.assertNotNull(request46);
        org.junit.Assert.assertNotNull(gsonConverter47);
        org.junit.Assert.assertNotNull(gsonConverter48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNull(executor50);
        org.junit.Assert.assertNotNull(server52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "http://example.com" + "'", str53, "http://example.com");
        org.junit.Assert.assertNotNull(request57);
        org.junit.Assert.assertNotNull(gsonConverter58);
        org.junit.Assert.assertNotNull(gsonConverter59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(provider62);
        org.junit.Assert.assertNotNull(request68);
        org.junit.Assert.assertNotNull(gsonConverter69);
        org.junit.Assert.assertNotNull(gsonConverter70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request80);
        org.junit.Assert.assertNotNull(gsonConverter81);
        org.junit.Assert.assertNotNull(request82);
        org.junit.Assert.assertNotNull(request85);
        org.junit.Assert.assertNull(logLevel87);
        org.junit.Assert.assertNotNull(server88);
        org.junit.Assert.assertNull(executor89);
    }

    @Test
    public void test351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test351");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.Server server3 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest4();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections collections6 = serializedObjectSupporter0.deserializeObjectList1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Collections$UnmodifiableRandomAccessList cannot be cast to java.util.Collections");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(request5);
    }

    @Test
    public void test352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test352");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        java.util.concurrent.Executor executor35 = restAdapter34.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request37 = serializedObjectSupporter36.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter4();
        retrofit.client.Request request39 = serializedObjectSupporter36.deserializeObjectRequest4();
        retrofit.client.Request request40 = restAdapter34.logAndReplaceRequest(request39);
        retrofit.converter.Converter converter41 = restAdapter34.converter;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNotNull(request37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(converter41);
    }

    @Test
    public void test353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test353");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        java.util.concurrent.Executor executor42 = restAdapter34.getcallbackExecutor();
        java.lang.String str43 = restAdapter34.getIDLE_THREAD_NAME();
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = restAdapter34.serializedObjectSupporter;
        java.util.concurrent.Executor executor45 = restAdapter34.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request47 = serializedObjectSupporter46.deserializeObjectRequest5();
        java.lang.String str48 = serializedObjectSupporter46.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter49 = serializedObjectSupporter46.deserializeObjectConverter8();
        retrofit.client.Request request50 = serializedObjectSupporter46.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter46;
        retrofit.RestAdapter.Log log52 = restAdapter34.log;
        retrofit.converter.Converter converter53 = restAdapter34.getconverter();
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter34.logLevel;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Retrofit-Idle" + "'", str43, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(serializedObjectSupporter44);
        org.junit.Assert.assertNull(executor45);
        org.junit.Assert.assertNotNull(request47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "POST" + "'", str48, "POST");
        org.junit.Assert.assertNotNull(gsonConverter49);
        org.junit.Assert.assertNotNull(request50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(converter53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test354");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = null;
        restAdapter34.setLogLevel(logLevel35);
        retrofit.Server server37 = restAdapter34.server;
        retrofit.RestAdapter.RestHandler restHandler38 = restAdapter34.new RestHandler();
        java.lang.Throwable throwable39 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter34.logException(throwable39, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server37);
    }

    @Test
    public void test355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test355");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        java.lang.String str35 = restAdapter34.getIDLE_THREAD_NAME();
        java.lang.String str36 = restAdapter34.getTHREAD_PREFIX();
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = restAdapter34.serializedObjectSupporter;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Retrofit-Idle" + "'", str35, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Retrofit-" + "'", str36, "Retrofit-");
        org.junit.Assert.assertNull(serializedObjectSupporter37);
    }

    @Test
    public void test356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test356");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request4 = serializedObjectSupporter3.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter5();
        builder0.converter = gsonConverter5;
        java.util.concurrent.Executor executor7 = null;
        builder0.setcallbackExecutor(executor7);
        retrofit.RestAdapter.Builder builder10 = builder0.setServer("POST");
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter11.deserializeObjectConverter8();
        java.lang.String str13 = serializedObjectSupporter11.deserializeObjectString1();
        retrofit.ErrorHandler errorHandler14 = serializedObjectSupporter11.deserializeObjectErrorHandler1();
        builder10.errorHandler = errorHandler14;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-" + "'", str13, "Retrofit-");
        org.junit.Assert.assertNotNull(errorHandler14);
    }

    @Test
    public void test357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test357");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        java.util.concurrent.Executor executor35 = restAdapter34.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request37 = serializedObjectSupporter36.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter4();
        retrofit.client.Request request39 = serializedObjectSupporter36.deserializeObjectRequest4();
        retrofit.client.Request request40 = restAdapter34.logAndReplaceRequest(request39);
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter34.new RestHandler();
        retrofit.converter.Converter converter42 = restAdapter34.converter;
        java.util.concurrent.Executor executor43 = restAdapter34.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel45 = restAdapter34.logLevel;
        retrofit.RestAdapter.Log log46 = restAdapter34.log;
        java.util.concurrent.Executor executor47 = restAdapter34.callbackExecutor;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNotNull(request37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(converter42);
        org.junit.Assert.assertNull(executor43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNull(executor47);
    }

    @Test
    public void test358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test358");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter1();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest2();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter7 = serializedObjectSupporter0.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(request6);
    }

    @Test
    public void test359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test359");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = builder2.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request7 = serializedObjectSupporter6.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter6.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter6.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder10 = builder5.setConverter((retrofit.converter.Converter) gsonConverter9);
        java.util.concurrent.Executor executor11 = builder10.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server13 = serializedObjectSupporter12.deserializeObjectServer1();
        java.lang.String str14 = server13.getUrl();
        builder10.server = server13;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request18 = serializedObjectSupporter17.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter17.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter17.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder21 = builder16.setConverter((retrofit.converter.Converter) gsonConverter20);
        builder16.ensureSaneDefaults();
        retrofit.client.Client.Provider provider23 = builder16.clientProvider;
        java.util.concurrent.Executor executor24 = null;
        java.util.concurrent.Executor executor25 = null;
        retrofit.RequestInterceptor requestInterceptor26 = null;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request29 = serializedObjectSupporter28.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter28.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter28.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder32 = builder27.setConverter((retrofit.converter.Converter) gsonConverter31);
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        log35.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter(server13, provider23, executor24, executor25, requestInterceptor26, (retrofit.converter.Converter) gsonConverter31, profiler33, errorHandler34, log35, logLevel38);
        retrofit.client.Client.Provider provider40 = restAdapter39.clientProvider;
        builder2.clientProvider = provider40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request44 = serializedObjectSupporter43.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter45 = serializedObjectSupporter43.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter43.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder47 = builder42.setConverter((retrofit.converter.Converter) gsonConverter46);
        java.util.concurrent.Executor executor48 = builder47.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server50 = serializedObjectSupporter49.deserializeObjectServer1();
        java.lang.String str51 = server50.getUrl();
        builder47.server = server50;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter54 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request55 = serializedObjectSupporter54.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter56 = serializedObjectSupporter54.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter57 = serializedObjectSupporter54.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder58 = builder53.setConverter((retrofit.converter.Converter) gsonConverter57);
        builder53.ensureSaneDefaults();
        retrofit.client.Client.Provider provider60 = builder53.clientProvider;
        java.util.concurrent.Executor executor61 = null;
        java.util.concurrent.Executor executor62 = null;
        retrofit.RequestInterceptor requestInterceptor63 = null;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request66 = serializedObjectSupporter65.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter67 = serializedObjectSupporter65.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter68 = serializedObjectSupporter65.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder69 = builder64.setConverter((retrofit.converter.Converter) gsonConverter68);
        retrofit.Profiler profiler70 = null;
        retrofit.ErrorHandler errorHandler71 = null;
        retrofit.RestAdapter.Log log72 = retrofit.RestAdapter.Log.NONE;
        log72.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter76 = new retrofit.RestAdapter(server50, provider60, executor61, executor62, requestInterceptor63, (retrofit.converter.Converter) gsonConverter68, profiler70, errorHandler71, log72, logLevel75);
        retrofit.SerializedObjectSupporter serializedObjectSupporter77 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request78 = serializedObjectSupporter77.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter79 = serializedObjectSupporter77.deserializeObjectConverter4();
        retrofit.client.Request request80 = serializedObjectSupporter77.deserializeObjectRequest7();
        restAdapter76.serializedObjectSupporter = serializedObjectSupporter77;
        java.util.concurrent.Executor executor82 = restAdapter76.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter83 = restAdapter76.serializedObjectSupporter;
        java.lang.String str84 = serializedObjectSupporter83.deserializeObjectString2();
        retrofit.converter.GsonConverter gsonConverter85 = serializedObjectSupporter83.deserializeObjectConverter3();
        retrofit.RestAdapter.Builder builder86 = builder2.setConverter((retrofit.converter.Converter) gsonConverter85);
        retrofit.RestAdapter.Builder builder88 = builder86.setServer("Retrofit-");
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(serializedObjectSupporter4);
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "http://example.com" + "'", str14, "http://example.com");
        org.junit.Assert.assertNotNull(request18);
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(provider23);
        org.junit.Assert.assertNotNull(request29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(provider40);
        org.junit.Assert.assertNotNull(request44);
        org.junit.Assert.assertNotNull(gsonConverter45);
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(executor48);
        org.junit.Assert.assertNotNull(server50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "http://example.com" + "'", str51, "http://example.com");
        org.junit.Assert.assertNotNull(request55);
        org.junit.Assert.assertNotNull(gsonConverter56);
        org.junit.Assert.assertNotNull(gsonConverter57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(provider60);
        org.junit.Assert.assertNotNull(request66);
        org.junit.Assert.assertNotNull(gsonConverter67);
        org.junit.Assert.assertNotNull(gsonConverter68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request78);
        org.junit.Assert.assertNotNull(gsonConverter79);
        org.junit.Assert.assertNotNull(request80);
        org.junit.Assert.assertNull(executor82);
        org.junit.Assert.assertNotNull(serializedObjectSupporter83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Retrofit-Idle" + "'", str84, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(gsonConverter85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder88);
    }

    @Test
    public void test360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test360");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        builder0.logLevel = logLevel3;
        retrofit.client.Client.Provider provider5 = builder0.clientProvider;
        java.util.concurrent.Executor executor6 = null;
        builder0.setcallbackExecutor(executor6);
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter8.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder10 = builder0.setConverter((retrofit.converter.Converter) gsonConverter9);
        retrofit.Profiler profiler11 = builder10.profiler;
        retrofit.RequestInterceptor requestInterceptor12 = builder10.requestInterceptor;
        retrofit.Profiler profiler13 = null;
        builder10.profiler = profiler13;
        retrofit.Profiler profiler15 = builder10.profiler;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(requestInterceptor12);
        org.junit.Assert.assertNull(profiler15);
    }

    @Test
    public void test361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test361");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.converter.GsonConverter gsonConverter1 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.Server server3 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        org.junit.Assert.assertNotNull(gsonConverter1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-Idle" + "'", str4, "Retrofit-Idle");
    }

    @Test
    public void test362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test362");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request5 = serializedObjectSupporter4.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter4.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder8 = builder3.setConverter((retrofit.converter.Converter) gsonConverter7);
        java.util.concurrent.Executor executor9 = builder8.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server11 = serializedObjectSupporter10.deserializeObjectServer1();
        java.lang.String str12 = server11.getUrl();
        builder8.server = server11;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request16 = serializedObjectSupporter15.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter15.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder19 = builder14.setConverter((retrofit.converter.Converter) gsonConverter18);
        builder14.ensureSaneDefaults();
        retrofit.client.Client.Provider provider21 = builder14.clientProvider;
        java.util.concurrent.Executor executor22 = null;
        java.util.concurrent.Executor executor23 = null;
        retrofit.RequestInterceptor requestInterceptor24 = null;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request27 = serializedObjectSupporter26.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter26.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder30 = builder25.setConverter((retrofit.converter.Converter) gsonConverter29);
        retrofit.Profiler profiler31 = null;
        retrofit.ErrorHandler errorHandler32 = null;
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        log33.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server11, provider21, executor22, executor23, requestInterceptor24, (retrofit.converter.Converter) gsonConverter29, profiler31, errorHandler32, log33, logLevel36);
        retrofit.client.Client.Provider provider38 = restAdapter37.clientProvider;
        java.util.concurrent.Executor executor39 = restAdapter37.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request41 = serializedObjectSupporter40.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter42 = serializedObjectSupporter40.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter40.deserializeObjectConverter8();
        retrofit.client.Request request44 = serializedObjectSupporter40.deserializeObjectRequest5();
        retrofit.Server server45 = serializedObjectSupporter40.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request48 = serializedObjectSupporter47.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter49 = serializedObjectSupporter47.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter50 = serializedObjectSupporter47.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder51 = builder46.setConverter((retrofit.converter.Converter) gsonConverter50);
        builder46.ensureSaneDefaults();
        retrofit.client.Client.Provider provider53 = builder46.clientProvider;
        java.util.concurrent.Executor executor54 = null;
        java.util.concurrent.Executor executor55 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server57 = serializedObjectSupporter56.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor58 = serializedObjectSupporter56.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request61 = serializedObjectSupporter60.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter62 = serializedObjectSupporter60.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter63 = serializedObjectSupporter60.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder64 = builder59.setConverter((retrofit.converter.Converter) gsonConverter63);
        retrofit.Profiler profiler65 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter66 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server67 = serializedObjectSupporter66.deserializeObjectServer1();
        retrofit.client.Request request68 = serializedObjectSupporter66.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler69 = serializedObjectSupporter66.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        log70.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter74 = new retrofit.RestAdapter(server45, provider53, executor54, executor55, requestInterceptor58, (retrofit.converter.Converter) gsonConverter63, profiler65, errorHandler69, log70, logLevel73);
        boolean boolean75 = logLevel73.log();
        restAdapter37.logLevel = logLevel73;
        retrofit.RestAdapter.Builder builder77 = builder0.setLogLevel(logLevel73);
        java.util.concurrent.Executor executor78 = builder0.getcallbackExecutor();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com" + "'", str12, "http://example.com");
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(provider21);
        org.junit.Assert.assertNotNull(request27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(provider38);
        org.junit.Assert.assertNull(executor39);
        org.junit.Assert.assertNotNull(request41);
        org.junit.Assert.assertNotNull(gsonConverter42);
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertNotNull(request44);
        org.junit.Assert.assertNotNull(server45);
        org.junit.Assert.assertNotNull(request48);
        org.junit.Assert.assertNotNull(gsonConverter49);
        org.junit.Assert.assertNotNull(gsonConverter50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(provider53);
        org.junit.Assert.assertNotNull(server57);
        org.junit.Assert.assertNotNull(requestInterceptor58);
        org.junit.Assert.assertNotNull(request61);
        org.junit.Assert.assertNotNull(gsonConverter62);
        org.junit.Assert.assertNotNull(gsonConverter63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(server67);
        org.junit.Assert.assertNotNull(request68);
        org.junit.Assert.assertNotNull(errorHandler69);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNull(executor78);
    }

    @Test
    public void test363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test363");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = builder5.serializedObjectSupporter;
        java.util.concurrent.Executor executor7 = builder5.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server9 = serializedObjectSupporter8.deserializeObjectServer1();
        retrofit.client.Request request10 = serializedObjectSupporter8.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler11 = serializedObjectSupporter8.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder12 = builder5.setErrorHandler(errorHandler11);
        retrofit.RestAdapter.Builder builder14 = builder5.setServer("hi!");
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server16 = serializedObjectSupporter15.deserializeObjectServer1();
        retrofit.client.Request request17 = serializedObjectSupporter15.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler18 = serializedObjectSupporter15.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder19 = builder5.setErrorHandler(errorHandler18);
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request21 = serializedObjectSupporter20.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString23 = serializedObjectSupporter20.deserializeObjectTypedOutput2();
        java.lang.String str24 = serializedObjectSupporter20.deserializeObjectString1();
        retrofit.client.Request request25 = serializedObjectSupporter20.deserializeObjectRequest4();
        retrofit.ErrorHandler errorHandler26 = serializedObjectSupporter20.deserializeObjectErrorHandler1();
        builder5.errorHandler = errorHandler26;
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request29 = serializedObjectSupporter28.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter28.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter28.deserializeObjectConverter8();
        retrofit.client.Request request32 = serializedObjectSupporter28.deserializeObjectRequest5();
        retrofit.Server server33 = serializedObjectSupporter28.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter35.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder39 = builder34.setConverter((retrofit.converter.Converter) gsonConverter38);
        builder34.ensureSaneDefaults();
        retrofit.client.Client.Provider provider41 = builder34.clientProvider;
        java.util.concurrent.Executor executor42 = null;
        java.util.concurrent.Executor executor43 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server45 = serializedObjectSupporter44.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor46 = serializedObjectSupporter44.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request49 = serializedObjectSupporter48.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter50 = serializedObjectSupporter48.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter51 = serializedObjectSupporter48.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder52 = builder47.setConverter((retrofit.converter.Converter) gsonConverter51);
        retrofit.Profiler profiler53 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter54 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server55 = serializedObjectSupporter54.deserializeObjectServer1();
        retrofit.client.Request request56 = serializedObjectSupporter54.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler57 = serializedObjectSupporter54.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        log58.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter62 = new retrofit.RestAdapter(server33, provider41, executor42, executor43, requestInterceptor46, (retrofit.converter.Converter) gsonConverter51, profiler53, errorHandler57, log58, logLevel61);
        builder5.clientProvider = provider41;
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        log64.log("hi!");
        log64.log("default");
        log64.log("http://example.com/");
        log64.log("POST");
        retrofit.RestAdapter.Builder builder73 = builder5.setLog(log64);
        java.util.concurrent.Executor executor74 = builder5.gethttpExecutor();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertNotNull(errorHandler11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(errorHandler18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(typedString23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Retrofit-" + "'", str24, "Retrofit-");
        org.junit.Assert.assertNotNull(request25);
        org.junit.Assert.assertNotNull(errorHandler26);
        org.junit.Assert.assertNotNull(request29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(request32);
        org.junit.Assert.assertNotNull(server33);
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(provider41);
        org.junit.Assert.assertNotNull(server45);
        org.junit.Assert.assertNotNull(requestInterceptor46);
        org.junit.Assert.assertNotNull(request49);
        org.junit.Assert.assertNotNull(gsonConverter50);
        org.junit.Assert.assertNotNull(gsonConverter51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(server55);
        org.junit.Assert.assertNotNull(request56);
        org.junit.Assert.assertNotNull(errorHandler57);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNull(executor74);
    }

    @Test
    public void test364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test364");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = null;
        restAdapter34.setLogLevel(logLevel35);
        retrofit.Server server37 = restAdapter34.server;
        retrofit.RestAdapter.RestHandler restHandler38 = restAdapter34.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = restAdapter34.serializedObjectSupporter;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter34.getLogLevel();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNull(serializedObjectSupporter39);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNull(logLevel41);
    }

    @Test
    public void test365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test365");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        java.util.concurrent.Executor executor42 = restAdapter34.getcallbackExecutor();
        retrofit.RestAdapter.RestHandler restHandler43 = restAdapter34.new RestHandler();
        retrofit.converter.Converter converter44 = restAdapter34.getconverter();
        retrofit.client.Client.Provider provider45 = restAdapter34.clientProvider;
        retrofit.Profiler profiler46 = restAdapter34.profiler;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertNotNull(converter44);
        org.junit.Assert.assertNotNull(provider45);
        org.junit.Assert.assertNull(profiler46);
    }

    @Test
    public void test366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test366");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        java.util.concurrent.Executor executor35 = restAdapter34.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request37 = serializedObjectSupporter36.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter4();
        retrofit.client.Request request39 = serializedObjectSupporter36.deserializeObjectRequest4();
        retrofit.client.Request request40 = restAdapter34.logAndReplaceRequest(request39);
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter34.new RestHandler();
        retrofit.converter.Converter converter42 = restAdapter34.converter;
        java.util.concurrent.Executor executor43 = restAdapter34.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter34.setLogLevel(logLevel46);
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request49 = serializedObjectSupporter48.deserializeObjectRequest5();
        retrofit.client.Request request50 = restAdapter34.logAndReplaceRequest(request49);
        java.util.List<retrofit.client.Header> headerList51 = request50.headers;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNotNull(request37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(converter42);
        org.junit.Assert.assertNull(executor43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(request49);
        org.junit.Assert.assertNotNull(request50);
        org.junit.Assert.assertNotNull(headerList51);
    }

    @Test
    public void test367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test367");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.converter.GsonConverter gsonConverter1 = serializedObjectSupporter0.deserializeObjectConverter8();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        org.junit.Assert.assertNotNull(gsonConverter1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Retrofit-" + "'", str2, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Retrofit-Idle" + "'", str3, "Retrofit-Idle");
    }

    @Test
    public void test368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test368");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = null;
        restAdapter34.setLogLevel(logLevel35);
        java.util.concurrent.Executor executor37 = restAdapter34.gethttpExecutor();
        retrofit.converter.Converter converter38 = restAdapter34.converter;
        retrofit.ErrorHandler errorHandler39 = restAdapter34.errorHandler;
        retrofit.ErrorHandler errorHandler40 = restAdapter34.geterrorHandler();
        java.util.concurrent.Executor executor41 = restAdapter34.httpExecutor;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertNotNull(converter38);
        org.junit.Assert.assertNull(errorHandler39);
        org.junit.Assert.assertNull(errorHandler40);
        org.junit.Assert.assertNull(executor41);
    }

    @Test
    public void test369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test369");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        java.util.concurrent.Executor executor41 = restAdapter34.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel42 = restAdapter34.getLogLevel();
        boolean boolean43 = logLevel42.log();
        boolean boolean44 = logLevel42.log();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNull(executor41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test370");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        java.util.concurrent.Executor executor35 = restAdapter34.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request37 = serializedObjectSupporter36.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter4();
        retrofit.client.Request request39 = serializedObjectSupporter36.deserializeObjectRequest4();
        retrofit.client.Request request40 = restAdapter34.logAndReplaceRequest(request39);
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter34.new RestHandler();
        retrofit.converter.Converter converter42 = restAdapter34.converter;
        java.util.concurrent.Executor executor43 = restAdapter34.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel46 = restAdapter34.logLevel;
        java.util.concurrent.Executor executor47 = restAdapter34.getcallbackExecutor();
        java.util.concurrent.Executor executor48 = restAdapter34.callbackExecutor;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNotNull(request37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(converter42);
        org.junit.Assert.assertNull(executor43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor47);
        org.junit.Assert.assertNull(executor48);
    }

    @Test
    public void test371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test371");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("default");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder7 = builder5.setServer("hi!");
        retrofit.converter.Converter converter8 = builder7.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = builder7.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel10 = builder7.logLevel;
        builder4.logLevel = logLevel10;
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        java.lang.String str14 = serializedObjectSupporter12.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.client.Request request16 = serializedObjectSupporter12.deserializeObjectRequest7();
        retrofit.Server server17 = serializedObjectSupporter12.deserializeObjectServer1();
        builder4.server = server17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request21 = serializedObjectSupporter20.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter20.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder24 = builder19.setConverter((retrofit.converter.Converter) gsonConverter23);
        java.util.concurrent.Executor executor25 = builder24.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server27 = serializedObjectSupporter26.deserializeObjectServer1();
        java.lang.String str28 = server27.getUrl();
        builder24.server = server27;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request32 = serializedObjectSupporter31.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter34 = serializedObjectSupporter31.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder35 = builder30.setConverter((retrofit.converter.Converter) gsonConverter34);
        builder30.ensureSaneDefaults();
        retrofit.client.Client.Provider provider37 = builder30.clientProvider;
        java.util.concurrent.Executor executor38 = null;
        java.util.concurrent.Executor executor39 = null;
        retrofit.RequestInterceptor requestInterceptor40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request43 = serializedObjectSupporter42.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter44 = serializedObjectSupporter42.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter45 = serializedObjectSupporter42.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder46 = builder41.setConverter((retrofit.converter.Converter) gsonConverter45);
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        log49.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server27, provider37, executor38, executor39, requestInterceptor40, (retrofit.converter.Converter) gsonConverter45, profiler47, errorHandler48, log49, logLevel52);
        retrofit.SerializedObjectSupporter serializedObjectSupporter54 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request55 = serializedObjectSupporter54.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter56 = serializedObjectSupporter54.deserializeObjectConverter4();
        retrofit.client.Request request57 = serializedObjectSupporter54.deserializeObjectRequest7();
        restAdapter53.serializedObjectSupporter = serializedObjectSupporter54;
        java.util.concurrent.Executor executor59 = restAdapter53.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = restAdapter53.serializedObjectSupporter;
        java.util.concurrent.Executor executor61 = restAdapter53.getcallbackExecutor();
        java.lang.String str62 = restAdapter53.getIDLE_THREAD_NAME();
        retrofit.SerializedObjectSupporter serializedObjectSupporter63 = restAdapter53.serializedObjectSupporter;
        builder4.serializedObjectSupporter = serializedObjectSupporter63;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections collections65 = serializedObjectSupporter63.deserializeObjectList1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Collections$UnmodifiableRandomAccessList cannot be cast to java.util.Collections");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(converter8);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "POST" + "'", str14, "POST");
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertNotNull(server17);
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com" + "'", str28, "http://example.com");
        org.junit.Assert.assertNotNull(request32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(gsonConverter34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(provider37);
        org.junit.Assert.assertNotNull(request43);
        org.junit.Assert.assertNotNull(gsonConverter44);
        org.junit.Assert.assertNotNull(gsonConverter45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request55);
        org.junit.Assert.assertNotNull(gsonConverter56);
        org.junit.Assert.assertNotNull(request57);
        org.junit.Assert.assertNull(executor59);
        org.junit.Assert.assertNotNull(serializedObjectSupporter60);
        org.junit.Assert.assertNull(executor61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Retrofit-Idle" + "'", str62, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(serializedObjectSupporter63);
    }

    @Test
    public void test372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test372");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        java.util.concurrent.Executor executor42 = restAdapter34.getcallbackExecutor();
        java.lang.String str43 = restAdapter34.getIDLE_THREAD_NAME();
        retrofit.RestAdapter.RestHandler restHandler44 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter34.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server47 = serializedObjectSupporter46.deserializeObjectServer1();
        retrofit.client.Request request48 = serializedObjectSupporter46.deserializeObjectRequest7();
        retrofit.client.Request request49 = restAdapter34.logAndReplaceRequest(request48);
        retrofit.mime.TypedOutput typedOutput50 = request48.getBody();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Retrofit-Idle" + "'", str43, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertNotNull(request48);
        org.junit.Assert.assertNotNull(request49);
        org.junit.Assert.assertNull(typedOutput50);
    }

    @Test
    public void test373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test373");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.Profiler profiler3 = builder2.profiler;
        java.util.concurrent.Executor executor4 = null;
        builder2.sethttpExecutor(executor4);
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server7 = serializedObjectSupporter6.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder9 = builder2.setRequestInterceptor(requestInterceptor8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("hi!");
        retrofit.converter.Converter converter13 = builder12.converter;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request16 = serializedObjectSupporter15.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter15.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder19 = builder14.setConverter((retrofit.converter.Converter) gsonConverter18);
        java.util.concurrent.Executor executor20 = builder19.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server22 = serializedObjectSupporter21.deserializeObjectServer1();
        java.lang.String str23 = server22.getUrl();
        builder19.server = server22;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request27 = serializedObjectSupporter26.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter26.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder30 = builder25.setConverter((retrofit.converter.Converter) gsonConverter29);
        builder25.ensureSaneDefaults();
        retrofit.client.Client.Provider provider32 = builder25.clientProvider;
        java.util.concurrent.Executor executor33 = null;
        java.util.concurrent.Executor executor34 = null;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request38 = serializedObjectSupporter37.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter37.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter40 = serializedObjectSupporter37.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder41 = builder36.setConverter((retrofit.converter.Converter) gsonConverter40);
        retrofit.Profiler profiler42 = null;
        retrofit.ErrorHandler errorHandler43 = null;
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        log44.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server22, provider32, executor33, executor34, requestInterceptor35, (retrofit.converter.Converter) gsonConverter40, profiler42, errorHandler43, log44, logLevel47);
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request50 = serializedObjectSupporter49.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter51 = serializedObjectSupporter49.deserializeObjectConverter4();
        retrofit.client.Request request52 = serializedObjectSupporter49.deserializeObjectRequest7();
        restAdapter48.serializedObjectSupporter = serializedObjectSupporter49;
        builder12.serializedObjectSupporter = serializedObjectSupporter49;
        retrofit.converter.GsonConverter gsonConverter55 = serializedObjectSupporter49.deserializeObjectConverter8();
        retrofit.converter.GsonConverter gsonConverter56 = serializedObjectSupporter49.deserializeObjectConverter3();
        builder2.serializedObjectSupporter = serializedObjectSupporter49;
        java.util.concurrent.Executor executor58 = null;
        builder2.sethttpExecutor(executor58);
        retrofit.client.Client.Provider provider60 = builder2.getclientProvider();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(profiler3);
        org.junit.Assert.assertNotNull(server7);
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNull(executor20);
        org.junit.Assert.assertNotNull(server22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "http://example.com" + "'", str23, "http://example.com");
        org.junit.Assert.assertNotNull(request27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(provider32);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertNotNull(gsonConverter40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request50);
        org.junit.Assert.assertNotNull(gsonConverter51);
        org.junit.Assert.assertNotNull(request52);
        org.junit.Assert.assertNotNull(gsonConverter55);
        org.junit.Assert.assertNotNull(gsonConverter56);
        org.junit.Assert.assertNull(provider60);
    }

    @Test
    public void test374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test374");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        java.util.concurrent.Executor executor35 = restAdapter34.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request37 = serializedObjectSupporter36.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter4();
        retrofit.client.Request request39 = serializedObjectSupporter36.deserializeObjectRequest4();
        retrofit.client.Request request40 = restAdapter34.logAndReplaceRequest(request39);
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter34.new RestHandler();
        retrofit.converter.Converter converter42 = restAdapter34.converter;
        java.util.concurrent.Executor executor43 = restAdapter34.httpExecutor;
        retrofit.ErrorHandler errorHandler44 = restAdapter34.geterrorHandler();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNotNull(request37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(converter42);
        org.junit.Assert.assertNull(executor43);
        org.junit.Assert.assertNull(errorHandler44);
    }

    @Test
    public void test375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test375");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        retrofit.Profiler profiler6 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder7 = builder0.setProfiler(profiler6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
    }

    @Test
    public void test376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test376");
        retrofit.Server server1 = new retrofit.Server("http://example.com");
        java.lang.String str2 = server1.getapiUrl();
        java.lang.String str3 = server1.getUrl();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com" + "'", str2, "http://example.com");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com" + "'", str3, "http://example.com");
    }

    @Test
    public void test377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test377");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString5();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest6();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString5();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "POST" + "'", str2, "POST");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Retrofit-Idle" + "'", str3, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "POST" + "'", str5, "POST");
    }

    @Test
    public void test378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test378");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.client.Client.Provider provider35 = restAdapter34.clientProvider;
        java.lang.Throwable throwable36 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter34.logException(throwable36, "default");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(provider35);
    }

    @Test
    public void test379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test379");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        java.util.concurrent.Executor executor35 = restAdapter34.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request37 = serializedObjectSupporter36.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter4();
        retrofit.client.Request request39 = serializedObjectSupporter36.deserializeObjectRequest4();
        retrofit.client.Request request40 = restAdapter34.logAndReplaceRequest(request39);
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter34.new RestHandler();
        retrofit.converter.Converter converter42 = restAdapter34.converter;
        java.util.concurrent.Executor executor43 = restAdapter34.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel45 = restAdapter34.logLevel;
        java.lang.Throwable throwable46 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter34.logException(throwable46, "http://example.com");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNotNull(request37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(converter42);
        org.junit.Assert.assertNull(executor43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test380");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        java.util.concurrent.Executor executor42 = restAdapter34.getcallbackExecutor();
        java.lang.String str43 = restAdapter34.getIDLE_THREAD_NAME();
        retrofit.RestAdapter.RestHandler restHandler44 = restAdapter34.new RestHandler();
        java.util.concurrent.Executor executor45 = restAdapter34.httpExecutor;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Retrofit-Idle" + "'", str43, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor45);
    }

    @Test
    public void test381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test381");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.mime.TypedOutput typedOutput3 = request2.body;
        retrofit.mime.TypedOutput typedOutput4 = request2.body;
        java.lang.String str5 = request2.url;
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNull(typedOutput3);
        org.junit.Assert.assertNull(typedOutput4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
    }

    @Test
    public void test382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test382");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest6();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(request4);
    }

    @Test
    public void test383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test383");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request5 = serializedObjectSupporter4.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter4.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter8();
        retrofit.client.Request request8 = serializedObjectSupporter4.deserializeObjectRequest5();
        retrofit.Server server9 = serializedObjectSupporter4.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder15 = builder10.setConverter((retrofit.converter.Converter) gsonConverter14);
        builder10.ensureSaneDefaults();
        retrofit.client.Client.Provider provider17 = builder10.clientProvider;
        java.util.concurrent.Executor executor18 = null;
        java.util.concurrent.Executor executor19 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server21 = serializedObjectSupporter20.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor22 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request25 = serializedObjectSupporter24.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter24.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter24.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder28 = builder23.setConverter((retrofit.converter.Converter) gsonConverter27);
        retrofit.Profiler profiler29 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server31 = serializedObjectSupporter30.deserializeObjectServer1();
        retrofit.client.Request request32 = serializedObjectSupporter30.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler33 = serializedObjectSupporter30.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        log34.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server9, provider17, executor18, executor19, requestInterceptor22, (retrofit.converter.Converter) gsonConverter27, profiler29, errorHandler33, log34, logLevel37);
        retrofit.RestAdapter.Builder builder39 = builder2.setClient(provider17);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request42 = serializedObjectSupporter41.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter41.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter44 = serializedObjectSupporter41.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder45 = builder40.setConverter((retrofit.converter.Converter) gsonConverter44);
        java.util.concurrent.Executor executor46 = builder45.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server48 = serializedObjectSupporter47.deserializeObjectServer1();
        java.lang.String str49 = server48.getUrl();
        builder45.server = server48;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request53 = serializedObjectSupporter52.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter54 = serializedObjectSupporter52.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter55 = serializedObjectSupporter52.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder56 = builder51.setConverter((retrofit.converter.Converter) gsonConverter55);
        builder51.ensureSaneDefaults();
        retrofit.client.Client.Provider provider58 = builder51.clientProvider;
        java.util.concurrent.Executor executor59 = null;
        java.util.concurrent.Executor executor60 = null;
        retrofit.RequestInterceptor requestInterceptor61 = null;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter63 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request64 = serializedObjectSupporter63.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter65 = serializedObjectSupporter63.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter66 = serializedObjectSupporter63.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder67 = builder62.setConverter((retrofit.converter.Converter) gsonConverter66);
        retrofit.Profiler profiler68 = null;
        retrofit.ErrorHandler errorHandler69 = null;
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        log70.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter74 = new retrofit.RestAdapter(server48, provider58, executor59, executor60, requestInterceptor61, (retrofit.converter.Converter) gsonConverter66, profiler68, errorHandler69, log70, logLevel73);
        retrofit.RestAdapter.Builder builder75 = builder2.setClient(provider58);
        retrofit.SerializedObjectSupporter serializedObjectSupporter76 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request77 = serializedObjectSupporter76.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter78 = serializedObjectSupporter76.deserializeObjectConverter5();
        builder2.serializedObjectSupporter = serializedObjectSupporter76;
        retrofit.ErrorHandler errorHandler80 = serializedObjectSupporter76.deserializeObjectErrorHandler1();
        retrofit.Server server81 = serializedObjectSupporter76.deserializeObjectServer1();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(provider17);
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNotNull(requestInterceptor22);
        org.junit.Assert.assertNotNull(request25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(server31);
        org.junit.Assert.assertNotNull(request32);
        org.junit.Assert.assertNotNull(errorHandler33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(request42);
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertNotNull(gsonConverter44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNull(executor46);
        org.junit.Assert.assertNotNull(server48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "http://example.com" + "'", str49, "http://example.com");
        org.junit.Assert.assertNotNull(request53);
        org.junit.Assert.assertNotNull(gsonConverter54);
        org.junit.Assert.assertNotNull(gsonConverter55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(provider58);
        org.junit.Assert.assertNotNull(request64);
        org.junit.Assert.assertNotNull(gsonConverter65);
        org.junit.Assert.assertNotNull(gsonConverter66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(request77);
        org.junit.Assert.assertNotNull(gsonConverter78);
        org.junit.Assert.assertNotNull(errorHandler80);
        org.junit.Assert.assertNotNull(server81);
    }

    @Test
    public void test384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test384");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString3 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString2();
        retrofit.mime.TypedString typedString6 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        retrofit.Server server7 = serializedObjectSupporter0.deserializeObjectServer1();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(typedString3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-" + "'", str4, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Retrofit-Idle" + "'", str5, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(typedString6);
        org.junit.Assert.assertNotNull(server7);
    }

    @Test
    public void test385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test385");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.ErrorHandler errorHandler2 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest5();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter5 = serializedObjectSupporter0.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertNotNull(errorHandler2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-Idle" + "'", str4, "Retrofit-Idle");
    }

    @Test
    public void test386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test386");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        java.util.concurrent.Executor executor35 = restAdapter34.getcallbackExecutor();
        retrofit.RestAdapter.RestHandler restHandler36 = restAdapter34.new RestHandler();
        retrofit.Profiler profiler37 = restAdapter34.profiler;
        retrofit.RestAdapter.RestHandler restHandler38 = restAdapter34.new RestHandler();
        retrofit.ErrorHandler errorHandler39 = restAdapter34.errorHandler;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNull(profiler37);
        org.junit.Assert.assertNull(errorHandler39);
    }

    @Test
    public void test387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test387");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.mime.TypedOutput typedOutput4 = request3.body;
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNull(typedOutput4);
    }

    @Test
    public void test388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test388");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.converter.Converter converter3 = builder2.converter;
        java.util.concurrent.Executor executor4 = null;
        builder2.httpExecutor = executor4;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("hi!");
        retrofit.RestAdapter.Builder builder10 = builder6.setServer("default");
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.HEADERS;
        builder10.logLevel = logLevel11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request15 = serializedObjectSupporter14.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter16 = serializedObjectSupporter14.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter14.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder18 = builder13.setConverter((retrofit.converter.Converter) gsonConverter17);
        java.util.concurrent.Executor executor19 = builder18.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server21 = serializedObjectSupporter20.deserializeObjectServer1();
        java.lang.String str22 = server21.getUrl();
        builder18.server = server21;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request26 = serializedObjectSupporter25.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter25.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter25.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder29 = builder24.setConverter((retrofit.converter.Converter) gsonConverter28);
        builder24.ensureSaneDefaults();
        retrofit.client.Client.Provider provider31 = builder24.clientProvider;
        java.util.concurrent.Executor executor32 = null;
        java.util.concurrent.Executor executor33 = null;
        retrofit.RequestInterceptor requestInterceptor34 = null;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request37 = serializedObjectSupporter36.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter36.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder40 = builder35.setConverter((retrofit.converter.Converter) gsonConverter39);
        retrofit.Profiler profiler41 = null;
        retrofit.ErrorHandler errorHandler42 = null;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        log43.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter(server21, provider31, executor32, executor33, requestInterceptor34, (retrofit.converter.Converter) gsonConverter39, profiler41, errorHandler42, log43, logLevel46);
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request49 = serializedObjectSupporter48.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter50 = serializedObjectSupporter48.deserializeObjectConverter4();
        retrofit.client.Request request51 = serializedObjectSupporter48.deserializeObjectRequest7();
        restAdapter47.serializedObjectSupporter = serializedObjectSupporter48;
        java.util.concurrent.Executor executor53 = restAdapter47.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter54 = restAdapter47.serializedObjectSupporter;
        retrofit.converter.GsonConverter gsonConverter55 = serializedObjectSupporter54.deserializeObjectConverter2();
        retrofit.RestAdapter.Builder builder56 = builder10.setConverter((retrofit.converter.Converter) gsonConverter55);
        retrofit.RestAdapter.LogLevel logLevel57 = builder56.logLevel;
        retrofit.RestAdapter.Log log58 = builder56.log;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder61 = builder59.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        builder59.logLevel = logLevel62;
        retrofit.client.Client.Provider provider64 = builder59.clientProvider;
        java.util.concurrent.Executor executor65 = null;
        builder59.setcallbackExecutor(executor65);
        retrofit.SerializedObjectSupporter serializedObjectSupporter67 = new retrofit.SerializedObjectSupporter();
        retrofit.converter.GsonConverter gsonConverter68 = serializedObjectSupporter67.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder69 = builder59.setConverter((retrofit.converter.Converter) gsonConverter68);
        retrofit.Profiler profiler70 = builder69.profiler;
        retrofit.RequestInterceptor requestInterceptor71 = builder69.requestInterceptor;
        retrofit.Profiler profiler72 = null;
        builder69.profiler = profiler72;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter75 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request76 = serializedObjectSupporter75.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter77 = serializedObjectSupporter75.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter78 = serializedObjectSupporter75.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder79 = builder74.setConverter((retrofit.converter.Converter) gsonConverter78);
        retrofit.SerializedObjectSupporter serializedObjectSupporter80 = builder79.serializedObjectSupporter;
        java.util.concurrent.Executor executor81 = builder79.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter82 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server83 = serializedObjectSupporter82.deserializeObjectServer1();
        retrofit.client.Request request84 = serializedObjectSupporter82.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler85 = serializedObjectSupporter82.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder86 = builder79.setErrorHandler(errorHandler85);
        builder86.ensureSaneDefaults();
        java.util.concurrent.Executor executor88 = builder86.getcallbackExecutor();
        builder69.setcallbackExecutor(executor88);
        builder56.setcallbackExecutor(executor88);
        builder2.sethttpExecutor(executor88);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(request15);
        org.junit.Assert.assertNotNull(gsonConverter16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(executor19);
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "http://example.com" + "'", str22, "http://example.com");
        org.junit.Assert.assertNotNull(request26);
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(provider31);
        org.junit.Assert.assertNotNull(request37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request49);
        org.junit.Assert.assertNotNull(gsonConverter50);
        org.junit.Assert.assertNotNull(request51);
        org.junit.Assert.assertNull(executor53);
        org.junit.Assert.assertNotNull(serializedObjectSupporter54);
        org.junit.Assert.assertNotNull(gsonConverter55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(log58);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(provider64);
        org.junit.Assert.assertNotNull(gsonConverter68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNull(profiler70);
        org.junit.Assert.assertNull(requestInterceptor71);
        org.junit.Assert.assertNotNull(request76);
        org.junit.Assert.assertNotNull(gsonConverter77);
        org.junit.Assert.assertNotNull(gsonConverter78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNull(serializedObjectSupporter80);
        org.junit.Assert.assertNull(executor81);
        org.junit.Assert.assertNotNull(server83);
        org.junit.Assert.assertNotNull(request84);
        org.junit.Assert.assertNotNull(errorHandler85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(executor88);
    }

    @Test
    public void test389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test389");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        builder0.logLevel = logLevel3;
        retrofit.client.Client.Provider provider5 = builder0.clientProvider;
        java.util.concurrent.Executor executor6 = null;
        builder0.setcallbackExecutor(executor6);
        retrofit.RestAdapter restAdapter8 = builder0.build();
        retrofit.Profiler profiler9 = restAdapter8.profiler;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(restAdapter8);
        org.junit.Assert.assertNull(profiler9);
    }

    @Test
    public void test390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test390");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = builder2.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request7 = serializedObjectSupporter6.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter6.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter6.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder10 = builder5.setConverter((retrofit.converter.Converter) gsonConverter9);
        java.util.concurrent.Executor executor11 = builder10.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server13 = serializedObjectSupporter12.deserializeObjectServer1();
        java.lang.String str14 = server13.getUrl();
        builder10.server = server13;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request18 = serializedObjectSupporter17.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter17.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter17.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder21 = builder16.setConverter((retrofit.converter.Converter) gsonConverter20);
        builder16.ensureSaneDefaults();
        retrofit.client.Client.Provider provider23 = builder16.clientProvider;
        java.util.concurrent.Executor executor24 = null;
        java.util.concurrent.Executor executor25 = null;
        retrofit.RequestInterceptor requestInterceptor26 = null;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request29 = serializedObjectSupporter28.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter28.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter28.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder32 = builder27.setConverter((retrofit.converter.Converter) gsonConverter31);
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        log35.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter(server13, provider23, executor24, executor25, requestInterceptor26, (retrofit.converter.Converter) gsonConverter31, profiler33, errorHandler34, log35, logLevel38);
        retrofit.client.Client.Provider provider40 = restAdapter39.clientProvider;
        builder2.clientProvider = provider40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request44 = serializedObjectSupporter43.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter45 = serializedObjectSupporter43.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter43.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder47 = builder42.setConverter((retrofit.converter.Converter) gsonConverter46);
        java.util.concurrent.Executor executor48 = builder47.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server50 = serializedObjectSupporter49.deserializeObjectServer1();
        java.lang.String str51 = server50.getUrl();
        builder47.server = server50;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter54 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request55 = serializedObjectSupporter54.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter56 = serializedObjectSupporter54.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter57 = serializedObjectSupporter54.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder58 = builder53.setConverter((retrofit.converter.Converter) gsonConverter57);
        builder53.ensureSaneDefaults();
        retrofit.client.Client.Provider provider60 = builder53.clientProvider;
        java.util.concurrent.Executor executor61 = null;
        java.util.concurrent.Executor executor62 = null;
        retrofit.RequestInterceptor requestInterceptor63 = null;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request66 = serializedObjectSupporter65.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter67 = serializedObjectSupporter65.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter68 = serializedObjectSupporter65.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder69 = builder64.setConverter((retrofit.converter.Converter) gsonConverter68);
        retrofit.Profiler profiler70 = null;
        retrofit.ErrorHandler errorHandler71 = null;
        retrofit.RestAdapter.Log log72 = retrofit.RestAdapter.Log.NONE;
        log72.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter76 = new retrofit.RestAdapter(server50, provider60, executor61, executor62, requestInterceptor63, (retrofit.converter.Converter) gsonConverter68, profiler70, errorHandler71, log72, logLevel75);
        retrofit.SerializedObjectSupporter serializedObjectSupporter77 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request78 = serializedObjectSupporter77.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter79 = serializedObjectSupporter77.deserializeObjectConverter4();
        retrofit.client.Request request80 = serializedObjectSupporter77.deserializeObjectRequest7();
        restAdapter76.serializedObjectSupporter = serializedObjectSupporter77;
        java.util.concurrent.Executor executor82 = restAdapter76.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter83 = restAdapter76.serializedObjectSupporter;
        java.lang.String str84 = serializedObjectSupporter83.deserializeObjectString2();
        retrofit.converter.GsonConverter gsonConverter85 = serializedObjectSupporter83.deserializeObjectConverter3();
        retrofit.RestAdapter.Builder builder86 = builder2.setConverter((retrofit.converter.Converter) gsonConverter85);
        retrofit.SerializedObjectSupporter serializedObjectSupporter87 = new retrofit.SerializedObjectSupporter();
        retrofit.converter.GsonConverter gsonConverter88 = serializedObjectSupporter87.deserializeObjectConverter8();
        java.lang.String str89 = serializedObjectSupporter87.deserializeObjectString1();
        retrofit.ErrorHandler errorHandler90 = serializedObjectSupporter87.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder91 = builder2.setErrorHandler(errorHandler90);
        retrofit.SerializedObjectSupporter serializedObjectSupporter92 = new retrofit.SerializedObjectSupporter();
        java.lang.String str93 = serializedObjectSupporter92.deserializeObjectString1();
        retrofit.Server server94 = serializedObjectSupporter92.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter95 = serializedObjectSupporter92.deserializeObjectConverter6();
        builder91.converter = gsonConverter95;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(serializedObjectSupporter4);
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "http://example.com" + "'", str14, "http://example.com");
        org.junit.Assert.assertNotNull(request18);
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(provider23);
        org.junit.Assert.assertNotNull(request29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(provider40);
        org.junit.Assert.assertNotNull(request44);
        org.junit.Assert.assertNotNull(gsonConverter45);
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(executor48);
        org.junit.Assert.assertNotNull(server50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "http://example.com" + "'", str51, "http://example.com");
        org.junit.Assert.assertNotNull(request55);
        org.junit.Assert.assertNotNull(gsonConverter56);
        org.junit.Assert.assertNotNull(gsonConverter57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(provider60);
        org.junit.Assert.assertNotNull(request66);
        org.junit.Assert.assertNotNull(gsonConverter67);
        org.junit.Assert.assertNotNull(gsonConverter68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request78);
        org.junit.Assert.assertNotNull(gsonConverter79);
        org.junit.Assert.assertNotNull(request80);
        org.junit.Assert.assertNull(executor82);
        org.junit.Assert.assertNotNull(serializedObjectSupporter83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Retrofit-Idle" + "'", str84, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(gsonConverter85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(gsonConverter88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "Retrofit-" + "'", str89, "Retrofit-");
        org.junit.Assert.assertNotNull(errorHandler90);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "Retrofit-" + "'", str93, "Retrofit-");
        org.junit.Assert.assertNotNull(server94);
        org.junit.Assert.assertNotNull(gsonConverter95);
    }

    @Test
    public void test391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test391");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.Profiler profiler3 = builder2.profiler;
        java.util.concurrent.Executor executor4 = null;
        builder2.sethttpExecutor(executor4);
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server7 = serializedObjectSupporter6.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder9 = builder2.setRequestInterceptor(requestInterceptor8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("hi!");
        retrofit.converter.Converter converter13 = builder12.converter;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request16 = serializedObjectSupporter15.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter15.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder19 = builder14.setConverter((retrofit.converter.Converter) gsonConverter18);
        java.util.concurrent.Executor executor20 = builder19.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server22 = serializedObjectSupporter21.deserializeObjectServer1();
        java.lang.String str23 = server22.getUrl();
        builder19.server = server22;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request27 = serializedObjectSupporter26.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter26.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder30 = builder25.setConverter((retrofit.converter.Converter) gsonConverter29);
        builder25.ensureSaneDefaults();
        retrofit.client.Client.Provider provider32 = builder25.clientProvider;
        java.util.concurrent.Executor executor33 = null;
        java.util.concurrent.Executor executor34 = null;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request38 = serializedObjectSupporter37.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter37.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter40 = serializedObjectSupporter37.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder41 = builder36.setConverter((retrofit.converter.Converter) gsonConverter40);
        retrofit.Profiler profiler42 = null;
        retrofit.ErrorHandler errorHandler43 = null;
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        log44.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server22, provider32, executor33, executor34, requestInterceptor35, (retrofit.converter.Converter) gsonConverter40, profiler42, errorHandler43, log44, logLevel47);
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request50 = serializedObjectSupporter49.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter51 = serializedObjectSupporter49.deserializeObjectConverter4();
        retrofit.client.Request request52 = serializedObjectSupporter49.deserializeObjectRequest7();
        restAdapter48.serializedObjectSupporter = serializedObjectSupporter49;
        builder12.serializedObjectSupporter = serializedObjectSupporter49;
        retrofit.converter.GsonConverter gsonConverter55 = serializedObjectSupporter49.deserializeObjectConverter8();
        retrofit.converter.GsonConverter gsonConverter56 = serializedObjectSupporter49.deserializeObjectConverter3();
        builder2.serializedObjectSupporter = serializedObjectSupporter49;
        java.util.concurrent.Executor executor58 = null;
        builder2.sethttpExecutor(executor58);
        retrofit.RestAdapter.LogLevel logLevel60 = builder2.logLevel;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(profiler3);
        org.junit.Assert.assertNotNull(server7);
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNull(executor20);
        org.junit.Assert.assertNotNull(server22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "http://example.com" + "'", str23, "http://example.com");
        org.junit.Assert.assertNotNull(request27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(provider32);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertNotNull(gsonConverter40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request50);
        org.junit.Assert.assertNotNull(gsonConverter51);
        org.junit.Assert.assertNotNull(request52);
        org.junit.Assert.assertNotNull(gsonConverter55);
        org.junit.Assert.assertNotNull(gsonConverter56);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test392");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.client.Client.Provider provider35 = restAdapter34.clientProvider;
        retrofit.Server server36 = restAdapter34.getserver();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(provider35);
        org.junit.Assert.assertNotNull(server36);
    }

    @Test
    public void test393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test393");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request6 = serializedObjectSupporter5.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter5.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString8 = serializedObjectSupporter5.deserializeObjectTypedOutput2();
        retrofit.client.Request request9 = new retrofit.client.Request("http://example.com/", "Retrofit-", (java.util.List<retrofit.client.Header>) headerList3, (retrofit.mime.TypedOutput) typedString8);
        java.util.List<retrofit.client.Header> headerList10 = request9.headers;
        retrofit.mime.TypedOutput typedOutput11 = request9.getBody();
        java.util.List<retrofit.client.Header> headerList12 = request9.headers;
        java.lang.String str13 = request9.url;
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(typedString8);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(typedOutput11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-" + "'", str13, "Retrofit-");
    }

    @Test
    public void test394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test394");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request4 = serializedObjectSupporter3.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter5();
        builder0.converter = gsonConverter5;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request8 = serializedObjectSupporter7.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter7.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString10 = serializedObjectSupporter7.deserializeObjectTypedOutput2();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString1();
        builder0.serializedObjectSupporter = serializedObjectSupporter7;
        retrofit.ErrorHandler errorHandler13 = builder0.errorHandler;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request16 = serializedObjectSupporter15.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter15.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder19 = builder14.setConverter((retrofit.converter.Converter) gsonConverter18);
        java.util.concurrent.Executor executor20 = builder19.getcallbackExecutor();
        retrofit.Server server23 = new retrofit.Server("hi!", "default");
        builder19.server = server23;
        java.util.concurrent.Executor executor25 = null;
        builder19.sethttpExecutor(executor25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request29 = serializedObjectSupporter28.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter28.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter28.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder32 = builder27.setConverter((retrofit.converter.Converter) gsonConverter31);
        java.util.concurrent.Executor executor33 = builder32.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server35 = serializedObjectSupporter34.deserializeObjectServer1();
        java.lang.String str36 = server35.getUrl();
        builder32.server = server35;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request40 = serializedObjectSupporter39.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter39.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter42 = serializedObjectSupporter39.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder43 = builder38.setConverter((retrofit.converter.Converter) gsonConverter42);
        builder38.ensureSaneDefaults();
        retrofit.client.Client.Provider provider45 = builder38.clientProvider;
        java.util.concurrent.Executor executor46 = null;
        java.util.concurrent.Executor executor47 = null;
        retrofit.RequestInterceptor requestInterceptor48 = null;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter50 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request51 = serializedObjectSupporter50.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter52 = serializedObjectSupporter50.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter53 = serializedObjectSupporter50.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder54 = builder49.setConverter((retrofit.converter.Converter) gsonConverter53);
        retrofit.Profiler profiler55 = null;
        retrofit.ErrorHandler errorHandler56 = null;
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        log57.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter(server35, provider45, executor46, executor47, requestInterceptor48, (retrofit.converter.Converter) gsonConverter53, profiler55, errorHandler56, log57, logLevel60);
        retrofit.RestAdapter.Builder builder62 = builder19.setClient(provider45);
        builder0.clientProvider = provider45;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(typedString10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-" + "'", str11, "Retrofit-");
        org.junit.Assert.assertNull(errorHandler13);
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNull(executor20);
        org.junit.Assert.assertNotNull(request29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNull(executor33);
        org.junit.Assert.assertNotNull(server35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "http://example.com" + "'", str36, "http://example.com");
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(gsonConverter41);
        org.junit.Assert.assertNotNull(gsonConverter42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(provider45);
        org.junit.Assert.assertNotNull(request51);
        org.junit.Assert.assertNotNull(gsonConverter52);
        org.junit.Assert.assertNotNull(gsonConverter53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
    }

    @Test
    public void test395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test395");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        java.util.concurrent.Executor executor35 = restAdapter34.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request37 = serializedObjectSupporter36.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter4();
        retrofit.client.Request request39 = serializedObjectSupporter36.deserializeObjectRequest4();
        retrofit.client.Request request40 = restAdapter34.logAndReplaceRequest(request39);
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter34.new RestHandler();
        retrofit.converter.Converter converter42 = restAdapter34.converter;
        java.util.concurrent.Executor executor43 = restAdapter34.httpExecutor;
        retrofit.RestAdapter.RestHandler restHandler44 = restAdapter34.new RestHandler();
        java.util.concurrent.Executor executor45 = restAdapter34.gethttpExecutor();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNotNull(request37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(converter42);
        org.junit.Assert.assertNull(executor43);
        org.junit.Assert.assertNull(executor45);
    }

    @Test
    public void test396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test396");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = builder5.serializedObjectSupporter;
        java.util.concurrent.Executor executor7 = builder5.httpExecutor;
        retrofit.RestAdapter.Log log8 = builder5.log;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request11 = serializedObjectSupporter10.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter10.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter10.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder14 = builder9.setConverter((retrofit.converter.Converter) gsonConverter13);
        java.util.concurrent.Executor executor15 = builder14.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server17 = serializedObjectSupporter16.deserializeObjectServer1();
        java.lang.String str18 = server17.getUrl();
        builder14.server = server17;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request22 = serializedObjectSupporter21.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter21.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter24 = serializedObjectSupporter21.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder25 = builder20.setConverter((retrofit.converter.Converter) gsonConverter24);
        builder20.ensureSaneDefaults();
        retrofit.client.Client.Provider provider27 = builder20.clientProvider;
        java.util.concurrent.Executor executor28 = null;
        java.util.concurrent.Executor executor29 = null;
        retrofit.RequestInterceptor requestInterceptor30 = null;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request33 = serializedObjectSupporter32.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter34 = serializedObjectSupporter32.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter35 = serializedObjectSupporter32.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder36 = builder31.setConverter((retrofit.converter.Converter) gsonConverter35);
        retrofit.Profiler profiler37 = null;
        retrofit.ErrorHandler errorHandler38 = null;
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        log39.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter(server17, provider27, executor28, executor29, requestInterceptor30, (retrofit.converter.Converter) gsonConverter35, profiler37, errorHandler38, log39, logLevel42);
        java.util.concurrent.Executor executor44 = restAdapter43.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request46 = serializedObjectSupporter45.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter47 = serializedObjectSupporter45.deserializeObjectConverter4();
        retrofit.client.Request request48 = serializedObjectSupporter45.deserializeObjectRequest4();
        retrofit.client.Request request49 = restAdapter43.logAndReplaceRequest(request48);
        retrofit.RestAdapter.RestHandler restHandler50 = restAdapter43.new RestHandler();
        retrofit.converter.Converter converter51 = restAdapter43.converter;
        java.util.concurrent.Executor executor52 = restAdapter43.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter43.getLogLevel();
        retrofit.RestAdapter.Builder builder54 = builder5.setLogLevel(logLevel53);
        retrofit.RestAdapter.Log log55 = builder54.log;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(log8);
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNotNull(server17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com" + "'", str18, "http://example.com");
        org.junit.Assert.assertNotNull(request22);
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertNotNull(gsonConverter24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(provider27);
        org.junit.Assert.assertNotNull(request33);
        org.junit.Assert.assertNotNull(gsonConverter34);
        org.junit.Assert.assertNotNull(gsonConverter35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor44);
        org.junit.Assert.assertNotNull(request46);
        org.junit.Assert.assertNotNull(gsonConverter47);
        org.junit.Assert.assertNotNull(request48);
        org.junit.Assert.assertNotNull(request49);
        org.junit.Assert.assertNotNull(converter51);
        org.junit.Assert.assertNull(executor52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(log55);
    }

    @Test
    public void test397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test397");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest8();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest6();
        retrofit.RequestInterceptor requestInterceptor5 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(requestInterceptor5);
    }

    @Test
    public void test398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test398");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        java.util.concurrent.Executor executor42 = restAdapter34.getcallbackExecutor();
        java.lang.String str43 = restAdapter34.getIDLE_THREAD_NAME();
        retrofit.RestAdapter.RestHandler restHandler44 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter34.new RestHandler();
        java.lang.String str46 = restAdapter34.getIDLE_THREAD_NAME();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Retrofit-Idle" + "'", str43, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Retrofit-Idle" + "'", str46, "Retrofit-Idle");
    }

    @Test
    public void test399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test399");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter1();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest2();
        retrofit.mime.TypedOutput typedOutput7 = request6.body;
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNull(typedOutput7);
    }

    @Test
    public void test400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test400");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.client.Client.Provider provider35 = restAdapter34.clientProvider;
        java.lang.String str36 = restAdapter34.getTHREAD_PREFIX();
        retrofit.ErrorHandler errorHandler37 = restAdapter34.geterrorHandler();
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter34.getLogLevel();
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server40 = serializedObjectSupporter39.deserializeObjectServer1();
        retrofit.client.Request request41 = serializedObjectSupporter39.deserializeObjectRequest4();
        retrofit.client.Request request42 = serializedObjectSupporter39.deserializeObjectRequest4();
        retrofit.client.Request request43 = restAdapter34.logAndReplaceRequest(request42);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(provider35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Retrofit-" + "'", str36, "Retrofit-");
        org.junit.Assert.assertNull(errorHandler37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server40);
        org.junit.Assert.assertNotNull(request41);
        org.junit.Assert.assertNotNull(request42);
        org.junit.Assert.assertNotNull(request43);
    }

    @Test
    public void test401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test401");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        builder0.logLevel = logLevel3;
        retrofit.RequestInterceptor requestInterceptor5 = builder0.requestInterceptor;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(requestInterceptor5);
    }

    @Test
    public void test402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test402");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        java.util.concurrent.Executor executor42 = restAdapter34.getcallbackExecutor();
        java.lang.String str43 = restAdapter34.getIDLE_THREAD_NAME();
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = restAdapter34.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = restAdapter34.serializedObjectSupporter;
        retrofit.RestAdapter.RestHandler restHandler46 = restAdapter34.new RestHandler();
        java.util.concurrent.Executor executor47 = restAdapter34.callbackExecutor;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Retrofit-Idle" + "'", str43, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(serializedObjectSupporter44);
        org.junit.Assert.assertNotNull(serializedObjectSupporter45);
        org.junit.Assert.assertNull(executor47);
    }

    @Test
    public void test403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test403");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        java.util.concurrent.Executor executor3 = null;
        builder2.sethttpExecutor(executor3);
        retrofit.client.Client.Provider provider5 = null;
        builder2.setclientProvider(provider5);
        retrofit.converter.Converter converter7 = builder2.converter;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request10 = serializedObjectSupporter9.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder13 = builder8.setConverter((retrofit.converter.Converter) gsonConverter12);
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = builder13.serializedObjectSupporter;
        java.util.concurrent.Executor executor15 = builder13.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server17 = serializedObjectSupporter16.deserializeObjectServer1();
        retrofit.client.Request request18 = serializedObjectSupporter16.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler19 = serializedObjectSupporter16.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder20 = builder13.setErrorHandler(errorHandler19);
        builder20.ensureSaneDefaults();
        java.util.concurrent.Executor executor22 = builder20.getcallbackExecutor();
        builder2.callbackExecutor = executor22;
        retrofit.Profiler profiler24 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder25 = builder2.setProfiler(profiler24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(converter7);
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNull(serializedObjectSupporter14);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNotNull(server17);
        org.junit.Assert.assertNotNull(request18);
        org.junit.Assert.assertNotNull(errorHandler19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(executor22);
    }

    @Test
    public void test404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test404");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        java.util.concurrent.Executor executor35 = restAdapter34.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request37 = serializedObjectSupporter36.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter4();
        retrofit.client.Request request39 = serializedObjectSupporter36.deserializeObjectRequest4();
        retrofit.client.Request request40 = restAdapter34.logAndReplaceRequest(request39);
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter34.new RestHandler();
        retrofit.converter.Converter converter42 = restAdapter34.converter;
        retrofit.ErrorHandler errorHandler43 = restAdapter34.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter34.logLevel;
        java.lang.String str45 = restAdapter34.getIDLE_THREAD_NAME();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNotNull(request37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(converter42);
        org.junit.Assert.assertNull(errorHandler43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Retrofit-Idle" + "'", str45, "Retrofit-Idle");
    }

    @Test
    public void test405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test405");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        java.util.concurrent.Executor executor42 = restAdapter34.getcallbackExecutor();
        java.lang.String str43 = restAdapter34.getIDLE_THREAD_NAME();
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = restAdapter34.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = restAdapter34.serializedObjectSupporter;
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter45.deserializeObjectConverter4();
        retrofit.Server server47 = serializedObjectSupporter45.deserializeObjectServer1();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Retrofit-Idle" + "'", str43, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(serializedObjectSupporter44);
        org.junit.Assert.assertNotNull(serializedObjectSupporter45);
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNotNull(server47);
    }

    @Test
    public void test406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test406");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request4 = serializedObjectSupporter3.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter5();
        builder0.converter = gsonConverter5;
        java.util.concurrent.Executor executor7 = null;
        builder0.setcallbackExecutor(executor7);
        retrofit.RestAdapter.Builder builder10 = builder0.setServer("POST");
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        java.util.concurrent.Executor executor17 = builder16.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server19 = serializedObjectSupporter18.deserializeObjectServer1();
        java.lang.String str20 = server19.getUrl();
        builder16.server = server19;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        builder22.ensureSaneDefaults();
        retrofit.client.Client.Provider provider29 = builder22.clientProvider;
        java.util.concurrent.Executor executor30 = null;
        java.util.concurrent.Executor executor31 = null;
        retrofit.RequestInterceptor requestInterceptor32 = null;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request35 = serializedObjectSupporter34.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter34.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter34.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder38 = builder33.setConverter((retrofit.converter.Converter) gsonConverter37);
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        log41.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter(server19, provider29, executor30, executor31, requestInterceptor32, (retrofit.converter.Converter) gsonConverter37, profiler39, errorHandler40, log41, logLevel44);
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request47 = serializedObjectSupporter46.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter48 = serializedObjectSupporter46.deserializeObjectConverter4();
        retrofit.client.Request request49 = serializedObjectSupporter46.deserializeObjectRequest7();
        restAdapter45.serializedObjectSupporter = serializedObjectSupporter46;
        java.util.concurrent.Executor executor51 = restAdapter45.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = restAdapter45.serializedObjectSupporter;
        java.lang.String str53 = serializedObjectSupporter52.deserializeObjectString2();
        retrofit.converter.GsonConverter gsonConverter54 = serializedObjectSupporter52.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter55 = serializedObjectSupporter52.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter56 = serializedObjectSupporter52.deserializeObjectConverter6();
        builder0.converter = gsonConverter56;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNull(executor17);
        org.junit.Assert.assertNotNull(server19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "http://example.com" + "'", str20, "http://example.com");
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(provider29);
        org.junit.Assert.assertNotNull(request35);
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request47);
        org.junit.Assert.assertNotNull(gsonConverter48);
        org.junit.Assert.assertNotNull(request49);
        org.junit.Assert.assertNull(executor51);
        org.junit.Assert.assertNotNull(serializedObjectSupporter52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Retrofit-Idle" + "'", str53, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(gsonConverter54);
        org.junit.Assert.assertNotNull(gsonConverter55);
        org.junit.Assert.assertNotNull(gsonConverter56);
    }

    @Test
    public void test407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test407");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.RestAdapter.RestHandler restHandler35 = restAdapter34.new RestHandler();
        retrofit.Profiler profiler36 = restAdapter34.getprofiler();
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request39 = serializedObjectSupporter38.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter40 = serializedObjectSupporter38.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter38.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder42 = builder37.setConverter((retrofit.converter.Converter) gsonConverter41);
        java.util.concurrent.Executor executor43 = builder42.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server45 = serializedObjectSupporter44.deserializeObjectServer1();
        java.lang.String str46 = server45.getUrl();
        builder42.server = server45;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request50 = serializedObjectSupporter49.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter51 = serializedObjectSupporter49.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter52 = serializedObjectSupporter49.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder53 = builder48.setConverter((retrofit.converter.Converter) gsonConverter52);
        builder48.ensureSaneDefaults();
        retrofit.client.Client.Provider provider55 = builder48.clientProvider;
        java.util.concurrent.Executor executor56 = null;
        java.util.concurrent.Executor executor57 = null;
        retrofit.RequestInterceptor requestInterceptor58 = null;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request61 = serializedObjectSupporter60.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter62 = serializedObjectSupporter60.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter63 = serializedObjectSupporter60.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder64 = builder59.setConverter((retrofit.converter.Converter) gsonConverter63);
        retrofit.Profiler profiler65 = null;
        retrofit.ErrorHandler errorHandler66 = null;
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        log67.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter71 = new retrofit.RestAdapter(server45, provider55, executor56, executor57, requestInterceptor58, (retrofit.converter.Converter) gsonConverter63, profiler65, errorHandler66, log67, logLevel70);
        java.util.concurrent.Executor executor72 = restAdapter71.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter73 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request74 = serializedObjectSupporter73.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter75 = serializedObjectSupporter73.deserializeObjectConverter4();
        retrofit.client.Request request76 = serializedObjectSupporter73.deserializeObjectRequest4();
        retrofit.client.Request request77 = restAdapter71.logAndReplaceRequest(request76);
        retrofit.RestAdapter.RestHandler restHandler78 = restAdapter71.new RestHandler();
        retrofit.converter.Converter converter79 = restAdapter71.converter;
        java.util.concurrent.Executor executor80 = restAdapter71.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel81 = restAdapter71.getLogLevel();
        restAdapter34.setLogLevel(logLevel81);
        java.util.concurrent.Executor executor83 = restAdapter34.httpExecutor;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(profiler36);
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertNotNull(gsonConverter40);
        org.junit.Assert.assertNotNull(gsonConverter41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(executor43);
        org.junit.Assert.assertNotNull(server45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "http://example.com" + "'", str46, "http://example.com");
        org.junit.Assert.assertNotNull(request50);
        org.junit.Assert.assertNotNull(gsonConverter51);
        org.junit.Assert.assertNotNull(gsonConverter52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(provider55);
        org.junit.Assert.assertNotNull(request61);
        org.junit.Assert.assertNotNull(gsonConverter62);
        org.junit.Assert.assertNotNull(gsonConverter63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor72);
        org.junit.Assert.assertNotNull(request74);
        org.junit.Assert.assertNotNull(gsonConverter75);
        org.junit.Assert.assertNotNull(request76);
        org.junit.Assert.assertNotNull(request77);
        org.junit.Assert.assertNotNull(converter79);
        org.junit.Assert.assertNull(executor80);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor83);
    }

    @Test
    public void test408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test408");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request4 = serializedObjectSupporter3.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter5();
        builder0.converter = gsonConverter5;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request8 = serializedObjectSupporter7.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter7.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString10 = serializedObjectSupporter7.deserializeObjectTypedOutput2();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString1();
        builder0.serializedObjectSupporter = serializedObjectSupporter7;
        retrofit.client.Request request13 = serializedObjectSupporter7.deserializeObjectRequest5();
        java.lang.String str14 = serializedObjectSupporter7.deserializeObjectString5();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(typedString10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-" + "'", str11, "Retrofit-");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "POST" + "'", str14, "POST");
    }

    @Test
    public void test409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test409");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString5();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Retrofit-" + "'", str1, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "POST" + "'", str2, "POST");
    }

    @Test
    public void test410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test410");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        java.util.concurrent.Executor executor42 = restAdapter34.getcallbackExecutor();
        java.lang.String str43 = restAdapter34.getIDLE_THREAD_NAME();
        retrofit.RestAdapter.RestHandler restHandler44 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter34.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server47 = serializedObjectSupporter46.deserializeObjectServer1();
        retrofit.client.Request request48 = serializedObjectSupporter46.deserializeObjectRequest7();
        retrofit.client.Request request49 = restAdapter34.logAndReplaceRequest(request48);
        retrofit.mime.TypedOutput typedOutput50 = request49.body;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Retrofit-Idle" + "'", str43, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertNotNull(request48);
        org.junit.Assert.assertNotNull(request49);
        org.junit.Assert.assertNull(typedOutput50);
    }

    @Test
    public void test411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test411");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest4();
        java.lang.String str4 = request3.url;
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
    }

    @Test
    public void test412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test412");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = builder2.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request7 = serializedObjectSupporter6.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter6.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter6.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder10 = builder5.setConverter((retrofit.converter.Converter) gsonConverter9);
        java.util.concurrent.Executor executor11 = builder10.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server13 = serializedObjectSupporter12.deserializeObjectServer1();
        java.lang.String str14 = server13.getUrl();
        builder10.server = server13;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request18 = serializedObjectSupporter17.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter17.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter17.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder21 = builder16.setConverter((retrofit.converter.Converter) gsonConverter20);
        builder16.ensureSaneDefaults();
        retrofit.client.Client.Provider provider23 = builder16.clientProvider;
        java.util.concurrent.Executor executor24 = null;
        java.util.concurrent.Executor executor25 = null;
        retrofit.RequestInterceptor requestInterceptor26 = null;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request29 = serializedObjectSupporter28.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter28.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter28.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder32 = builder27.setConverter((retrofit.converter.Converter) gsonConverter31);
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        log35.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter(server13, provider23, executor24, executor25, requestInterceptor26, (retrofit.converter.Converter) gsonConverter31, profiler33, errorHandler34, log35, logLevel38);
        retrofit.client.Client.Provider provider40 = restAdapter39.clientProvider;
        builder2.clientProvider = provider40;
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = builder2.serializedObjectSupporter;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(serializedObjectSupporter4);
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "http://example.com" + "'", str14, "http://example.com");
        org.junit.Assert.assertNotNull(request18);
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(provider23);
        org.junit.Assert.assertNotNull(request29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(provider40);
        org.junit.Assert.assertNull(serializedObjectSupporter42);
    }

    @Test
    public void test413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test413");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request4 = serializedObjectSupporter3.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter5();
        builder0.converter = gsonConverter5;
        java.util.concurrent.Executor executor7 = null;
        builder0.setcallbackExecutor(executor7);
        retrofit.RestAdapter.Builder builder10 = builder0.setServer("POST");
        retrofit.Profiler profiler11 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder12 = builder10.setProfiler(profiler11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test414");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        retrofit.RestAdapter.LogLevel logLevel6 = builder0.logLevel;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test415");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.converter.GsonConverter gsonConverter1 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.RequestInterceptor requestInterceptor3 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest2();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString5();
        org.junit.Assert.assertNotNull(gsonConverter1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(requestInterceptor3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "POST" + "'", str5, "POST");
    }

    @Test
    public void test416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test416");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.Server server9 = new retrofit.Server("hi!", "default");
        builder5.server = server9;
        java.util.concurrent.Executor executor11 = null;
        builder5.sethttpExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request15 = serializedObjectSupporter14.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter16 = serializedObjectSupporter14.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter14.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder18 = builder13.setConverter((retrofit.converter.Converter) gsonConverter17);
        java.util.concurrent.Executor executor19 = builder18.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server21 = serializedObjectSupporter20.deserializeObjectServer1();
        java.lang.String str22 = server21.getUrl();
        builder18.server = server21;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request26 = serializedObjectSupporter25.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter25.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter25.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder29 = builder24.setConverter((retrofit.converter.Converter) gsonConverter28);
        builder24.ensureSaneDefaults();
        retrofit.client.Client.Provider provider31 = builder24.clientProvider;
        java.util.concurrent.Executor executor32 = null;
        java.util.concurrent.Executor executor33 = null;
        retrofit.RequestInterceptor requestInterceptor34 = null;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request37 = serializedObjectSupporter36.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter36.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder40 = builder35.setConverter((retrofit.converter.Converter) gsonConverter39);
        retrofit.Profiler profiler41 = null;
        retrofit.ErrorHandler errorHandler42 = null;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        log43.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter(server21, provider31, executor32, executor33, requestInterceptor34, (retrofit.converter.Converter) gsonConverter39, profiler41, errorHandler42, log43, logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder5.setClient(provider31);
        java.util.concurrent.Executor executor49 = null;
        builder48.sethttpExecutor(executor49);
        retrofit.SerializedObjectSupporter serializedObjectSupporter51 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request52 = serializedObjectSupporter51.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter53 = serializedObjectSupporter51.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString54 = serializedObjectSupporter51.deserializeObjectTypedOutput2();
        retrofit.converter.GsonConverter gsonConverter55 = serializedObjectSupporter51.deserializeObjectConverter6();
        builder48.converter = gsonConverter55;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(request15);
        org.junit.Assert.assertNotNull(gsonConverter16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(executor19);
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "http://example.com" + "'", str22, "http://example.com");
        org.junit.Assert.assertNotNull(request26);
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(provider31);
        org.junit.Assert.assertNotNull(request37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(request52);
        org.junit.Assert.assertNotNull(gsonConverter53);
        org.junit.Assert.assertNotNull(typedString54);
        org.junit.Assert.assertNotNull(gsonConverter55);
    }

    @Test
    public void test417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test417");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.client.Client.Provider provider4 = null;
        builder2.clientProvider = provider4;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("hi!");
        retrofit.converter.Converter converter9 = builder8.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request11 = serializedObjectSupporter10.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter10.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter10.deserializeObjectConverter8();
        retrofit.client.Request request14 = serializedObjectSupporter10.deserializeObjectRequest5();
        retrofit.Server server15 = serializedObjectSupporter10.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request18 = serializedObjectSupporter17.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter17.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter17.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder21 = builder16.setConverter((retrofit.converter.Converter) gsonConverter20);
        builder16.ensureSaneDefaults();
        retrofit.client.Client.Provider provider23 = builder16.clientProvider;
        java.util.concurrent.Executor executor24 = null;
        java.util.concurrent.Executor executor25 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server27 = serializedObjectSupporter26.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor28 = serializedObjectSupporter26.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request31 = serializedObjectSupporter30.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter32 = serializedObjectSupporter30.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter30.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder34 = builder29.setConverter((retrofit.converter.Converter) gsonConverter33);
        retrofit.Profiler profiler35 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server37 = serializedObjectSupporter36.deserializeObjectServer1();
        retrofit.client.Request request38 = serializedObjectSupporter36.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler39 = serializedObjectSupporter36.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        log40.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter(server15, provider23, executor24, executor25, requestInterceptor28, (retrofit.converter.Converter) gsonConverter33, profiler35, errorHandler39, log40, logLevel43);
        retrofit.RestAdapter.Builder builder45 = builder8.setClient(provider23);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request48 = serializedObjectSupporter47.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter49 = serializedObjectSupporter47.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter50 = serializedObjectSupporter47.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder51 = builder46.setConverter((retrofit.converter.Converter) gsonConverter50);
        java.util.concurrent.Executor executor52 = builder51.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter53 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server54 = serializedObjectSupporter53.deserializeObjectServer1();
        java.lang.String str55 = server54.getUrl();
        builder51.server = server54;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request59 = serializedObjectSupporter58.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter60 = serializedObjectSupporter58.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter58.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder62 = builder57.setConverter((retrofit.converter.Converter) gsonConverter61);
        builder57.ensureSaneDefaults();
        retrofit.client.Client.Provider provider64 = builder57.clientProvider;
        java.util.concurrent.Executor executor65 = null;
        java.util.concurrent.Executor executor66 = null;
        retrofit.RequestInterceptor requestInterceptor67 = null;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter69 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request70 = serializedObjectSupporter69.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter71 = serializedObjectSupporter69.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter72 = serializedObjectSupporter69.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder73 = builder68.setConverter((retrofit.converter.Converter) gsonConverter72);
        retrofit.Profiler profiler74 = null;
        retrofit.ErrorHandler errorHandler75 = null;
        retrofit.RestAdapter.Log log76 = retrofit.RestAdapter.Log.NONE;
        log76.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter80 = new retrofit.RestAdapter(server54, provider64, executor65, executor66, requestInterceptor67, (retrofit.converter.Converter) gsonConverter72, profiler74, errorHandler75, log76, logLevel79);
        retrofit.RestAdapter.Builder builder81 = builder8.setClient(provider64);
        retrofit.RestAdapter.Builder builder82 = builder2.setClient(provider64);
        java.util.concurrent.Executor executor83 = builder82.getcallbackExecutor();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertNotNull(request14);
        org.junit.Assert.assertNotNull(server15);
        org.junit.Assert.assertNotNull(request18);
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(provider23);
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(request31);
        org.junit.Assert.assertNotNull(gsonConverter32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNotNull(errorHandler39);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(request48);
        org.junit.Assert.assertNotNull(gsonConverter49);
        org.junit.Assert.assertNotNull(gsonConverter50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNull(executor52);
        org.junit.Assert.assertNotNull(server54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "http://example.com" + "'", str55, "http://example.com");
        org.junit.Assert.assertNotNull(request59);
        org.junit.Assert.assertNotNull(gsonConverter60);
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(provider64);
        org.junit.Assert.assertNotNull(request70);
        org.junit.Assert.assertNotNull(gsonConverter71);
        org.junit.Assert.assertNotNull(gsonConverter72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNull(executor83);
    }

    @Test
    public void test418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test418");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.mime.TypedOutput typedOutput2 = request1.getBody();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNull(typedOutput2);
    }

    @Test
    public void test419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test419");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.RestAdapter.RestHandler restHandler35 = restAdapter34.new RestHandler();
        retrofit.Profiler profiler36 = restAdapter34.getprofiler();
        retrofit.client.Request request37 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request38 = restAdapter34.logAndReplaceRequest(request37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(profiler36);
    }

    @Test
    public void test420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test420");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest6();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(request4);
    }

    @Test
    public void test421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test421");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.converter.GsonConverter gsonConverter1 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.RequestInterceptor requestInterceptor3 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString5();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.ErrorHandler errorHandler6 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.Server server7 = serializedObjectSupporter0.deserializeObjectServer1();
        org.junit.Assert.assertNotNull(gsonConverter1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(requestInterceptor3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "POST" + "'", str4, "POST");
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(errorHandler6);
        org.junit.Assert.assertNotNull(server7);
    }

    @Test
    public void test422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test422");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        java.util.concurrent.Executor executor35 = restAdapter34.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request37 = serializedObjectSupporter36.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter4();
        retrofit.client.Request request39 = serializedObjectSupporter36.deserializeObjectRequest4();
        retrofit.client.Request request40 = restAdapter34.logAndReplaceRequest(request39);
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter34.new RestHandler();
        retrofit.converter.Converter converter42 = restAdapter34.converter;
        java.util.concurrent.Executor executor43 = restAdapter34.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter34.new RestHandler();
        java.util.concurrent.Executor executor46 = restAdapter34.gethttpExecutor();
        retrofit.RestAdapter.RestHandler restHandler47 = restAdapter34.new RestHandler();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNotNull(request37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(converter42);
        org.junit.Assert.assertNull(executor43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor46);
    }

    @Test
    public void test423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test423");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = null;
        restAdapter34.setLogLevel(logLevel35);
        retrofit.Server server37 = restAdapter34.server;
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter38.deserializeObjectConverter8();
        java.lang.String str40 = serializedObjectSupporter38.deserializeObjectString1();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter38;
        java.lang.String str42 = serializedObjectSupporter38.deserializeObjectString3();
        retrofit.Server server43 = serializedObjectSupporter38.deserializeObjectServer1();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Retrofit-" + "'", str40, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "GET" + "'", str42, "GET");
        org.junit.Assert.assertNotNull(server43);
    }

    @Test
    public void test424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test424");
        retrofit.Server server1 = new retrofit.Server("POST");
    }

    @Test
    public void test425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test425");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        java.util.List<retrofit.client.Header> headerList2 = request1.headers;
        java.lang.String str3 = request1.url;
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(headerList2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
    }

    @Test
    public void test426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test426");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString3 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        retrofit.mime.TypedString typedString4 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter2();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(typedString3);
        org.junit.Assert.assertNotNull(typedString4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(gsonConverter7);
    }

    @Test
    public void test427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test427");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.Profiler profiler3 = builder2.profiler;
        java.util.concurrent.Executor executor4 = null;
        builder2.sethttpExecutor(executor4);
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server7 = serializedObjectSupporter6.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder9 = builder2.setRequestInterceptor(requestInterceptor8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("hi!");
        retrofit.converter.Converter converter13 = builder12.converter;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request16 = serializedObjectSupporter15.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter15.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder19 = builder14.setConverter((retrofit.converter.Converter) gsonConverter18);
        java.util.concurrent.Executor executor20 = builder19.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server22 = serializedObjectSupporter21.deserializeObjectServer1();
        java.lang.String str23 = server22.getUrl();
        builder19.server = server22;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request27 = serializedObjectSupporter26.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter26.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder30 = builder25.setConverter((retrofit.converter.Converter) gsonConverter29);
        builder25.ensureSaneDefaults();
        retrofit.client.Client.Provider provider32 = builder25.clientProvider;
        java.util.concurrent.Executor executor33 = null;
        java.util.concurrent.Executor executor34 = null;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request38 = serializedObjectSupporter37.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter37.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter40 = serializedObjectSupporter37.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder41 = builder36.setConverter((retrofit.converter.Converter) gsonConverter40);
        retrofit.Profiler profiler42 = null;
        retrofit.ErrorHandler errorHandler43 = null;
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        log44.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server22, provider32, executor33, executor34, requestInterceptor35, (retrofit.converter.Converter) gsonConverter40, profiler42, errorHandler43, log44, logLevel47);
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request50 = serializedObjectSupporter49.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter51 = serializedObjectSupporter49.deserializeObjectConverter4();
        retrofit.client.Request request52 = serializedObjectSupporter49.deserializeObjectRequest7();
        restAdapter48.serializedObjectSupporter = serializedObjectSupporter49;
        builder12.serializedObjectSupporter = serializedObjectSupporter49;
        retrofit.converter.GsonConverter gsonConverter55 = serializedObjectSupporter49.deserializeObjectConverter8();
        retrofit.converter.GsonConverter gsonConverter56 = serializedObjectSupporter49.deserializeObjectConverter3();
        builder2.serializedObjectSupporter = serializedObjectSupporter49;
        java.util.concurrent.Executor executor58 = null;
        builder2.sethttpExecutor(executor58);
        retrofit.RestAdapter.Log log60 = builder2.log;
        retrofit.Profiler profiler61 = builder2.profiler;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(profiler3);
        org.junit.Assert.assertNotNull(server7);
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNull(executor20);
        org.junit.Assert.assertNotNull(server22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "http://example.com" + "'", str23, "http://example.com");
        org.junit.Assert.assertNotNull(request27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(provider32);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertNotNull(gsonConverter40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request50);
        org.junit.Assert.assertNotNull(gsonConverter51);
        org.junit.Assert.assertNotNull(request52);
        org.junit.Assert.assertNotNull(gsonConverter55);
        org.junit.Assert.assertNotNull(gsonConverter56);
        org.junit.Assert.assertNull(log60);
        org.junit.Assert.assertNull(profiler61);
    }

    @Test
    public void test428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test428");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.client.Client.Provider provider35 = restAdapter34.clientProvider;
        java.lang.String str36 = restAdapter34.getTHREAD_PREFIX();
        retrofit.ErrorHandler errorHandler37 = restAdapter34.geterrorHandler();
        retrofit.RestAdapter.RestHandler restHandler38 = restAdapter34.new RestHandler();
        java.util.concurrent.Executor executor39 = restAdapter34.callbackExecutor;
        retrofit.converter.Converter converter40 = restAdapter34.converter;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(provider35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Retrofit-" + "'", str36, "Retrofit-");
        org.junit.Assert.assertNull(errorHandler37);
        org.junit.Assert.assertNull(executor39);
        org.junit.Assert.assertNotNull(converter40);
    }

    @Test
    public void test429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test429");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.converter.GsonConverter gsonConverter1 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest8();
        org.junit.Assert.assertNotNull(gsonConverter1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(request3);
    }

    @Test
    public void test430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test430");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.Server server9 = new retrofit.Server("hi!", "default");
        builder5.server = server9;
        java.util.concurrent.Executor executor11 = null;
        builder5.sethttpExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request15 = serializedObjectSupporter14.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter16 = serializedObjectSupporter14.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter14.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder18 = builder13.setConverter((retrofit.converter.Converter) gsonConverter17);
        java.util.concurrent.Executor executor19 = builder18.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server21 = serializedObjectSupporter20.deserializeObjectServer1();
        java.lang.String str22 = server21.getUrl();
        builder18.server = server21;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request26 = serializedObjectSupporter25.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter25.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter25.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder29 = builder24.setConverter((retrofit.converter.Converter) gsonConverter28);
        builder24.ensureSaneDefaults();
        retrofit.client.Client.Provider provider31 = builder24.clientProvider;
        java.util.concurrent.Executor executor32 = null;
        java.util.concurrent.Executor executor33 = null;
        retrofit.RequestInterceptor requestInterceptor34 = null;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request37 = serializedObjectSupporter36.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter36.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder40 = builder35.setConverter((retrofit.converter.Converter) gsonConverter39);
        retrofit.Profiler profiler41 = null;
        retrofit.ErrorHandler errorHandler42 = null;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        log43.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter(server21, provider31, executor32, executor33, requestInterceptor34, (retrofit.converter.Converter) gsonConverter39, profiler41, errorHandler42, log43, logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder5.setClient(provider31);
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server50 = serializedObjectSupporter49.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor51 = serializedObjectSupporter49.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder52 = builder48.setRequestInterceptor(requestInterceptor51);
        retrofit.client.Client client53 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder54 = builder48.setClient(client53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(request15);
        org.junit.Assert.assertNotNull(gsonConverter16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(executor19);
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "http://example.com" + "'", str22, "http://example.com");
        org.junit.Assert.assertNotNull(request26);
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(provider31);
        org.junit.Assert.assertNotNull(request37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(server50);
        org.junit.Assert.assertNotNull(requestInterceptor51);
        org.junit.Assert.assertNotNull(builder52);
    }

    @Test
    public void test431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test431");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        java.util.concurrent.Executor executor35 = restAdapter34.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request37 = serializedObjectSupporter36.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter4();
        retrofit.client.Request request39 = serializedObjectSupporter36.deserializeObjectRequest4();
        retrofit.client.Request request40 = restAdapter34.logAndReplaceRequest(request39);
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter34.new RestHandler();
        retrofit.Server server42 = restAdapter34.getserver();
        retrofit.RequestInterceptor requestInterceptor43 = restAdapter34.requestInterceptor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request45 = serializedObjectSupporter44.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter44.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString47 = serializedObjectSupporter44.deserializeObjectTypedOutput2();
        java.lang.String str48 = serializedObjectSupporter44.deserializeObjectString1();
        retrofit.client.Request request49 = serializedObjectSupporter44.deserializeObjectRequest4();
        retrofit.client.Request request50 = restAdapter34.logAndReplaceRequest(request49);
        retrofit.RestAdapter.RestHandler restHandler51 = restAdapter34.new RestHandler();
        java.util.concurrent.Executor executor52 = restAdapter34.getcallbackExecutor();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNotNull(request37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(server42);
        org.junit.Assert.assertNull(requestInterceptor43);
        org.junit.Assert.assertNotNull(request45);
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNotNull(typedString47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Retrofit-" + "'", str48, "Retrofit-");
        org.junit.Assert.assertNotNull(request49);
        org.junit.Assert.assertNotNull(request50);
        org.junit.Assert.assertNull(executor52);
    }

    @Test
    public void test432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test432");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = builder5.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder9 = builder7.setServer("hi!");
        java.util.concurrent.Executor executor10 = null;
        builder9.sethttpExecutor(executor10);
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server13 = serializedObjectSupporter12.deserializeObjectServer1();
        retrofit.client.Request request14 = serializedObjectSupporter12.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler15 = serializedObjectSupporter12.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder16 = builder9.setErrorHandler(errorHandler15);
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request18 = serializedObjectSupporter17.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter17.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder20 = builder16.setConverter((retrofit.converter.Converter) gsonConverter19);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request23 = serializedObjectSupporter22.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter24 = serializedObjectSupporter22.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter22.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder26 = builder21.setConverter((retrofit.converter.Converter) gsonConverter25);
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = builder26.serializedObjectSupporter;
        java.util.concurrent.Executor executor28 = builder26.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server30 = serializedObjectSupporter29.deserializeObjectServer1();
        retrofit.client.Request request31 = serializedObjectSupporter29.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler32 = serializedObjectSupporter29.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder33 = builder26.setErrorHandler(errorHandler32);
        builder33.ensureSaneDefaults();
        java.util.concurrent.Executor executor35 = builder33.getcallbackExecutor();
        java.util.concurrent.Executor executor36 = null;
        retrofit.RestAdapter.Builder builder37 = builder20.setExecutors(executor35, executor36);
        builder5.setcallbackExecutor(executor36);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter39 = builder5.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(request14);
        org.junit.Assert.assertNotNull(errorHandler15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(request18);
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(request23);
        org.junit.Assert.assertNotNull(gsonConverter24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(serializedObjectSupporter27);
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNotNull(server30);
        org.junit.Assert.assertNotNull(request31);
        org.junit.Assert.assertNotNull(errorHandler32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(executor35);
        org.junit.Assert.assertNotNull(builder37);
    }

    @Test
    public void test433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test433");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString3 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest8();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(typedString3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-" + "'", str4, "Retrofit-");
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(request6);
    }

    @Test
    public void test434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test434");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString3 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        retrofit.mime.TypedString typedString4 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.client.Request request7 = serializedObjectSupporter0.deserializeObjectRequest8();
        java.util.List<retrofit.client.Header> headerList8 = request7.getHeaders();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(typedString3);
        org.junit.Assert.assertNotNull(typedString4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertNotNull(headerList8);
    }

    @Test
    public void test435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test435");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest8();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString3();
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "GET" + "'", str5, "GET");
    }

    @Test
    public void test436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test436");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest3();
        java.util.List<retrofit.client.Header> headerList4 = request3.getHeaders();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(headerList4);
    }

    @Test
    public void test437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test437");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        java.lang.String str42 = restAdapter34.getTHREAD_PREFIX();
        retrofit.RestAdapter.RestHandler restHandler43 = restAdapter34.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request45 = serializedObjectSupporter44.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter44.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString47 = serializedObjectSupporter44.deserializeObjectTypedOutput2();
        java.lang.String str48 = serializedObjectSupporter44.deserializeObjectString1();
        retrofit.client.Request request49 = serializedObjectSupporter44.deserializeObjectRequest3();
        restHandler43.serializedObjectSupporter = serializedObjectSupporter44;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Retrofit-" + "'", str42, "Retrofit-");
        org.junit.Assert.assertNotNull(request45);
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNotNull(typedString47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Retrofit-" + "'", str48, "Retrofit-");
        org.junit.Assert.assertNotNull(request49);
    }

    @Test
    public void test438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test438");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest8();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString4();
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
    }

    @Test
    public void test439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test439");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        java.util.concurrent.Executor executor35 = restAdapter34.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request37 = serializedObjectSupporter36.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter4();
        retrofit.client.Request request39 = serializedObjectSupporter36.deserializeObjectRequest4();
        retrofit.client.Request request40 = restAdapter34.logAndReplaceRequest(request39);
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter34.new RestHandler();
        retrofit.converter.Converter converter42 = restAdapter34.converter;
        java.util.concurrent.Executor executor43 = restAdapter34.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor44 = restAdapter34.getrequestInterceptor();
        retrofit.RestAdapter.LogLevel logLevel45 = restAdapter34.logLevel;
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request47 = serializedObjectSupporter46.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter48 = serializedObjectSupporter46.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString49 = serializedObjectSupporter46.deserializeObjectTypedOutput2();
        retrofit.converter.GsonConverter gsonConverter50 = serializedObjectSupporter46.deserializeObjectConverter8();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter46;
        retrofit.converter.GsonConverter gsonConverter52 = serializedObjectSupporter46.deserializeObjectConverter4();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNotNull(request37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(converter42);
        org.junit.Assert.assertNull(executor43);
        org.junit.Assert.assertNull(requestInterceptor44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request47);
        org.junit.Assert.assertNotNull(gsonConverter48);
        org.junit.Assert.assertNotNull(typedString49);
        org.junit.Assert.assertNotNull(gsonConverter50);
        org.junit.Assert.assertNotNull(gsonConverter52);
    }

    @Test
    public void test440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test440");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        java.util.concurrent.Executor executor41 = restAdapter34.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel42 = restAdapter34.getLogLevel();
        retrofit.client.Header[] headerArray47 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList48 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList48, headerArray47);
        retrofit.SerializedObjectSupporter serializedObjectSupporter50 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request51 = serializedObjectSupporter50.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter52 = serializedObjectSupporter50.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString53 = serializedObjectSupporter50.deserializeObjectTypedOutput2();
        retrofit.client.Request request54 = new retrofit.client.Request("http://example.com/", "Retrofit-", (java.util.List<retrofit.client.Header>) headerList48, (retrofit.mime.TypedOutput) typedString53);
        retrofit.client.Header[] headerArray57 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList58 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList58, headerArray57);
        retrofit.client.Header[] headerArray62 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList63 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList63, headerArray62);
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request66 = serializedObjectSupporter65.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter67 = serializedObjectSupporter65.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString68 = serializedObjectSupporter65.deserializeObjectTypedOutput2();
        retrofit.client.Request request69 = new retrofit.client.Request("http://example.com/", "Retrofit-", (java.util.List<retrofit.client.Header>) headerList63, (retrofit.mime.TypedOutput) typedString68);
        retrofit.client.Request request70 = new retrofit.client.Request("Retrofit-", "default", (java.util.List<retrofit.client.Header>) headerList58, (retrofit.mime.TypedOutput) typedString68);
        retrofit.mime.TypedOutput typedOutput71 = request70.body;
        retrofit.client.Request request72 = new retrofit.client.Request("http://example.com", "http://example.com/", (java.util.List<retrofit.client.Header>) headerList48, typedOutput71);
        retrofit.client.Request request73 = restAdapter34.logAndReplaceRequest(request72);
        java.util.List<retrofit.client.Header> headerList74 = request72.headers;
        java.util.List<retrofit.client.Header> headerList75 = request72.getHeaders();
        java.lang.String str76 = request72.getMethod();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNull(executor41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(headerArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(request51);
        org.junit.Assert.assertNotNull(gsonConverter52);
        org.junit.Assert.assertNotNull(typedString53);
        org.junit.Assert.assertNotNull(headerArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(headerArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(request66);
        org.junit.Assert.assertNotNull(gsonConverter67);
        org.junit.Assert.assertNotNull(typedString68);
        org.junit.Assert.assertNotNull(typedOutput71);
        org.junit.Assert.assertNotNull(request73);
        org.junit.Assert.assertNotNull(headerList74);
        org.junit.Assert.assertNotNull(headerList75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "http://example.com" + "'", str76, "http://example.com");
    }

    @Test
    public void test441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test441");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = null;
        restAdapter34.setLogLevel(logLevel35);
        retrofit.Server server37 = restAdapter34.server;
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter38.deserializeObjectConverter8();
        java.lang.String str40 = serializedObjectSupporter38.deserializeObjectString1();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter38;
        java.lang.String str42 = restAdapter34.getIDLE_THREAD_NAME();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Retrofit-" + "'", str40, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Retrofit-Idle" + "'", str42, "Retrofit-Idle");
    }

    @Test
    public void test442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test442");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.client.Client.Provider provider7 = builder0.clientProvider;
        builder0.ensureSaneDefaults();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(provider7);
    }

    @Test
    public void test443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test443");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.client.Client.Provider provider35 = restAdapter34.clientProvider;
        java.util.concurrent.Executor executor36 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request38 = serializedObjectSupporter37.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter37.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter40 = serializedObjectSupporter37.deserializeObjectConverter8();
        retrofit.client.Request request41 = serializedObjectSupporter37.deserializeObjectRequest5();
        retrofit.Server server42 = serializedObjectSupporter37.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request45 = serializedObjectSupporter44.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter44.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter47 = serializedObjectSupporter44.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder48 = builder43.setConverter((retrofit.converter.Converter) gsonConverter47);
        builder43.ensureSaneDefaults();
        retrofit.client.Client.Provider provider50 = builder43.clientProvider;
        java.util.concurrent.Executor executor51 = null;
        java.util.concurrent.Executor executor52 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter53 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server54 = serializedObjectSupporter53.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor55 = serializedObjectSupporter53.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter57 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request58 = serializedObjectSupporter57.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter59 = serializedObjectSupporter57.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter60 = serializedObjectSupporter57.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder61 = builder56.setConverter((retrofit.converter.Converter) gsonConverter60);
        retrofit.Profiler profiler62 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter63 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server64 = serializedObjectSupporter63.deserializeObjectServer1();
        retrofit.client.Request request65 = serializedObjectSupporter63.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler66 = serializedObjectSupporter63.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        log67.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter71 = new retrofit.RestAdapter(server42, provider50, executor51, executor52, requestInterceptor55, (retrofit.converter.Converter) gsonConverter60, profiler62, errorHandler66, log67, logLevel70);
        boolean boolean72 = logLevel70.log();
        restAdapter34.logLevel = logLevel70;
        java.util.concurrent.Executor executor74 = restAdapter34.callbackExecutor;
        java.util.concurrent.Executor executor75 = restAdapter34.gethttpExecutor();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(provider35);
        org.junit.Assert.assertNull(executor36);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertNotNull(gsonConverter40);
        org.junit.Assert.assertNotNull(request41);
        org.junit.Assert.assertNotNull(server42);
        org.junit.Assert.assertNotNull(request45);
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNotNull(gsonConverter47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(provider50);
        org.junit.Assert.assertNotNull(server54);
        org.junit.Assert.assertNotNull(requestInterceptor55);
        org.junit.Assert.assertNotNull(request58);
        org.junit.Assert.assertNotNull(gsonConverter59);
        org.junit.Assert.assertNotNull(gsonConverter60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(server64);
        org.junit.Assert.assertNotNull(request65);
        org.junit.Assert.assertNotNull(errorHandler66);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(executor74);
        org.junit.Assert.assertNull(executor75);
    }

    @Test
    public void test444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test444");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request5 = serializedObjectSupporter4.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter4.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter8();
        retrofit.client.Request request8 = serializedObjectSupporter4.deserializeObjectRequest5();
        retrofit.Server server9 = serializedObjectSupporter4.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request12 = serializedObjectSupporter11.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter11.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder15 = builder10.setConverter((retrofit.converter.Converter) gsonConverter14);
        builder10.ensureSaneDefaults();
        retrofit.client.Client.Provider provider17 = builder10.clientProvider;
        java.util.concurrent.Executor executor18 = null;
        java.util.concurrent.Executor executor19 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server21 = serializedObjectSupporter20.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor22 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request25 = serializedObjectSupporter24.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter24.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter24.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder28 = builder23.setConverter((retrofit.converter.Converter) gsonConverter27);
        retrofit.Profiler profiler29 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server31 = serializedObjectSupporter30.deserializeObjectServer1();
        retrofit.client.Request request32 = serializedObjectSupporter30.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler33 = serializedObjectSupporter30.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        log34.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server9, provider17, executor18, executor19, requestInterceptor22, (retrofit.converter.Converter) gsonConverter27, profiler29, errorHandler33, log34, logLevel37);
        retrofit.RestAdapter.Builder builder39 = builder2.setClient(provider17);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request42 = serializedObjectSupporter41.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter41.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter44 = serializedObjectSupporter41.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder45 = builder40.setConverter((retrofit.converter.Converter) gsonConverter44);
        java.util.concurrent.Executor executor46 = builder45.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server48 = serializedObjectSupporter47.deserializeObjectServer1();
        java.lang.String str49 = server48.getUrl();
        builder45.server = server48;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request53 = serializedObjectSupporter52.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter54 = serializedObjectSupporter52.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter55 = serializedObjectSupporter52.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder56 = builder51.setConverter((retrofit.converter.Converter) gsonConverter55);
        builder51.ensureSaneDefaults();
        retrofit.client.Client.Provider provider58 = builder51.clientProvider;
        java.util.concurrent.Executor executor59 = null;
        java.util.concurrent.Executor executor60 = null;
        retrofit.RequestInterceptor requestInterceptor61 = null;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter63 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request64 = serializedObjectSupporter63.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter65 = serializedObjectSupporter63.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter66 = serializedObjectSupporter63.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder67 = builder62.setConverter((retrofit.converter.Converter) gsonConverter66);
        retrofit.Profiler profiler68 = null;
        retrofit.ErrorHandler errorHandler69 = null;
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        log70.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter74 = new retrofit.RestAdapter(server48, provider58, executor59, executor60, requestInterceptor61, (retrofit.converter.Converter) gsonConverter66, profiler68, errorHandler69, log70, logLevel73);
        retrofit.RestAdapter.Builder builder75 = builder2.setClient(provider58);
        retrofit.SerializedObjectSupporter serializedObjectSupporter76 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request77 = serializedObjectSupporter76.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter78 = serializedObjectSupporter76.deserializeObjectConverter5();
        builder2.serializedObjectSupporter = serializedObjectSupporter76;
        retrofit.client.Request request80 = serializedObjectSupporter76.deserializeObjectRequest7();
        retrofit.client.Request request81 = serializedObjectSupporter76.deserializeObjectRequest4();
        java.lang.String str82 = request81.url;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(provider17);
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNotNull(requestInterceptor22);
        org.junit.Assert.assertNotNull(request25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(server31);
        org.junit.Assert.assertNotNull(request32);
        org.junit.Assert.assertNotNull(errorHandler33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(request42);
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertNotNull(gsonConverter44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNull(executor46);
        org.junit.Assert.assertNotNull(server48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "http://example.com" + "'", str49, "http://example.com");
        org.junit.Assert.assertNotNull(request53);
        org.junit.Assert.assertNotNull(gsonConverter54);
        org.junit.Assert.assertNotNull(gsonConverter55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(provider58);
        org.junit.Assert.assertNotNull(request64);
        org.junit.Assert.assertNotNull(gsonConverter65);
        org.junit.Assert.assertNotNull(gsonConverter66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(request77);
        org.junit.Assert.assertNotNull(gsonConverter78);
        org.junit.Assert.assertNotNull(request80);
        org.junit.Assert.assertNotNull(request81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "http://example.com/" + "'", str82, "http://example.com/");
    }

    @Test
    public void test445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test445");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        java.util.concurrent.Executor executor42 = restAdapter34.getcallbackExecutor();
        java.lang.String str43 = restAdapter34.getIDLE_THREAD_NAME();
        retrofit.RestAdapter.RestHandler restHandler44 = restAdapter34.new RestHandler();
        retrofit.ErrorHandler errorHandler45 = restAdapter34.geterrorHandler();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Retrofit-Idle" + "'", str43, "Retrofit-Idle");
        org.junit.Assert.assertNull(errorHandler45);
    }

    @Test
    public void test446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test446");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest6();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(request4);
    }

    @Test
    public void test447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test447");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest7();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(request4);
    }

    @Test
    public void test448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test448");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request4 = serializedObjectSupporter3.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter5();
        builder0.converter = gsonConverter5;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request8 = serializedObjectSupporter7.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter7.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString10 = serializedObjectSupporter7.deserializeObjectTypedOutput2();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString1();
        builder0.serializedObjectSupporter = serializedObjectSupporter7;
        retrofit.Server server13 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.client.Request request14 = serializedObjectSupporter7.deserializeObjectRequest7();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(typedString10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-" + "'", str11, "Retrofit-");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(request14);
    }

    @Test
    public void test449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test449");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request11 = serializedObjectSupporter10.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter10.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString13 = serializedObjectSupporter10.deserializeObjectTypedOutput2();
        retrofit.client.Request request14 = new retrofit.client.Request("http://example.com/", "Retrofit-", (java.util.List<retrofit.client.Header>) headerList8, (retrofit.mime.TypedOutput) typedString13);
        retrofit.client.Request request15 = new retrofit.client.Request("Retrofit-", "default", (java.util.List<retrofit.client.Header>) headerList3, (retrofit.mime.TypedOutput) typedString13);
        retrofit.mime.TypedOutput typedOutput16 = request15.body;
        java.util.List<retrofit.client.Header> headerList17 = request15.getHeaders();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNotNull(typedString13);
        org.junit.Assert.assertNotNull(typedOutput16);
        org.junit.Assert.assertNotNull(headerList17);
    }

    @Test
    public void test450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test450");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        builder0.logLevel = logLevel3;
        retrofit.client.Client.Provider provider5 = builder0.clientProvider;
        java.util.concurrent.Executor executor6 = null;
        builder0.setcallbackExecutor(executor6);
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter8.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder10 = builder0.setConverter((retrofit.converter.Converter) gsonConverter9);
        retrofit.Profiler profiler11 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder12 = builder0.setProfiler(profiler11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test451");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = null;
        restAdapter34.setLogLevel(logLevel35);
        java.util.concurrent.Executor executor37 = restAdapter34.gethttpExecutor();
        retrofit.converter.Converter converter38 = restAdapter34.converter;
        retrofit.ErrorHandler errorHandler39 = restAdapter34.errorHandler;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("hi!");
        retrofit.converter.Converter converter43 = builder42.converter;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request46 = serializedObjectSupporter45.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter47 = serializedObjectSupporter45.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter48 = serializedObjectSupporter45.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder49 = builder44.setConverter((retrofit.converter.Converter) gsonConverter48);
        java.util.concurrent.Executor executor50 = builder49.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter51 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server52 = serializedObjectSupporter51.deserializeObjectServer1();
        java.lang.String str53 = server52.getUrl();
        builder49.server = server52;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request57 = serializedObjectSupporter56.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter58 = serializedObjectSupporter56.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter59 = serializedObjectSupporter56.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder60 = builder55.setConverter((retrofit.converter.Converter) gsonConverter59);
        builder55.ensureSaneDefaults();
        retrofit.client.Client.Provider provider62 = builder55.clientProvider;
        java.util.concurrent.Executor executor63 = null;
        java.util.concurrent.Executor executor64 = null;
        retrofit.RequestInterceptor requestInterceptor65 = null;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter67 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request68 = serializedObjectSupporter67.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter69 = serializedObjectSupporter67.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter70 = serializedObjectSupporter67.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder71 = builder66.setConverter((retrofit.converter.Converter) gsonConverter70);
        retrofit.Profiler profiler72 = null;
        retrofit.ErrorHandler errorHandler73 = null;
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        log74.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter78 = new retrofit.RestAdapter(server52, provider62, executor63, executor64, requestInterceptor65, (retrofit.converter.Converter) gsonConverter70, profiler72, errorHandler73, log74, logLevel77);
        retrofit.SerializedObjectSupporter serializedObjectSupporter79 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request80 = serializedObjectSupporter79.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter81 = serializedObjectSupporter79.deserializeObjectConverter4();
        retrofit.client.Request request82 = serializedObjectSupporter79.deserializeObjectRequest7();
        restAdapter78.serializedObjectSupporter = serializedObjectSupporter79;
        builder42.serializedObjectSupporter = serializedObjectSupporter79;
        retrofit.client.Request request85 = serializedObjectSupporter79.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter79;
        retrofit.RestAdapter.LogLevel logLevel87 = restAdapter34.logLevel;
        retrofit.client.Client.Provider provider88 = restAdapter34.clientProvider;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertNotNull(converter38);
        org.junit.Assert.assertNull(errorHandler39);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(converter43);
        org.junit.Assert.assertNotNull(request46);
        org.junit.Assert.assertNotNull(gsonConverter47);
        org.junit.Assert.assertNotNull(gsonConverter48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNull(executor50);
        org.junit.Assert.assertNotNull(server52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "http://example.com" + "'", str53, "http://example.com");
        org.junit.Assert.assertNotNull(request57);
        org.junit.Assert.assertNotNull(gsonConverter58);
        org.junit.Assert.assertNotNull(gsonConverter59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(provider62);
        org.junit.Assert.assertNotNull(request68);
        org.junit.Assert.assertNotNull(gsonConverter69);
        org.junit.Assert.assertNotNull(gsonConverter70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request80);
        org.junit.Assert.assertNotNull(gsonConverter81);
        org.junit.Assert.assertNotNull(request82);
        org.junit.Assert.assertNotNull(request85);
        org.junit.Assert.assertNull(logLevel87);
        org.junit.Assert.assertNotNull(provider88);
    }

    @Test
    public void test452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test452");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.converter.GsonConverter gsonConverter1 = serializedObjectSupporter0.deserializeObjectConverter8();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.ErrorHandler errorHandler3 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter5();
        org.junit.Assert.assertNotNull(gsonConverter1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Retrofit-" + "'", str2, "Retrofit-");
        org.junit.Assert.assertNotNull(errorHandler3);
        org.junit.Assert.assertNotNull(gsonConverter4);
    }

    @Test
    public void test453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test453");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request4 = serializedObjectSupporter3.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter3.deserializeObjectConverter5();
        builder0.converter = gsonConverter5;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request8 = serializedObjectSupporter7.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter7.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString10 = serializedObjectSupporter7.deserializeObjectTypedOutput2();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString1();
        builder0.serializedObjectSupporter = serializedObjectSupporter7;
        retrofit.client.Request request13 = serializedObjectSupporter7.deserializeObjectRequest5();
        retrofit.Server server14 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str15 = server14.name;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(typedString10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-" + "'", str11, "Retrofit-");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "default" + "'", str15, "default");
    }

    @Test
    public void test454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test454");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = null;
        restAdapter34.setLogLevel(logLevel35);
        retrofit.Server server37 = restAdapter34.server;
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter38.deserializeObjectConverter8();
        java.lang.String str40 = serializedObjectSupporter38.deserializeObjectString1();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter38;
        java.lang.String str42 = serializedObjectSupporter38.deserializeObjectString3();
        retrofit.client.Request request43 = serializedObjectSupporter38.deserializeObjectRequest5();
        java.lang.String str44 = request43.url;
        java.lang.String str45 = request43.getUrl();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Retrofit-" + "'", str40, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "GET" + "'", str42, "GET");
        org.junit.Assert.assertNotNull(request43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "http://example.com/" + "'", str44, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "http://example.com/" + "'", str45, "http://example.com/");
    }

    @Test
    public void test455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test455");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        java.util.concurrent.Executor executor3 = null;
        builder2.sethttpExecutor(executor3);
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server6 = serializedObjectSupporter5.deserializeObjectServer1();
        retrofit.client.Request request7 = serializedObjectSupporter5.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler8 = serializedObjectSupporter5.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder9 = builder2.setErrorHandler(errorHandler8);
        retrofit.Server server10 = builder2.server;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(server6);
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertNotNull(errorHandler8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(server10);
    }

    @Test
    public void test456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test456");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = builder5.serializedObjectSupporter;
        java.util.concurrent.Executor executor7 = builder5.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server9 = serializedObjectSupporter8.deserializeObjectServer1();
        retrofit.client.Request request10 = serializedObjectSupporter8.deserializeObjectRequest8();
        retrofit.Server server11 = serializedObjectSupporter8.deserializeObjectServer1();
        builder5.server = server11;
        retrofit.converter.Converter converter13 = builder5.converter;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(converter13);
    }

    @Test
    public void test457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test457");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest5();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(request3);
    }

    @Test
    public void test458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test458");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.client.Client.Provider provider35 = restAdapter34.clientProvider;
        java.util.concurrent.Executor executor36 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request38 = serializedObjectSupporter37.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter37.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter40 = serializedObjectSupporter37.deserializeObjectConverter8();
        retrofit.client.Request request41 = serializedObjectSupporter37.deserializeObjectRequest5();
        retrofit.Server server42 = serializedObjectSupporter37.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request45 = serializedObjectSupporter44.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter44.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter47 = serializedObjectSupporter44.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder48 = builder43.setConverter((retrofit.converter.Converter) gsonConverter47);
        builder43.ensureSaneDefaults();
        retrofit.client.Client.Provider provider50 = builder43.clientProvider;
        java.util.concurrent.Executor executor51 = null;
        java.util.concurrent.Executor executor52 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter53 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server54 = serializedObjectSupporter53.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor55 = serializedObjectSupporter53.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter57 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request58 = serializedObjectSupporter57.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter59 = serializedObjectSupporter57.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter60 = serializedObjectSupporter57.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder61 = builder56.setConverter((retrofit.converter.Converter) gsonConverter60);
        retrofit.Profiler profiler62 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter63 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server64 = serializedObjectSupporter63.deserializeObjectServer1();
        retrofit.client.Request request65 = serializedObjectSupporter63.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler66 = serializedObjectSupporter63.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        log67.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter71 = new retrofit.RestAdapter(server42, provider50, executor51, executor52, requestInterceptor55, (retrofit.converter.Converter) gsonConverter60, profiler62, errorHandler66, log67, logLevel70);
        boolean boolean72 = logLevel70.log();
        restAdapter34.logLevel = logLevel70;
        java.util.concurrent.Executor executor74 = restAdapter34.getcallbackExecutor();
        retrofit.RestAdapter.RestHandler restHandler75 = restAdapter34.new RestHandler();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(provider35);
        org.junit.Assert.assertNull(executor36);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertNotNull(gsonConverter40);
        org.junit.Assert.assertNotNull(request41);
        org.junit.Assert.assertNotNull(server42);
        org.junit.Assert.assertNotNull(request45);
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNotNull(gsonConverter47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(provider50);
        org.junit.Assert.assertNotNull(server54);
        org.junit.Assert.assertNotNull(requestInterceptor55);
        org.junit.Assert.assertNotNull(request58);
        org.junit.Assert.assertNotNull(gsonConverter59);
        org.junit.Assert.assertNotNull(gsonConverter60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(server64);
        org.junit.Assert.assertNotNull(request65);
        org.junit.Assert.assertNotNull(errorHandler66);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(executor74);
    }

    @Test
    public void test459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test459");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString3 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest3();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter6 = serializedObjectSupporter0.deserializeObjectLogLevel1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(typedString3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-" + "'", str4, "Retrofit-");
        org.junit.Assert.assertNotNull(request5);
    }

    @Test
    public void test460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test460");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = null;
        restAdapter34.setLogLevel(logLevel35);
        retrofit.Server server37 = restAdapter34.server;
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter38.deserializeObjectConverter8();
        java.lang.String str40 = serializedObjectSupporter38.deserializeObjectString1();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter38;
        java.lang.String str42 = serializedObjectSupporter38.deserializeObjectString3();
        retrofit.client.Request request43 = serializedObjectSupporter38.deserializeObjectRequest5();
        retrofit.client.Request request44 = serializedObjectSupporter38.deserializeObjectRequest2();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Retrofit-" + "'", str40, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "GET" + "'", str42, "GET");
        org.junit.Assert.assertNotNull(request43);
        org.junit.Assert.assertNotNull(request44);
    }

    @Test
    public void test461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test461");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        retrofit.RequestInterceptor requestInterceptor42 = serializedObjectSupporter41.deserializeObjectRequestInterceptor1();
        retrofit.client.Request request43 = serializedObjectSupporter41.deserializeObjectRequest2();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter44 = serializedObjectSupporter41.deserializeObjectLogLevel2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertNotNull(requestInterceptor42);
        org.junit.Assert.assertNotNull(request43);
    }

    @Test
    public void test462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test462");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.Profiler profiler3 = builder2.profiler;
        java.util.concurrent.Executor executor4 = null;
        builder2.sethttpExecutor(executor4);
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server7 = serializedObjectSupporter6.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder9 = builder2.setRequestInterceptor(requestInterceptor8);
        retrofit.RequestInterceptor requestInterceptor10 = builder9.requestInterceptor;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        java.util.concurrent.Executor executor17 = builder16.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server19 = serializedObjectSupporter18.deserializeObjectServer1();
        java.lang.String str20 = server19.getUrl();
        builder16.server = server19;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        builder22.ensureSaneDefaults();
        retrofit.client.Client.Provider provider29 = builder22.clientProvider;
        java.util.concurrent.Executor executor30 = null;
        java.util.concurrent.Executor executor31 = null;
        retrofit.RequestInterceptor requestInterceptor32 = null;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request35 = serializedObjectSupporter34.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter34.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter34.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder38 = builder33.setConverter((retrofit.converter.Converter) gsonConverter37);
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        log41.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter(server19, provider29, executor30, executor31, requestInterceptor32, (retrofit.converter.Converter) gsonConverter37, profiler39, errorHandler40, log41, logLevel44);
        log41.log("");
        log41.log("");
        retrofit.RestAdapter.Builder builder50 = builder9.setLog(log41);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(profiler3);
        org.junit.Assert.assertNotNull(server7);
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNull(executor17);
        org.junit.Assert.assertNotNull(server19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "http://example.com" + "'", str20, "http://example.com");
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(provider29);
        org.junit.Assert.assertNotNull(request35);
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder50);
    }

    @Test
    public void test463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test463");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest7();
        java.lang.String str5 = request4.getUrl();
        java.lang.String str6 = request4.getUrl();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "POST" + "'", str2, "POST");
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
    }

    @Test
    public void test464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test464");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        java.lang.String str35 = restAdapter34.getIDLE_THREAD_NAME();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server37 = serializedObjectSupporter36.deserializeObjectServer1();
        retrofit.client.Request request38 = serializedObjectSupporter36.deserializeObjectRequest1();
        retrofit.mime.TypedOutput typedOutput39 = request38.body;
        retrofit.client.Request request40 = restAdapter34.logAndReplaceRequest(request38);
        java.util.List<retrofit.client.Header> headerList41 = request40.getHeaders();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Retrofit-Idle" + "'", str35, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(headerList41);
    }

    @Test
    public void test465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test465");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request8 = serializedObjectSupporter7.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter7.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder11 = builder6.setConverter((retrofit.converter.Converter) gsonConverter10);
        builder6.ensureSaneDefaults();
        retrofit.client.Client.Provider provider13 = builder6.clientProvider;
        java.util.concurrent.Executor executor14 = null;
        java.util.concurrent.Executor executor15 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server17 = serializedObjectSupporter16.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor18 = serializedObjectSupporter16.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request21 = serializedObjectSupporter20.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter20.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder24 = builder19.setConverter((retrofit.converter.Converter) gsonConverter23);
        retrofit.Profiler profiler25 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server27 = serializedObjectSupporter26.deserializeObjectServer1();
        retrofit.client.Request request28 = serializedObjectSupporter26.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler29 = serializedObjectSupporter26.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server5, provider13, executor14, executor15, requestInterceptor18, (retrofit.converter.Converter) gsonConverter23, profiler25, errorHandler29, log30, logLevel33);
        retrofit.RestAdapter.RestHandler restHandler35 = restAdapter34.new RestHandler();
        retrofit.client.Response response37 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response39 = restAdapter34.logAndReplaceResponse("Retrofit-Idle", response37, (long) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertNotNull(request8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(provider13);
        org.junit.Assert.assertNotNull(server17);
        org.junit.Assert.assertNotNull(requestInterceptor18);
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertNotNull(request28);
        org.junit.Assert.assertNotNull(errorHandler29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test466");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str2 = server1.getUrl();
        java.lang.String str3 = server1.getUrl();
        java.lang.String str4 = server1.getName();
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com" + "'", str2, "http://example.com");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com" + "'", str3, "http://example.com");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "default" + "'", str4, "default");
    }

    @Test
    public void test467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test467");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = builder5.serializedObjectSupporter;
        java.util.concurrent.Executor executor7 = builder5.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server9 = serializedObjectSupporter8.deserializeObjectServer1();
        retrofit.client.Request request10 = serializedObjectSupporter8.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler11 = serializedObjectSupporter8.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder12 = builder5.setErrorHandler(errorHandler11);
        builder12.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request16 = serializedObjectSupporter15.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter15.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder19 = builder14.setConverter((retrofit.converter.Converter) gsonConverter18);
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = builder19.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder23 = builder21.setServer("hi!");
        java.util.concurrent.Executor executor24 = null;
        builder23.sethttpExecutor(executor24);
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server27 = serializedObjectSupporter26.deserializeObjectServer1();
        retrofit.client.Request request28 = serializedObjectSupporter26.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler29 = serializedObjectSupporter26.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder30 = builder23.setErrorHandler(errorHandler29);
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request32 = serializedObjectSupporter31.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder34 = builder30.setConverter((retrofit.converter.Converter) gsonConverter33);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request37 = serializedObjectSupporter36.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter36.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder40 = builder35.setConverter((retrofit.converter.Converter) gsonConverter39);
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = builder40.serializedObjectSupporter;
        java.util.concurrent.Executor executor42 = builder40.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server44 = serializedObjectSupporter43.deserializeObjectServer1();
        retrofit.client.Request request45 = serializedObjectSupporter43.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler46 = serializedObjectSupporter43.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder47 = builder40.setErrorHandler(errorHandler46);
        builder47.ensureSaneDefaults();
        java.util.concurrent.Executor executor49 = builder47.getcallbackExecutor();
        java.util.concurrent.Executor executor50 = null;
        retrofit.RestAdapter.Builder builder51 = builder34.setExecutors(executor49, executor50);
        builder19.setcallbackExecutor(executor50);
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter54 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request55 = serializedObjectSupporter54.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter56 = serializedObjectSupporter54.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter57 = serializedObjectSupporter54.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder58 = builder53.setConverter((retrofit.converter.Converter) gsonConverter57);
        retrofit.SerializedObjectSupporter serializedObjectSupporter59 = builder58.serializedObjectSupporter;
        java.util.concurrent.Executor executor60 = builder58.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter61 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server62 = serializedObjectSupporter61.deserializeObjectServer1();
        retrofit.client.Request request63 = serializedObjectSupporter61.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler64 = serializedObjectSupporter61.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder65 = builder58.setErrorHandler(errorHandler64);
        builder65.ensureSaneDefaults();
        java.util.concurrent.Executor executor67 = builder65.getcallbackExecutor();
        builder19.setcallbackExecutor(executor67);
        builder12.callbackExecutor = executor67;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertNotNull(errorHandler11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNull(serializedObjectSupporter20);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertNotNull(request28);
        org.junit.Assert.assertNotNull(errorHandler29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(request32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(request37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNull(serializedObjectSupporter41);
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertNotNull(server44);
        org.junit.Assert.assertNotNull(request45);
        org.junit.Assert.assertNotNull(errorHandler46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(executor49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(request55);
        org.junit.Assert.assertNotNull(gsonConverter56);
        org.junit.Assert.assertNotNull(gsonConverter57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNull(serializedObjectSupporter59);
        org.junit.Assert.assertNull(executor60);
        org.junit.Assert.assertNotNull(server62);
        org.junit.Assert.assertNotNull(request63);
        org.junit.Assert.assertNotNull(errorHandler64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(executor67);
    }

    @Test
    public void test468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test468");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server41 = serializedObjectSupporter40.deserializeObjectServer1();
        retrofit.client.Request request42 = serializedObjectSupporter40.deserializeObjectRequest8();
        retrofit.client.Request request43 = restAdapter34.logAndReplaceRequest(request42);
        java.util.concurrent.Executor executor44 = restAdapter34.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = restAdapter34.serializedObjectSupporter;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNotNull(server41);
        org.junit.Assert.assertNotNull(request42);
        org.junit.Assert.assertNotNull(request43);
        org.junit.Assert.assertNull(executor44);
        org.junit.Assert.assertNotNull(serializedObjectSupporter45);
    }

    @Test
    public void test469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test469");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString5();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest8();
        java.util.List<retrofit.client.Header> headerList5 = request4.getHeaders();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "POST" + "'", str2, "POST");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Retrofit-" + "'", str3, "Retrofit-");
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(headerList5);
    }

    @Test
    public void test470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test470");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.converter.Converter converter3 = builder2.converter;
        java.util.concurrent.Executor executor4 = null;
        builder2.httpExecutor = executor4;
        java.util.concurrent.Executor executor6 = null;
        builder2.httpExecutor = executor6;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request9 = serializedObjectSupporter8.deserializeObjectRequest5();
        retrofit.client.Request request10 = serializedObjectSupporter8.deserializeObjectRequest7();
        java.lang.String str11 = serializedObjectSupporter8.deserializeObjectString2();
        retrofit.RequestInterceptor requestInterceptor12 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder13 = builder2.setRequestInterceptor(requestInterceptor12);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(request9);
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(requestInterceptor12);
        org.junit.Assert.assertNotNull(builder13);
    }

    @Test
    public void test471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test471");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.Server server13 = new retrofit.Server("Retrofit-", "POST");
        builder5.server = server13;
        java.lang.String str15 = server13.getName();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "POST" + "'", str15, "POST");
    }

    @Test
    public void test472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test472");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request6 = serializedObjectSupporter5.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter5.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter5.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder9 = builder4.setConverter((retrofit.converter.Converter) gsonConverter8);
        java.util.concurrent.Executor executor10 = builder9.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server12 = serializedObjectSupporter11.deserializeObjectServer1();
        java.lang.String str13 = server12.getUrl();
        builder9.server = server12;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request17 = serializedObjectSupporter16.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter16.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter16.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder20 = builder15.setConverter((retrofit.converter.Converter) gsonConverter19);
        builder15.ensureSaneDefaults();
        retrofit.client.Client.Provider provider22 = builder15.clientProvider;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request28 = serializedObjectSupporter27.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter27.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter27.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder31 = builder26.setConverter((retrofit.converter.Converter) gsonConverter30);
        retrofit.Profiler profiler32 = null;
        retrofit.ErrorHandler errorHandler33 = null;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        log34.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server12, provider22, executor23, executor24, requestInterceptor25, (retrofit.converter.Converter) gsonConverter30, profiler32, errorHandler33, log34, logLevel37);
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request40 = serializedObjectSupporter39.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter39.deserializeObjectConverter4();
        retrofit.client.Request request42 = serializedObjectSupporter39.deserializeObjectRequest7();
        restAdapter38.serializedObjectSupporter = serializedObjectSupporter39;
        builder2.serializedObjectSupporter = serializedObjectSupporter39;
        retrofit.converter.Converter converter45 = builder2.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server47 = serializedObjectSupporter46.deserializeObjectServer1();
        retrofit.client.Request request48 = serializedObjectSupporter46.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler49 = serializedObjectSupporter46.deserializeObjectErrorHandler1();
        builder2.errorHandler = errorHandler49;
        java.util.concurrent.Executor executor51 = null;
        builder2.setcallbackExecutor(executor51);
        retrofit.SerializedObjectSupporter serializedObjectSupporter53 = new retrofit.SerializedObjectSupporter();
        retrofit.converter.GsonConverter gsonConverter54 = serializedObjectSupporter53.deserializeObjectConverter8();
        java.lang.String str55 = serializedObjectSupporter53.deserializeObjectString1();
        retrofit.converter.GsonConverter gsonConverter56 = serializedObjectSupporter53.deserializeObjectConverter3();
        retrofit.RestAdapter.Builder builder57 = builder2.setConverter((retrofit.converter.Converter) gsonConverter56);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(executor10);
        org.junit.Assert.assertNotNull(server12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "http://example.com" + "'", str13, "http://example.com");
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(provider22);
        org.junit.Assert.assertNotNull(request28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(gsonConverter41);
        org.junit.Assert.assertNotNull(request42);
        org.junit.Assert.assertNull(converter45);
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertNotNull(request48);
        org.junit.Assert.assertNotNull(errorHandler49);
        org.junit.Assert.assertNotNull(gsonConverter54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Retrofit-" + "'", str55, "Retrofit-");
        org.junit.Assert.assertNotNull(gsonConverter56);
        org.junit.Assert.assertNotNull(builder57);
    }

    @Test
    public void test473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test473");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString3 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest1();
        java.lang.String str7 = serializedObjectSupporter0.deserializeObjectString4();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(typedString3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-" + "'", str4, "Retrofit-");
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
    }

    @Test
    public void test474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test474");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        java.util.concurrent.Executor executor35 = restAdapter34.getcallbackExecutor();
        retrofit.RestAdapter.RestHandler restHandler36 = restAdapter34.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request38 = serializedObjectSupporter37.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter37.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString40 = serializedObjectSupporter37.deserializeObjectTypedOutput2();
        java.lang.String str41 = serializedObjectSupporter37.deserializeObjectString1();
        retrofit.client.Request request42 = serializedObjectSupporter37.deserializeObjectRequest4();
        retrofit.mime.TypedOutput typedOutput43 = request42.body;
        java.lang.reflect.Method method44 = null;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request47 = serializedObjectSupporter46.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter48 = serializedObjectSupporter46.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter49 = serializedObjectSupporter46.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder50 = builder45.setConverter((retrofit.converter.Converter) gsonConverter49);
        retrofit.SerializedObjectSupporter serializedObjectSupporter51 = builder50.serializedObjectSupporter;
        java.util.concurrent.Executor executor52 = builder50.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter53 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server54 = serializedObjectSupporter53.deserializeObjectServer1();
        retrofit.client.Request request55 = serializedObjectSupporter53.deserializeObjectRequest8();
        retrofit.Server server56 = serializedObjectSupporter53.deserializeObjectServer1();
        builder50.server = server56;
        java.util.concurrent.Executor executor58 = null;
        builder50.httpExecutor = executor58;
        java.lang.Object[] objArray60 = new java.lang.Object[] { executor58 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj61 = restHandler36.invoke((java.lang.Object) typedOutput43, method44, objArray60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertNotNull(typedString40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Retrofit-" + "'", str41, "Retrofit-");
        org.junit.Assert.assertNotNull(request42);
        org.junit.Assert.assertNull(typedOutput43);
        org.junit.Assert.assertNotNull(request47);
        org.junit.Assert.assertNotNull(gsonConverter48);
        org.junit.Assert.assertNotNull(gsonConverter49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(serializedObjectSupporter51);
        org.junit.Assert.assertNull(executor52);
        org.junit.Assert.assertNotNull(server54);
        org.junit.Assert.assertNotNull(request55);
        org.junit.Assert.assertNotNull(server56);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[null]");
    }

    @Test
    public void test475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test475");
        retrofit.Server server2 = new retrofit.Server("POST", "Retrofit-Idle");
    }

    @Test
    public void test476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test476");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        java.util.concurrent.Executor executor3 = null;
        builder2.sethttpExecutor(executor3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder7 = builder5.setServer("hi!");
        retrofit.converter.Converter converter8 = builder7.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request10 = serializedObjectSupporter9.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter8();
        retrofit.client.Request request13 = serializedObjectSupporter9.deserializeObjectRequest5();
        retrofit.Server server14 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request17 = serializedObjectSupporter16.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter16.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter16.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder20 = builder15.setConverter((retrofit.converter.Converter) gsonConverter19);
        builder15.ensureSaneDefaults();
        retrofit.client.Client.Provider provider22 = builder15.clientProvider;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server26 = serializedObjectSupporter25.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor27 = serializedObjectSupporter25.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request30 = serializedObjectSupporter29.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter32 = serializedObjectSupporter29.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder33 = builder28.setConverter((retrofit.converter.Converter) gsonConverter32);
        retrofit.Profiler profiler34 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server36 = serializedObjectSupporter35.deserializeObjectServer1();
        retrofit.client.Request request37 = serializedObjectSupporter35.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler38 = serializedObjectSupporter35.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        log39.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter(server14, provider22, executor23, executor24, requestInterceptor27, (retrofit.converter.Converter) gsonConverter32, profiler34, errorHandler38, log39, logLevel42);
        retrofit.RestAdapter.Builder builder44 = builder7.setClient(provider22);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request47 = serializedObjectSupporter46.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter48 = serializedObjectSupporter46.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter49 = serializedObjectSupporter46.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder50 = builder45.setConverter((retrofit.converter.Converter) gsonConverter49);
        java.util.concurrent.Executor executor51 = builder50.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server53 = serializedObjectSupporter52.deserializeObjectServer1();
        java.lang.String str54 = server53.getUrl();
        builder50.server = server53;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter57 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request58 = serializedObjectSupporter57.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter59 = serializedObjectSupporter57.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter60 = serializedObjectSupporter57.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder61 = builder56.setConverter((retrofit.converter.Converter) gsonConverter60);
        builder56.ensureSaneDefaults();
        retrofit.client.Client.Provider provider63 = builder56.clientProvider;
        java.util.concurrent.Executor executor64 = null;
        java.util.concurrent.Executor executor65 = null;
        retrofit.RequestInterceptor requestInterceptor66 = null;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter68 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request69 = serializedObjectSupporter68.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter70 = serializedObjectSupporter68.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter71 = serializedObjectSupporter68.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder72 = builder67.setConverter((retrofit.converter.Converter) gsonConverter71);
        retrofit.Profiler profiler73 = null;
        retrofit.ErrorHandler errorHandler74 = null;
        retrofit.RestAdapter.Log log75 = retrofit.RestAdapter.Log.NONE;
        log75.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter79 = new retrofit.RestAdapter(server53, provider63, executor64, executor65, requestInterceptor66, (retrofit.converter.Converter) gsonConverter71, profiler73, errorHandler74, log75, logLevel78);
        retrofit.RestAdapter.Builder builder80 = builder7.setClient(provider63);
        builder2.clientProvider = provider63;
        retrofit.RestAdapter.LogLevel logLevel82 = null;
        builder2.logLevel = logLevel82;
        retrofit.RestAdapter.Builder builder84 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder86 = builder84.setServer("hi!");
        retrofit.Profiler profiler87 = builder86.profiler;
        java.util.concurrent.Executor executor88 = null;
        builder86.sethttpExecutor(executor88);
        retrofit.SerializedObjectSupporter serializedObjectSupporter90 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server91 = serializedObjectSupporter90.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor92 = serializedObjectSupporter90.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder93 = builder86.setRequestInterceptor(requestInterceptor92);
        retrofit.Server server94 = builder93.server;
        builder2.server = server94;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(converter8);
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(provider22);
        org.junit.Assert.assertNotNull(server26);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(request30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(gsonConverter32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(server36);
        org.junit.Assert.assertNotNull(request37);
        org.junit.Assert.assertNotNull(errorHandler38);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(request47);
        org.junit.Assert.assertNotNull(gsonConverter48);
        org.junit.Assert.assertNotNull(gsonConverter49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(executor51);
        org.junit.Assert.assertNotNull(server53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "http://example.com" + "'", str54, "http://example.com");
        org.junit.Assert.assertNotNull(request58);
        org.junit.Assert.assertNotNull(gsonConverter59);
        org.junit.Assert.assertNotNull(gsonConverter60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(provider63);
        org.junit.Assert.assertNotNull(request69);
        org.junit.Assert.assertNotNull(gsonConverter70);
        org.junit.Assert.assertNotNull(gsonConverter71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log75);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNull(profiler87);
        org.junit.Assert.assertNotNull(server91);
        org.junit.Assert.assertNotNull(requestInterceptor92);
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertNotNull(server94);
    }

    @Test
    public void test477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test477");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        builder0.logLevel = logLevel3;
        retrofit.client.Client.Provider provider5 = builder0.clientProvider;
        retrofit.Profiler profiler6 = builder0.profiler;
        retrofit.RestAdapter.Builder builder8 = builder0.setServer("http://example.com/");
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request11 = serializedObjectSupporter10.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter10.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter10.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder14 = builder9.setConverter((retrofit.converter.Converter) gsonConverter13);
        java.util.concurrent.Executor executor15 = builder14.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server17 = serializedObjectSupporter16.deserializeObjectServer1();
        java.lang.String str18 = server17.getUrl();
        builder14.server = server17;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request22 = serializedObjectSupporter21.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter21.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter24 = serializedObjectSupporter21.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder25 = builder20.setConverter((retrofit.converter.Converter) gsonConverter24);
        builder20.ensureSaneDefaults();
        retrofit.client.Client.Provider provider27 = builder20.clientProvider;
        java.util.concurrent.Executor executor28 = null;
        java.util.concurrent.Executor executor29 = null;
        retrofit.RequestInterceptor requestInterceptor30 = null;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request33 = serializedObjectSupporter32.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter34 = serializedObjectSupporter32.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter35 = serializedObjectSupporter32.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder36 = builder31.setConverter((retrofit.converter.Converter) gsonConverter35);
        retrofit.Profiler profiler37 = null;
        retrofit.ErrorHandler errorHandler38 = null;
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        log39.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter(server17, provider27, executor28, executor29, requestInterceptor30, (retrofit.converter.Converter) gsonConverter35, profiler37, errorHandler38, log39, logLevel42);
        retrofit.client.Client.Provider provider44 = restAdapter43.clientProvider;
        java.lang.String str45 = restAdapter43.getTHREAD_PREFIX();
        retrofit.ErrorHandler errorHandler46 = restAdapter43.geterrorHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        retrofit.converter.GsonConverter gsonConverter48 = serializedObjectSupporter47.deserializeObjectConverter8();
        retrofit.client.Request request49 = serializedObjectSupporter47.deserializeObjectRequest4();
        retrofit.converter.GsonConverter gsonConverter50 = serializedObjectSupporter47.deserializeObjectConverter8();
        retrofit.client.Request request51 = serializedObjectSupporter47.deserializeObjectRequest8();
        java.util.List<retrofit.client.Header> headerList52 = request51.headers;
        java.util.List<retrofit.client.Header> headerList53 = request51.headers;
        retrofit.client.Request request54 = restAdapter43.logAndReplaceRequest(request51);
        retrofit.converter.Converter converter55 = restAdapter43.getconverter();
        retrofit.RestAdapter.Builder builder56 = builder0.setConverter(converter55);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNull(profiler6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNotNull(server17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com" + "'", str18, "http://example.com");
        org.junit.Assert.assertNotNull(request22);
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertNotNull(gsonConverter24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(provider27);
        org.junit.Assert.assertNotNull(request33);
        org.junit.Assert.assertNotNull(gsonConverter34);
        org.junit.Assert.assertNotNull(gsonConverter35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(provider44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Retrofit-" + "'", str45, "Retrofit-");
        org.junit.Assert.assertNull(errorHandler46);
        org.junit.Assert.assertNotNull(gsonConverter48);
        org.junit.Assert.assertNotNull(request49);
        org.junit.Assert.assertNotNull(gsonConverter50);
        org.junit.Assert.assertNotNull(request51);
        org.junit.Assert.assertNotNull(headerList52);
        org.junit.Assert.assertNotNull(headerList53);
        org.junit.Assert.assertNotNull(request54);
        org.junit.Assert.assertNotNull(converter55);
        org.junit.Assert.assertNotNull(builder56);
    }

    @Test
    public void test478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test478");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        java.util.concurrent.Executor executor35 = restAdapter34.getcallbackExecutor();
        java.util.concurrent.Executor executor36 = restAdapter34.gethttpExecutor();
        retrofit.converter.Converter converter37 = restAdapter34.getconverter();
        retrofit.ErrorHandler errorHandler38 = restAdapter34.errorHandler;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNull(executor36);
        org.junit.Assert.assertNotNull(converter37);
        org.junit.Assert.assertNull(errorHandler38);
    }

    @Test
    public void test479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test479");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.Server server9 = new retrofit.Server("hi!", "default");
        builder5.server = server9;
        java.util.concurrent.Executor executor11 = null;
        builder5.sethttpExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder15 = builder13.setServer("hi!");
        retrofit.RestAdapter.Builder builder17 = builder13.setServer("default");
        retrofit.converter.Converter converter18 = builder13.converter;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request21 = serializedObjectSupporter20.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter20.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder24 = builder19.setConverter((retrofit.converter.Converter) gsonConverter23);
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = builder24.serializedObjectSupporter;
        java.util.concurrent.Executor executor26 = builder24.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server28 = serializedObjectSupporter27.deserializeObjectServer1();
        retrofit.client.Request request29 = serializedObjectSupporter27.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler30 = serializedObjectSupporter27.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder31 = builder24.setErrorHandler(errorHandler30);
        builder31.ensureSaneDefaults();
        java.util.concurrent.Executor executor33 = builder31.getcallbackExecutor();
        builder13.setcallbackExecutor(executor33);
        builder5.callbackExecutor = executor33;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(serializedObjectSupporter25);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(request29);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(executor33);
    }

    @Test
    public void test480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test480");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        builder0.logLevel = logLevel3;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder7 = builder5.setServer("hi!");
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request9 = serializedObjectSupporter8.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter8.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter8.deserializeObjectConverter8();
        retrofit.client.Request request12 = serializedObjectSupporter8.deserializeObjectRequest5();
        retrofit.Server server13 = serializedObjectSupporter8.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request16 = serializedObjectSupporter15.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter15.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder19 = builder14.setConverter((retrofit.converter.Converter) gsonConverter18);
        builder14.ensureSaneDefaults();
        retrofit.client.Client.Provider provider21 = builder14.clientProvider;
        java.util.concurrent.Executor executor22 = null;
        java.util.concurrent.Executor executor23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server25 = serializedObjectSupporter24.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor26 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request29 = serializedObjectSupporter28.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter28.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter28.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder32 = builder27.setConverter((retrofit.converter.Converter) gsonConverter31);
        retrofit.Profiler profiler33 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server35 = serializedObjectSupporter34.deserializeObjectServer1();
        retrofit.client.Request request36 = serializedObjectSupporter34.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler37 = serializedObjectSupporter34.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        log38.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter(server13, provider21, executor22, executor23, requestInterceptor26, (retrofit.converter.Converter) gsonConverter31, profiler33, errorHandler37, log38, logLevel41);
        builder7.setclientProvider(provider21);
        retrofit.RestAdapter.Builder builder44 = builder0.setClient(provider21);
        retrofit.Server server47 = new retrofit.Server("Retrofit-Idle", "http://example.com/");
        java.lang.String str48 = server47.getapiUrl();
        retrofit.RestAdapter.Builder builder49 = builder44.setServer(server47);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(request9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(provider21);
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNotNull(request29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(server35);
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(errorHandler37);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Retrofit-Idle" + "'", str48, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(builder49);
    }

    @Test
    public void test481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test481");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request2 = serializedObjectSupporter0.deserializeObjectRequest8();
        retrofit.Server server3 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.Server server6 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Request request7 = serializedObjectSupporter0.deserializeObjectRequest2();
        retrofit.mime.TypedOutput typedOutput8 = request7.getBody();
        retrofit.mime.TypedOutput typedOutput9 = request7.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request7.getBody();
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(server6);
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
    }

    @Test
    public void test482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test482");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.client.Request request3 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.client.Request request4 = serializedObjectSupporter0.deserializeObjectRequest7();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest6();
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertNotNull(request5);
    }

    @Test
    public void test483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test483");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter1();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter4 = serializedObjectSupporter0.deserializeObjectLogLevel1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
    }

    @Test
    public void test484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test484");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString3 = serializedObjectSupporter0.deserializeObjectTypedOutput2();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.client.Request request5 = serializedObjectSupporter0.deserializeObjectRequest4();
        retrofit.client.Request request6 = serializedObjectSupporter0.deserializeObjectRequest1();
        retrofit.client.Request request7 = serializedObjectSupporter0.deserializeObjectRequest1();
        java.util.List<retrofit.client.Header> headerList8 = request7.headers;
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(typedString3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-" + "'", str4, "Retrofit-");
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(request6);
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertNotNull(headerList8);
    }

    @Test
    public void test485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test485");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request5 = serializedObjectSupporter4.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter4.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder8 = builder3.setConverter((retrofit.converter.Converter) gsonConverter7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = builder8.serializedObjectSupporter;
        java.util.concurrent.Executor executor10 = builder8.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server12 = serializedObjectSupporter11.deserializeObjectServer1();
        retrofit.client.Request request13 = serializedObjectSupporter11.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler14 = serializedObjectSupporter11.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder15 = builder8.setErrorHandler(errorHandler14);
        builder2.errorHandler = errorHandler14;
        retrofit.RestAdapter restAdapter17 = builder2.build();
        retrofit.RestAdapter.Builder builder19 = builder2.setServer("hi!");
        retrofit.Profiler profiler20 = null;
        builder2.profiler = profiler20;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertNull(executor10);
        org.junit.Assert.assertNotNull(server12);
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(errorHandler14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(restAdapter17);
        org.junit.Assert.assertNotNull(builder19);
    }

    @Test
    public void test486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test486");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("hi!");
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request44 = serializedObjectSupporter43.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter45 = serializedObjectSupporter43.deserializeObjectConverter5();
        builder40.converter = gsonConverter45;
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request48 = serializedObjectSupporter47.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter49 = serializedObjectSupporter47.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString50 = serializedObjectSupporter47.deserializeObjectTypedOutput2();
        java.lang.String str51 = serializedObjectSupporter47.deserializeObjectString1();
        builder40.serializedObjectSupporter = serializedObjectSupporter47;
        retrofit.Server server53 = serializedObjectSupporter47.deserializeObjectServer1();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter47;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections collections55 = serializedObjectSupporter47.deserializeObjectList1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Collections$UnmodifiableRandomAccessList cannot be cast to java.util.Collections");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(request44);
        org.junit.Assert.assertNotNull(gsonConverter45);
        org.junit.Assert.assertNotNull(request48);
        org.junit.Assert.assertNotNull(gsonConverter49);
        org.junit.Assert.assertNotNull(typedString50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Retrofit-" + "'", str51, "Retrofit-");
        org.junit.Assert.assertNotNull(server53);
    }

    @Test
    public void test487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test487");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server1 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter6();
        org.junit.Assert.assertNotNull(server1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
    }

    @Test
    public void test488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test488");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = builder2.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request7 = serializedObjectSupporter6.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter6.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter6.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder10 = builder5.setConverter((retrofit.converter.Converter) gsonConverter9);
        java.util.concurrent.Executor executor11 = builder10.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server13 = serializedObjectSupporter12.deserializeObjectServer1();
        java.lang.String str14 = server13.getUrl();
        builder10.server = server13;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request18 = serializedObjectSupporter17.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter17.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter17.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder21 = builder16.setConverter((retrofit.converter.Converter) gsonConverter20);
        builder16.ensureSaneDefaults();
        retrofit.client.Client.Provider provider23 = builder16.clientProvider;
        java.util.concurrent.Executor executor24 = null;
        java.util.concurrent.Executor executor25 = null;
        retrofit.RequestInterceptor requestInterceptor26 = null;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request29 = serializedObjectSupporter28.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter28.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter28.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder32 = builder27.setConverter((retrofit.converter.Converter) gsonConverter31);
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        log35.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter(server13, provider23, executor24, executor25, requestInterceptor26, (retrofit.converter.Converter) gsonConverter31, profiler33, errorHandler34, log35, logLevel38);
        retrofit.client.Client.Provider provider40 = restAdapter39.clientProvider;
        builder2.clientProvider = provider40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request44 = serializedObjectSupporter43.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter45 = serializedObjectSupporter43.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter43.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder47 = builder42.setConverter((retrofit.converter.Converter) gsonConverter46);
        java.util.concurrent.Executor executor48 = builder47.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server50 = serializedObjectSupporter49.deserializeObjectServer1();
        java.lang.String str51 = server50.getUrl();
        builder47.server = server50;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter54 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request55 = serializedObjectSupporter54.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter56 = serializedObjectSupporter54.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter57 = serializedObjectSupporter54.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder58 = builder53.setConverter((retrofit.converter.Converter) gsonConverter57);
        builder53.ensureSaneDefaults();
        retrofit.client.Client.Provider provider60 = builder53.clientProvider;
        java.util.concurrent.Executor executor61 = null;
        java.util.concurrent.Executor executor62 = null;
        retrofit.RequestInterceptor requestInterceptor63 = null;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request66 = serializedObjectSupporter65.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter67 = serializedObjectSupporter65.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter68 = serializedObjectSupporter65.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder69 = builder64.setConverter((retrofit.converter.Converter) gsonConverter68);
        retrofit.Profiler profiler70 = null;
        retrofit.ErrorHandler errorHandler71 = null;
        retrofit.RestAdapter.Log log72 = retrofit.RestAdapter.Log.NONE;
        log72.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter76 = new retrofit.RestAdapter(server50, provider60, executor61, executor62, requestInterceptor63, (retrofit.converter.Converter) gsonConverter68, profiler70, errorHandler71, log72, logLevel75);
        retrofit.SerializedObjectSupporter serializedObjectSupporter77 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request78 = serializedObjectSupporter77.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter79 = serializedObjectSupporter77.deserializeObjectConverter4();
        retrofit.client.Request request80 = serializedObjectSupporter77.deserializeObjectRequest7();
        restAdapter76.serializedObjectSupporter = serializedObjectSupporter77;
        java.util.concurrent.Executor executor82 = restAdapter76.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter83 = restAdapter76.serializedObjectSupporter;
        java.lang.String str84 = serializedObjectSupporter83.deserializeObjectString2();
        retrofit.converter.GsonConverter gsonConverter85 = serializedObjectSupporter83.deserializeObjectConverter3();
        retrofit.RestAdapter.Builder builder86 = builder2.setConverter((retrofit.converter.Converter) gsonConverter85);
        retrofit.Server server87 = builder86.server;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(serializedObjectSupporter4);
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "http://example.com" + "'", str14, "http://example.com");
        org.junit.Assert.assertNotNull(request18);
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(provider23);
        org.junit.Assert.assertNotNull(request29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(provider40);
        org.junit.Assert.assertNotNull(request44);
        org.junit.Assert.assertNotNull(gsonConverter45);
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(executor48);
        org.junit.Assert.assertNotNull(server50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "http://example.com" + "'", str51, "http://example.com");
        org.junit.Assert.assertNotNull(request55);
        org.junit.Assert.assertNotNull(gsonConverter56);
        org.junit.Assert.assertNotNull(gsonConverter57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(provider60);
        org.junit.Assert.assertNotNull(request66);
        org.junit.Assert.assertNotNull(gsonConverter67);
        org.junit.Assert.assertNotNull(gsonConverter68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request78);
        org.junit.Assert.assertNotNull(gsonConverter79);
        org.junit.Assert.assertNotNull(request80);
        org.junit.Assert.assertNull(executor82);
        org.junit.Assert.assertNotNull(serializedObjectSupporter83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Retrofit-Idle" + "'", str84, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(gsonConverter85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(server87);
    }

    @Test
    public void test489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test489");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        java.util.concurrent.Executor executor3 = null;
        builder2.sethttpExecutor(executor3);
        retrofit.RestAdapter restAdapter5 = builder2.build();
        retrofit.client.Client.Provider provider6 = restAdapter5.clientProvider;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(restAdapter5);
        org.junit.Assert.assertNotNull(provider6);
    }

    @Test
    public void test490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test490");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        builder0.logLevel = logLevel3;
        retrofit.client.Client.Provider provider5 = builder0.clientProvider;
        retrofit.Profiler profiler6 = builder0.profiler;
        retrofit.RestAdapter.Builder builder8 = builder0.setServer("http://example.com/");
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter9.deserializeObjectConverter8();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter9.deserializeObjectConverter8();
        builder8.converter = gsonConverter11;
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNull(profiler6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertNotNull(gsonConverter11);
    }

    @Test
    public void test491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test491");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = builder5.serializedObjectSupporter;
        java.util.concurrent.Executor executor7 = builder5.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server9 = serializedObjectSupporter8.deserializeObjectServer1();
        retrofit.client.Request request10 = serializedObjectSupporter8.deserializeObjectRequest8();
        retrofit.Server server11 = serializedObjectSupporter8.deserializeObjectServer1();
        builder5.server = server11;
        retrofit.Server server15 = new retrofit.Server("", "http://example.com/");
        retrofit.RestAdapter.Builder builder16 = builder5.setServer(server15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request19 = serializedObjectSupporter18.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter18.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter18.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder22 = builder17.setConverter((retrofit.converter.Converter) gsonConverter21);
        java.util.concurrent.Executor executor23 = builder22.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server25 = serializedObjectSupporter24.deserializeObjectServer1();
        java.lang.String str26 = server25.getUrl();
        builder22.server = server25;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request30 = serializedObjectSupporter29.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter32 = serializedObjectSupporter29.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder33 = builder28.setConverter((retrofit.converter.Converter) gsonConverter32);
        builder28.ensureSaneDefaults();
        retrofit.client.Client.Provider provider35 = builder28.clientProvider;
        java.util.concurrent.Executor executor36 = null;
        java.util.concurrent.Executor executor37 = null;
        retrofit.RequestInterceptor requestInterceptor38 = null;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request41 = serializedObjectSupporter40.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter42 = serializedObjectSupporter40.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter40.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder44 = builder39.setConverter((retrofit.converter.Converter) gsonConverter43);
        retrofit.Profiler profiler45 = null;
        retrofit.ErrorHandler errorHandler46 = null;
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        log47.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter(server25, provider35, executor36, executor37, requestInterceptor38, (retrofit.converter.Converter) gsonConverter43, profiler45, errorHandler46, log47, logLevel50);
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request53 = serializedObjectSupporter52.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter54 = serializedObjectSupporter52.deserializeObjectConverter4();
        retrofit.client.Request request55 = serializedObjectSupporter52.deserializeObjectRequest7();
        restAdapter51.serializedObjectSupporter = serializedObjectSupporter52;
        java.util.concurrent.Executor executor57 = restAdapter51.gethttpExecutor();
        java.util.concurrent.Executor executor58 = restAdapter51.httpExecutor;
        java.lang.String str59 = restAdapter51.getIDLE_THREAD_NAME();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder62 = builder60.setServer("hi!");
        retrofit.SerializedObjectSupporter serializedObjectSupporter63 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request64 = serializedObjectSupporter63.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter65 = serializedObjectSupporter63.deserializeObjectConverter5();
        builder60.converter = gsonConverter65;
        retrofit.client.Client.Provider provider67 = builder60.getclientProvider();
        java.util.concurrent.Executor executor68 = null;
        builder60.setcallbackExecutor(executor68);
        retrofit.RestAdapter.LogLevel logLevel70 = builder60.logLevel;
        restAdapter51.setLogLevel(logLevel70);
        builder5.logLevel = logLevel70;
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(request19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNull(executor23);
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "http://example.com" + "'", str26, "http://example.com");
        org.junit.Assert.assertNotNull(request30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(gsonConverter32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(provider35);
        org.junit.Assert.assertNotNull(request41);
        org.junit.Assert.assertNotNull(gsonConverter42);
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request53);
        org.junit.Assert.assertNotNull(gsonConverter54);
        org.junit.Assert.assertNotNull(request55);
        org.junit.Assert.assertNull(executor57);
        org.junit.Assert.assertNull(executor58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Retrofit-Idle" + "'", str59, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(request64);
        org.junit.Assert.assertNotNull(gsonConverter65);
        org.junit.Assert.assertNull(provider67);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test492");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("hi!");
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request44 = serializedObjectSupporter43.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter45 = serializedObjectSupporter43.deserializeObjectConverter5();
        builder40.converter = gsonConverter45;
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request48 = serializedObjectSupporter47.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter49 = serializedObjectSupporter47.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString50 = serializedObjectSupporter47.deserializeObjectTypedOutput2();
        java.lang.String str51 = serializedObjectSupporter47.deserializeObjectString1();
        builder40.serializedObjectSupporter = serializedObjectSupporter47;
        retrofit.Server server53 = serializedObjectSupporter47.deserializeObjectServer1();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter47;
        retrofit.converter.GsonConverter gsonConverter55 = serializedObjectSupporter47.deserializeObjectConverter8();
        java.lang.String str56 = serializedObjectSupporter47.deserializeObjectString4();
        java.lang.String str57 = serializedObjectSupporter47.deserializeObjectString5();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(request44);
        org.junit.Assert.assertNotNull(gsonConverter45);
        org.junit.Assert.assertNotNull(request48);
        org.junit.Assert.assertNotNull(gsonConverter49);
        org.junit.Assert.assertNotNull(typedString50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Retrofit-" + "'", str51, "Retrofit-");
        org.junit.Assert.assertNotNull(server53);
        org.junit.Assert.assertNotNull(gsonConverter55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "http://example.com/" + "'", str56, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "POST" + "'", str57, "POST");
    }

    @Test
    public void test493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test493");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.Profiler profiler3 = builder2.profiler;
        java.util.concurrent.Executor executor4 = null;
        builder2.sethttpExecutor(executor4);
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server7 = serializedObjectSupporter6.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder9 = builder2.setRequestInterceptor(requestInterceptor8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("hi!");
        retrofit.converter.Converter converter13 = builder12.converter;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request16 = serializedObjectSupporter15.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter15.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter15.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder19 = builder14.setConverter((retrofit.converter.Converter) gsonConverter18);
        java.util.concurrent.Executor executor20 = builder19.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server22 = serializedObjectSupporter21.deserializeObjectServer1();
        java.lang.String str23 = server22.getUrl();
        builder19.server = server22;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request27 = serializedObjectSupporter26.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter26.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder30 = builder25.setConverter((retrofit.converter.Converter) gsonConverter29);
        builder25.ensureSaneDefaults();
        retrofit.client.Client.Provider provider32 = builder25.clientProvider;
        java.util.concurrent.Executor executor33 = null;
        java.util.concurrent.Executor executor34 = null;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request38 = serializedObjectSupporter37.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter37.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter40 = serializedObjectSupporter37.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder41 = builder36.setConverter((retrofit.converter.Converter) gsonConverter40);
        retrofit.Profiler profiler42 = null;
        retrofit.ErrorHandler errorHandler43 = null;
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        log44.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server22, provider32, executor33, executor34, requestInterceptor35, (retrofit.converter.Converter) gsonConverter40, profiler42, errorHandler43, log44, logLevel47);
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request50 = serializedObjectSupporter49.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter51 = serializedObjectSupporter49.deserializeObjectConverter4();
        retrofit.client.Request request52 = serializedObjectSupporter49.deserializeObjectRequest7();
        restAdapter48.serializedObjectSupporter = serializedObjectSupporter49;
        builder12.serializedObjectSupporter = serializedObjectSupporter49;
        retrofit.converter.GsonConverter gsonConverter55 = serializedObjectSupporter49.deserializeObjectConverter8();
        retrofit.converter.GsonConverter gsonConverter56 = serializedObjectSupporter49.deserializeObjectConverter3();
        builder2.serializedObjectSupporter = serializedObjectSupporter49;
        java.util.concurrent.Executor executor58 = null;
        builder2.sethttpExecutor(executor58);
        retrofit.RestAdapter.Log log60 = builder2.log;
        retrofit.SerializedObjectSupporter serializedObjectSupporter61 = builder2.serializedObjectSupporter;
        retrofit.client.Client client62 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder63 = builder2.setClient(client62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(profiler3);
        org.junit.Assert.assertNotNull(server7);
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNull(executor20);
        org.junit.Assert.assertNotNull(server22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "http://example.com" + "'", str23, "http://example.com");
        org.junit.Assert.assertNotNull(request27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(provider32);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertNotNull(gsonConverter40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request50);
        org.junit.Assert.assertNotNull(gsonConverter51);
        org.junit.Assert.assertNotNull(request52);
        org.junit.Assert.assertNotNull(gsonConverter55);
        org.junit.Assert.assertNotNull(gsonConverter56);
        org.junit.Assert.assertNull(log60);
        org.junit.Assert.assertNotNull(serializedObjectSupporter61);
    }

    @Test
    public void test494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test494");
        retrofit.Server server1 = new retrofit.Server("default");
    }

    @Test
    public void test495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test495");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder2 = builder0.setServer("hi!");
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.client.Client.Provider provider4 = null;
        builder2.clientProvider = provider4;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("hi!");
        retrofit.converter.Converter converter9 = builder8.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request11 = serializedObjectSupporter10.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter10.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter10.deserializeObjectConverter8();
        retrofit.client.Request request14 = serializedObjectSupporter10.deserializeObjectRequest5();
        retrofit.Server server15 = serializedObjectSupporter10.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request18 = serializedObjectSupporter17.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter17.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter17.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder21 = builder16.setConverter((retrofit.converter.Converter) gsonConverter20);
        builder16.ensureSaneDefaults();
        retrofit.client.Client.Provider provider23 = builder16.clientProvider;
        java.util.concurrent.Executor executor24 = null;
        java.util.concurrent.Executor executor25 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server27 = serializedObjectSupporter26.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor28 = serializedObjectSupporter26.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request31 = serializedObjectSupporter30.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter32 = serializedObjectSupporter30.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter30.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder34 = builder29.setConverter((retrofit.converter.Converter) gsonConverter33);
        retrofit.Profiler profiler35 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server37 = serializedObjectSupporter36.deserializeObjectServer1();
        retrofit.client.Request request38 = serializedObjectSupporter36.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler39 = serializedObjectSupporter36.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        log40.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter(server15, provider23, executor24, executor25, requestInterceptor28, (retrofit.converter.Converter) gsonConverter33, profiler35, errorHandler39, log40, logLevel43);
        retrofit.RestAdapter.Builder builder45 = builder8.setClient(provider23);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request48 = serializedObjectSupporter47.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter49 = serializedObjectSupporter47.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter50 = serializedObjectSupporter47.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder51 = builder46.setConverter((retrofit.converter.Converter) gsonConverter50);
        java.util.concurrent.Executor executor52 = builder51.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter53 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server54 = serializedObjectSupporter53.deserializeObjectServer1();
        java.lang.String str55 = server54.getUrl();
        builder51.server = server54;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request59 = serializedObjectSupporter58.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter60 = serializedObjectSupporter58.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter58.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder62 = builder57.setConverter((retrofit.converter.Converter) gsonConverter61);
        builder57.ensureSaneDefaults();
        retrofit.client.Client.Provider provider64 = builder57.clientProvider;
        java.util.concurrent.Executor executor65 = null;
        java.util.concurrent.Executor executor66 = null;
        retrofit.RequestInterceptor requestInterceptor67 = null;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter69 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request70 = serializedObjectSupporter69.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter71 = serializedObjectSupporter69.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter72 = serializedObjectSupporter69.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder73 = builder68.setConverter((retrofit.converter.Converter) gsonConverter72);
        retrofit.Profiler profiler74 = null;
        retrofit.ErrorHandler errorHandler75 = null;
        retrofit.RestAdapter.Log log76 = retrofit.RestAdapter.Log.NONE;
        log76.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter80 = new retrofit.RestAdapter(server54, provider64, executor65, executor66, requestInterceptor67, (retrofit.converter.Converter) gsonConverter72, profiler74, errorHandler75, log76, logLevel79);
        retrofit.RestAdapter.Builder builder81 = builder8.setClient(provider64);
        retrofit.RestAdapter.Builder builder82 = builder2.setClient(provider64);
        java.util.concurrent.Executor executor83 = builder2.gethttpExecutor();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertNotNull(request14);
        org.junit.Assert.assertNotNull(server15);
        org.junit.Assert.assertNotNull(request18);
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(provider23);
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(request31);
        org.junit.Assert.assertNotNull(gsonConverter32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNotNull(errorHandler39);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(request48);
        org.junit.Assert.assertNotNull(gsonConverter49);
        org.junit.Assert.assertNotNull(gsonConverter50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNull(executor52);
        org.junit.Assert.assertNotNull(server54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "http://example.com" + "'", str55, "http://example.com");
        org.junit.Assert.assertNotNull(request59);
        org.junit.Assert.assertNotNull(gsonConverter60);
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(provider64);
        org.junit.Assert.assertNotNull(request70);
        org.junit.Assert.assertNotNull(gsonConverter71);
        org.junit.Assert.assertNotNull(gsonConverter72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNull(executor83);
    }

    @Test
    public void test496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test496");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        java.util.concurrent.Executor executor35 = restAdapter34.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request37 = serializedObjectSupporter36.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter4();
        retrofit.client.Request request39 = serializedObjectSupporter36.deserializeObjectRequest4();
        retrofit.client.Request request40 = restAdapter34.logAndReplaceRequest(request39);
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter34.new RestHandler();
        retrofit.converter.Converter converter42 = restAdapter34.converter;
        java.util.concurrent.Executor executor43 = restAdapter34.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter34.setLogLevel(logLevel46);
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request49 = serializedObjectSupporter48.deserializeObjectRequest5();
        retrofit.client.Request request50 = restAdapter34.logAndReplaceRequest(request49);
        retrofit.Server server51 = restAdapter34.getserver();
        retrofit.RestAdapter.RestHandler restHandler52 = restAdapter34.new RestHandler();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNotNull(request37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertNotNull(converter42);
        org.junit.Assert.assertNull(executor43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(request49);
        org.junit.Assert.assertNotNull(request50);
        org.junit.Assert.assertNotNull(server51);
    }

    @Test
    public void test497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test497");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request36 = serializedObjectSupporter35.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter4();
        retrofit.client.Request request38 = serializedObjectSupporter35.deserializeObjectRequest7();
        restAdapter34.serializedObjectSupporter = serializedObjectSupporter35;
        java.util.concurrent.Executor executor40 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter34.serializedObjectSupporter;
        java.lang.String str42 = serializedObjectSupporter41.deserializeObjectString2();
        retrofit.ErrorHandler errorHandler43 = serializedObjectSupporter41.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter44 = serializedObjectSupporter41.deserializeObjectConverter5();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter45 = serializedObjectSupporter41.deserializeObjectLogLevel2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Retrofit-Idle" + "'", str42, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(errorHandler43);
        org.junit.Assert.assertNotNull(gsonConverter44);
    }

    @Test
    public void test498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test498");
        retrofit.Server server1 = new retrofit.Server("Retrofit-Idle");
    }

    @Test
    public void test499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test499");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request2 = serializedObjectSupporter1.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter1.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        java.util.concurrent.Executor executor6 = builder5.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server8 = serializedObjectSupporter7.deserializeObjectServer1();
        java.lang.String str9 = server8.getUrl();
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request13 = serializedObjectSupporter12.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request24 = serializedObjectSupporter23.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder27 = builder22.setConverter((retrofit.converter.Converter) gsonConverter26);
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        log30.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server8, provider18, executor19, executor20, requestInterceptor21, (retrofit.converter.Converter) gsonConverter26, profiler28, errorHandler29, log30, logLevel33);
        retrofit.client.Client.Provider provider35 = restAdapter34.clientProvider;
        java.util.concurrent.Executor executor36 = restAdapter34.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request38 = serializedObjectSupporter37.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter37.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter40 = serializedObjectSupporter37.deserializeObjectConverter8();
        retrofit.client.Request request41 = serializedObjectSupporter37.deserializeObjectRequest5();
        retrofit.Server server42 = serializedObjectSupporter37.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request45 = serializedObjectSupporter44.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter44.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter47 = serializedObjectSupporter44.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder48 = builder43.setConverter((retrofit.converter.Converter) gsonConverter47);
        builder43.ensureSaneDefaults();
        retrofit.client.Client.Provider provider50 = builder43.clientProvider;
        java.util.concurrent.Executor executor51 = null;
        java.util.concurrent.Executor executor52 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter53 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server54 = serializedObjectSupporter53.deserializeObjectServer1();
        retrofit.RequestInterceptor requestInterceptor55 = serializedObjectSupporter53.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter57 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request58 = serializedObjectSupporter57.deserializeObjectRequest5();
        retrofit.converter.GsonConverter gsonConverter59 = serializedObjectSupporter57.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter60 = serializedObjectSupporter57.deserializeObjectConverter8();
        retrofit.RestAdapter.Builder builder61 = builder56.setConverter((retrofit.converter.Converter) gsonConverter60);
        retrofit.Profiler profiler62 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter63 = new retrofit.SerializedObjectSupporter();
        retrofit.Server server64 = serializedObjectSupporter63.deserializeObjectServer1();
        retrofit.client.Request request65 = serializedObjectSupporter63.deserializeObjectRequest8();
        retrofit.ErrorHandler errorHandler66 = serializedObjectSupporter63.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        log67.log("hi!");
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter71 = new retrofit.RestAdapter(server42, provider50, executor51, executor52, requestInterceptor55, (retrofit.converter.Converter) gsonConverter60, profiler62, errorHandler66, log67, logLevel70);
        boolean boolean72 = logLevel70.log();
        restAdapter34.logLevel = logLevel70;
        retrofit.Server server74 = restAdapter34.getserver();
        retrofit.client.Client.Provider provider75 = restAdapter34.getclientProvider();
        retrofit.RequestInterceptor requestInterceptor76 = restAdapter34.getrequestInterceptor();
        retrofit.RestAdapter.RestHandler restHandler77 = restAdapter34.new RestHandler();
        org.junit.Assert.assertNotNull(request2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(provider35);
        org.junit.Assert.assertNull(executor36);
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertNotNull(gsonConverter40);
        org.junit.Assert.assertNotNull(request41);
        org.junit.Assert.assertNotNull(server42);
        org.junit.Assert.assertNotNull(request45);
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNotNull(gsonConverter47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(provider50);
        org.junit.Assert.assertNotNull(server54);
        org.junit.Assert.assertNotNull(requestInterceptor55);
        org.junit.Assert.assertNotNull(request58);
        org.junit.Assert.assertNotNull(gsonConverter59);
        org.junit.Assert.assertNotNull(gsonConverter60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(server64);
        org.junit.Assert.assertNotNull(request65);
        org.junit.Assert.assertNotNull(errorHandler66);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(server74);
        org.junit.Assert.assertNotNull(provider75);
        org.junit.Assert.assertNull(requestInterceptor76);
    }

    @Test
    public void test500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test500");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Request request1 = serializedObjectSupporter0.deserializeObjectRequest5();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter5();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter4 = serializedObjectSupporter0.deserializeObjectLogLevel2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(request1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "POST" + "'", str2, "POST");
        org.junit.Assert.assertNotNull(gsonConverter3);
    }
}

